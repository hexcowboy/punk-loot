{"abi": [{"inputs": [{"internalType": "string", "name": "name_", "type": "string"}, {"internalType": "string", "name": "symbol_", "type": "string"}, {"internalType": "string", "name": "baseURI_", "type": "string"}, {"internalType": "address", "name": "oracle_", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "approved", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "operator", "type": "address"}, {"indexed": false, "internalType": "bool", "name": "approved", "type": "bool"}], "name": "ApprovalForAll", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint256", "name": "punkId", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}], "name": "PunkConsumed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [{"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "getApproved", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getOracle", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "operator", "type": "address"}], "name": "isApprovedForAll", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "items", "outputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}, {"internalType": "bool", "name": "shiny", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "punkId", "type": "uint256"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint8[]", "name": "itemIds", "type": "uint8[]"}, {"internalType": "bool[]", "name": "shiny", "type": "bool[]"}], "name": "mint", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "ownerOf", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}, {"internalType": "bytes", "name": "_data", "type": "bytes"}], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "operator", "type": "address"}, {"internalType": "bool", "name": "approved", "type": "bool"}], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "interfaceId", "type": "bytes4"}], "name": "supportsInterface", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "tokenURI", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/IERC721.sol", "1": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/IERC721Receiver.sol", "2": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/extensions/IERC721Metadata.sol", "3": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Address.sol", "4": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Strings.sol", "5": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/ERC165.sol", "6": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/IERC165.sol", "7": "contracts/Loot.sol", "8": "contracts/Oracle.sol"}, "ast": {"absolutePath": "contracts/Loot.sol", "exportedSymbols": {"Address": [1353], "ERC165": [1580], "IERC165": [1592], "IERC721": [1011], "IERC721Metadata": [1056], "IERC721Receiver": [1029], "Loot": [726], "Oracle": [895], "Strings": [1556]}, "id": 727, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "31:23:7"}, {"absolutePath": "contracts/Oracle.sol", "file": "./Oracle.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 727, "sourceUnit": 896, "src": "56:22:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/IERC721.sol", "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 727, "sourceUnit": 1012, "src": "79:58:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/extensions/IERC721Metadata.sol", "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 727, "sourceUnit": 1057, "src": "138:77:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/IERC165.sol", "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 727, "sourceUnit": 1593, "src": "216:65:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/IERC721Receiver.sol", "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol", "id": 6, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 727, "sourceUnit": 1030, "src": "282:66:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/ERC165.sol", "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol", "id": 7, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 727, "sourceUnit": 1581, "src": "349:64:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Address.sol", "file": "@openzeppelin/contracts/utils/Address.sol", "id": 8, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 727, "sourceUnit": 1354, "src": "414:51:7", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Strings.sol", "file": "@openzeppelin/contracts/utils/Strings.sol", "id": 9, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 727, "sourceUnit": 1557, "src": "466:51:7", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 11, "name": "ERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 1580, "src": "800:6:7"}, "id": 12, "nodeType": "InheritanceSpecifier", "src": "800:6:7"}, {"baseName": {"id": 13, "name": "IERC721", "nodeType": "IdentifierPath", "referencedDeclaration": 1011, "src": "808:7:7"}, "id": 14, "nodeType": "InheritanceSpecifier", "src": "808:7:7"}, {"baseName": {"id": 15, "name": "IERC721Metadata", "nodeType": "IdentifierPath", "referencedDeclaration": 1056, "src": "817:15:7"}, "id": 16, "nodeType": "InheritanceSpecifier", "src": "817:15:7"}], "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 10, "nodeType": "StructuredDocumentation", "src": "519:263:7", "text": " @title Loot NFT\n @dev This contract is a light implementation of ERC721 to save on gas and bloat\n @notice Much of this code is taken from the OpenZeppelin ERC721 implementation\n         https://docs.openzeppelin.com/contracts/4.x/api/token/erc721"}, "fullyImplemented": true, "id": 726, "linearizedBaseContracts": [726, 1056, 1011, 1580, 1592], "name": "Loot", "nameLocation": "792:4:7", "nodeType": "ContractDefinition", "nodes": [{"id": 19, "libraryName": {"id": 17, "name": "Address", "nodeType": "IdentifierPath", "referencedDeclaration": 1353, "src": "845:7:7"}, "nodeType": "UsingForDirective", "src": "839:26:7", "typeName": {"id": 18, "name": "address", "nodeType": "ElementaryTypeName", "src": "857:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, {"id": 22, "libraryName": {"id": 20, "name": "Strings", "nodeType": "IdentifierPath", "referencedDeclaration": 1556, "src": "876:7:7"}, "nodeType": "UsingForDirective", "src": "870:26:7", "typeName": {"id": 21, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "888:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"constant": false, "id": 24, "mutability": "mutable", "name": "_name", "nameLocation": "935:5:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "920:20:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 23, "name": "string", "nodeType": "ElementaryTypeName", "src": "920:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 26, "mutability": "mutable", "name": "_symbol", "nameLocation": "982:7:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "967:22:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 25, "name": "string", "nodeType": "ElementaryTypeName", "src": "967:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 28, "mutability": "mutable", "name": "_baseURI", "nameLocation": "1033:8:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1018:23:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 27, "name": "string", "nodeType": "ElementaryTypeName", "src": "1018:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 31, "mutability": "mutable", "name": "_oracle", "nameLocation": "1081:7:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1066:22:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_Oracle_$895", "typeString": "contract Oracle"}, "typeName": {"id": 30, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 29, "name": "Oracle", "nodeType": "IdentifierPath", "referencedDeclaration": 895, "src": "1066:6:7"}, "referencedDeclaration": 895, "src": "1066:6:7", "typeDescriptions": {"typeIdentifier": "t_contract$_Oracle_$895", "typeString": "contract Oracle"}}, "visibility": "private"}, {"constant": false, "id": 33, "mutability": "mutable", "name": "_index", "nameLocation": "1145:6:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1129:22:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 32, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1129:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 37, "mutability": "mutable", "name": "_owners", "nameLocation": "1240:7:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1204:43:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "typeName": {"id": 36, "keyType": {"id": 34, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1212:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "1204:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "valueType": {"id": 35, "name": "address", "nodeType": "ElementaryTypeName", "src": "1223:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "visibility": "private"}, {"constant": false, "id": 41, "mutability": "mutable", "name": "_balances", "nameLocation": "1334:9:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1298:45:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 40, "keyType": {"id": 38, "name": "address", "nodeType": "ElementaryTypeName", "src": "1306:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1298:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 39, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1317:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "id": 45, "mutability": "mutable", "name": "_tokenApprovals", "nameLocation": "1435:15:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1399:51:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "typeName": {"id": 44, "keyType": {"id": 42, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1407:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "1399:27:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "valueType": {"id": 43, "name": "address", "nodeType": "ElementaryTypeName", "src": "1418:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "visibility": "private"}, {"constant": false, "id": 51, "mutability": "mutable", "name": "_operatorApprovals", "nameLocation": "1558:18:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1505:71:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}, "typeName": {"id": 50, "keyType": {"id": 46, "name": "address", "nodeType": "ElementaryTypeName", "src": "1513:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1505:44:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}, "valueType": {"id": 49, "keyType": {"id": 47, "name": "address", "nodeType": "ElementaryTypeName", "src": "1532:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1524:24:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 48, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1543:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}}, "visibility": "private"}, {"constant": false, "id": 55, "mutability": "mutable", "name": "_punkMinted", "nameLocation": "1675:11:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1642:44:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$", "typeString": "mapping(uint256 => bool)"}, "typeName": {"id": 54, "keyType": {"id": 52, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1650:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "1642:24:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$", "typeString": "mapping(uint256 => bool)"}, "valueType": {"id": 53, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1661:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "private"}, {"canonicalName": "Loot.LootItem", "id": 60, "members": [{"constant": false, "id": 57, "mutability": "mutable", "name": "index", "nameLocation": "1759:5:7", "nodeType": "VariableDeclaration", "scope": 60, "src": "1751:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 56, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1751:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 59, "mutability": "mutable", "name": "shiny", "nameLocation": "1779:5:7", "nodeType": "VariableDeclaration", "scope": 60, "src": "1774:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 58, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1774:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "LootItem", "nameLocation": "1732:8:7", "nodeType": "StructDefinition", "scope": 726, "src": "1725:66:7", "visibility": "public"}, {"constant": false, "functionSelector": "bfb231d2", "id": 65, "mutability": "mutable", "name": "items", "nameLocation": "1873:5:7", "nodeType": "VariableDeclaration", "scope": 726, "src": "1837:41:7", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LootItem_$60_storage_$", "typeString": "mapping(uint256 => struct Loot.LootItem)"}, "typeName": {"id": 64, "keyType": {"id": 61, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1845:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "1837:28:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LootItem_$60_storage_$", "typeString": "mapping(uint256 => struct Loot.LootItem)"}, "valueType": {"id": 63, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 62, "name": "LootItem", "nodeType": "IdentifierPath", "referencedDeclaration": 60, "src": "1856:8:7"}, "referencedDeclaration": 60, "src": "1856:8:7", "typeDescriptions": {"typeIdentifier": "t_struct$_LootItem_$60_storage_ptr", "typeString": "struct Loot.LootItem"}}}, "visibility": "public"}, {"anonymous": false, "id": 71, "name": "PunkConsumed", "nameLocation": "1935:12:7", "nodeType": "EventDefinition", "parameters": {"id": 70, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 67, "indexed": true, "mutability": "mutable", "name": "punkId", "nameLocation": "1964:6:7", "nodeType": "VariableDeclaration", "scope": 71, "src": "1948:22:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 66, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1948:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 69, "indexed": true, "mutability": "mutable", "name": "to", "nameLocation": "1988:2:7", "nodeType": "VariableDeclaration", "scope": 71, "src": "1972:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 68, "name": "address", "nodeType": "ElementaryTypeName", "src": "1972:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1947:44:7"}, "src": "1929:63:7"}, {"body": {"id": 101, "nodeType": "Block", "src": "2245:121:7", "statements": [{"expression": {"id": 85, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 83, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "2255:5:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 84, "name": "name_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74, "src": "2263:5:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2255:13:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 86, "nodeType": "ExpressionStatement", "src": "2255:13:7"}, {"expression": {"id": 89, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 87, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "2278:7:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 88, "name": "symbol_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "2288:7:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2278:17:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 90, "nodeType": "ExpressionStatement", "src": "2278:17:7"}, {"expression": {"id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 91, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "2305:8:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 92, "name": "baseURI_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "2316:8:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2305:19:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 94, "nodeType": "ExpressionStatement", "src": "2305:19:7"}, {"expression": {"id": 99, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 95, "name": "_oracle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "2334:7:7", "typeDescriptions": {"typeIdentifier": "t_contract$_Oracle_$895", "typeString": "contract Oracle"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 97, "name": "oracle_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 80, "src": "2351:7:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 96, "name": "Oracle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 895, "src": "2344:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Oracle_$895_$", "typeString": "type(contract Oracle)"}}, "id": 98, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2344:15:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_Oracle_$895", "typeString": "contract Oracle"}}, "src": "2334:25:7", "typeDescriptions": {"typeIdentifier": "t_contract$_Oracle_$895", "typeString": "contract Oracle"}}, "id": 100, "nodeType": "ExpressionStatement", "src": "2334:25:7"}]}, "documentation": {"id": 72, "nodeType": "StructuredDocumentation", "src": "1998:107:7", "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection"}, "id": 102, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 81, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 74, "mutability": "mutable", "name": "name_", "nameLocation": "2145:5:7", "nodeType": "VariableDeclaration", "scope": 102, "src": "2131:19:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 73, "name": "string", "nodeType": "ElementaryTypeName", "src": "2131:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 76, "mutability": "mutable", "name": "symbol_", "nameLocation": "2174:7:7", "nodeType": "VariableDeclaration", "scope": 102, "src": "2160:21:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 75, "name": "string", "nodeType": "ElementaryTypeName", "src": "2160:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 78, "mutability": "mutable", "name": "baseURI_", "nameLocation": "2205:8:7", "nodeType": "VariableDeclaration", "scope": 102, "src": "2191:22:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 77, "name": "string", "nodeType": "ElementaryTypeName", "src": "2191:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 80, "mutability": "mutable", "name": "oracle_", "nameLocation": "2231:7:7", "nodeType": "VariableDeclaration", "scope": 102, "src": "2223:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 79, "name": "address", "nodeType": "ElementaryTypeName", "src": "2223:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2121:123:7"}, "returnParameters": {"id": 82, "nodeType": "ParameterList", "parameters": [], "src": "2245:0:7"}, "scope": 726, "src": "2110:256:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 116, "nodeType": "Block", "src": "2475:155:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 111, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 106, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2506:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 107, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2506:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 108, "name": "_oracle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "2520:7:7", "typeDescriptions": {"typeIdentifier": "t_contract$_Oracle_$895", "typeString": "contract Oracle"}}, "id": 109, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "operator", "nodeType": "MemberAccess", "referencedDeclaration": 733, "src": "2520:16:7", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 110, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2520:18:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2506:32:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c7920746865206f7261636c65206f70657261746f72206d617920706572666f726d207468697320616374696f6e", "id": 112, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2552:50:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8f838567f5ff9ac50cd236f5e25efd25d30be7f5f73dcf970ebe8f73d5744142", "typeString": "literal_string \"Only the oracle operator may perform this action\""}, "value": "Only the oracle operator may perform this action"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8f838567f5ff9ac50cd236f5e25efd25d30be7f5f73dcf970ebe8f73d5744142", "typeString": "literal_string \"Only the oracle operator may perform this action\""}], "id": 105, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2485:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2485:127:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 114, "nodeType": "ExpressionStatement", "src": "2485:127:7"}, {"id": 115, "nodeType": "PlaceholderStatement", "src": "2622:1:7"}]}, "documentation": {"id": 103, "nodeType": "StructuredDocumentation", "src": "2372:68:7", "text": " @dev Modifier that only oracle operators may call"}, "id": 117, "name": "onlyOracleOperator", "nameLocation": "2454:18:7", "nodeType": "ModifierDefinition", "parameters": {"id": 104, "nodeType": "ParameterList", "parameters": [], "src": "2472:2:7"}, "src": "2445:185:7", "virtual": false, "visibility": "internal"}, {"body": {"id": 128, "nodeType": "Block", "src": "2748:40:7", "statements": [{"expression": {"arguments": [{"id": 125, "name": "_oracle", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "2773:7:7", "typeDescriptions": {"typeIdentifier": "t_contract$_Oracle_$895", "typeString": "contract Oracle"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Oracle_$895", "typeString": "contract Oracle"}], "id": 124, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2765:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 123, "name": "address", "nodeType": "ElementaryTypeName", "src": "2765:7:7", "typeDescriptions": {}}}, "id": 126, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2765:16:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 122, "id": 127, "nodeType": "Return", "src": "2758:23:7"}]}, "documentation": {"id": 118, "nodeType": "StructuredDocumentation", "src": "2636:56:7", "text": " @dev Gets the oracle operator address"}, "functionSelector": "833b1fce", "id": 129, "implemented": true, "kind": "function", "modifiers": [], "name": "getOracle", "nameLocation": "2706:9:7", "nodeType": "FunctionDefinition", "parameters": {"id": 119, "nodeType": "ParameterList", "parameters": [], "src": "2715:2:7"}, "returnParameters": {"id": 122, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 121, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 129, "src": "2739:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 120, "name": "address", "nodeType": "ElementaryTypeName", "src": "2739:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2738:9:7"}, "scope": 726, "src": "2697:91:7", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [1579, 1591], "body": {"id": 159, "nodeType": "Block", "src": "3004:192:7", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 152, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 140, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 132, "src": "3033:11:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 142, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1011, "src": "3053:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721_$1011_$", "typeString": "type(contract IERC721)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IERC721_$1011_$", "typeString": "type(contract IERC721)"}], "id": 141, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "3048:4:7", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 143, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3048:13:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1011", "typeString": "type(contract IERC721)"}}, "id": 144, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "3048:25:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "3033:40:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 146, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 132, "src": "3089:11:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 148, "name": "IERC721Metadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1056, "src": "3109:15:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1056_$", "typeString": "type(contract IERC721Metadata)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1056_$", "typeString": "type(contract IERC721Metadata)"}], "id": 147, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "3104:4:7", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 149, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3104:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1056", "typeString": "type(contract IERC721Metadata)"}}, "id": 150, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "3104:33:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "3089:48:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3033:104:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 155, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 132, "src": "3177:11:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "expression": {"id": 153, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "3153:5:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_super$_Loot_$726_$", "typeString": "type(contract super Loot)"}}, "id": 154, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "supportsInterface", "nodeType": "MemberAccess", "referencedDeclaration": 1579, "src": "3153:23:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$", "typeString": "function (bytes4) view returns (bool)"}}, "id": 156, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3153:36:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3033:156:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 139, "id": 158, "nodeType": "Return", "src": "3014:175:7"}]}, "documentation": {"id": 130, "nodeType": "StructuredDocumentation", "src": "2794:53:7", "text": " @dev Defines the ERC165 interfaces"}, "functionSelector": "01ffc9a7", "id": 160, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "2861:17:7", "nodeType": "FunctionDefinition", "overrides": {"id": 136, "nodeType": "OverrideSpecifier", "overrides": [{"id": 134, "name": "ERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 1580, "src": "2960:6:7"}, {"id": 135, "name": "IERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 1592, "src": "2968:7:7"}], "src": "2951:25:7"}, "parameters": {"id": 133, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 132, "mutability": "mutable", "name": "interfaceId", "nameLocation": "2886:11:7", "nodeType": "VariableDeclaration", "scope": 160, "src": "2879:18:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 131, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "2879:6:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "2878:20:7"}, "returnParameters": {"id": 139, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 138, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 160, "src": "2994:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 137, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2994:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2993:6:7"}, "scope": 726, "src": "2852:344:7", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [936], "body": {"id": 173, "nodeType": "Block", "src": "3452:40:7", "statements": [{"expression": {"baseExpression": {"id": 169, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "3469:9:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 171, "indexExpression": {"id": 170, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 163, "src": "3479:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3469:16:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 168, "id": 172, "nodeType": "Return", "src": "3462:23:7"}]}, "documentation": {"id": 161, "nodeType": "StructuredDocumentation", "src": "3202:120:7", "text": " @dev Check the balance of the provided address\n @notice Does not throw for zero address queries"}, "functionSelector": "70a08231", "id": 174, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "3336:9:7", "nodeType": "FunctionDefinition", "overrides": {"id": 165, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3413:8:7"}, "parameters": {"id": 164, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 163, "mutability": "mutable", "name": "owner", "nameLocation": "3354:5:7", "nodeType": "VariableDeclaration", "scope": 174, "src": "3346:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 162, "name": "address", "nodeType": "ElementaryTypeName", "src": "3346:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3345:15:7"}, "returnParameters": {"id": 168, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 167, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 174, "src": "3439:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 166, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3439:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3438:9:7"}, "scope": 726, "src": "3327:165:7", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [944], "body": {"id": 191, "nodeType": "Block", "src": "3740:71:7", "statements": [{"assignments": [184], "declarations": [{"constant": false, "id": 184, "mutability": "mutable", "name": "owner", "nameLocation": "3758:5:7", "nodeType": "VariableDeclaration", "scope": 191, "src": "3750:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 183, "name": "address", "nodeType": "ElementaryTypeName", "src": "3750:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 188, "initialValue": {"baseExpression": {"id": 185, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "3766:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 187, "indexExpression": {"id": 186, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 177, "src": "3774:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3766:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "3750:32:7"}, {"expression": {"id": 189, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 184, "src": "3799:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 182, "id": 190, "nodeType": "Return", "src": "3792:12:7"}]}, "documentation": {"id": 175, "nodeType": "StructuredDocumentation", "src": "3498:112:7", "text": " @dev Get the owner of a specific token\n @notice Does not throw for zero address queries"}, "functionSelector": "6352211e", "id": 192, "implemented": true, "kind": "function", "modifiers": [], "name": "ownerOf", "nameLocation": "3624:7:7", "nodeType": "FunctionDefinition", "overrides": {"id": 179, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3701:8:7"}, "parameters": {"id": 178, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 177, "mutability": "mutable", "name": "tokenId", "nameLocation": "3640:7:7", "nodeType": "VariableDeclaration", "scope": 192, "src": "3632:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 176, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3632:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3631:17:7"}, "returnParameters": {"id": 182, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 181, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 192, "src": "3727:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 180, "name": "address", "nodeType": "ElementaryTypeName", "src": "3727:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3726:9:7"}, "scope": 726, "src": "3615:196:7", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [954], "body": {"id": 293, "nodeType": "Block", "src": "4037:876:7", "statements": [{"assignments": [204], "declarations": [{"constant": false, "id": 204, "mutability": "mutable", "name": "owner", "nameLocation": "4055:5:7", "nodeType": "VariableDeclaration", "scope": 293, "src": "4047:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 203, "name": "address", "nodeType": "ElementaryTypeName", "src": "4047:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 209, "initialValue": {"arguments": [{"id": 207, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 199, "src": "4076:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 205, "name": "Loot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "4063:4:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Loot_$726_$", "typeString": "type(contract Loot)"}}, "id": 206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 192, "src": "4063:12:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4063:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "4047:37:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 218, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 211, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "4102:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 213, "indexExpression": {"id": 212, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 199, "src": "4110:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4102:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 216, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4130:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 215, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4122:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 214, "name": "address", "nodeType": "ElementaryTypeName", "src": "4122:7:7", "typeDescriptions": {}}}, "id": 217, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4122:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4102:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520746f6b656e20646f6573206e6f74206578697374", "id": 219, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4134:26:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d1cc72098bc7571a0fc1c5949b3670a8f16a3f52d31658bee06dd40e739628b0", "typeString": "literal_string \"The token does not exist\""}, "value": "The token does not exist"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d1cc72098bc7571a0fc1c5949b3670a8f16a3f52d31658bee06dd40e739628b0", "typeString": "literal_string \"The token does not exist\""}], "id": 210, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4094:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 220, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4094:67:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 221, "nodeType": "ExpressionStatement", "src": "4094:67:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 239, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 226, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 223, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4192:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 224, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4192:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 225, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "4206:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4192:19:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 232, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 228, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 199, "src": "4243:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 227, "name": "getApproved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 471, "src": "4231:11:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 229, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4231:20:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 230, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4255:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4255:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4231:34:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4192:73:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 235, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "4302:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 236, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4309:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 237, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4309:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 234, "name": "isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 523, "src": "4285:16:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view returns (bool)"}}, "id": 238, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4285:35:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4192:128:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546865206f70657261746f72206973206e6f7420617070726f76656420746f207472616e73666572207468697320746f6b656e", "id": 240, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4334:53:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5087386aac808bc889fe05e25324aecae343f301caa4a2ae0882355020cdfc80", "typeString": "literal_string \"The operator is not approved to transfer this token\""}, "value": "The operator is not approved to transfer this token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5087386aac808bc889fe05e25324aecae343f301caa4a2ae0882355020cdfc80", "typeString": "literal_string \"The operator is not approved to transfer this token\""}], "id": 222, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4171:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 241, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4171:226:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 242, "nodeType": "ExpressionStatement", "src": "4171:226:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 244, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "4428:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 245, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 195, "src": "4437:4:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4428:13:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652073656e64657220646f6573206e6f74206f776e2074686520746f6b656e20746f206265207472616e736665726564", "id": 247, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4455:52:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c0033701cb93aafc21cbcfa163b7d30d72840a6478ed865d438ab277881e2587", "typeString": "literal_string \"The sender does not own the token to be transfered\""}, "value": "The sender does not own the token to be transfered"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c0033701cb93aafc21cbcfa163b7d30d72840a6478ed865d438ab277881e2587", "typeString": "literal_string \"The sender does not own the token to be transfered\""}], "id": 243, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4407:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 248, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4407:110:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 249, "nodeType": "ExpressionStatement", "src": "4407:110:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 251, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4548:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 254, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4562:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 253, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4554:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 252, "name": "address", "nodeType": "ElementaryTypeName", "src": "4554:7:7", "typeDescriptions": {}}}, "id": 255, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4554:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4548:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520746f6b656e206d6179206e6f742062652073656e7420746f20746865207a65726f2061646472657373", "id": 257, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4578:47:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_74822b6add88661407c6f7b19266f60ec9c8007e8828c0584c54516174f02da5", "typeString": "literal_string \"The token may not be sent to the zero address\""}, "value": "The token may not be sent to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_74822b6add88661407c6f7b19266f60ec9c8007e8828c0584c54516174f02da5", "typeString": "literal_string \"The token may not be sent to the zero address\""}], "id": 250, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4527:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 258, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4527:108:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 259, "nodeType": "ExpressionStatement", "src": "4527:108:7"}, {"expression": {"arguments": [{"arguments": [{"id": 262, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 195, "src": "4689:4:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 263, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4695:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 264, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 199, "src": "4699:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 261, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 392, "src": "4666:22:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) returns (bool)"}}, "id": 265, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4666:41:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652072656365697665722063616e6e6f74206163636570742045524337323120746f6b656e73", "id": 266, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4721:42:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_939ade121b33e36156c9d8ad70f72630e2e7e8be3f0a1ff36555ecdea177dd16", "typeString": "literal_string \"The receiver cannot accept ERC721 tokens\""}, "value": "The receiver cannot accept ERC721 tokens"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_939ade121b33e36156c9d8ad70f72630e2e7e8be3f0a1ff36555ecdea177dd16", "typeString": "literal_string \"The receiver cannot accept ERC721 tokens\""}], "id": 260, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4645:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 267, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4645:128:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 268, "nodeType": "ExpressionStatement", "src": "4645:128:7"}, {"expression": {"id": 273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 269, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "4784:9:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 271, "indexExpression": {"id": 270, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 195, "src": "4794:4:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4784:15:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"hexValue": "31", "id": 272, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4803:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "4784:20:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 274, "nodeType": "ExpressionStatement", "src": "4784:20:7"}, {"expression": {"id": 279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 275, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "4814:9:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 277, "indexExpression": {"id": 276, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4824:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4814:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 278, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4831:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "4814:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 280, "nodeType": "ExpressionStatement", "src": "4814:18:7"}, {"expression": {"id": 285, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 281, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "4842:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 283, "indexExpression": {"id": 282, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 199, "src": "4850:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4842:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 284, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4861:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4842:21:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 286, "nodeType": "ExpressionStatement", "src": "4842:21:7"}, {"eventCall": {"arguments": [{"id": 288, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 195, "src": "4888:4:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 289, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "4894:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 290, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 199, "src": "4898:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 287, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 910, "src": "4879:8:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 291, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4879:27:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 292, "nodeType": "EmitStatement", "src": "4874:32:7"}]}, "documentation": {"id": 193, "nodeType": "StructuredDocumentation", "src": "3817:92:7", "text": " @dev Transfers a token and checks that the receiver accepts ERC721 tokens"}, "functionSelector": "42842e0e", "id": 294, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "3923:16:7", "nodeType": "FunctionDefinition", "overrides": {"id": 201, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4028:8:7"}, "parameters": {"id": 200, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 195, "mutability": "mutable", "name": "from", "nameLocation": "3957:4:7", "nodeType": "VariableDeclaration", "scope": 294, "src": "3949:12:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 194, "name": "address", "nodeType": "ElementaryTypeName", "src": "3949:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 197, "mutability": "mutable", "name": "to", "nameLocation": "3979:2:7", "nodeType": "VariableDeclaration", "scope": 294, "src": "3971:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 196, "name": "address", "nodeType": "ElementaryTypeName", "src": "3971:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 199, "mutability": "mutable", "name": "tokenId", "nameLocation": "3999:7:7", "nodeType": "VariableDeclaration", "scope": 294, "src": "3991:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 198, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3991:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3939:73:7"}, "returnParameters": {"id": 202, "nodeType": "ParameterList", "parameters": [], "src": "4037:0:7"}, "scope": 726, "src": "3914:999:7", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [1010], "body": {"id": 313, "nodeType": "Block", "src": "5197:52:7", "statements": [{"expression": {"arguments": [{"id": 308, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "5224:4:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 309, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 299, "src": "5230:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 310, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 301, "src": "5234:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 307, "name": "safeTransferFrom", "nodeType": "Identifier", "overloadedDeclarations": [294, 314], "referencedDeclaration": 294, "src": "5207:16:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5207:35:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 312, "nodeType": "ExpressionStatement", "src": "5207:35:7"}]}, "documentation": {"id": 295, "nodeType": "StructuredDocumentation", "src": "4919:122:7", "text": " @dev Defaults to the safe transfer method and discards data\n @notice Required for ERC721 standard"}, "functionSelector": "b88d4fde", "id": 314, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "5055:16:7", "nodeType": "FunctionDefinition", "overrides": {"id": 305, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5188:8:7"}, "parameters": {"id": 304, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 297, "mutability": "mutable", "name": "from", "nameLocation": "5089:4:7", "nodeType": "VariableDeclaration", "scope": 314, "src": "5081:12:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 296, "name": "address", "nodeType": "ElementaryTypeName", "src": "5081:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 299, "mutability": "mutable", "name": "to", "nameLocation": "5111:2:7", "nodeType": "VariableDeclaration", "scope": 314, "src": "5103:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 298, "name": "address", "nodeType": "ElementaryTypeName", "src": "5103:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 301, "mutability": "mutable", "name": "tokenId", "nameLocation": "5131:7:7", "nodeType": "VariableDeclaration", "scope": 314, "src": "5123:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 300, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5123:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 303, "mutability": "mutable", "name": "_data", "nameLocation": "5161:5:7", "nodeType": "VariableDeclaration", "scope": 314, "src": "5148:18:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 302, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5148:5:7", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5071:101:7"}, "returnParameters": {"id": 306, "nodeType": "ParameterList", "parameters": [], "src": "5197:0:7"}, "scope": 726, "src": "5046:203:7", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [964], "body": {"id": 331, "nodeType": "Block", "src": "5484:52:7", "statements": [{"expression": {"arguments": [{"id": 326, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 317, "src": "5511:4:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 327, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 319, "src": "5517:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 328, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 321, "src": "5521:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 325, "name": "safeTransferFrom", "nodeType": "Identifier", "overloadedDeclarations": [294, 314], "referencedDeclaration": 294, "src": "5494:16:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5494:35:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 330, "nodeType": "ExpressionStatement", "src": "5494:35:7"}]}, "documentation": {"id": 315, "nodeType": "StructuredDocumentation", "src": "5255:105:7", "text": " @dev Defaults to the safe transfer method\n @notice Required for ERC721 interface"}, "functionSelector": "23b872dd", "id": 332, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "5374:12:7", "nodeType": "FunctionDefinition", "overrides": {"id": 323, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5475:8:7"}, "parameters": {"id": 322, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 317, "mutability": "mutable", "name": "from", "nameLocation": "5404:4:7", "nodeType": "VariableDeclaration", "scope": 332, "src": "5396:12:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 316, "name": "address", "nodeType": "ElementaryTypeName", "src": "5396:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 319, "mutability": "mutable", "name": "to", "nameLocation": "5426:2:7", "nodeType": "VariableDeclaration", "scope": 332, "src": "5418:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 318, "name": "address", "nodeType": "ElementaryTypeName", "src": "5418:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 321, "mutability": "mutable", "name": "tokenId", "nameLocation": "5446:7:7", "nodeType": "VariableDeclaration", "scope": 332, "src": "5438:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 320, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5438:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5386:73:7"}, "returnParameters": {"id": 324, "nodeType": "ParameterList", "parameters": [], "src": "5484:0:7"}, "scope": 726, "src": "5365:171:7", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 391, "nodeType": "Block", "src": "5752:733:7", "statements": [{"condition": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 344, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 337, "src": "5766:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isContract", "nodeType": "MemberAccess", "referencedDeclaration": 1076, "src": "5766:13:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$", "typeString": "function (address) view returns (bool)"}}, "id": 346, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5766:15:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 389, "nodeType": "Block", "src": "6443:36:7", "statements": [{"expression": {"hexValue": "74727565", "id": 387, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6464:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 343, "id": 388, "nodeType": "Return", "src": "6457:11:7"}]}, "id": 390, "nodeType": "IfStatement", "src": "5762:717:7", "trueBody": {"id": 386, "nodeType": "Block", "src": "5783:654:7", "statements": [{"clauses": [{"block": {"id": 366, "nodeType": "Block", "src": "6019:91:7", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 360, "name": "retval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "6044:6:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 361, "name": "IERC721Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1029, "src": "6054:15:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1029_$", "typeString": "type(contract IERC721Receiver)"}}, "id": 362, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "onERC721Received", "nodeType": "MemberAccess", "referencedDeclaration": 1028, "src": "6054:32:7", "typeDescriptions": {"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$", "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}}, "id": 363, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "src": "6054:41:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "6044:51:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 343, "id": 365, "nodeType": "Return", "src": "6037:58:7"}]}, "errorName": "", "id": 367, "nodeType": "TryCatchClause", "parameters": {"id": 359, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 358, "mutability": "mutable", "name": "retval", "nameLocation": "6011:6:7", "nodeType": "VariableDeclaration", "scope": 367, "src": "6004:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 357, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "6004:6:7", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "6003:15:7"}, "src": "5995:115:7"}, {"block": {"id": 383, "nodeType": "Block", "src": "6139:288:7", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 374, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 371, "name": "reason", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 369, "src": "6161:6:7", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6161:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 373, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6178:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6161:18:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 381, "nodeType": "Block", "src": "6278:135:7", "statements": [{"AST": {"nodeType": "YulBlock", "src": "6309:86:7", "statements": [{"expression": {"arguments": [{"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "6346:2:7", "type": "", "value": "32"}, {"name": "reason", "nodeType": "YulIdentifier", "src": "6350:6:7"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "6342:3:7"}, "nodeType": "YulFunctionCall", "src": "6342:15:7"}, {"arguments": [{"name": "reason", "nodeType": "YulIdentifier", "src": "6365:6:7"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "6359:5:7"}, "nodeType": "YulFunctionCall", "src": "6359:13:7"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "6335:6:7"}, "nodeType": "YulFunctionCall", "src": "6335:38:7"}, "nodeType": "YulExpressionStatement", "src": "6335:38:7"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 369, "isOffset": false, "isSlot": false, "src": "6350:6:7", "valueSize": 1}, {"declaration": 369, "isOffset": false, "isSlot": false, "src": "6365:6:7", "valueSize": 1}], "id": 380, "nodeType": "InlineAssembly", "src": "6300:95:7"}]}, "id": 382, "nodeType": "IfStatement", "src": "6157:256:7", "trueBody": {"id": 379, "nodeType": "Block", "src": "6181:91:7", "statements": [{"expression": {"arguments": [{"hexValue": "5468652072656365697665722063616e6e6f74206163636570742045524337323120746f6b656e73", "id": 376, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6210:42:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_939ade121b33e36156c9d8ad70f72630e2e7e8be3f0a1ff36555ecdea177dd16", "typeString": "literal_string \"The receiver cannot accept ERC721 tokens\""}, "value": "The receiver cannot accept ERC721 tokens"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_939ade121b33e36156c9d8ad70f72630e2e7e8be3f0a1ff36555ecdea177dd16", "typeString": "literal_string \"The receiver cannot accept ERC721 tokens\""}], "id": 375, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "6203:6:7", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 377, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6203:50:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 378, "nodeType": "ExpressionStatement", "src": "6203:50:7"}]}}]}, "errorName": "", "id": 384, "nodeType": "TryCatchClause", "parameters": {"id": 370, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 369, "mutability": "mutable", "name": "reason", "nameLocation": "6131:6:7", "nodeType": "VariableDeclaration", "scope": 384, "src": "6118:19:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 368, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6118:5:7", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "6117:21:7"}, "src": "6111:316:7"}], "externalCall": {"arguments": [{"expression": {"id": 351, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5875:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 352, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5875:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 353, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 335, "src": "5907:4:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 354, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 339, "src": "5933:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "", "id": 355, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5962:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"id": 348, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 337, "src": "5833:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 347, "name": "IERC721Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1029, "src": "5817:15:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1029_$", "typeString": "type(contract IERC721Receiver)"}}, "id": 349, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5817:19:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Receiver_$1029", "typeString": "contract IERC721Receiver"}}, "id": 350, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "onERC721Received", "nodeType": "MemberAccess", "referencedDeclaration": 1028, "src": "5817:36:7", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$", "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"}}, "id": 356, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5817:165:7", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "id": 385, "nodeType": "TryStatement", "src": "5797:630:7"}]}}]}, "documentation": {"id": 333, "nodeType": "StructuredDocumentation", "src": "5542:77:7", "text": " @dev Checks if the receiver can handle receiving an ERC721"}, "id": 392, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkOnERC721Received", "nameLocation": "5633:22:7", "nodeType": "FunctionDefinition", "parameters": {"id": 340, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 335, "mutability": "mutable", "name": "from", "nameLocation": "5673:4:7", "nodeType": "VariableDeclaration", "scope": 392, "src": "5665:12:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 334, "name": "address", "nodeType": "ElementaryTypeName", "src": "5665:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 337, "mutability": "mutable", "name": "to", "nameLocation": "5695:2:7", "nodeType": "VariableDeclaration", "scope": 392, "src": "5687:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 336, "name": "address", "nodeType": "ElementaryTypeName", "src": "5687:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 339, "mutability": "mutable", "name": "tokenId", "nameLocation": "5715:7:7", "nodeType": "VariableDeclaration", "scope": 392, "src": "5707:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 338, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5707:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5655:73:7"}, "returnParameters": {"id": 343, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 342, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 392, "src": "5746:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 341, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5746:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5745:6:7"}, "scope": 726, "src": "5624:861:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"baseFunctions": [972], "body": {"id": 444, "nodeType": "Block", "src": "6631:388:7", "statements": [{"assignments": [402], "declarations": [{"constant": false, "id": 402, "mutability": "mutable", "name": "owner", "nameLocation": "6649:5:7", "nodeType": "VariableDeclaration", "scope": 444, "src": "6641:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 401, "name": "address", "nodeType": "ElementaryTypeName", "src": "6641:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 407, "initialValue": {"arguments": [{"id": 405, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "6670:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 403, "name": "Loot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "6657:4:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Loot_$726_$", "typeString": "type(contract Loot)"}}, "id": 404, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 192, "src": "6657:12:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 406, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6657:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "6641:37:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 411, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 409, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "6696:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 410, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 402, "src": "6702:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6696:11:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546865206f776e657220646f6573206e6f74206e65656420746f20626520617070726f766564", "id": 412, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6709:40:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fc469416976d510dcc8bdcb3a54a4569a73efe3d46be4c701c6b24046273e299", "typeString": "literal_string \"The owner does not need to be approved\""}, "value": "The owner does not need to be approved"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fc469416976d510dcc8bdcb3a54a4569a73efe3d46be4c701c6b24046273e299", "typeString": "literal_string \"The owner does not need to be approved\""}], "id": 408, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6688:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 413, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6688:62:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 414, "nodeType": "ExpressionStatement", "src": "6688:62:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 425, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 416, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6782:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 417, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6782:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 418, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 402, "src": "6796:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6782:19:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 421, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 402, "src": "6822:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 422, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6829:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6829:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 420, "name": "isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 523, "src": "6805:16:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view returns (bool)"}}, "id": 424, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6805:35:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6782:58:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c79206f776e657273206f72206f70657261746f7273206d61792063616c6c20746869732066756e6374696f6e", "id": 426, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6854:49:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c484a1c656db6bce1db58462424182070f8bddee7485afc6f07e005ef0d6d5d2", "typeString": "literal_string \"Only owners or operators may call this function\""}, "value": "Only owners or operators may call this function"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c484a1c656db6bce1db58462424182070f8bddee7485afc6f07e005ef0d6d5d2", "typeString": "literal_string \"Only owners or operators may call this function\""}], "id": 415, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6761:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 427, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6761:152:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 428, "nodeType": "ExpressionStatement", "src": "6761:152:7"}, {"expression": {"id": 433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 429, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 45, "src": "6924:15:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 431, "indexExpression": {"id": 430, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "6940:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6924:24:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 432, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "6951:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6924:29:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 434, "nodeType": "ExpressionStatement", "src": "6924:29:7"}, {"eventCall": {"arguments": [{"arguments": [{"id": 438, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "6990:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 436, "name": "Loot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "6977:4:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Loot_$726_$", "typeString": "type(contract Loot)"}}, "id": 437, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 192, "src": "6977:12:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 439, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6977:21:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 440, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "7000:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 441, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "7004:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 435, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 919, "src": "6968:8:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 442, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6968:44:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 443, "nodeType": "EmitStatement", "src": "6963:49:7"}]}, "documentation": {"id": 393, "nodeType": "StructuredDocumentation", "src": "6491:65:7", "text": " @dev Approves an operator to handle the ERC721"}, "functionSelector": "095ea7b3", "id": 445, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "6570:7:7", "nodeType": "FunctionDefinition", "overrides": {"id": 399, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6622:8:7"}, "parameters": {"id": 398, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 395, "mutability": "mutable", "name": "to", "nameLocation": "6586:2:7", "nodeType": "VariableDeclaration", "scope": 445, "src": "6578:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 394, "name": "address", "nodeType": "ElementaryTypeName", "src": "6578:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 397, "mutability": "mutable", "name": "tokenId", "nameLocation": "6598:7:7", "nodeType": "VariableDeclaration", "scope": 445, "src": "6590:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 396, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6590:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6577:29:7"}, "returnParameters": {"id": 400, "nodeType": "ParameterList", "parameters": [], "src": "6631:0:7"}, "scope": 726, "src": "6561:458:7", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [980], "body": {"id": 470, "nodeType": "Block", "src": "7234:172:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 462, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 455, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "7265:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 457, "indexExpression": {"id": 456, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 448, "src": "7273:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7265:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 460, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7293:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 459, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7285:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 458, "name": "address", "nodeType": "ElementaryTypeName", "src": "7285:7:7", "typeDescriptions": {}}}, "id": 461, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7285:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7265:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652070726f766964656420746f6b656e20494420646f6573206e6f74206578697374", "id": 463, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7309:38:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_934a2a57784f7ca3e84075dadbf8d1591f9bf42e2d3de09130902b8175957d4b", "typeString": "literal_string \"The provided token ID does not exist\""}, "value": "The provided token ID does not exist"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_934a2a57784f7ca3e84075dadbf8d1591f9bf42e2d3de09130902b8175957d4b", "typeString": "literal_string \"The provided token ID does not exist\""}], "id": 454, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7244:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 464, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7244:113:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 465, "nodeType": "ExpressionStatement", "src": "7244:113:7"}, {"expression": {"baseExpression": {"id": 466, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 45, "src": "7375:15:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 468, "indexExpression": {"id": 467, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 448, "src": "7391:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7375:24:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 453, "id": 469, "nodeType": "Return", "src": "7368:31:7"}]}, "documentation": {"id": 446, "nodeType": "StructuredDocumentation", "src": "7025:75:7", "text": " @dev Checks which address is approved for given token ID"}, "functionSelector": "081812fc", "id": 471, "implemented": true, "kind": "function", "modifiers": [], "name": "getApproved", "nameLocation": "7114:11:7", "nodeType": "FunctionDefinition", "overrides": {"id": 450, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7195:8:7"}, "parameters": {"id": 449, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 448, "mutability": "mutable", "name": "tokenId", "nameLocation": "7134:7:7", "nodeType": "VariableDeclaration", "scope": 471, "src": "7126:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 447, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7126:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7125:17:7"}, "returnParameters": {"id": 453, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 452, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 471, "src": "7221:7:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 451, "name": "address", "nodeType": "ElementaryTypeName", "src": "7221:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "7220:9:7"}, "scope": 726, "src": "7105:301:7", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [988], "body": {"id": 504, "nodeType": "Block", "src": "7609:209:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 481, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "7627:8:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 482, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7639:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7639:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7627:22:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652073656e646572206d6179206e6f7420626520746865206f70657261746f72", "id": 485, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7651:36:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6ec7b1d2b1a45ab87bbdcabb376b25edfffc0b5c7d0c405af0b6eb0f327c5fbd", "typeString": "literal_string \"The sender may not be the operator\""}, "value": "The sender may not be the operator"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6ec7b1d2b1a45ab87bbdcabb376b25edfffc0b5c7d0c405af0b6eb0f327c5fbd", "typeString": "literal_string \"The sender may not be the operator\""}], "id": 480, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7619:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 486, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7619:69:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 487, "nodeType": "ExpressionStatement", "src": "7619:69:7"}, {"expression": {"id": 495, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 488, "name": "_operatorApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "7699:18:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}}, "id": 492, "indexExpression": {"expression": {"id": 489, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7718:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7718:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7699:30:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 493, "indexExpression": {"id": 491, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "7730:8:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7699:40:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 494, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 476, "src": "7742:8:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "7699:51:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 496, "nodeType": "ExpressionStatement", "src": "7699:51:7"}, {"eventCall": {"arguments": [{"expression": {"id": 498, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7780:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 499, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7780:10:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 500, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 474, "src": "7792:8:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 501, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 476, "src": "7802:8:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 497, "name": "ApprovalForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 928, "src": "7765:14:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,address,bool)"}}, "id": 502, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7765:46:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 503, "nodeType": "EmitStatement", "src": "7760:51:7"}]}, "documentation": {"id": 472, "nodeType": "StructuredDocumentation", "src": "7412:80:7", "text": " @dev Approve or remove operator as an operator for the caller"}, "functionSelector": "a22cb465", "id": 505, "implemented": true, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nameLocation": "7506:17:7", "nodeType": "FunctionDefinition", "overrides": {"id": 478, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7596:8:7"}, "parameters": {"id": 477, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 474, "mutability": "mutable", "name": "operator", "nameLocation": "7532:8:7", "nodeType": "VariableDeclaration", "scope": 505, "src": "7524:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 473, "name": "address", "nodeType": "ElementaryTypeName", "src": "7524:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 476, "mutability": "mutable", "name": "approved", "nameLocation": "7547:8:7", "nodeType": "VariableDeclaration", "scope": 505, "src": "7542:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 475, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7542:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "7523:33:7"}, "returnParameters": {"id": 479, "nodeType": "ParameterList", "parameters": [], "src": "7609:0:7"}, "scope": 726, "src": "7497:321:7", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [998], "body": {"id": 522, "nodeType": "Block", "src": "8071:59:7", "statements": [{"expression": {"baseExpression": {"baseExpression": {"id": 516, "name": "_operatorApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "8088:18:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}}, "id": 518, "indexExpression": {"id": 517, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 508, "src": "8107:5:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8088:25:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 520, "indexExpression": {"id": 519, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "8114:8:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8088:35:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 515, "id": 521, "nodeType": "Return", "src": "8081:42:7"}]}, "documentation": {"id": 506, "nodeType": "StructuredDocumentation", "src": "7824:95:7", "text": " @dev Returns if the operator is allowed to manage all of the assets of owner"}, "functionSelector": "e985e9c5", "id": 523, "implemented": true, "kind": "function", "modifiers": [], "name": "isApprovedForAll", "nameLocation": "7933:16:7", "nodeType": "FunctionDefinition", "overrides": {"id": 512, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8035:8:7"}, "parameters": {"id": 511, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 508, "mutability": "mutable", "name": "owner", "nameLocation": "7958:5:7", "nodeType": "VariableDeclaration", "scope": 523, "src": "7950:13:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 507, "name": "address", "nodeType": "ElementaryTypeName", "src": "7950:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 510, "mutability": "mutable", "name": "operator", "nameLocation": "7973:8:7", "nodeType": "VariableDeclaration", "scope": 523, "src": "7965:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 509, "name": "address", "nodeType": "ElementaryTypeName", "src": "7965:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "7949:33:7"}, "returnParameters": {"id": 515, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 514, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 523, "src": "8061:4:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 513, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8061:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "8060:6:7"}, "scope": 726, "src": "7924:206:7", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [1041], "body": {"id": 532, "nodeType": "Block", "src": "8298:29:7", "statements": [{"expression": {"id": 530, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "8315:5:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 529, "id": 531, "nodeType": "Return", "src": "8308:12:7"}]}, "documentation": {"id": 524, "nodeType": "StructuredDocumentation", "src": "8136:88:7", "text": " @dev Returns the name of the token\n @notice Required for ERC721"}, "functionSelector": "06fdde03", "id": 533, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "8238:4:7", "nodeType": "FunctionDefinition", "overrides": {"id": 526, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8265:8:7"}, "parameters": {"id": 525, "nodeType": "ParameterList", "parameters": [], "src": "8242:2:7"}, "returnParameters": {"id": 529, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 528, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 533, "src": "8283:13:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 527, "name": "string", "nodeType": "ElementaryTypeName", "src": "8283:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "8282:15:7"}, "scope": 726, "src": "8229:98:7", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [1047], "body": {"id": 542, "nodeType": "Block", "src": "8499:31:7", "statements": [{"expression": {"id": 540, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26, "src": "8516:7:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 539, "id": 541, "nodeType": "Return", "src": "8509:14:7"}]}, "documentation": {"id": 534, "nodeType": "StructuredDocumentation", "src": "8333:90:7", "text": " @dev Returns the symbol of the token\n @notice Required for ERC721"}, "functionSelector": "95d89b41", "id": 543, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "8437:6:7", "nodeType": "FunctionDefinition", "overrides": {"id": 536, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8466:8:7"}, "parameters": {"id": 535, "nodeType": "ParameterList", "parameters": [], "src": "8443:2:7"}, "returnParameters": {"id": 539, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 538, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 543, "src": "8484:13:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 537, "name": "string", "nodeType": "ElementaryTypeName", "src": "8484:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "8483:15:7"}, "scope": 726, "src": "8428:102:7", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [1055], "body": {"id": 588, "nodeType": "Block", "src": "8765:320:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 553, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "8796:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 555, "indexExpression": {"id": 554, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 546, "src": "8804:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8796:16:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 558, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8824:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 557, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8816:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 556, "name": "address", "nodeType": "ElementaryTypeName", "src": "8816:7:7", "typeDescriptions": {}}}, "id": 559, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8816:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "8796:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652070726f766964656420746f6b656e20494420646f6573206e6f74206578697374", "id": 561, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8840:38:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_934a2a57784f7ca3e84075dadbf8d1591f9bf42e2d3de09130902b8175957d4b", "typeString": "literal_string \"The provided token ID does not exist\""}, "value": "The provided token ID does not exist"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_934a2a57784f7ca3e84075dadbf8d1591f9bf42e2d3de09130902b8175957d4b", "typeString": "literal_string \"The provided token ID does not exist\""}], "id": 552, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8775:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 562, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8775:113:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 563, "nodeType": "ExpressionStatement", "src": "8775:113:7"}, {"assignments": [565], "declarations": [{"constant": false, "id": 565, "mutability": "mutable", "name": "baseURI", "nameLocation": "8913:7:7", "nodeType": "VariableDeclaration", "scope": 588, "src": "8899:21:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 564, "name": "string", "nodeType": "ElementaryTypeName", "src": "8899:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "id": 567, "initialValue": {"id": 566, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "8923:8:7", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "8899:32:7"}, {"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 570, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 565, "src": "8966:7:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 569, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8960:5:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 568, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "8960:5:7", "typeDescriptions": {}}}, "id": 571, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8960:14:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8960:21:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 573, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8984:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8960:25:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "", "id": 585, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9076:2:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}, "id": 586, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "8960:118:7", "trueExpression": {"arguments": [{"arguments": [{"id": 579, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 565, "src": "9028:7:7", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 580, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 546, "src": "9037:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toString", "nodeType": "MemberAccess", "referencedDeclaration": 1438, "src": "9037:16:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (string memory)"}}, "id": 582, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9037:18:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "expression": {"id": 577, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "9011:3:7", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 578, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "9011:16:7", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 583, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9011:45:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 576, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9004:6:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": {"id": 575, "name": "string", "nodeType": "ElementaryTypeName", "src": "9004:6:7", "typeDescriptions": {}}}, "id": 584, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9004:53:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 551, "id": 587, "nodeType": "Return", "src": "8941:137:7"}]}, "documentation": {"id": 544, "nodeType": "StructuredDocumentation", "src": "8536:92:7", "text": " @dev Returns the base URI of the token\n @notice Required for ERC721"}, "functionSelector": "c87b56dd", "id": 589, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenURI", "nameLocation": "8642:8:7", "nodeType": "FunctionDefinition", "overrides": {"id": 548, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8720:8:7"}, "parameters": {"id": 547, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 546, "mutability": "mutable", "name": "tokenId", "nameLocation": "8659:7:7", "nodeType": "VariableDeclaration", "scope": 589, "src": "8651:15:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 545, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8651:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8650:17:7"}, "returnParameters": {"id": 551, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 550, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 589, "src": "8746:13:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 549, "name": "string", "nodeType": "ElementaryTypeName", "src": "8746:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "8745:15:7"}, "scope": 726, "src": "8633:452:7", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 724, "nodeType": "Block", "src": "9567:1059:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 611, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 606, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 594, "src": "9598:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 609, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9612:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 608, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9604:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 607, "name": "address", "nodeType": "ElementaryTypeName", "src": "9604:7:7", "typeDescriptions": {}}}, "id": 610, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9604:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9598:16:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "54686520746f6b656e206d6179206e6f742062652073656e7420746f20746865207a65726f2061646472657373", "id": 612, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9628:47:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_74822b6add88661407c6f7b19266f60ec9c8007e8828c0584c54516174f02da5", "typeString": "literal_string \"The token may not be sent to the zero address\""}, "value": "The token may not be sent to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_74822b6add88661407c6f7b19266f60ec9c8007e8828c0584c54516174f02da5", "typeString": "literal_string \"The token may not be sent to the zero address\""}], "id": 605, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9577:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 613, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9577:108:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 614, "nodeType": "ExpressionStatement", "src": "9577:108:7"}, {"expression": {"arguments": [{"id": 619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "9703:20:7", "subExpression": {"baseExpression": {"id": 616, "name": "_punkMinted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55, "src": "9704:11:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$", "typeString": "mapping(uint256 => bool)"}}, "id": 618, "indexExpression": {"id": 617, "name": "punkId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 592, "src": "9716:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9704:19:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652043727970746f50756e6b2077617320616c7265616479206d696e746564", "id": 620, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9725:35:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0faacb3a0fbc33ede8333373946ac919e0ef6b19494207e8e7f075af37d2e6c5", "typeString": "literal_string \"The CryptoPunk was already minted\""}, "value": "The CryptoPunk was already minted"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0faacb3a0fbc33ede8333373946ac919e0ef6b19494207e8e7f075af37d2e6c5", "typeString": "literal_string \"The CryptoPunk was already minted\""}], "id": 615, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9695:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9695:66:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 622, "nodeType": "ExpressionStatement", "src": "9695:66:7"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 624, "name": "itemIds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 597, "src": "9792:7:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[] memory"}}, "id": 625, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "9792:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 626, "name": "shiny", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 600, "src": "9810:5:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr", "typeString": "bool[] memory"}}, "id": 627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "9810:12:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9792:30:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "6974656d4964735b5d20616e64207368696e795b5d206d7573742068617665207468652073616d65206c656e677468", "id": 629, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9836:49:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4ca9dd7d08aa02f1342502de6669d240ea8d17cc3feef0bee5365497cffaae5d", "typeString": "literal_string \"itemIds[] and shiny[] must have the same length\""}, "value": "itemIds[] and shiny[] must have the same length"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4ca9dd7d08aa02f1342502de6669d240ea8d17cc3feef0bee5365497cffaae5d", "typeString": "literal_string \"itemIds[] and shiny[] must have the same length\""}], "id": 623, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9771:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 630, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9771:124:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 631, "nodeType": "ExpressionStatement", "src": "9771:124:7"}, {"assignments": [633], "declarations": [{"constant": false, "id": 633, "mutability": "mutable", "name": "newIndex", "nameLocation": "9914:8:7", "nodeType": "VariableDeclaration", "scope": 724, "src": "9906:16:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 632, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9906:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 638, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 637, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 634, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "9925:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 635, "name": "itemIds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 597, "src": "9934:7:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[] memory"}}, "id": 636, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "9934:14:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9925:23:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9906:42:7"}, {"body": {"id": 711, "nodeType": "Block", "src": "10001:543:7", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 648, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "10040:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 650, "indexExpression": {"id": 649, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "10048:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10040:15:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 653, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10067:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 652, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10059:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 651, "name": "address", "nodeType": "ElementaryTypeName", "src": "10059:7:7", "typeDescriptions": {}}}, "id": 654, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10059:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10040:29:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652070726f766964656420746f6b656e20494420646f6573206e6f74206578697374", "id": 656, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10087:38:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_934a2a57784f7ca3e84075dadbf8d1591f9bf42e2d3de09130902b8175957d4b", "typeString": "literal_string \"The provided token ID does not exist\""}, "value": "The provided token ID does not exist"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_934a2a57784f7ca3e84075dadbf8d1591f9bf42e2d3de09130902b8175957d4b", "typeString": "literal_string \"The provided token ID does not exist\""}], "id": 647, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10015:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 657, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10015:124:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 658, "nodeType": "ExpressionStatement", "src": "10015:124:7"}, {"expression": {"arguments": [{"arguments": [{"arguments": [{"hexValue": "30", "id": 663, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10209:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 662, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10201:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 661, "name": "address", "nodeType": "ElementaryTypeName", "src": "10201:7:7", "typeDescriptions": {}}}, "id": 664, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10201:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 665, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 594, "src": "10213:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 666, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "10217:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 660, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 392, "src": "10178:22:7", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) returns (bool)"}}, "id": 667, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10178:46:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652072656365697665722063616e6e6f74206163636570742045524337323120746f6b656e73", "id": 668, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10242:42:7", "typeDescriptions": {"typeIdentifier": "t_stringliteral_939ade121b33e36156c9d8ad70f72630e2e7e8be3f0a1ff36555ecdea177dd16", "typeString": "literal_string \"The receiver cannot accept ERC721 tokens\""}, "value": "The receiver cannot accept ERC721 tokens"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_939ade121b33e36156c9d8ad70f72630e2e7e8be3f0a1ff36555ecdea177dd16", "typeString": "literal_string \"The receiver cannot accept ERC721 tokens\""}], "id": 659, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10153:7:7", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 669, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10153:145:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 670, "nodeType": "ExpressionStatement", "src": "10153:145:7"}, {"assignments": [672], "declarations": [{"constant": false, "id": 672, "mutability": "mutable", "name": "itemId", "nameLocation": "10319:6:7", "nodeType": "VariableDeclaration", "scope": 711, "src": "10313:12:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 671, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "10313:5:7", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "id": 678, "initialValue": {"baseExpression": {"id": 673, "name": "itemIds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 597, "src": "10328:7:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[] memory"}}, "id": 677, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 676, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 674, "name": "newIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "10336:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 675, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "10347:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10336:17:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10328:26:7", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "VariableDeclarationStatement", "src": "10313:41:7"}, {"expression": {"id": 688, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 679, "name": "items", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "10368:5:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LootItem_$60_storage_$", "typeString": "mapping(uint256 => struct Loot.LootItem storage ref)"}}, "id": 681, "indexExpression": {"id": 680, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "10374:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10368:13:7", "typeDescriptions": {"typeIdentifier": "t_struct$_LootItem_$60_storage", "typeString": "struct Loot.LootItem storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 683, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "10393:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 684, "name": "shiny", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 600, "src": "10401:5:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr", "typeString": "bool[] memory"}}, "id": 686, "indexExpression": {"id": 685, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "10407:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10401:13:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 682, "name": "LootItem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 60, "src": "10384:8:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_LootItem_$60_storage_ptr_$", "typeString": "type(struct Loot.LootItem storage pointer)"}}, "id": 687, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10384:31:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_LootItem_$60_memory_ptr", "typeString": "struct Loot.LootItem memory"}}, "src": "10368:47:7", "typeDescriptions": {"typeIdentifier": "t_struct$_LootItem_$60_storage", "typeString": "struct Loot.LootItem storage ref"}}, "id": 689, "nodeType": "ExpressionStatement", "src": "10368:47:7"}, {"expression": {"id": 694, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 690, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "10429:9:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 692, "indexExpression": {"id": 691, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 594, "src": "10439:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10429:13:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 693, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10446:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "10429:18:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 695, "nodeType": "ExpressionStatement", "src": "10429:18:7"}, {"expression": {"id": 700, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 696, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "10461:7:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 698, "indexExpression": {"id": 697, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "10469:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10461:15:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 699, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 594, "src": "10479:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10461:20:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 701, "nodeType": "ExpressionStatement", "src": "10461:20:7"}, {"eventCall": {"arguments": [{"arguments": [{"hexValue": "30", "id": 705, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10518:1:7", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 704, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10510:7:7", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 703, "name": "address", "nodeType": "ElementaryTypeName", "src": "10510:7:7", "typeDescriptions": {}}}, "id": 706, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10510:10:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 707, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 594, "src": "10522:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 708, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "10526:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 702, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 910, "src": "10501:8:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 709, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10501:32:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 710, "nodeType": "EmitStatement", "src": "10496:37:7"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 641, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "9972:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 642, "name": "newIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "9981:8:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9972:17:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 712, "initializationExpression": {"expression": {"id": 639, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "9964:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 640, "nodeType": "ExpressionStatement", "src": "9964:6:7"}, "loopExpression": {"expression": {"id": 645, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "9991:8:7", "subExpression": {"id": 644, "name": "_index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 33, "src": "9991:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 646, "nodeType": "ExpressionStatement", "src": "9991:8:7"}, "nodeType": "ForStatement", "src": "9959:585:7"}, {"expression": {"id": 717, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 713, "name": "_punkMinted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55, "src": "10554:11:7", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$", "typeString": "mapping(uint256 => bool)"}}, "id": 715, "indexExpression": {"id": 714, "name": "punkId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 592, "src": "10566:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10554:19:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 716, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "10576:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "10554:26:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 718, "nodeType": "ExpressionStatement", "src": "10554:26:7"}, {"eventCall": {"arguments": [{"id": 720, "name": "punkId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 592, "src": "10608:6:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 721, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 594, "src": "10616:2:7", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 719, "name": "PunkConsumed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "10595:12:7", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address)"}}, "id": 722, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10595:24:7", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 723, "nodeType": "EmitStatement", "src": "10590:29:7"}]}, "documentation": {"id": 590, "nodeType": "StructuredDocumentation", "src": "9091:320:7", "text": " @dev Mints one or multiple loot items\n @param punkId    The ID of the original CryptoPunk\n @param to        The address to mind the items to\n @param itemIds   An array of item IDs obtainable from Traits.sol\n @param shiny     Determines id the item being minted is shiny (array)"}, "functionSelector": "09904b2b", "id": 725, "implemented": true, "kind": "function", "modifiers": [{"id": 603, "kind": "modifierInvocation", "modifierName": {"id": 602, "name": "onlyOracleOperator", "nodeType": "IdentifierPath", "referencedDeclaration": 117, "src": "9548:18:7"}, "nodeType": "ModifierInvocation", "src": "9548:18:7"}], "name": "mint", "nameLocation": "9425:4:7", "nodeType": "FunctionDefinition", "parameters": {"id": 601, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 592, "mutability": "mutable", "name": "punkId", "nameLocation": "9447:6:7", "nodeType": "VariableDeclaration", "scope": 725, "src": "9439:14:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 591, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9439:7:7", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 594, "mutability": "mutable", "name": "to", "nameLocation": "9471:2:7", "nodeType": "VariableDeclaration", "scope": 725, "src": "9463:10:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 593, "name": "address", "nodeType": "ElementaryTypeName", "src": "9463:7:7", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 597, "mutability": "mutable", "name": "itemIds", "nameLocation": "9498:7:7", "nodeType": "VariableDeclaration", "scope": 725, "src": "9483:22:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr", "typeString": "uint8[]"}, "typeName": {"baseType": {"id": 595, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "9483:5:7", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 596, "nodeType": "ArrayTypeName", "src": "9483:7:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr", "typeString": "uint8[]"}}, "visibility": "internal"}, {"constant": false, "id": 600, "mutability": "mutable", "name": "shiny", "nameLocation": "9529:5:7", "nodeType": "VariableDeclaration", "scope": 725, "src": "9515:19:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr", "typeString": "bool[]"}, "typeName": {"baseType": {"id": 598, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9515:4:7", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 599, "nodeType": "ArrayTypeName", "src": "9515:6:7", "typeDescriptions": {"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr", "typeString": "bool[]"}}, "visibility": "internal"}], "src": "9429:111:7"}, "returnParameters": {"id": 604, "nodeType": "ParameterList", "parameters": [], "src": "9567:0:7"}, "scope": 726, "src": "9416:1210:7", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 727, "src": "783:9845:7", "usedErrors": []}], "src": "31:10598:7"}, "bytecode": "", "bytecodeSha1": "626d7d9cb2d479a1091ee8ede15d10f1d181b453", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.6+commit.11564f7e"}, "contractName": "Loot", "coverageMap": {"branches": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {"Strings.toString": {"69": [548, 558, false]}}, "5": {}, "6": {}, "7": {"Loot.approve": {"52": [6696, 6707, true], "53": [6782, 6801, true], "54": [6805, 6840, true]}, "Loot.mint": {"55": [2506, 2538, true], "56": [9598, 9614, true], "57": [9703, 9723, true], "58": [9792, 9822, true], "59": [10040, 10069, true], "60": [10178, 10224, true]}, "Loot.safeTransferFrom": {"61": [4192, 4211, true], "62": [4231, 4265, true], "63": [4285, 4320, true], "64": [4428, 4441, true], "65": [4548, 4564, true], "66": [4666, 4707, true]}, "Loot.setApprovalForAll": {"67": [7627, 7649, true]}, "Loot.tokenURI": {"68": [8960, 8985, true]}}, "8": {}}, "statements": {"0": {}, "1": {}, "2": {}, "3": {"Address.isContract": {"41": [1073, 1088]}}, "4": {"Strings.toString": {"45": [574, 584], "46": [690, 698], "47": [712, 722], "48": [824, 835], "49": [849, 905], "50": [919, 930], "51": [950, 971]}}, "5": {"ERC165.supportsInterface": {"3": [864, 911]}}, "6": {}, "7": {"Loot._checkOnERC721Received": {"42": [6203, 6253], "43": [6037, 6095], "44": [6457, 6468]}, "Loot.approve": {"7": [6688, 6750], "8": [6761, 6913], "9": [6924, 6953], "10": [6963, 7012]}, "Loot.balanceOf": {"0": [3462, 3485]}, "Loot.getApproved": {"5": [7244, 7357], "6": [7368, 7399]}, "Loot.getOracle": {"1": [2758, 2781]}, "Loot.isApprovedForAll": {"40": [8081, 8123]}, "Loot.mint": {"11": [9577, 9685], "12": [9695, 9761], "13": [9771, 9895], "14": [10015, 10139], "15": [10153, 10298], "16": [10368, 10415], "17": [10429, 10447], "18": [10461, 10481], "19": [10496, 10533], "20": [9991, 9999], "21": [10554, 10580], "22": [10590, 10619]}, "Loot.name": {"4": [8308, 8320]}, "Loot.safeTransferFrom": {"24": [4094, 4161], "25": [4171, 4397], "26": [4407, 4517], "27": [4527, 4635], "28": [4645, 4773], "29": [4784, 4804], "30": [4814, 4832], "31": [4842, 4863], "32": [4874, 4906], "37": [5207, 5242]}, "Loot.setApprovalForAll": {"34": [7619, 7688], "35": [7699, 7750], "36": [7760, 7811]}, "Loot.supportsInterface": {"2": [3014, 3189]}, "Loot.symbol": {"33": [8509, 8523]}, "Loot.tokenURI": {"38": [8775, 8888], "39": [8941, 9078]}, "Loot.transferFrom": {"23": [5494, 5529]}}, "8": {}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.3.1/Address", "OpenZeppelin/openzeppelin-contracts@4.3.1/ERC165", "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC165", "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC721", "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC721Metadata", "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC721Receiver", "Oracle", "OpenZeppelin/openzeppelin-contracts@4.3.1/Strings"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde14610247578063bfb231d21461025a578063c87b56dd14610299578063e985e9c5146102ac57600080fd5b806370a08231146101e4578063833b1fce1461021b57806395d89b411461022c578063a22cb4651461023457600080fd5b806309904b2b116100d357806309904b2b1461018257806323b872dd1461019557806342842e0e146101a85780636352211e146101bb57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b6101186101133660046112ae565b6102bf565b60405190151581526020015b60405180910390f35b610135610311565b604051610124919061141d565b6101556101503660046112e8565b6103a3565b6040516001600160a01b039091168152602001610124565b61018061017b366004611282565b6103fc565b005b610180610190366004611301565b61055f565b6101806101a3366004611148565b610959565b6101806101b6366004611148565b610969565b6101556101c93660046112e8565b6000908152600560205260409020546001600160a01b031690565b61020d6101f23660046110d5565b6001600160a01b031660009081526006602052604090205490565b604051908152602001610124565b6003546001600160a01b0316610155565b610135610bef565b61018061024236600461124d565b610bfe565b610180610255366004611189565b610cce565b6102846102683660046112e8565b600a602052600090815260409020805460019091015460ff1682565b60408051928352901515602083015201610124565b6101356102a73660046112e8565b610cdf565b6101186102ba36600461110f565b610df5565b60006001600160e01b031982166380ac58cd60e01b14806102f057506001600160e01b03198216635b5e139f60e01b145b8061030b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610320906115ed565b80601f016020809104026020016040519081016040528092919081815260200182805461034c906115ed565b80156103995780601f1061036e57610100808354040283529160200191610399565b820191906000526020600020905b81548152906001019060200180831161037c57829003601f168201915b5050505050905090565b6000818152600560205260408120546001600160a01b03166103e05760405162461bcd60e51b81526004016103d79061149d565b60405180910390fd5b506000908152600760205260409020546001600160a01b031690565b6000818152600560205260409020546001600160a01b039081169083168114156104775760405162461bcd60e51b815260206004820152602660248201527f546865206f776e657220646f6573206e6f74206e65656420746f2062652061706044820152651c1c9bdd995960d21b60648201526084016103d7565b336001600160a01b038216148061049357506104938133610df5565b6104f75760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c79206f776e657273206f72206f70657261746f7273206d61792063616c60448201526e36103a3434b990333ab731ba34b7b760891b60648201526084016103d7565b600082815260076020908152604080832080546001600160a01b0319166001600160a01b038881169182179092556005909352818420549151869492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600360009054906101000a90046001600160a01b03166001600160a01b031663570ca7356040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ad57600080fd5b505afa1580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e591906110f2565b6001600160a01b0316336001600160a01b03161461065e5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7920746865206f7261636c65206f70657261746f72206d61792070657260448201526f3337b936903a3434b99030b1ba34b7b760811b60648201526084016103d7565b6001600160a01b0383166106845760405162461bcd60e51b81526004016103d790611450565b60008481526009602052604090205460ff16156106ed5760405162461bcd60e51b815260206004820152602160248201527f5468652043727970746f50756e6b2077617320616c7265616479206d696e74656044820152601960fa1b60648201526084016103d7565b80518251146107565760405162461bcd60e51b815260206004820152602f60248201527f6974656d4964735b5d20616e64207368696e795b5d206d75737420686176652060448201526e0e8d0ca40e6c2daca40d8cadccee8d608b1b60648201526084016103d7565b60008251600454610767919061157e565b90505b806004541015610906576004546000908152600560205260409020546001600160a01b0316156107ac5760405162461bcd60e51b81526004016103d79061149d565b6107ba600085600454610e23565b6107d65760405162461bcd60e51b81526004016103d7906114e1565b600083600454836107e791906115aa565b815181106107f7576107f7611683565b6020026020010151905060405180604001604052806004548152602001846004548151811061082857610828611683565b60209081029190910181015115159091526004546000908152600a8252604080822084518155938301516001948501805460ff19169115159190911790556001600160a01b03891682526006909252908120805490919061088a90849061157e565b90915550506004805460009081526005602052604080822080546001600160a01b0319166001600160a01b038a1690811790915592549051909291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450600480549060006108fc83611628565b919050555061076a565b600085815260096020526040808220805460ff19166001179055516001600160a01b0386169187917f346ded8055a0968941609c2ff8335d290f586f0f20658fac695b54946923a1f89190a35050505050565b610964838383610969565b505050565b6000818152600560205260409020546001600160a01b0316806109ce5760405162461bcd60e51b815260206004820152601860248201527f54686520746f6b656e20646f6573206e6f74206578697374000000000000000060448201526064016103d7565b336001600160a01b03821614806109f55750336109ea836103a3565b6001600160a01b0316145b80610a055750610a058133610df5565b610a6d5760405162461bcd60e51b815260206004820152603360248201527f546865206f70657261746f72206973206e6f7420617070726f76656420746f206044820152723a3930b739b332b9103a3434b9903a37b5b2b760691b60648201526084016103d7565b836001600160a01b0316816001600160a01b031614610ae95760405162461bcd60e51b815260206004820152603260248201527f5468652073656e64657220646f6573206e6f74206f776e2074686520746f6b656044820152711b881d1bc81899481d1c985b9cd9995c995960721b60648201526084016103d7565b6001600160a01b038316610b0f5760405162461bcd60e51b81526004016103d790611450565b610b1a848484610e23565b610b365760405162461bcd60e51b81526004016103d7906114e1565b6001600160a01b0384166000908152600660205260408120805460019290610b5f9084906115aa565b90915550506001600160a01b0383166000908152600660205260408120805460019290610b8d90849061157e565b909155505060008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b606060018054610320906115ed565b6001600160a01b038216331415610c625760405162461bcd60e51b815260206004820152602260248201527f5468652073656e646572206d6179206e6f7420626520746865206f706572617460448201526137b960f11b60648201526084016103d7565b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610cd9848484610969565b50505050565b6000818152600560205260409020546060906001600160a01b0316610d165760405162461bcd60e51b81526004016103d79061149d565b600060028054610d25906115ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610d51906115ed565b8015610d9e5780601f10610d7357610100808354040283529160200191610d9e565b820191906000526020600020905b815481529060010190602001808311610d8157829003601f168201915b505050505090506000815111610dc35760405180602001604052806000815250610dee565b80610dcd84610f41565b604051602001610dde9291906113ee565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b60006001600160a01b0383163b15610f3757604051630a85bd0160e11b81523360048201526001600160a01b03858116602483015260448201849052608060648301526000608483015284169063150b7a029060a401602060405180830381600087803b158015610e9357600080fd5b505af1925050508015610ec3575060408051601f3d908101601f19168201909252610ec0918101906112cb565b60015b610f1d573d808015610ef1576040519150601f19603f3d011682016040523d82523d6000602084013e610ef6565b606091505b508051610f155760405162461bcd60e51b81526004016103d7906114e1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610dee565b5060019392505050565b606081610f655750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f8f5780610f7981611628565b9150610f889050600a83611596565b9150610f69565b60008167ffffffffffffffff811115610faa57610faa611699565b6040519080825280601f01601f191660200182016040528015610fd4576020820181803683370190505b5090505b841561103f57610fe96001836115aa565b9150610ff6600a86611643565b61100190603061157e565b60f81b81838151811061101657611016611683565b60200101906001600160f81b031916908160001a905350611038600a86611596565b9450610fd8565b949350505050565b600082601f83011261105857600080fd5b8135602061106d6110688361155a565b611529565b80838252828201915082860187848660051b890101111561108d57600080fd5b60005b858110156110b3576110a1826110c0565b84529284019290840190600101611090565b5090979650505050505050565b803580151581146110d057600080fd5b919050565b6000602082840312156110e757600080fd5b8135610dee816116af565b60006020828403121561110457600080fd5b8151610dee816116af565b6000806040838503121561112257600080fd5b823561112d816116af565b9150602083013561113d816116af565b809150509250929050565b60008060006060848603121561115d57600080fd5b8335611168816116af565b92506020840135611178816116af565b929592945050506040919091013590565b6000806000806080858703121561119f57600080fd5b84356111aa816116af565b93506020858101356111bb816116af565b935060408601359250606086013567ffffffffffffffff808211156111df57600080fd5b818801915088601f8301126111f357600080fd5b81358181111561120557611205611699565b611217601f8201601f19168501611529565b9150808252898482850101111561122d57600080fd5b808484018584013760008482840101525080935050505092959194509250565b6000806040838503121561126057600080fd5b823561126b816116af565b9150611279602084016110c0565b90509250929050565b6000806040838503121561129557600080fd5b82356112a0816116af565b946020939093013593505050565b6000602082840312156112c057600080fd5b8135610dee816116c7565b6000602082840312156112dd57600080fd5b8151610dee816116c7565b6000602082840312156112fa57600080fd5b5035919050565b6000806000806080858703121561131757600080fd5b8435935060208086013561132a816116af565b9350604086013567ffffffffffffffff8082111561134757600080fd5b818801915088601f83011261135b57600080fd5b81356113696110688261155a565b8082825285820191508585018c878560051b880101111561138957600080fd5b600095505b838610156113bb57803560ff811681146113a757600080fd5b83526001959095019491860191860161138e565b509650505060608801359250808311156113d457600080fd5b50506113e287828801611047565b91505092959194509250565b600083516114008184602088016115c1565b8351908301906114148183602088016115c1565b01949350505050565b602081526000825180602084015261143c8160408501602087016115c1565b601f01601f19169190910160400192915050565b6020808252602d908201527f54686520746f6b656e206d6179206e6f742062652073656e7420746f2074686560408201526c207a65726f206164647265737360981b606082015260800190565b60208082526024908201527f5468652070726f766964656420746f6b656e20494420646f6573206e6f7420656040820152631e1a5cdd60e21b606082015260800190565b60208082526028908201527f5468652072656365697665722063616e6e6f74206163636570742045524337326040820152673120746f6b656e7360c01b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561155257611552611699565b604052919050565b600067ffffffffffffffff82111561157457611574611699565b5060051b60200190565b6000821982111561159157611591611657565b500190565b6000826115a5576115a561166d565b500490565b6000828210156115bc576115bc611657565b500390565b60005b838110156115dc5781810151838201526020016115c4565b83811115610cd95750506000910152565b600181811c9082168061160157607f821691505b6020821081141561162257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561163c5761163c611657565b5060010190565b6000826116525761165261166d565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146116c457600080fd5b50565b6001600160e01b0319811681146116c457600080fdfea264697066735822122029bfa139d2a0ebc74b5a46d44f175b5a4ef95c15692e1e32294486b828d895fb64736f6c63430008060033", "deployedSourceMap": "783:9845:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2852:344;;;;;;:::i;:::-;;:::i;:::-;;;7520:14:9;;7513:22;7495:41;;7483:2;7468:18;2852:344:7;;;;;;;;8229:98;;;:::i;:::-;;;;;;;:::i;7105:301::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6751:32:9;;;6733:51;;6721:2;6706:18;7105:301:7;6688:102:9;6561:458:7;;;;;;:::i;:::-;;:::i;:::-;;9416:1210;;;;;;:::i;:::-;;:::i;5365:171::-;;;;;;:::i;:::-;;:::i;3914:999::-;;;;;;:::i;:::-;;:::i;3615:196::-;;;;;;:::i;:::-;3727:7;3766:16;;;:7;:16;;;;;;-1:-1:-1;;;;;3766:16:7;;3615:196;3327:165;;;;;;:::i;:::-;-1:-1:-1;;;;;3469:16:7;3439:7;3469:16;;;:9;:16;;;;;;;3327:165;;;;12962:25:9;;;12950:2;12935:18;3327:165:7;12917:76:9;2697:91:7;2773:7;;-1:-1:-1;;;;;2773:7:7;2697:91;;8428:102;;;:::i;7497:321::-;;;;;;:::i;:::-;;:::i;5046:203::-;;;;;;:::i;:::-;;:::i;1837:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;13166:25:9;;;13234:14;;13227:22;13222:2;13207:18;;13200:50;13139:18;1837:41:7;13121:135:9;8633:452:7;;;;;;:::i;:::-;;:::i;7924:206::-;;;;;;:::i;:::-;;:::i;2852:344::-;2994:4;-1:-1:-1;;;;;;3033:40:7;;-1:-1:-1;;;3033:40:7;;:104;;-1:-1:-1;;;;;;;3089:48:7;;-1:-1:-1;;;3089:48:7;3033:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:5;;;3153:36:7;3014:175;2852:344;-1:-1:-1;;2852:344:7:o;8229:98::-;8283:13;8315:5;8308:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8229:98;:::o;7105:301::-;7221:7;7265:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7265:16:7;7244:113;;;;-1:-1:-1;;;7244:113:7;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;7375:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;7375:24:7;;7105:301::o;6561:458::-;6641:13;3766:16;;;:7;:16;;;;;;-1:-1:-1;;;;;3766:16:7;;;;6696:11;;;;;6688:62;;;;-1:-1:-1;;;6688:62:7;;12611:2:9;6688:62:7;;;12593:21:9;12650:2;12630:18;;;12623:30;12689:34;12669:18;;;12662:62;-1:-1:-1;;;12740:18:9;;;12733:36;12786:19;;6688:62:7;12583:228:9;6688:62:7;6782:10;-1:-1:-1;;;;;6782:19:7;;;;:58;;;6805:35;6822:5;6829:10;6805:16;:35::i;:::-;6761:152;;;;-1:-1:-1;;;6761:152:7;;11842:2:9;6761:152:7;;;11824:21:9;11881:2;11861:18;;;11854:30;11920:34;11900:18;;;11893:62;-1:-1:-1;;;11971:18:9;;;11964:45;12026:19;;6761:152:7;11814:237:9;6761:152:7;6924:24;;;;:15;:24;;;;;;;;:29;;-1:-1:-1;;;;;;6924:29:7;-1:-1:-1;;;;;6924:29:7;;;;;;;;;3766:7;:16;;;;;;;6968:44;;6924:24;;3766:16;;;;;6968:44;;;6631:388;6561:458;;:::o;9416:1210::-;2520:7;;;;;;;;;-1:-1:-1;;;;;2520:7:7;-1:-1:-1;;;;;2520:16:7;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2506:32:7;:10;-1:-1:-1;;;;;2506:32:7;;2485:127;;;;-1:-1:-1;;;2485:127:7;;10192:2:9;2485:127:7;;;10174:21:9;10231:2;10211:18;;;10204:30;10270:34;10250:18;;;10243:62;-1:-1:-1;;;10321:18:9;;;10314:46;10377:19;;2485:127:7;10164:238:9;2485:127:7;-1:-1:-1;;;;;9598:16:7;::::1;9577:108;;;;-1:-1:-1::0;;;9577:108:7::1;;;;;;;:::i;:::-;9704:19;::::0;;;:11:::1;:19;::::0;;;;;::::1;;9703:20;9695:66;;;::::0;-1:-1:-1;;;9695:66:7;;8137:2:9;9695:66:7::1;::::0;::::1;8119:21:9::0;8176:2;8156:18;;;8149:30;8215:34;8195:18;;;8188:62;-1:-1:-1;;;8266:18:9;;;8259:31;8307:19;;9695:66:7::1;8109:223:9::0;9695:66:7::1;9810:5;:12;9792:7;:14;:30;9771:124;;;::::0;-1:-1:-1;;;9771:124:7;;8539:2:9;9771:124:7::1;::::0;::::1;8521:21:9::0;8578:2;8558:18;;;8551:30;8617:34;8597:18;;;8590:62;-1:-1:-1;;;8668:18:9;;;8661:45;8723:19;;9771:124:7::1;8511:237:9::0;9771:124:7::1;9906:16;9934:7;:14;9925:6;;:23;;;;:::i;:::-;9906:42;;9959:585;9981:8;9972:6;;:17;9959:585;;;10048:6;::::0;10067:1:::1;10040:15:::0;;;:7:::1;:15;::::0;;;;;-1:-1:-1;;;;;10040:15:7::1;:29:::0;10015:124:::1;;;;-1:-1:-1::0;;;10015:124:7::1;;;;;;;:::i;:::-;10178:46;10209:1;10213:2;10217:6;;10178:22;:46::i;:::-;10153:145;;;;-1:-1:-1::0;;;10153:145:7::1;;;;;;;:::i;:::-;10313:12;10328:7;10347:6;;10336:8;:17;;;;:::i;:::-;10328:26;;;;;;;;:::i;:::-;;;;;;;10313:41;;10384:31;;;;;;;;10393:6;;10384:31;;;;10401:5;10407:6;;10401:13;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;10384:31:::1;;::::0;;;10374:6:::1;::::0;10368:13:::1;::::0;;;:5:::1;:13:::0;;;;;;:47;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;10368:47:7::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;;;;;10429:13:7;::::1;::::0;;:9:::1;:13:::0;;;;;;:18;;:13;;10368;10429:18:::1;::::0;10368:47;;10429:18:::1;:::i;:::-;::::0;;;-1:-1:-1;;10469:6:7::1;::::0;;10461:15:::1;::::0;;;:7:::1;:15;::::0;;;;;:20;;-1:-1:-1;;;;;;10461:20:7::1;-1:-1:-1::0;;;;;10461:20:7;::::1;::::0;;::::1;::::0;;;10526:6;;10501:32;;10526:6;;10461:20;:15;10501:32:::1;::::0;10461:15;;10501:32:::1;-1:-1:-1::0;9991:6:7::1;:8:::0;;;:6:::1;:8;::::0;::::1;:::i;:::-;;;;;;9959:585;;;10554:19;::::0;;;:11:::1;:19;::::0;;;;;:26;;-1:-1:-1;;10554:26:7::1;10576:4;10554:26;::::0;;10595:24;-1:-1:-1;;;;;10595:24:7;::::1;::::0;10566:6;;10595:24:::1;::::0;10554:19;10595:24:::1;9567:1059;9416:1210:::0;;;;:::o;5365:171::-;5494:35;5511:4;5517:2;5521:7;5494:16;:35::i;:::-;5365:171;;;:::o;3914:999::-;4047:13;3766:16;;;:7;:16;;;;;;-1:-1:-1;;;;;3766:16:7;;4094:67;;;;-1:-1:-1;;;4094:67:7;;12258:2:9;4094:67:7;;;12240:21:9;12297:2;12277:18;;;12270:30;12336:26;12316:18;;;12309:54;12380:18;;4094:67:7;12230:174:9;4094:67:7;4192:10;-1:-1:-1;;;;;4192:19:7;;;;:73;;-1:-1:-1;4255:10:7;4231:20;4243:7;4231:11;:20::i;:::-;-1:-1:-1;;;;;4231:34:7;;4192:73;:128;;;;4285:35;4302:5;4309:10;4285:16;:35::i;:::-;4171:226;;;;-1:-1:-1;;;4171:226:7;;8955:2:9;4171:226:7;;;8937:21:9;8994:2;8974:18;;;8967:30;9033:34;9013:18;;;9006:62;-1:-1:-1;;;9084:18:9;;;9077:49;9143:19;;4171:226:7;8927:241:9;4171:226:7;4437:4;-1:-1:-1;;;;;4428:13:7;:5;-1:-1:-1;;;;;4428:13:7;;4407:110;;;;-1:-1:-1;;;4407:110:7;;11423:2:9;4407:110:7;;;11405:21:9;11462:2;11442:18;;;11435:30;11501:34;11481:18;;;11474:62;-1:-1:-1;;;11552:18:9;;;11545:48;11610:19;;4407:110:7;11395:240:9;4407:110:7;-1:-1:-1;;;;;4548:16:7;;4527:108;;;;-1:-1:-1;;;4527:108:7;;;;;;;:::i;:::-;4666:41;4689:4;4695:2;4699:7;4666:22;:41::i;:::-;4645:128;;;;-1:-1:-1;;;4645:128:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;4784:15:7;;;;;;:9;:15;;;;;:20;;4803:1;;4784:15;:20;;4803:1;;4784:20;:::i;:::-;;;;-1:-1:-1;;;;;;;4814:13:7;;;;;;:9;:13;;;;;:18;;4831:1;;4814:13;:18;;4831:1;;4814:18;:::i;:::-;;;;-1:-1:-1;;4842:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;4842:21:7;-1:-1:-1;;;;;4842:21:7;;;;;;;;;4879:27;;4842:16;;4879:27;;;;;;;4037:876;3914:999;;;:::o;8428:102::-;8484:13;8516:7;8509:14;;;;;:::i;7497:321::-;-1:-1:-1;;;;;7627:22:7;;7639:10;7627:22;;7619:69;;;;-1:-1:-1;;;7619:69:7;;9375:2:9;7619:69:7;;;9357:21:9;9414:2;9394:18;;;9387:30;9453:34;9433:18;;;9426:62;-1:-1:-1;;;9504:18:9;;;9497:32;9546:19;;7619:69:7;9347:224:9;7619:69:7;7718:10;7699:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;7699:40:7;;;;;;;;;;;;:51;;-1:-1:-1;;7699:51:7;;;;;;;;;;7765:46;;7495:41:9;;;7699:40:7;;7718:10;7765:46;;7468:18:9;7765:46:7;;;;;;;7497:321;;:::o;5046:203::-;5207:35;5224:4;5230:2;5234:7;5207:16;:35::i;:::-;5046:203;;;;:::o;8633:452::-;8824:1;8796:16;;;:7;:16;;;;;;8746:13;;-1:-1:-1;;;;;8796:16:7;8775:113;;;;-1:-1:-1;;;8775:113:7;;;;;;;:::i;:::-;8899:21;8923:8;8899:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8984:1;8966:7;8960:21;:25;:118;;;;;;;;;;;;;;;;;9028:7;9037:18;:7;:16;:18::i;:::-;9011:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8960:118;8941:137;8633:452;-1:-1:-1;;;8633:452:7:o;7924:206::-;-1:-1:-1;;;;;8088:25:7;;;8061:4;8088:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7924:206::o;5624:861::-;5746:4;-1:-1:-1;;;;;5766:13:7;;1034:20:3;1080:8;5762:717:7;;5817:165;;-1:-1:-1;;;5817:165:7;;5875:10;5817:165;;;7100:34:9;-1:-1:-1;;;;;7170:15:9;;;7150:18;;;7143:43;7202:18;;;7195:34;;;7265:3;7245:18;;;7238:31;-1:-1:-1;7285:19:9;;;7278:30;5817:36:7;;;;;7325:19:9;;5817:165:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5817:165:7;;;;;;;;-1:-1:-1;;5817:165:7;;;;;;;;;;;;:::i;:::-;;;5797:630;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6161:13:7;;6157:256;;6203:50;;-1:-1:-1;;;6203:50:7;;;;;;;:::i;6157:256::-;6365:6;6359:13;6350:6;6346:2;6342:15;6335:38;5797:630;-1:-1:-1;;;;;;6044:51:7;-1:-1:-1;;;6044:51:7;;-1:-1:-1;6037:58:7;;5762:717;-1:-1:-1;6464:4:7;5624:861;;;;;:::o;275:703:4:-;331:13;548:10;544:51;;-1:-1:-1;;574:10:4;;;;;;;;;;;;-1:-1:-1;;;574:10:4;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:4;;-1:-1:-1;720:2:4;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:4;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:4;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:4;;;;;;;;-1:-1:-1;919:11:4;928:2;919:11;;:::i;:::-;;;791:150;;;964:6;275:703;-1:-1:-1;;;;275:703:4:o;14:670:9:-;65:5;118:3;111:4;103:6;99:17;95:27;85:2;;136:1;133;126:12;85:2;172:6;159:20;198:4;222:57;238:40;275:2;238:40;:::i;:::-;222:57;:::i;:::-;301:3;325:2;320:3;313:15;353:2;348:3;344:12;337:19;;388:2;380:6;376:15;440:3;435:2;429;426:1;422:10;414:6;410:23;406:32;403:41;400:2;;;457:1;454;447:12;400:2;479:1;489:166;503:2;500:1;497:9;489:166;;;560:20;576:3;560:20;:::i;:::-;548:33;;601:12;;;;633;;;;521:1;514:9;489:166;;;-1:-1:-1;673:5:9;;75:609;-1:-1:-1;;;;;;;75:609:9:o;689:160::-;754:20;;810:13;;803:21;793:32;;783:2;;839:1;836;829:12;783:2;735:114;;;:::o;854:247::-;913:6;966:2;954:9;945:7;941:23;937:32;934:2;;;982:1;979;972:12;934:2;1021:9;1008:23;1040:31;1065:5;1040:31;:::i;1106:251::-;1176:6;1229:2;1217:9;1208:7;1204:23;1200:32;1197:2;;;1245:1;1242;1235:12;1197:2;1277:9;1271:16;1296:31;1321:5;1296:31;:::i;1362:388::-;1430:6;1438;1491:2;1479:9;1470:7;1466:23;1462:32;1459:2;;;1507:1;1504;1497:12;1459:2;1546:9;1533:23;1565:31;1590:5;1565:31;:::i;:::-;1615:5;-1:-1:-1;1672:2:9;1657:18;;1644:32;1685:33;1644:32;1685:33;:::i;:::-;1737:7;1727:17;;;1449:301;;;;;:::o;1755:456::-;1832:6;1840;1848;1901:2;1889:9;1880:7;1876:23;1872:32;1869:2;;;1917:1;1914;1907:12;1869:2;1956:9;1943:23;1975:31;2000:5;1975:31;:::i;:::-;2025:5;-1:-1:-1;2082:2:9;2067:18;;2054:32;2095:33;2054:32;2095:33;:::i;:::-;1859:352;;2147:7;;-1:-1:-1;;;2201:2:9;2186:18;;;;2173:32;;1859:352::o;2216:1108::-;2311:6;2319;2327;2335;2388:3;2376:9;2367:7;2363:23;2359:33;2356:2;;;2405:1;2402;2395:12;2356:2;2444:9;2431:23;2463:31;2488:5;2463:31;:::i;:::-;2513:5;-1:-1:-1;2537:2:9;2576:18;;;2563:32;2604:33;2563:32;2604:33;:::i;:::-;2656:7;-1:-1:-1;2710:2:9;2695:18;;2682:32;;-1:-1:-1;2765:2:9;2750:18;;2737:32;2788:18;2818:14;;;2815:2;;;2845:1;2842;2835:12;2815:2;2883:6;2872:9;2868:22;2858:32;;2928:7;2921:4;2917:2;2913:13;2909:27;2899:2;;2950:1;2947;2940:12;2899:2;2986;2973:16;3008:2;3004;3001:10;2998:2;;;3014:18;;:::i;:::-;3056:53;3099:2;3080:13;;-1:-1:-1;;3076:27:9;3072:36;;3056:53;:::i;:::-;3043:66;;3132:2;3125:5;3118:17;3172:7;3167:2;3162;3158;3154:11;3150:20;3147:33;3144:2;;;3193:1;3190;3183:12;3144:2;3248;3243;3239;3235:11;3230:2;3223:5;3219:14;3206:45;3292:1;3287:2;3282;3275:5;3271:14;3267:23;3260:34;;3313:5;3303:15;;;;;2346:978;;;;;;;:::o;3329:315::-;3394:6;3402;3455:2;3443:9;3434:7;3430:23;3426:32;3423:2;;;3471:1;3468;3461:12;3423:2;3510:9;3497:23;3529:31;3554:5;3529:31;:::i;:::-;3579:5;-1:-1:-1;3603:35:9;3634:2;3619:18;;3603:35;:::i;:::-;3593:45;;3413:231;;;;;:::o;3649:315::-;3717:6;3725;3778:2;3766:9;3757:7;3753:23;3749:32;3746:2;;;3794:1;3791;3784:12;3746:2;3833:9;3820:23;3852:31;3877:5;3852:31;:::i;:::-;3902:5;3954:2;3939:18;;;;3926:32;;-1:-1:-1;;;3736:228:9:o;3969:245::-;4027:6;4080:2;4068:9;4059:7;4055:23;4051:32;4048:2;;;4096:1;4093;4086:12;4048:2;4135:9;4122:23;4154:30;4178:5;4154:30;:::i;4219:249::-;4288:6;4341:2;4329:9;4320:7;4316:23;4312:32;4309:2;;;4357:1;4354;4347:12;4309:2;4389:9;4383:16;4408:30;4432:5;4408:30;:::i;4473:180::-;4532:6;4585:2;4573:9;4564:7;4560:23;4556:32;4553:2;;;4601:1;4598;4591:12;4553:2;-1:-1:-1;4624:23:9;;4543:110;-1:-1:-1;4543:110:9:o;4658:1449::-;4789:6;4797;4805;4813;4866:3;4854:9;4845:7;4841:23;4837:33;4834:2;;;4883:1;4880;4873:12;4834:2;4919:9;4906:23;4896:33;;4948:2;5000;4989:9;4985:18;4972:32;5013:31;5038:5;5013:31;:::i;:::-;5063:5;-1:-1:-1;5119:2:9;5104:18;;5091:32;5142:18;5172:14;;;5169:2;;;5199:1;5196;5189:12;5169:2;5237:6;5226:9;5222:22;5212:32;;5282:7;5275:4;5271:2;5267:13;5263:27;5253:2;;5304:1;5301;5294:12;5253:2;5340;5327:16;5363:57;5379:40;5416:2;5379:40;:::i;5363:57::-;5442:3;5466:2;5461:3;5454:15;5494:2;5489:3;5485:12;5478:19;;5525:2;5521;5517:11;5573:7;5568:2;5562;5559:1;5555:10;5551:2;5547:19;5543:28;5540:41;5537:2;;;5594:1;5591;5584:12;5537:2;5616:1;5607:10;;5626:270;5640:2;5637:1;5634:9;5626:270;;;5713:3;5700:17;5765:4;5756:7;5752:18;5743:7;5740:31;5730:2;;5785:1;5782;5775:12;5730:2;5802:20;;5658:1;5651:9;;;;;5842:12;;;;5874;;5626:270;;;-1:-1:-1;5915:5:9;-1:-1:-1;;;5973:2:9;5958:18;;5945:32;;-1:-1:-1;5989:16:9;;;5986:2;;;6018:1;6015;6008:12;5986:2;;;6041:60;6093:7;6082:8;6071:9;6067:24;6041:60;:::i;:::-;6031:70;;;4824:1283;;;;;;;:::o;6112:470::-;6291:3;6329:6;6323:13;6345:53;6391:6;6386:3;6379:4;6371:6;6367:17;6345:53;:::i;:::-;6461:13;;6420:16;;;;6483:57;6461:13;6420:16;6517:4;6505:17;;6483:57;:::i;:::-;6556:20;;6299:283;-1:-1:-1;;;;6299:283:9:o;7547:383::-;7696:2;7685:9;7678:21;7659:4;7728:6;7722:13;7771:6;7766:2;7755:9;7751:18;7744:34;7787:66;7846:6;7841:2;7830:9;7826:18;7821:2;7813:6;7809:15;7787:66;:::i;:::-;7914:2;7893:15;-1:-1:-1;;7889:29:9;7874:45;;;;7921:2;7870:54;;7668:262;-1:-1:-1;;7668:262:9:o;9576:409::-;9778:2;9760:21;;;9817:2;9797:18;;;9790:30;9856:34;9851:2;9836:18;;9829:62;-1:-1:-1;;;9922:2:9;9907:18;;9900:43;9975:3;9960:19;;9750:235::o;10407:400::-;10609:2;10591:21;;;10648:2;10628:18;;;10621:30;10687:34;10682:2;10667:18;;10660:62;-1:-1:-1;;;10753:2:9;10738:18;;10731:34;10797:3;10782:19;;10581:226::o;10812:404::-;11014:2;10996:21;;;11053:2;11033:18;;;11026:30;11092:34;11087:2;11072:18;;11065:62;-1:-1:-1;;;11158:2:9;11143:18;;11136:38;11206:3;11191:19;;10986:230::o;13261:275::-;13332:2;13326:9;13397:2;13378:13;;-1:-1:-1;;13374:27:9;13362:40;;13432:18;13417:34;;13453:22;;;13414:62;13411:2;;;13479:18;;:::i;:::-;13515:2;13508:22;13306:230;;-1:-1:-1;13306:230:9:o;13541:180::-;13598:4;13631:18;13623:6;13620:30;13617:2;;;13653:18;;:::i;:::-;-1:-1:-1;13698:1:9;13694:14;13710:4;13690:25;;13607:114::o;13726:128::-;13766:3;13797:1;13793:6;13790:1;13787:13;13784:2;;;13803:18;;:::i;:::-;-1:-1:-1;13839:9:9;;13774:80::o;13859:120::-;13899:1;13925;13915:2;;13930:18;;:::i;:::-;-1:-1:-1;13964:9:9;;13905:74::o;13984:125::-;14024:4;14052:1;14049;14046:8;14043:2;;;14057:18;;:::i;:::-;-1:-1:-1;14094:9:9;;14033:76::o;14114:258::-;14186:1;14196:113;14210:6;14207:1;14204:13;14196:113;;;14286:11;;;14280:18;14267:11;;;14260:39;14232:2;14225:10;14196:113;;;14327:6;14324:1;14321:13;14318:2;;;-1:-1:-1;;14362:1:9;14344:16;;14337:27;14167:205::o;14377:380::-;14456:1;14452:12;;;;14499;;;14520:2;;14574:4;14566:6;14562:17;14552:27;;14520:2;14627;14619:6;14616:14;14596:18;14593:38;14590:2;;;14673:10;14668:3;14664:20;14661:1;14654:31;14708:4;14705:1;14698:15;14736:4;14733:1;14726:15;14590:2;;14432:325;;;:::o;14762:135::-;14801:3;-1:-1:-1;;14822:17:9;;14819:2;;;14842:18;;:::i;:::-;-1:-1:-1;14889:1:9;14878:13;;14809:88::o;14902:112::-;14934:1;14960;14950:2;;14965:18;;:::i;:::-;-1:-1:-1;14999:9:9;;14940:74::o;15019:127::-;15080:10;15075:3;15071:20;15068:1;15061:31;15111:4;15108:1;15101:15;15135:4;15132:1;15125:15;15151:127;15212:10;15207:3;15203:20;15200:1;15193:31;15243:4;15240:1;15233:15;15267:4;15264:1;15257:15;15283:127;15344:10;15339:3;15335:20;15332:1;15325:31;15375:4;15372:1;15365:15;15399:4;15396:1;15389:15;15415:127;15476:10;15471:3;15467:20;15464:1;15457:31;15507:4;15504:1;15497:15;15531:4;15528:1;15521:15;15547:131;-1:-1:-1;;;;;15622:31:9;;15612:42;;15602:2;;15668:1;15665;15658:12;15602:2;15592:86;:::o;15683:131::-;-1:-1:-1;;;;;;15757:32:9;;15747:43;;15737:2;;15804:1;15801;15794:12", "language": "Solidity", "natspec": {"details": "This contract is a light implementation of ERC721 to save on gas and bloat", "kind": "dev", "methods": {"approve(address,uint256)": {"details": "Approves an operator to handle the ERC721"}, "balanceOf(address)": {"details": "Check the balance of the provided address", "notice": "Does not throw for zero address queries"}, "constructor": {"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection"}, "getApproved(uint256)": {"details": "Checks which address is approved for given token ID"}, "getOracle()": {"details": "Gets the oracle operator address"}, "isApprovedForAll(address,address)": {"details": "Returns if the operator is allowed to manage all of the assets of owner"}, "mint(uint256,address,uint8[],bool[])": {"details": "Mints one or multiple loot items", "params": {"itemIds": "An array of item IDs obtainable from Traits.sol", "punkId": "The ID of the original CryptoPunk", "shiny": "Determines id the item being minted is shiny (array)", "to": "The address to mind the items to"}}, "name()": {"details": "Returns the name of the token", "notice": "Required for ERC721"}, "ownerOf(uint256)": {"details": "Get the owner of a specific token", "notice": "Does not throw for zero address queries"}, "safeTransferFrom(address,address,uint256)": {"details": "Transfers a token and checks that the receiver accepts ERC721 tokens"}, "safeTransferFrom(address,address,uint256,bytes)": {"details": "Defaults to the safe transfer method and discards data", "notice": "Required for ERC721 standard"}, "setApprovalForAll(address,bool)": {"details": "Approve or remove operator as an operator for the caller"}, "supportsInterface(bytes4)": {"details": "Defines the ERC165 interfaces"}, "symbol()": {"details": "Returns the symbol of the token", "notice": "Required for ERC721"}, "tokenURI(uint256)": {"details": "Returns the base URI of the token", "notice": "Required for ERC721"}, "transferFrom(address,address,uint256)": {"details": "Defaults to the safe transfer method", "notice": "Required for ERC721 interface"}}, "notice": "Much of this code is taken from the OpenZeppelin ERC721 implementation         https://docs.openzeppelin.com/contracts/4.x/api/token/erc721", "title": "Loot NFT", "version": 1}, "offset": [783, 10628], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x833B1FCE EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9904B2B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9904B2B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x141D JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x180 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x155 JUMP JUMPDEST PUSH2 0x135 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x180 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x124D JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH2 0x180 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x284 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH2 0x118 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x110F JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2F0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x30B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x320 SWAP1 PUSH2 0x15ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34C SWAP1 PUSH2 0x15ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x399 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x399 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 EQ ISZERO PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F776E657220646F6573206E6F74206E65656420746F206265206170 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C1C9BDD9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x493 JUMPI POP PUSH2 0x493 DUP2 CALLER PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E657273206F72206F70657261746F7273206D61792063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x36103A3434B990333AB731BA34B7B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD SWAP2 MLOAD DUP7 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x570CA735 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F7261636C65206F70657261746F72206D617920706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3337B936903A3434B99030B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652043727970746F50756E6B2077617320616C7265616479206D696E7465 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D7 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6974656D4964735B5D20616E64207368696E795B5D206D757374206861766520 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0xE8D0CA40E6C2DACA40D8CADCCEE8D PUSH1 0x8B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x906 JUMPI PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x7BA PUSH1 0x0 DUP6 PUSH1 0x4 SLOAD PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x7F7 JUMPI PUSH2 0x7F7 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x4 SLOAD DUP2 MLOAD DUP2 LT PUSH2 0x828 JUMPI PUSH2 0x828 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ISZERO ISZERO SWAP1 SWAP2 MSTORE PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP4 DUP4 ADD MLOAD PUSH1 0x1 SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x88A SWAP1 DUP5 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP3 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x8FC DUP4 PUSH2 0x1628 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 DUP8 SWAP2 PUSH32 0x346DED8055A0968941609C2FF8335D290F586F0F20658FAC695B54946923A1F8 SWAP2 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x964 DUP4 DUP4 DUP4 PUSH2 0x969 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520746F6B656E20646F6573206E6F742065786973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x9F5 JUMPI POP CALLER PUSH2 0x9EA DUP4 PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xA05 JUMPI POP PUSH2 0xA05 DUP2 CALLER PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F70657261746F72206973206E6F7420617070726F76656420746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A3930B739B332B9103A3434B9903A37B5B2B7 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073656E64657220646F6573206E6F74206F776E2074686520746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1B881D1BC81899481D1C985B9CD9995C9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0xB1A DUP5 DUP5 DUP5 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xB5F SWAP1 DUP5 SWAP1 PUSH2 0x15AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xB8D SWAP1 DUP5 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x320 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073656E646572206D6179206E6F7420626520746865206F7065726174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x37B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCD9 DUP5 DUP5 DUP5 PUSH2 0x969 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD PUSH2 0xD25 SWAP1 PUSH2 0x15ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD51 SWAP1 PUSH2 0x15ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD9E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD73 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD9E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD81 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDEE JUMP JUMPDEST DUP1 PUSH2 0xDCD DUP5 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDDE SWAP3 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEC3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEC0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF1D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xEF1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xDEE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xF65 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xF8F JUMPI DUP1 PUSH2 0xF79 DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP2 POP PUSH2 0xF88 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1596 JUMP JUMPDEST SWAP2 POP PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFAA PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFD4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x103F JUMPI PUSH2 0xFE9 PUSH1 0x1 DUP4 PUSH2 0x15AA JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0xA DUP7 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x1001 SWAP1 PUSH1 0x30 PUSH2 0x157E JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1016 JUMPI PUSH2 0x1016 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1038 PUSH1 0xA DUP7 PUSH2 0x1596 JUMP JUMPDEST SWAP5 POP PUSH2 0xFD8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x106D PUSH2 0x1068 DUP4 PUSH2 0x155A JUMP JUMPDEST PUSH2 0x1529 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10A1 DUP3 PUSH2 0x10C0 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1090 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDEE DUP2 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDEE DUP2 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x112D DUP2 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x113D DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x115D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1168 DUP2 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1178 DUP2 PUSH2 0x16AF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x11AA DUP2 PUSH2 0x16AF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 DUP2 ADD CALLDATALOAD PUSH2 0x11BB DUP2 PUSH2 0x16AF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1205 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x1217 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1529 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x126B DUP2 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1279 PUSH1 0x20 DUP5 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12A0 DUP2 PUSH2 0x16AF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDEE DUP2 PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDEE DUP2 PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP1 DUP7 ADD CALLDATALOAD PUSH2 0x132A DUP2 PUSH2 0x16AF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1369 PUSH2 0x1068 DUP3 PUSH2 0x155A JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP13 DUP8 DUP6 PUSH1 0x5 SHL DUP9 ADD ADD GT ISZERO PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x13BB JUMPI DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x13A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x138E JUMP JUMPDEST POP SWAP7 POP POP POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x13E2 DUP8 DUP3 DUP9 ADD PUSH2 0x1047 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1400 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1414 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x143C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520746F6B656E206D6179206E6F742062652073656E7420746F20746865 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x207A65726F2061646472657373 PUSH1 0x98 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5468652070726F766964656420746F6B656E20494420646F6573206E6F742065 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x1E1A5CDD PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5468652072656365697665722063616E6E6F7420616363657074204552433732 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3120746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1552 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1574 PUSH2 0x1699 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1591 JUMPI PUSH2 0x1591 PUSH2 0x1657 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15A5 JUMPI PUSH2 0x15A5 PUSH2 0x166D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BC PUSH2 0x1657 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15DC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15C4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xCD9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1601 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1622 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x163C JUMPI PUSH2 0x163C PUSH2 0x1657 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1652 JUMPI PUSH2 0x1652 PUSH2 0x166D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16C4 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xBF LOG1 CODECOPY 0xD2 LOG0 0xEB 0xC7 0x4B GAS CHAINID 0xD4 0x4F OR JUMPDEST GAS 0x4E 0xF9 0x5C ISZERO PUSH10 0x2E1E32294486B828D895 0xFB PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ", "pcMap": {"0": {"offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x80"}, "2": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x40"}, "4": {"fn": null, "offset": [783, 10628], "op": "MSTORE", "path": "7"}, "5": {"fn": null, "offset": [783, 10628], "op": "CALLVALUE", "path": "7"}, "6": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "7": {"fn": null, "offset": [783, 10628], "op": "ISZERO", "path": "7"}, "8": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x10"}, "11": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "12": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x0"}, "14": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [783, 10628], "op": "REVERT", "path": "7"}, "16": {"fn": null, "offset": [783, 10628], "op": "JUMPDEST", "path": "7"}, "17": {"fn": null, "offset": [783, 10628], "op": "POP", "path": "7"}, "18": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x4"}, "20": {"fn": null, "offset": [783, 10628], "op": "CALLDATASIZE", "path": "7"}, "21": {"fn": null, "offset": [783, 10628], "op": "LT", "path": "7"}, "22": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x100"}, "25": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "26": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x0"}, "28": {"fn": null, "offset": [783, 10628], "op": "CALLDATALOAD", "path": "7"}, "29": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0xE0"}, "31": {"fn": null, "offset": [783, 10628], "op": "SHR", "path": "7"}, "32": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "33": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x70A08231"}, "38": {"fn": null, "offset": [783, 10628], "op": "GT", "path": "7"}, "39": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x97"}, "42": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "43": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "44": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0xB88D4FDE"}, "49": {"fn": null, "offset": [783, 10628], "op": "GT", "path": "7"}, "50": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x66"}, "53": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "54": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "55": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0xB88D4FDE"}, "60": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "61": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x247"}, "64": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "65": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "66": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0xBFB231D2"}, "71": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "72": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x25A"}, "75": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "76": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "77": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0xC87B56DD"}, "82": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "83": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x299"}, "86": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "87": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "88": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0xE985E9C5"}, "93": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "94": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x2AC"}, "97": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "98": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x0"}, "100": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "101": {"fn": null, "offset": [783, 10628], "op": "REVERT", "path": "7"}, "102": {"fn": null, "offset": [783, 10628], "op": "JUMPDEST", "path": "7"}, "103": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "104": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x70A08231"}, "109": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "110": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x1E4"}, "113": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "114": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "115": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x833B1FCE"}, "120": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "121": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x21B"}, "124": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "125": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "126": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x95D89B41"}, "131": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "132": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x22C"}, "135": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "136": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "137": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0xA22CB465"}, "142": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "143": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x234"}, "146": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "147": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x0"}, "149": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "150": {"fn": null, "offset": [783, 10628], "op": "REVERT", "path": "7"}, "151": {"fn": null, "offset": [783, 10628], "op": "JUMPDEST", "path": "7"}, "152": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "153": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x9904B2B"}, "158": {"fn": null, "offset": [783, 10628], "op": "GT", "path": "7"}, "159": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0xD3"}, "162": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "163": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "164": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x9904B2B"}, "169": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "170": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x182"}, "173": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "174": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "175": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x23B872DD"}, "180": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "181": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x195"}, "184": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "185": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "186": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x42842E0E"}, "191": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "192": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x1A8"}, "195": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "196": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "197": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x6352211E"}, "202": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "203": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x1BB"}, "206": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "207": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x0"}, "209": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "210": {"fn": null, "offset": [783, 10628], "op": "REVERT", "path": "7"}, "211": {"fn": null, "offset": [783, 10628], "op": "JUMPDEST", "path": "7"}, "212": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "213": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x1FFC9A7"}, "218": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "219": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x105"}, "222": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "223": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "224": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x6FDDE03"}, "229": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "230": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x12D"}, "233": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "234": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "235": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x81812FC"}, "240": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "241": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x142"}, "244": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "245": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "246": {"fn": null, "offset": [783, 10628], "op": "PUSH4", "path": "7", "value": "0x95EA7B3"}, "251": {"fn": null, "offset": [783, 10628], "op": "EQ", "path": "7"}, "252": {"fn": null, "offset": [783, 10628], "op": "PUSH2", "path": "7", "value": "0x16D"}, "255": {"fn": null, "offset": [783, 10628], "op": "JUMPI", "path": "7"}, "256": {"fn": null, "offset": [783, 10628], "op": "JUMPDEST", "path": "7"}, "257": {"fn": null, "offset": [783, 10628], "op": "PUSH1", "path": "7", "value": "0x0"}, "259": {"fn": null, "offset": [783, 10628], "op": "DUP1", "path": "7"}, "260": {"first_revert": true, "fn": null, "offset": [783, 10628], "op": "REVERT", "path": "7"}, "261": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "JUMPDEST", "path": "7"}, "262": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "PUSH2", "path": "7", "value": "0x118"}, "265": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "PUSH2", "path": "7", "value": "0x113"}, "268": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "CALLDATASIZE", "path": "7"}, "269": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "PUSH1", "path": "7", "value": "0x4"}, "271": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "PUSH2", "path": "7", "value": "0x12AE"}, "274": {"fn": "Loot.supportsInterface", "jump": "i", "offset": [2852, 3196], "op": "JUMP", "path": "7"}, "275": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "JUMPDEST", "path": "7"}, "276": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "PUSH2", "path": "7", "value": "0x2BF"}, "279": {"fn": "Loot.supportsInterface", "jump": "i", "offset": [2852, 3196], "op": "JUMP", "path": "7"}, "280": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "JUMPDEST", "path": "7"}, "281": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "PUSH1", "path": "7", "value": "0x40"}, "283": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "MLOAD", "path": "7"}, "284": {"op": "SWAP1"}, "285": {"op": "ISZERO"}, "286": {"op": "ISZERO"}, "287": {"op": "DUP2"}, "288": {"op": "MSTORE"}, "289": {"op": "PUSH1", "value": "0x20"}, "291": {"op": "ADD"}, "292": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "JUMPDEST", "path": "7"}, "293": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "PUSH1", "path": "7", "value": "0x40"}, "295": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "MLOAD", "path": "7"}, "296": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "DUP1", "path": "7"}, "297": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "SWAP2", "path": "7"}, "298": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "SUB", "path": "7"}, "299": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "SWAP1", "path": "7"}, "300": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "RETURN", "path": "7"}, "301": {"fn": "Loot.name", "offset": [8229, 8327], "op": "JUMPDEST", "path": "7"}, "302": {"fn": "Loot.name", "offset": [8229, 8327], "op": "PUSH2", "path": "7", "value": "0x135"}, "305": {"fn": "Loot.name", "offset": [8229, 8327], "op": "PUSH2", "path": "7", "value": "0x311"}, "308": {"fn": "Loot.name", "jump": "i", "offset": [8229, 8327], "op": "JUMP", "path": "7"}, "309": {"fn": "Loot.name", "offset": [8229, 8327], "op": "JUMPDEST", "path": "7"}, "310": {"fn": "Loot.name", "offset": [8229, 8327], "op": "PUSH1", "path": "7", "value": "0x40"}, "312": {"fn": "Loot.name", "offset": [8229, 8327], "op": "MLOAD", "path": "7"}, "313": {"fn": "Loot.name", "offset": [8229, 8327], "op": "PUSH2", "path": "7", "value": "0x124"}, "316": {"fn": "Loot.name", "offset": [8229, 8327], "op": "SWAP2", "path": "7"}, "317": {"fn": "Loot.name", "offset": [8229, 8327], "op": "SWAP1", "path": "7"}, "318": {"fn": "Loot.name", "offset": [8229, 8327], "op": "PUSH2", "path": "7", "value": "0x141D"}, "321": {"fn": "Loot.name", "jump": "i", "offset": [8229, 8327], "op": "JUMP", "path": "7"}, "322": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "JUMPDEST", "path": "7"}, "323": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "PUSH2", "path": "7", "value": "0x155"}, "326": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "PUSH2", "path": "7", "value": "0x150"}, "329": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "CALLDATASIZE", "path": "7"}, "330": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "PUSH1", "path": "7", "value": "0x4"}, "332": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "PUSH2", "path": "7", "value": "0x12E8"}, "335": {"fn": "Loot.getApproved", "jump": "i", "offset": [7105, 7406], "op": "JUMP", "path": "7"}, "336": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "JUMPDEST", "path": "7"}, "337": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "PUSH2", "path": "7", "value": "0x3A3"}, "340": {"fn": "Loot.getApproved", "jump": "i", "offset": [7105, 7406], "op": "JUMP", "path": "7"}, "341": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "JUMPDEST", "path": "7"}, "342": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "PUSH1", "path": "7", "value": "0x40"}, "344": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "MLOAD", "path": "7"}, "345": {"op": "PUSH1", "value": "0x1"}, "347": {"op": "PUSH1", "value": "0x1"}, "349": {"op": "PUSH1", "value": "0xA0"}, "351": {"op": "SHL"}, "352": {"op": "SUB"}, "353": {"op": "SWAP1"}, "354": {"op": "SWAP2"}, "355": {"op": "AND"}, "356": {"op": "DUP2"}, "357": {"op": "MSTORE"}, "358": {"op": "PUSH1", "value": "0x20"}, "360": {"op": "ADD"}, "361": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "PUSH2", "path": "7", "value": "0x124"}, "364": {"op": "JUMP"}, "365": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "JUMPDEST", "path": "7"}, "366": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "PUSH2", "path": "7", "value": "0x180"}, "369": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "PUSH2", "path": "7", "value": "0x17B"}, "372": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "CALLDATASIZE", "path": "7"}, "373": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "PUSH1", "path": "7", "value": "0x4"}, "375": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "PUSH2", "path": "7", "value": "0x1282"}, "378": {"fn": "Loot.approve", "jump": "i", "offset": [6561, 7019], "op": "JUMP", "path": "7"}, "379": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "JUMPDEST", "path": "7"}, "380": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "PUSH2", "path": "7", "value": "0x3FC"}, "383": {"fn": "Loot.approve", "jump": "i", "offset": [6561, 7019], "op": "JUMP", "path": "7"}, "384": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "JUMPDEST", "path": "7"}, "385": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "STOP", "path": "7"}, "386": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "JUMPDEST", "path": "7"}, "387": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "PUSH2", "path": "7", "value": "0x180"}, "390": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "PUSH2", "path": "7", "value": "0x190"}, "393": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "CALLDATASIZE", "path": "7"}, "394": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "PUSH1", "path": "7", "value": "0x4"}, "396": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "PUSH2", "path": "7", "value": "0x1301"}, "399": {"fn": "Loot.mint", "jump": "i", "offset": [9416, 10626], "op": "JUMP", "path": "7"}, "400": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "JUMPDEST", "path": "7"}, "401": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "PUSH2", "path": "7", "value": "0x55F"}, "404": {"fn": "Loot.mint", "jump": "i", "offset": [9416, 10626], "op": "JUMP", "path": "7"}, "405": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "JUMPDEST", "path": "7"}, "406": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "PUSH2", "path": "7", "value": "0x180"}, "409": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "PUSH2", "path": "7", "value": "0x1A3"}, "412": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "CALLDATASIZE", "path": "7"}, "413": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "PUSH1", "path": "7", "value": "0x4"}, "415": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "PUSH2", "path": "7", "value": "0x1148"}, "418": {"fn": "Loot.transferFrom", "jump": "i", "offset": [5365, 5536], "op": "JUMP", "path": "7"}, "419": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "JUMPDEST", "path": "7"}, "420": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "PUSH2", "path": "7", "value": "0x959"}, "423": {"fn": "Loot.transferFrom", "jump": "i", "offset": [5365, 5536], "op": "JUMP", "path": "7"}, "424": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "JUMPDEST", "path": "7"}, "425": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "PUSH2", "path": "7", "value": "0x180"}, "428": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "PUSH2", "path": "7", "value": "0x1B6"}, "431": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "CALLDATASIZE", "path": "7"}, "432": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "PUSH1", "path": "7", "value": "0x4"}, "434": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "PUSH2", "path": "7", "value": "0x1148"}, "437": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [3914, 4913], "op": "JUMP", "path": "7"}, "438": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "JUMPDEST", "path": "7"}, "439": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "PUSH2", "path": "7", "value": "0x969"}, "442": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [3914, 4913], "op": "JUMP", "path": "7"}, "443": {"fn": "Loot.ownerOf", "offset": [3615, 3811], "op": "JUMPDEST", "path": "7"}, "444": {"fn": "Loot.ownerOf", "offset": [3615, 3811], "op": "PUSH2", "path": "7", "value": "0x155"}, "447": {"fn": "Loot.ownerOf", "offset": [3615, 3811], "op": "PUSH2", "path": "7", "value": "0x1C9"}, "450": {"fn": "Loot.ownerOf", "offset": [3615, 3811], "op": "CALLDATASIZE", "path": "7"}, "451": {"fn": "Loot.ownerOf", "offset": [3615, 3811], "op": "PUSH1", "path": "7", "value": "0x4"}, "453": {"fn": "Loot.ownerOf", "offset": [3615, 3811], "op": "PUSH2", "path": "7", "value": "0x12E8"}, "456": {"fn": "Loot.ownerOf", "jump": "i", "offset": [3615, 3811], "op": "JUMP", "path": "7"}, "457": {"fn": "Loot.ownerOf", "offset": [3615, 3811], "op": "JUMPDEST", "path": "7"}, "458": {"fn": "Loot.ownerOf", "offset": [3727, 3734], "op": "PUSH1", "path": "7", "value": "0x0"}, "460": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "461": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP2", "path": "7"}, "462": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "MSTORE", "path": "7"}, "463": {"fn": "Loot.ownerOf", "offset": [3766, 3773], "op": "PUSH1", "path": "7", "value": "0x5"}, "465": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "PUSH1", "path": "7", "value": "0x20"}, "467": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "MSTORE", "path": "7"}, "468": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "PUSH1", "path": "7", "value": "0x40"}, "470": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "471": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "KECCAK256", "path": "7"}, "472": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SLOAD", "path": "7"}, "473": {"op": "PUSH1", "value": "0x1"}, "475": {"op": "PUSH1", "value": "0x1"}, "477": {"op": "PUSH1", "value": "0xA0"}, "479": {"op": "SHL"}, "480": {"op": "SUB"}, "481": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "AND", "path": "7"}, "482": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "483": {"fn": "Loot.ownerOf", "offset": [3615, 3811], "op": "JUMP", "path": "7"}, "484": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "JUMPDEST", "path": "7"}, "485": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "PUSH2", "path": "7", "value": "0x20D"}, "488": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "PUSH2", "path": "7", "value": "0x1F2"}, "491": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "CALLDATASIZE", "path": "7"}, "492": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "PUSH1", "path": "7", "value": "0x4"}, "494": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "PUSH2", "path": "7", "value": "0x10D5"}, "497": {"fn": "Loot.balanceOf", "jump": "i", "offset": [3327, 3492], "op": "JUMP", "path": "7"}, "498": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "JUMPDEST", "path": "7"}, "499": {"op": "PUSH1", "value": "0x1"}, "501": {"op": "PUSH1", "value": "0x1"}, "503": {"op": "PUSH1", "value": "0xA0"}, "505": {"op": "SHL"}, "506": {"op": "SUB"}, "507": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "AND", "path": "7", "statement": 0}, "508": {"fn": "Loot.balanceOf", "offset": [3439, 3446], "op": "PUSH1", "path": "7", "value": "0x0"}, "510": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "SWAP1", "path": "7"}, "511": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "DUP2", "path": "7"}, "512": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "MSTORE", "path": "7"}, "513": {"fn": "Loot.balanceOf", "offset": [3469, 3478], "op": "PUSH1", "path": "7", "value": "0x6"}, "515": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "PUSH1", "path": "7", "value": "0x20"}, "517": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "MSTORE", "path": "7"}, "518": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "PUSH1", "path": "7", "value": "0x40"}, "520": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "SWAP1", "path": "7"}, "521": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "KECCAK256", "path": "7"}, "522": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "SLOAD", "path": "7"}, "523": {"fn": "Loot.balanceOf", "offset": [3469, 3485], "op": "SWAP1", "path": "7"}, "524": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "JUMP", "path": "7"}, "525": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "JUMPDEST", "path": "7"}, "526": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "PUSH1", "path": "7", "value": "0x40"}, "528": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "MLOAD", "path": "7"}, "529": {"op": "SWAP1"}, "530": {"op": "DUP2"}, "531": {"op": "MSTORE"}, "532": {"op": "PUSH1", "value": "0x20"}, "534": {"op": "ADD"}, "535": {"fn": "Loot.balanceOf", "offset": [3327, 3492], "op": "PUSH2", "path": "7", "value": "0x124"}, "538": {"op": "JUMP"}, "539": {"fn": "Loot.getOracle", "offset": [2697, 2788], "op": "JUMPDEST", "path": "7"}, "540": {"fn": "Loot.getOracle", "offset": [2773, 2780], "op": "PUSH1", "path": "7", "statement": 1, "value": "0x3"}, "542": {"fn": "Loot.getOracle", "offset": [2773, 2780], "op": "SLOAD", "path": "7"}, "543": {"op": "PUSH1", "value": "0x1"}, "545": {"op": "PUSH1", "value": "0x1"}, "547": {"op": "PUSH1", "value": "0xA0"}, "549": {"op": "SHL"}, "550": {"op": "SUB"}, "551": {"fn": "Loot.getOracle", "offset": [2773, 2780], "op": "AND", "path": "7"}, "552": {"fn": "Loot.getOracle", "offset": [2697, 2788], "op": "PUSH2", "path": "7", "value": "0x155"}, "555": {"fn": "Loot.getOracle", "offset": [2697, 2788], "op": "JUMP", "path": "7"}, "556": {"fn": "Loot.symbol", "offset": [8428, 8530], "op": "JUMPDEST", "path": "7"}, "557": {"fn": "Loot.symbol", "offset": [8428, 8530], "op": "PUSH2", "path": "7", "value": "0x135"}, "560": {"fn": "Loot.symbol", "offset": [8428, 8530], "op": "PUSH2", "path": "7", "value": "0xBEF"}, "563": {"fn": "Loot.symbol", "jump": "i", "offset": [8428, 8530], "op": "JUMP", "path": "7"}, "564": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "JUMPDEST", "path": "7"}, "565": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "PUSH2", "path": "7", "value": "0x180"}, "568": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "PUSH2", "path": "7", "value": "0x242"}, "571": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "CALLDATASIZE", "path": "7"}, "572": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "PUSH1", "path": "7", "value": "0x4"}, "574": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "PUSH2", "path": "7", "value": "0x124D"}, "577": {"fn": "Loot.setApprovalForAll", "jump": "i", "offset": [7497, 7818], "op": "JUMP", "path": "7"}, "578": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "JUMPDEST", "path": "7"}, "579": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "PUSH2", "path": "7", "value": "0xBFE"}, "582": {"fn": "Loot.setApprovalForAll", "jump": "i", "offset": [7497, 7818], "op": "JUMP", "path": "7"}, "583": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "JUMPDEST", "path": "7"}, "584": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "PUSH2", "path": "7", "value": "0x180"}, "587": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "PUSH2", "path": "7", "value": "0x255"}, "590": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "CALLDATASIZE", "path": "7"}, "591": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "PUSH1", "path": "7", "value": "0x4"}, "593": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "PUSH2", "path": "7", "value": "0x1189"}, "596": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [5046, 5249], "op": "JUMP", "path": "7"}, "597": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "JUMPDEST", "path": "7"}, "598": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "PUSH2", "path": "7", "value": "0xCCE"}, "601": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [5046, 5249], "op": "JUMP", "path": "7"}, "602": {"offset": [1837, 1878], "op": "JUMPDEST", "path": "7"}, "603": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH2", "path": "7", "value": "0x284"}, "606": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH2", "path": "7", "value": "0x268"}, "609": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "CALLDATASIZE", "path": "7"}, "610": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH1", "path": "7", "value": "0x4"}, "612": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH2", "path": "7", "value": "0x12E8"}, "615": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [1837, 1878], "op": "JUMP", "path": "7"}, "616": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "JUMPDEST", "path": "7"}, "617": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH1", "path": "7", "value": "0xA"}, "619": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH1", "path": "7", "value": "0x20"}, "621": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "MSTORE", "path": "7"}, "622": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH1", "path": "7", "value": "0x0"}, "624": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "SWAP1", "path": "7"}, "625": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "DUP2", "path": "7"}, "626": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "MSTORE", "path": "7"}, "627": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH1", "path": "7", "value": "0x40"}, "629": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "SWAP1", "path": "7"}, "630": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "KECCAK256", "path": "7"}, "631": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "DUP1", "path": "7"}, "632": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "SLOAD", "path": "7"}, "633": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH1", "path": "7", "value": "0x1"}, "635": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "SWAP1", "path": "7"}, "636": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "SWAP2", "path": "7"}, "637": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "ADD", "path": "7"}, "638": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "SLOAD", "path": "7"}, "639": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH1", "path": "7", "value": "0xFF"}, "641": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "AND", "path": "7"}, "642": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "DUP3", "path": "7"}, "643": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "JUMP", "path": "7"}, "644": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "JUMPDEST", "path": "7"}, "645": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "PUSH1", "path": "7", "value": "0x40"}, "647": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "DUP1", "path": "7"}, "648": {"fn": "Loot.safeTransferFrom", "offset": [1837, 1878], "op": "MLOAD", "path": "7"}, "649": {"op": "SWAP3"}, "650": {"op": "DUP4"}, "651": {"op": "MSTORE"}, "652": {"op": "SWAP1"}, "653": {"op": "ISZERO"}, "654": {"op": "ISZERO"}, "655": {"op": "PUSH1", "value": "0x20"}, "657": {"op": "DUP4"}, "658": {"op": "ADD"}, "659": {"op": "MSTORE"}, "660": {"op": "ADD"}, "661": {"offset": [1837, 1878], "op": "PUSH2", "path": "7", "value": "0x124"}, "664": {"op": "JUMP"}, "665": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "JUMPDEST", "path": "7"}, "666": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "PUSH2", "path": "7", "value": "0x135"}, "669": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "PUSH2", "path": "7", "value": "0x2A7"}, "672": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "CALLDATASIZE", "path": "7"}, "673": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "PUSH1", "path": "7", "value": "0x4"}, "675": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "PUSH2", "path": "7", "value": "0x12E8"}, "678": {"fn": "Loot.tokenURI", "jump": "i", "offset": [8633, 9085], "op": "JUMP", "path": "7"}, "679": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "JUMPDEST", "path": "7"}, "680": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "PUSH2", "path": "7", "value": "0xCDF"}, "683": {"fn": "Loot.tokenURI", "jump": "i", "offset": [8633, 9085], "op": "JUMP", "path": "7"}, "684": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "JUMPDEST", "path": "7"}, "685": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "PUSH2", "path": "7", "value": "0x118"}, "688": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "PUSH2", "path": "7", "value": "0x2BA"}, "691": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "CALLDATASIZE", "path": "7"}, "692": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "PUSH1", "path": "7", "value": "0x4"}, "694": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "PUSH2", "path": "7", "value": "0x110F"}, "697": {"fn": "Loot.isApprovedForAll", "jump": "i", "offset": [7924, 8130], "op": "JUMP", "path": "7"}, "698": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "JUMPDEST", "path": "7"}, "699": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "PUSH2", "path": "7", "value": "0xDF5"}, "702": {"fn": "Loot.isApprovedForAll", "jump": "i", "offset": [7924, 8130], "op": "JUMP", "path": "7"}, "703": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "JUMPDEST", "path": "7"}, "704": {"fn": "Loot.supportsInterface", "offset": [2994, 2998], "op": "PUSH1", "path": "7", "value": "0x0"}, "706": {"op": "PUSH1", "value": "0x1"}, "708": {"op": "PUSH1", "value": "0x1"}, "710": {"op": "PUSH1", "value": "0xE0"}, "712": {"op": "SHL"}, "713": {"op": "SUB"}, "714": {"op": "NOT"}, "715": {"fn": "Loot.supportsInterface", "offset": [3033, 3073], "op": "DUP3", "path": "7", "statement": 2}, "716": {"fn": "Loot.supportsInterface", "offset": [3033, 3073], "op": "AND", "path": "7"}, "717": {"op": "PUSH4", "value": "0x80AC58CD"}, "722": {"op": "PUSH1", "value": "0xE0"}, "724": {"op": "SHL"}, "725": {"fn": "Loot.supportsInterface", "offset": [3033, 3073], "op": "EQ", "path": "7"}, "726": {"fn": "Loot.supportsInterface", "offset": [3033, 3073], "op": "DUP1", "path": "7"}, "727": {"fn": "Loot.supportsInterface", "offset": [3033, 3137], "op": "PUSH2", "path": "7", "value": "0x2F0"}, "730": {"fn": "Loot.supportsInterface", "offset": [3033, 3137], "op": "JUMPI", "path": "7"}, "731": {"op": "POP"}, "732": {"op": "PUSH1", "value": "0x1"}, "734": {"op": "PUSH1", "value": "0x1"}, "736": {"op": "PUSH1", "value": "0xE0"}, "738": {"op": "SHL"}, "739": {"op": "SUB"}, "740": {"op": "NOT"}, "741": {"fn": "Loot.supportsInterface", "offset": [3089, 3137], "op": "DUP3", "path": "7"}, "742": {"fn": "Loot.supportsInterface", "offset": [3089, 3137], "op": "AND", "path": "7"}, "743": {"op": "PUSH4", "value": "0x5B5E139F"}, "748": {"op": "PUSH1", "value": "0xE0"}, "750": {"op": "SHL"}, "751": {"fn": "Loot.supportsInterface", "offset": [3089, 3137], "op": "EQ", "path": "7"}, "752": {"fn": "Loot.supportsInterface", "offset": [3033, 3137], "op": "JUMPDEST", "path": "7"}, "753": {"fn": "Loot.supportsInterface", "offset": [3033, 3189], "op": "DUP1", "path": "7"}, "754": {"fn": "Loot.supportsInterface", "offset": [3033, 3189], "op": "PUSH2", "path": "7", "value": "0x30B"}, "757": {"fn": "Loot.supportsInterface", "offset": [3033, 3189], "op": "JUMPI", "path": "7"}, "758": {"op": "POP"}, "759": {"op": "PUSH4", "value": "0x1FFC9A7"}, "764": {"op": "PUSH1", "value": "0xE0"}, "766": {"op": "SHL"}, "767": {"op": "PUSH1", "value": "0x1"}, "769": {"op": "PUSH1", "value": "0x1"}, "771": {"op": "PUSH1", "value": "0xE0"}, "773": {"op": "SHL"}, "774": {"op": "SUB"}, "775": {"op": "NOT"}, "776": {"fn": "ERC165.supportsInterface", "offset": [871, 911], "op": "DUP4", "path": "5", "statement": 3}, "777": {"fn": "ERC165.supportsInterface", "offset": [871, 911], "op": "AND", "path": "5"}, "778": {"fn": "ERC165.supportsInterface", "offset": [871, 911], "op": "EQ", "path": "5"}, "779": {"fn": "Loot.supportsInterface", "offset": [3153, 3189], "op": "JUMPDEST", "path": "7"}, "780": {"fn": "Loot.supportsInterface", "offset": [3014, 3189], "op": "SWAP3", "path": "7"}, "781": {"fn": "Loot.supportsInterface", "offset": [2852, 3196], "op": "SWAP2", "path": "7"}, "782": {"op": "POP"}, "783": {"op": "POP"}, "784": {"fn": "Loot.supportsInterface", "jump": "o", "offset": [2852, 3196], "op": "JUMP", "path": "7"}, "785": {"fn": "Loot.name", "offset": [8229, 8327], "op": "JUMPDEST", "path": "7"}, "786": {"fn": "Loot.name", "offset": [8283, 8296], "op": "PUSH1", "path": "7", "value": "0x60"}, "788": {"fn": "Loot.name", "offset": [8315, 8320], "op": "PUSH1", "path": "7", "statement": 4, "value": "0x0"}, "790": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "791": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SLOAD", "path": "7"}, "792": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x320"}, "795": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "796": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x15ED"}, "799": {"fn": "Loot.name", "jump": "i", "offset": [8308, 8320], "op": "JUMP", "path": "7"}, "800": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMPDEST", "path": "7"}, "801": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "802": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x1F"}, "804": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "805": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x20"}, "807": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "808": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP2", "path": "7"}, "809": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DIV", "path": "7"}, "810": {"fn": "Loot.name", "offset": [8308, 8320], "op": "MUL", "path": "7"}, "811": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x20"}, "813": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "814": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x40"}, "816": {"fn": "Loot.name", "offset": [8308, 8320], "op": "MLOAD", "path": "7"}, "817": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "818": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP2", "path": "7"}, "819": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "820": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x40"}, "822": {"fn": "Loot.name", "offset": [8308, 8320], "op": "MSTORE", "path": "7"}, "823": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "824": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP3", "path": "7"}, "825": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP2", "path": "7"}, "826": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "827": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP2", "path": "7"}, "828": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP2", "path": "7"}, "829": {"fn": "Loot.name", "offset": [8308, 8320], "op": "MSTORE", "path": "7"}, "830": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x20"}, "832": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "833": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP3", "path": "7"}, "834": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "835": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SLOAD", "path": "7"}, "836": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x34C"}, "839": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "840": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x15ED"}, "843": {"fn": "Loot.name", "jump": "i", "offset": [8308, 8320], "op": "JUMP", "path": "7"}, "844": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMPDEST", "path": "7"}, "845": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "846": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ISZERO", "path": "7"}, "847": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x399"}, "850": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMPI", "path": "7"}, "851": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "852": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x1F"}, "854": {"fn": "Loot.name", "offset": [8308, 8320], "op": "LT", "path": "7"}, "855": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x36E"}, "858": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMPI", "path": "7"}, "859": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x100"}, "862": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "863": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP4", "path": "7"}, "864": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SLOAD", "path": "7"}, "865": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DIV", "path": "7"}, "866": {"fn": "Loot.name", "offset": [8308, 8320], "op": "MUL", "path": "7"}, "867": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP4", "path": "7"}, "868": {"fn": "Loot.name", "offset": [8308, 8320], "op": "MSTORE", "path": "7"}, "869": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP2", "path": "7"}, "870": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x20"}, "872": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "873": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP2", "path": "7"}, "874": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x399"}, "877": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMP", "path": "7"}, "878": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMPDEST", "path": "7"}, "879": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP3", "path": "7"}, "880": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "881": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP2", "path": "7"}, "882": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "883": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x0"}, "885": {"fn": "Loot.name", "offset": [8308, 8320], "op": "MSTORE", "path": "7"}, "886": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x20"}, "888": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x0"}, "890": {"fn": "Loot.name", "offset": [8308, 8320], "op": "KECCAK256", "path": "7"}, "891": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "892": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMPDEST", "path": "7"}, "893": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP2", "path": "7"}, "894": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SLOAD", "path": "7"}, "895": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP2", "path": "7"}, "896": {"fn": "Loot.name", "offset": [8308, 8320], "op": "MSTORE", "path": "7"}, "897": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "898": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x1"}, "900": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "901": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "902": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x20"}, "904": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "905": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP1", "path": "7"}, "906": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP4", "path": "7"}, "907": {"fn": "Loot.name", "offset": [8308, 8320], "op": "GT", "path": "7"}, "908": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH2", "path": "7", "value": "0x37C"}, "911": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMPI", "path": "7"}, "912": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP3", "path": "7"}, "913": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "914": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SUB", "path": "7"}, "915": {"fn": "Loot.name", "offset": [8308, 8320], "op": "PUSH1", "path": "7", "value": "0x1F"}, "917": {"fn": "Loot.name", "offset": [8308, 8320], "op": "AND", "path": "7"}, "918": {"fn": "Loot.name", "offset": [8308, 8320], "op": "DUP3", "path": "7"}, "919": {"fn": "Loot.name", "offset": [8308, 8320], "op": "ADD", "path": "7"}, "920": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP2", "path": "7"}, "921": {"fn": "Loot.name", "offset": [8308, 8320], "op": "JUMPDEST", "path": "7"}, "922": {"fn": "Loot.name", "offset": [8308, 8320], "op": "POP", "path": "7"}, "923": {"fn": "Loot.name", "offset": [8308, 8320], "op": "POP", "path": "7"}, "924": {"fn": "Loot.name", "offset": [8308, 8320], "op": "POP", "path": "7"}, "925": {"fn": "Loot.name", "offset": [8308, 8320], "op": "POP", "path": "7"}, "926": {"fn": "Loot.name", "offset": [8308, 8320], "op": "POP", "path": "7"}, "927": {"fn": "Loot.name", "offset": [8308, 8320], "op": "SWAP1", "path": "7"}, "928": {"fn": "Loot.name", "offset": [8308, 8320], "op": "POP", "path": "7"}, "929": {"fn": "Loot.name", "offset": [8229, 8327], "op": "SWAP1", "path": "7"}, "930": {"fn": "Loot.name", "jump": "o", "offset": [8229, 8327], "op": "JUMP", "path": "7"}, "931": {"fn": "Loot.getApproved", "offset": [7105, 7406], "op": "JUMPDEST", "path": "7"}, "932": {"fn": "Loot.getApproved", "offset": [7221, 7228], "op": "PUSH1", "path": "7", "value": "0x0"}, "934": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "DUP2", "path": "7", "statement": 5}, "935": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "DUP2", "path": "7"}, "936": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "MSTORE", "path": "7"}, "937": {"fn": "Loot.getApproved", "offset": [7265, 7272], "op": "PUSH1", "path": "7", "value": "0x5"}, "939": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "PUSH1", "path": "7", "value": "0x20"}, "941": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "MSTORE", "path": "7"}, "942": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "PUSH1", "path": "7", "value": "0x40"}, "944": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "DUP2", "path": "7"}, "945": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "KECCAK256", "path": "7"}, "946": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "SLOAD", "path": "7"}, "947": {"op": "PUSH1", "value": "0x1"}, "949": {"op": "PUSH1", "value": "0x1"}, "951": {"op": "PUSH1", "value": "0xA0"}, "953": {"op": "SHL"}, "954": {"op": "SUB"}, "955": {"fn": "Loot.getApproved", "offset": [7265, 7281], "op": "AND", "path": "7"}, "956": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "PUSH2", "path": "7", "value": "0x3E0"}, "959": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "JUMPI", "path": "7"}, "960": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "PUSH1", "path": "7", "value": "0x40"}, "962": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "MLOAD", "path": "7"}, "963": {"op": "PUSH3", "value": "0x461BCD"}, "967": {"op": "PUSH1", "value": "0xE5"}, "969": {"op": "SHL"}, "970": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "DUP2", "path": "7"}, "971": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "MSTORE", "path": "7"}, "972": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "PUSH1", "path": "7", "value": "0x4"}, "974": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "ADD", "path": "7"}, "975": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "978": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "SWAP1", "path": "7"}, "979": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "PUSH2", "path": "7", "value": "0x149D"}, "982": {"fn": "Loot.getApproved", "jump": "i", "offset": [7244, 7357], "op": "JUMP", "path": "7"}, "983": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "JUMPDEST", "path": "7"}, "984": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "PUSH1", "path": "7", "value": "0x40"}, "986": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "MLOAD", "path": "7"}, "987": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "DUP1", "path": "7"}, "988": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "SWAP2", "path": "7"}, "989": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "SUB", "path": "7"}, "990": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "SWAP1", "path": "7"}, "991": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "REVERT", "optimizer_revert": true, "path": "7"}, "992": {"fn": "Loot.getApproved", "offset": [7244, 7357], "op": "JUMPDEST", "path": "7"}, "993": {"op": "POP"}, "994": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "PUSH1", "path": "7", "statement": 6, "value": "0x0"}, "996": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "SWAP1", "path": "7"}, "997": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "DUP2", "path": "7"}, "998": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "MSTORE", "path": "7"}, "999": {"fn": "Loot.getApproved", "offset": [7375, 7390], "op": "PUSH1", "path": "7", "value": "0x7"}, "1001": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "PUSH1", "path": "7", "value": "0x20"}, "1003": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "MSTORE", "path": "7"}, "1004": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "PUSH1", "path": "7", "value": "0x40"}, "1006": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "SWAP1", "path": "7"}, "1007": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "KECCAK256", "path": "7"}, "1008": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "SLOAD", "path": "7"}, "1009": {"op": "PUSH1", "value": "0x1"}, "1011": {"op": "PUSH1", "value": "0x1"}, "1013": {"op": "PUSH1", "value": "0xA0"}, "1015": {"op": "SHL"}, "1016": {"op": "SUB"}, "1017": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "AND", "path": "7"}, "1018": {"fn": "Loot.getApproved", "offset": [7375, 7399], "op": "SWAP1", "path": "7"}, "1019": {"fn": "Loot.getApproved", "jump": "o", "offset": [7105, 7406], "op": "JUMP", "path": "7"}, "1020": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "JUMPDEST", "path": "7"}, "1021": {"fn": "Loot.approve", "offset": [6641, 6654], "op": "PUSH1", "path": "7", "value": "0x0"}, "1023": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP2", "path": "7"}, "1024": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP2", "path": "7"}, "1025": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "MSTORE", "path": "7"}, "1026": {"fn": "Loot.ownerOf", "offset": [3766, 3773], "op": "PUSH1", "path": "7", "value": "0x5"}, "1028": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "PUSH1", "path": "7", "value": "0x20"}, "1030": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "MSTORE", "path": "7"}, "1031": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "PUSH1", "path": "7", "value": "0x40"}, "1033": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "1034": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "KECCAK256", "path": "7"}, "1035": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SLOAD", "path": "7"}, "1036": {"op": "PUSH1", "value": "0x1"}, "1038": {"op": "PUSH1", "value": "0x1"}, "1040": {"op": "PUSH1", "value": "0xA0"}, "1042": {"op": "SHL"}, "1043": {"op": "SUB"}, "1044": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "1045": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP2", "path": "7"}, "1046": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "AND", "path": "7"}, "1047": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "1048": {"fn": "Loot.approve", "offset": [6696, 6707], "op": "DUP4", "path": "7", "statement": 7}, "1049": {"fn": "Loot.approve", "offset": [6696, 6707], "op": "AND", "path": "7"}, "1050": {"fn": "Loot.approve", "offset": [6696, 6707], "op": "DUP2", "path": "7"}, "1051": {"fn": "Loot.approve", "offset": [6696, 6707], "op": "EQ", "path": "7"}, "1052": {"branch": 52, "fn": "Loot.approve", "offset": [6696, 6707], "op": "ISZERO", "path": "7"}, "1053": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "PUSH2", "path": "7", "value": "0x477"}, "1056": {"branch": 52, "fn": "Loot.approve", "offset": [6688, 6750], "op": "JUMPI", "path": "7"}, "1057": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "PUSH1", "path": "7", "value": "0x40"}, "1059": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "MLOAD", "path": "7"}, "1060": {"op": "PUSH3", "value": "0x461BCD"}, "1064": {"op": "PUSH1", "value": "0xE5"}, "1066": {"op": "SHL"}, "1067": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "DUP2", "path": "7"}, "1068": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "MSTORE", "path": "7"}, "1069": {"op": "PUSH1", "value": "0x20"}, "1071": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "PUSH1", "path": "7", "value": "0x4"}, "1073": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "DUP3", "path": "7"}, "1074": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "ADD", "path": "7"}, "1075": {"op": "MSTORE"}, "1076": {"op": "PUSH1", "value": "0x26"}, "1078": {"op": "PUSH1", "value": "0x24"}, "1080": {"op": "DUP3"}, "1081": {"op": "ADD"}, "1082": {"op": "MSTORE"}, "1083": {"op": "PUSH32", "value": "0x546865206F776E657220646F6573206E6F74206E65656420746F206265206170"}, "1116": {"op": "PUSH1", "value": "0x44"}, "1118": {"op": "DUP3"}, "1119": {"op": "ADD"}, "1120": {"op": "MSTORE"}, "1121": {"op": "PUSH6", "value": "0x1C1C9BDD9959"}, "1128": {"op": "PUSH1", "value": "0xD2"}, "1130": {"op": "SHL"}, "1131": {"op": "PUSH1", "value": "0x64"}, "1133": {"op": "DUP3"}, "1134": {"op": "ADD"}, "1135": {"op": "MSTORE"}, "1136": {"op": "PUSH1", "value": "0x84"}, "1138": {"op": "ADD"}, "1139": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "1142": {"op": "JUMP"}, "1143": {"fn": "Loot.approve", "offset": [6688, 6750], "op": "JUMPDEST", "path": "7"}, "1144": {"fn": "Loot.approve", "offset": [6782, 6792], "op": "CALLER", "path": "7", "statement": 8}, "1145": {"op": "PUSH1", "value": "0x1"}, "1147": {"op": "PUSH1", "value": "0x1"}, "1149": {"op": "PUSH1", "value": "0xA0"}, "1151": {"op": "SHL"}, "1152": {"op": "SUB"}, "1153": {"fn": "Loot.approve", "offset": [6782, 6801], "op": "DUP3", "path": "7"}, "1154": {"fn": "Loot.approve", "offset": [6782, 6801], "op": "AND", "path": "7"}, "1155": {"fn": "Loot.approve", "offset": [6782, 6801], "op": "EQ", "path": "7"}, "1156": {"branch": 53, "fn": "Loot.approve", "offset": [6782, 6801], "op": "DUP1", "path": "7"}, "1157": {"fn": "Loot.approve", "offset": [6782, 6840], "op": "PUSH2", "path": "7", "value": "0x493"}, "1160": {"branch": 53, "fn": "Loot.approve", "offset": [6782, 6840], "op": "JUMPI", "path": "7"}, "1161": {"fn": "Loot.approve", "offset": [6782, 6840], "op": "POP", "path": "7"}, "1162": {"fn": "Loot.approve", "offset": [6805, 6840], "op": "PUSH2", "path": "7", "value": "0x493"}, "1165": {"fn": "Loot.approve", "offset": [6822, 6827], "op": "DUP2", "path": "7"}, "1166": {"fn": "Loot.approve", "offset": [6829, 6839], "op": "CALLER", "path": "7"}, "1167": {"fn": "Loot.approve", "offset": [6805, 6821], "op": "PUSH2", "path": "7", "value": "0xDF5"}, "1170": {"fn": "Loot.approve", "jump": "i", "offset": [6805, 6840], "op": "JUMP", "path": "7"}, "1171": {"branch": 54, "fn": "Loot.approve", "offset": [6805, 6840], "op": "JUMPDEST", "path": "7"}, "1172": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "PUSH2", "path": "7", "value": "0x4F7"}, "1175": {"branch": 54, "fn": "Loot.approve", "offset": [6761, 6913], "op": "JUMPI", "path": "7"}, "1176": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "PUSH1", "path": "7", "value": "0x40"}, "1178": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "MLOAD", "path": "7"}, "1179": {"op": "PUSH3", "value": "0x461BCD"}, "1183": {"op": "PUSH1", "value": "0xE5"}, "1185": {"op": "SHL"}, "1186": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "DUP2", "path": "7"}, "1187": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "MSTORE", "path": "7"}, "1188": {"op": "PUSH1", "value": "0x20"}, "1190": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "PUSH1", "path": "7", "value": "0x4"}, "1192": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "DUP3", "path": "7"}, "1193": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "ADD", "path": "7"}, "1194": {"op": "MSTORE"}, "1195": {"op": "PUSH1", "value": "0x2F"}, "1197": {"op": "PUSH1", "value": "0x24"}, "1199": {"op": "DUP3"}, "1200": {"op": "ADD"}, "1201": {"op": "MSTORE"}, "1202": {"op": "PUSH32", "value": "0x4F6E6C79206F776E657273206F72206F70657261746F7273206D61792063616C"}, "1235": {"op": "PUSH1", "value": "0x44"}, "1237": {"op": "DUP3"}, "1238": {"op": "ADD"}, "1239": {"op": "MSTORE"}, "1240": {"op": "PUSH15", "value": "0x36103A3434B990333AB731BA34B7B7"}, "1256": {"op": "PUSH1", "value": "0x89"}, "1258": {"op": "SHL"}, "1259": {"op": "PUSH1", "value": "0x64"}, "1261": {"op": "DUP3"}, "1262": {"op": "ADD"}, "1263": {"op": "MSTORE"}, "1264": {"op": "PUSH1", "value": "0x84"}, "1266": {"op": "ADD"}, "1267": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "1270": {"op": "JUMP"}, "1271": {"fn": "Loot.approve", "offset": [6761, 6913], "op": "JUMPDEST", "path": "7"}, "1272": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "PUSH1", "path": "7", "statement": 9, "value": "0x0"}, "1274": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "DUP3", "path": "7"}, "1275": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "DUP2", "path": "7"}, "1276": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "MSTORE", "path": "7"}, "1277": {"fn": "Loot.approve", "offset": [6924, 6939], "op": "PUSH1", "path": "7", "value": "0x7"}, "1279": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "PUSH1", "path": "7", "value": "0x20"}, "1281": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "SWAP1", "path": "7"}, "1282": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "DUP2", "path": "7"}, "1283": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "MSTORE", "path": "7"}, "1284": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "PUSH1", "path": "7", "value": "0x40"}, "1286": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "DUP1", "path": "7"}, "1287": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "DUP4", "path": "7"}, "1288": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "KECCAK256", "path": "7"}, "1289": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "DUP1", "path": "7"}, "1290": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "SLOAD", "path": "7"}, "1291": {"op": "PUSH1", "value": "0x1"}, "1293": {"op": "PUSH1", "value": "0x1"}, "1295": {"op": "PUSH1", "value": "0xA0"}, "1297": {"op": "SHL"}, "1298": {"op": "SUB"}, "1299": {"op": "NOT"}, "1300": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "AND", "path": "7"}, "1301": {"op": "PUSH1", "value": "0x1"}, "1303": {"op": "PUSH1", "value": "0x1"}, "1305": {"op": "PUSH1", "value": "0xA0"}, "1307": {"op": "SHL"}, "1308": {"op": "SUB"}, "1309": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "DUP9", "path": "7"}, "1310": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "DUP2", "path": "7"}, "1311": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "AND", "path": "7"}, "1312": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "SWAP2", "path": "7"}, "1313": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "DUP3", "path": "7"}, "1314": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "OR", "path": "7"}, "1315": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "SWAP1", "path": "7"}, "1316": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "SWAP3", "path": "7"}, "1317": {"fn": "Loot.approve", "offset": [6924, 6953], "op": "SSTORE", "path": "7"}, "1318": {"fn": "Loot.ownerOf", "offset": [3766, 3773], "op": "PUSH1", "path": "7", "value": "0x5"}, "1320": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "1321": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP4", "path": "7"}, "1322": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "MSTORE", "path": "7"}, "1323": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP2", "path": "7"}, "1324": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP5", "path": "7"}, "1325": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "KECCAK256", "path": "7"}, "1326": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SLOAD", "path": "7"}, "1327": {"fn": "Loot.approve", "offset": [6968, 7012], "op": "SWAP2", "path": "7", "statement": 10}, "1328": {"fn": "Loot.approve", "offset": [6968, 7012], "op": "MLOAD", "path": "7"}, "1329": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "DUP7", "path": "7"}, "1330": {"fn": "Loot.approve", "offset": [6924, 6948], "op": "SWAP5", "path": "7"}, "1331": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP3", "path": "7"}, "1332": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "1333": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP2", "path": "7"}, "1334": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "AND", "path": "7"}, "1335": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP2", "path": "7"}, "1336": {"fn": "Loot.approve", "offset": [6968, 7012], "op": "PUSH32", "path": "7", "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"}, "1369": {"fn": "Loot.approve", "offset": [6968, 7012], "op": "SWAP2", "path": "7"}, "1370": {"fn": "Loot.approve", "offset": [6968, 7012], "op": "LOG4", "path": "7"}, "1371": {"fn": "Loot.approve", "offset": [6631, 7019], "op": "POP", "path": "7"}, "1372": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "POP", "path": "7"}, "1373": {"fn": "Loot.approve", "offset": [6561, 7019], "op": "POP", "path": "7"}, "1374": {"fn": "Loot.approve", "jump": "o", "offset": [6561, 7019], "op": "JUMP", "path": "7"}, "1375": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "JUMPDEST", "path": "7"}, "1376": {"offset": [2520, 2527], "op": "PUSH1", "path": "7", "value": "0x3"}, "1378": {"fn": "Loot.mint", "offset": [2520, 2527], "op": "PUSH1", "path": "7", "value": "0x0"}, "1380": {"fn": "Loot.mint", "offset": [2520, 2527], "op": "SWAP1", "path": "7"}, "1381": {"fn": "Loot.mint", "offset": [2520, 2527], "op": "SLOAD", "path": "7"}, "1382": {"fn": "Loot.mint", "offset": [2520, 2527], "op": "SWAP1", "path": "7"}, "1383": {"fn": "Loot.mint", "offset": [2520, 2527], "op": "PUSH2", "path": "7", "value": "0x100"}, "1386": {"fn": "Loot.mint", "offset": [2520, 2527], "op": "EXP", "path": "7"}, "1387": {"fn": "Loot.mint", "offset": [2520, 2527], "op": "SWAP1", "path": "7"}, "1388": {"fn": "Loot.mint", "offset": [2520, 2527], "op": "DIV", "path": "7"}, "1389": {"op": "PUSH1", "value": "0x1"}, "1391": {"op": "PUSH1", "value": "0x1"}, "1393": {"op": "PUSH1", "value": "0xA0"}, "1395": {"op": "SHL"}, "1396": {"op": "SUB"}, "1397": {"offset": [2520, 2527], "op": "AND", "path": "7"}, "1398": {"op": "PUSH1", "value": "0x1"}, "1400": {"op": "PUSH1", "value": "0x1"}, "1402": {"op": "PUSH1", "value": "0xA0"}, "1404": {"op": "SHL"}, "1405": {"op": "SUB"}, "1406": {"offset": [2520, 2536], "op": "AND", "path": "7"}, "1407": {"fn": "Loot.mint", "offset": [2520, 2536], "op": "PUSH4", "path": "7", "value": "0x570CA735"}, "1412": {"offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x40"}, "1414": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "MLOAD", "path": "7"}, "1415": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP2", "path": "7"}, "1416": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH4", "path": "7", "value": "0xFFFFFFFF"}, "1421": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "AND", "path": "7"}, "1422": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0xE0"}, "1424": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "SHL", "path": "7"}, "1425": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP2", "path": "7"}, "1426": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "MSTORE", "path": "7"}, "1427": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x4"}, "1429": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "ADD", "path": "7"}, "1430": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x20"}, "1432": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x40"}, "1434": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "MLOAD", "path": "7"}, "1435": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP1", "path": "7"}, "1436": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP4", "path": "7"}, "1437": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "SUB", "path": "7"}, "1438": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP2", "path": "7"}, "1439": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP7", "path": "7"}, "1440": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP1", "path": "7"}, "1441": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "EXTCODESIZE", "path": "7"}, "1442": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "ISZERO", "path": "7"}, "1443": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP1", "path": "7"}, "1444": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "ISZERO", "path": "7"}, "1445": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH2", "path": "7", "value": "0x5AD"}, "1448": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "JUMPI", "path": "7"}, "1449": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x0"}, "1451": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP1", "path": "7"}, "1452": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "REVERT", "path": "7"}, "1453": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "JUMPDEST", "path": "7"}, "1454": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "POP", "path": "7"}, "1455": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "GAS", "path": "7"}, "1456": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "STATICCALL", "path": "7"}, "1457": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "ISZERO", "path": "7"}, "1458": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP1", "path": "7"}, "1459": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "ISZERO", "path": "7"}, "1460": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH2", "path": "7", "value": "0x5C1"}, "1463": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "JUMPI", "path": "7"}, "1464": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "RETURNDATASIZE", "path": "7"}, "1465": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x0"}, "1467": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP1", "path": "7"}, "1468": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "RETURNDATACOPY", "path": "7"}, "1469": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "RETURNDATASIZE", "path": "7"}, "1470": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x0"}, "1472": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "REVERT", "path": "7"}, "1473": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "JUMPDEST", "path": "7"}, "1474": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "POP", "path": "7"}, "1475": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "POP", "path": "7"}, "1476": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "POP", "path": "7"}, "1477": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "POP", "path": "7"}, "1478": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x40"}, "1480": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "MLOAD", "path": "7"}, "1481": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "RETURNDATASIZE", "path": "7"}, "1482": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x1F"}, "1484": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "NOT", "path": "7"}, "1485": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x1F"}, "1487": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP3", "path": "7"}, "1488": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "ADD", "path": "7"}, "1489": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "AND", "path": "7"}, "1490": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP3", "path": "7"}, "1491": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "ADD", "path": "7"}, "1492": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP1", "path": "7"}, "1493": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH1", "path": "7", "value": "0x40"}, "1495": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "MSTORE", "path": "7"}, "1496": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "POP", "path": "7"}, "1497": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "DUP2", "path": "7"}, "1498": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "ADD", "path": "7"}, "1499": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "SWAP1", "path": "7"}, "1500": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH2", "path": "7", "value": "0x5E5"}, "1503": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "SWAP2", "path": "7"}, "1504": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "SWAP1", "path": "7"}, "1505": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "PUSH2", "path": "7", "value": "0x10F2"}, "1508": {"fn": "Loot.mint", "jump": "i", "offset": [2520, 2538], "op": "JUMP", "path": "7"}, "1509": {"fn": "Loot.mint", "offset": [2520, 2538], "op": "JUMPDEST", "path": "7"}, "1510": {"op": "PUSH1", "value": "0x1"}, "1512": {"op": "PUSH1", "value": "0x1"}, "1514": {"op": "PUSH1", "value": "0xA0"}, "1516": {"op": "SHL"}, "1517": {"op": "SUB"}, "1518": {"offset": [2506, 2538], "op": "AND", "path": "7"}, "1519": {"offset": [2506, 2516], "op": "CALLER", "path": "7"}, "1520": {"op": "PUSH1", "value": "0x1"}, "1522": {"op": "PUSH1", "value": "0x1"}, "1524": {"op": "PUSH1", "value": "0xA0"}, "1526": {"op": "SHL"}, "1527": {"op": "SUB"}, "1528": {"offset": [2506, 2538], "op": "AND", "path": "7"}, "1529": {"branch": 55, "fn": "Loot.mint", "offset": [2506, 2538], "op": "EQ", "path": "7"}, "1530": {"offset": [2485, 2612], "op": "PUSH2", "path": "7", "value": "0x65E"}, "1533": {"branch": 55, "offset": [2485, 2612], "op": "JUMPI", "path": "7"}, "1534": {"fn": "Loot.mint", "offset": [2485, 2612], "op": "PUSH1", "path": "7", "value": "0x40"}, "1536": {"fn": "Loot.mint", "offset": [2485, 2612], "op": "MLOAD", "path": "7"}, "1537": {"op": "PUSH3", "value": "0x461BCD"}, "1541": {"op": "PUSH1", "value": "0xE5"}, "1543": {"op": "SHL"}, "1544": {"offset": [2485, 2612], "op": "DUP2", "path": "7"}, "1545": {"fn": "Loot.mint", "offset": [2485, 2612], "op": "MSTORE", "path": "7"}, "1546": {"op": "PUSH1", "value": "0x20"}, "1548": {"offset": [2485, 2612], "op": "PUSH1", "path": "7", "value": "0x4"}, "1550": {"fn": "Loot.mint", "offset": [2485, 2612], "op": "DUP3", "path": "7"}, "1551": {"fn": "Loot.mint", "offset": [2485, 2612], "op": "ADD", "path": "7"}, "1552": {"op": "MSTORE"}, "1553": {"op": "PUSH1", "value": "0x30"}, "1555": {"op": "PUSH1", "value": "0x24"}, "1557": {"op": "DUP3"}, "1558": {"op": "ADD"}, "1559": {"op": "MSTORE"}, "1560": {"op": "PUSH32", "value": "0x4F6E6C7920746865206F7261636C65206F70657261746F72206D617920706572"}, "1593": {"op": "PUSH1", "value": "0x44"}, "1595": {"op": "DUP3"}, "1596": {"op": "ADD"}, "1597": {"op": "MSTORE"}, "1598": {"op": "PUSH16", "value": "0x3337B936903A3434B99030B1BA34B7B7"}, "1615": {"op": "PUSH1", "value": "0x81"}, "1617": {"op": "SHL"}, "1618": {"op": "PUSH1", "value": "0x64"}, "1620": {"op": "DUP3"}, "1621": {"op": "ADD"}, "1622": {"op": "MSTORE"}, "1623": {"op": "PUSH1", "value": "0x84"}, "1625": {"op": "ADD"}, "1626": {"offset": [2485, 2612], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "1629": {"op": "JUMP"}, "1630": {"offset": [2485, 2612], "op": "JUMPDEST", "path": "7"}, "1631": {"op": "PUSH1", "value": "0x1"}, "1633": {"op": "PUSH1", "value": "0x1"}, "1635": {"op": "PUSH1", "value": "0xA0"}, "1637": {"op": "SHL"}, "1638": {"op": "SUB"}, "1639": {"fn": "Loot.mint", "offset": [9598, 9614], "op": "DUP4", "path": "7", "statement": 11}, "1640": {"branch": 56, "fn": "Loot.mint", "offset": [9598, 9614], "op": "AND", "path": "7"}, "1641": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "PUSH2", "path": "7", "value": "0x684"}, "1644": {"branch": 56, "fn": "Loot.mint", "offset": [9577, 9685], "op": "JUMPI", "path": "7"}, "1645": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "PUSH1", "path": "7", "value": "0x40"}, "1647": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "MLOAD", "path": "7"}, "1648": {"op": "PUSH3", "value": "0x461BCD"}, "1652": {"op": "PUSH1", "value": "0xE5"}, "1654": {"op": "SHL"}, "1655": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "DUP2", "path": "7"}, "1656": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "MSTORE", "path": "7"}, "1657": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "PUSH1", "path": "7", "value": "0x4"}, "1659": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "ADD", "path": "7"}, "1660": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "1663": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "SWAP1", "path": "7"}, "1664": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "PUSH2", "path": "7", "value": "0x1450"}, "1667": {"fn": "Loot.mint", "jump": "i", "offset": [9577, 9685], "op": "JUMP", "path": "7"}, "1668": {"fn": "Loot.mint", "offset": [9577, 9685], "op": "JUMPDEST", "path": "7"}, "1669": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "PUSH1", "path": "7", "statement": 12, "value": "0x0"}, "1671": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "DUP5", "path": "7"}, "1672": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "DUP2", "path": "7"}, "1673": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "MSTORE", "path": "7"}, "1674": {"fn": "Loot.mint", "offset": [9704, 9715], "op": "PUSH1", "path": "7", "value": "0x9"}, "1676": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "PUSH1", "path": "7", "value": "0x20"}, "1678": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "MSTORE", "path": "7"}, "1679": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "PUSH1", "path": "7", "value": "0x40"}, "1681": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "SWAP1", "path": "7"}, "1682": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "KECCAK256", "path": "7"}, "1683": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "SLOAD", "path": "7"}, "1684": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "PUSH1", "path": "7", "value": "0xFF"}, "1686": {"fn": "Loot.mint", "offset": [9704, 9723], "op": "AND", "path": "7"}, "1687": {"branch": 57, "fn": "Loot.mint", "offset": [9703, 9723], "op": "ISZERO", "path": "7"}, "1688": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "PUSH2", "path": "7", "value": "0x6ED"}, "1691": {"branch": 57, "fn": "Loot.mint", "offset": [9695, 9761], "op": "JUMPI", "path": "7"}, "1692": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "PUSH1", "path": "7", "value": "0x40"}, "1694": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "MLOAD", "path": "7"}, "1695": {"op": "PUSH3", "value": "0x461BCD"}, "1699": {"op": "PUSH1", "value": "0xE5"}, "1701": {"op": "SHL"}, "1702": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "DUP2", "path": "7"}, "1703": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "MSTORE", "path": "7"}, "1704": {"op": "PUSH1", "value": "0x20"}, "1706": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "PUSH1", "path": "7", "value": "0x4"}, "1708": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "DUP3", "path": "7"}, "1709": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "ADD", "path": "7"}, "1710": {"op": "MSTORE"}, "1711": {"op": "PUSH1", "value": "0x21"}, "1713": {"op": "PUSH1", "value": "0x24"}, "1715": {"op": "DUP3"}, "1716": {"op": "ADD"}, "1717": {"op": "MSTORE"}, "1718": {"op": "PUSH32", "value": "0x5468652043727970746F50756E6B2077617320616C7265616479206D696E7465"}, "1751": {"op": "PUSH1", "value": "0x44"}, "1753": {"op": "DUP3"}, "1754": {"op": "ADD"}, "1755": {"op": "MSTORE"}, "1756": {"op": "PUSH1", "value": "0x19"}, "1758": {"op": "PUSH1", "value": "0xFA"}, "1760": {"op": "SHL"}, "1761": {"op": "PUSH1", "value": "0x64"}, "1763": {"op": "DUP3"}, "1764": {"op": "ADD"}, "1765": {"op": "MSTORE"}, "1766": {"op": "PUSH1", "value": "0x84"}, "1768": {"op": "ADD"}, "1769": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "1772": {"op": "JUMP"}, "1773": {"fn": "Loot.mint", "offset": [9695, 9761], "op": "JUMPDEST", "path": "7"}, "1774": {"fn": "Loot.mint", "offset": [9810, 9815], "op": "DUP1", "path": "7", "statement": 13}, "1775": {"fn": "Loot.mint", "offset": [9810, 9822], "op": "MLOAD", "path": "7"}, "1776": {"fn": "Loot.mint", "offset": [9792, 9799], "op": "DUP3", "path": "7"}, "1777": {"fn": "Loot.mint", "offset": [9792, 9806], "op": "MLOAD", "path": "7"}, "1778": {"branch": 58, "fn": "Loot.mint", "offset": [9792, 9822], "op": "EQ", "path": "7"}, "1779": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "PUSH2", "path": "7", "value": "0x756"}, "1782": {"branch": 58, "fn": "Loot.mint", "offset": [9771, 9895], "op": "JUMPI", "path": "7"}, "1783": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "PUSH1", "path": "7", "value": "0x40"}, "1785": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "MLOAD", "path": "7"}, "1786": {"op": "PUSH3", "value": "0x461BCD"}, "1790": {"op": "PUSH1", "value": "0xE5"}, "1792": {"op": "SHL"}, "1793": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "DUP2", "path": "7"}, "1794": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "MSTORE", "path": "7"}, "1795": {"op": "PUSH1", "value": "0x20"}, "1797": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "PUSH1", "path": "7", "value": "0x4"}, "1799": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "DUP3", "path": "7"}, "1800": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "ADD", "path": "7"}, "1801": {"op": "MSTORE"}, "1802": {"op": "PUSH1", "value": "0x2F"}, "1804": {"op": "PUSH1", "value": "0x24"}, "1806": {"op": "DUP3"}, "1807": {"op": "ADD"}, "1808": {"op": "MSTORE"}, "1809": {"op": "PUSH32", "value": "0x6974656D4964735B5D20616E64207368696E795B5D206D757374206861766520"}, "1842": {"op": "PUSH1", "value": "0x44"}, "1844": {"op": "DUP3"}, "1845": {"op": "ADD"}, "1846": {"op": "MSTORE"}, "1847": {"op": "PUSH15", "value": "0xE8D0CA40E6C2DACA40D8CADCCEE8D"}, "1863": {"op": "PUSH1", "value": "0x8B"}, "1865": {"op": "SHL"}, "1866": {"op": "PUSH1", "value": "0x64"}, "1868": {"op": "DUP3"}, "1869": {"op": "ADD"}, "1870": {"op": "MSTORE"}, "1871": {"op": "PUSH1", "value": "0x84"}, "1873": {"op": "ADD"}, "1874": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "1877": {"op": "JUMP"}, "1878": {"fn": "Loot.mint", "offset": [9771, 9895], "op": "JUMPDEST", "path": "7"}, "1879": {"fn": "Loot.mint", "offset": [9906, 9922], "op": "PUSH1", "path": "7", "value": "0x0"}, "1881": {"fn": "Loot.mint", "offset": [9934, 9941], "op": "DUP3", "path": "7"}, "1882": {"fn": "Loot.mint", "offset": [9934, 9948], "op": "MLOAD", "path": "7"}, "1883": {"fn": "Loot.mint", "offset": [9925, 9931], "op": "PUSH1", "path": "7", "value": "0x4"}, "1885": {"fn": "Loot.mint", "offset": [9925, 9931], "op": "SLOAD", "path": "7"}, "1886": {"fn": "Loot.mint", "offset": [9925, 9948], "op": "PUSH2", "path": "7", "value": "0x767"}, "1889": {"fn": "Loot.mint", "offset": [9925, 9948], "op": "SWAP2", "path": "7"}, "1890": {"fn": "Loot.mint", "offset": [9925, 9948], "op": "SWAP1", "path": "7"}, "1891": {"fn": "Loot.mint", "offset": [9925, 9948], "op": "PUSH2", "path": "7", "value": "0x157E"}, "1894": {"fn": "Loot.mint", "jump": "i", "offset": [9925, 9948], "op": "JUMP", "path": "7"}, "1895": {"fn": "Loot.mint", "offset": [9925, 9948], "op": "JUMPDEST", "path": "7"}, "1896": {"fn": "Loot.mint", "offset": [9906, 9948], "op": "SWAP1", "path": "7"}, "1897": {"fn": "Loot.mint", "offset": [9906, 9948], "op": "POP", "path": "7"}, "1898": {"fn": "Loot.mint", "offset": [9959, 10544], "op": "JUMPDEST", "path": "7"}, "1899": {"fn": "Loot.mint", "offset": [9981, 9989], "op": "DUP1", "path": "7"}, "1900": {"fn": "Loot.mint", "offset": [9972, 9978], "op": "PUSH1", "path": "7", "value": "0x4"}, "1902": {"fn": "Loot.mint", "offset": [9972, 9978], "op": "SLOAD", "path": "7"}, "1903": {"fn": "Loot.mint", "offset": [9972, 9989], "op": "LT", "path": "7"}, "1904": {"fn": "Loot.mint", "offset": [9959, 10544], "op": "ISZERO", "path": "7"}, "1905": {"fn": "Loot.mint", "offset": [9959, 10544], "op": "PUSH2", "path": "7", "value": "0x906"}, "1908": {"fn": "Loot.mint", "offset": [9959, 10544], "op": "JUMPI", "path": "7"}, "1909": {"fn": "Loot.mint", "offset": [10048, 10054], "op": "PUSH1", "path": "7", "statement": 14, "value": "0x4"}, "1911": {"fn": "Loot.mint", "offset": [10048, 10054], "op": "SLOAD", "path": "7"}, "1912": {"fn": "Loot.mint", "offset": [10067, 10068], "op": "PUSH1", "path": "7", "value": "0x0"}, "1914": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "SWAP1", "path": "7"}, "1915": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "DUP2", "path": "7"}, "1916": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "MSTORE", "path": "7"}, "1917": {"fn": "Loot.mint", "offset": [10040, 10047], "op": "PUSH1", "path": "7", "value": "0x5"}, "1919": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "PUSH1", "path": "7", "value": "0x20"}, "1921": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "MSTORE", "path": "7"}, "1922": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "PUSH1", "path": "7", "value": "0x40"}, "1924": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "SWAP1", "path": "7"}, "1925": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "KECCAK256", "path": "7"}, "1926": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "SLOAD", "path": "7"}, "1927": {"op": "PUSH1", "value": "0x1"}, "1929": {"op": "PUSH1", "value": "0x1"}, "1931": {"op": "PUSH1", "value": "0xA0"}, "1933": {"op": "SHL"}, "1934": {"op": "SUB"}, "1935": {"fn": "Loot.mint", "offset": [10040, 10055], "op": "AND", "path": "7"}, "1936": {"branch": 59, "fn": "Loot.mint", "offset": [10040, 10069], "op": "ISZERO", "path": "7"}, "1937": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "PUSH2", "path": "7", "value": "0x7AC"}, "1940": {"branch": 59, "fn": "Loot.mint", "offset": [10015, 10139], "op": "JUMPI", "path": "7"}, "1941": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "PUSH1", "path": "7", "value": "0x40"}, "1943": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "MLOAD", "path": "7"}, "1944": {"op": "PUSH3", "value": "0x461BCD"}, "1948": {"op": "PUSH1", "value": "0xE5"}, "1950": {"op": "SHL"}, "1951": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "DUP2", "path": "7"}, "1952": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "MSTORE", "path": "7"}, "1953": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "PUSH1", "path": "7", "value": "0x4"}, "1955": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "ADD", "path": "7"}, "1956": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "1959": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "SWAP1", "path": "7"}, "1960": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "PUSH2", "path": "7", "value": "0x149D"}, "1963": {"fn": "Loot.mint", "jump": "i", "offset": [10015, 10139], "op": "JUMP", "path": "7"}, "1964": {"fn": "Loot.mint", "offset": [10015, 10139], "op": "JUMPDEST", "path": "7"}, "1965": {"fn": "Loot.mint", "offset": [10178, 10224], "op": "PUSH2", "path": "7", "statement": 15, "value": "0x7BA"}, "1968": {"fn": "Loot.mint", "offset": [10209, 10210], "op": "PUSH1", "path": "7", "value": "0x0"}, "1970": {"fn": "Loot.mint", "offset": [10213, 10215], "op": "DUP6", "path": "7"}, "1971": {"fn": "Loot.mint", "offset": [10217, 10223], "op": "PUSH1", "path": "7", "value": "0x4"}, "1973": {"fn": "Loot.mint", "offset": [10217, 10223], "op": "SLOAD", "path": "7"}, "1974": {"fn": "Loot.mint", "offset": [10178, 10200], "op": "PUSH2", "path": "7", "value": "0xE23"}, "1977": {"fn": "Loot.mint", "jump": "i", "offset": [10178, 10224], "op": "JUMP", "path": "7"}, "1978": {"branch": 60, "fn": "Loot.mint", "offset": [10178, 10224], "op": "JUMPDEST", "path": "7"}, "1979": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "PUSH2", "path": "7", "value": "0x7D6"}, "1982": {"branch": 60, "fn": "Loot.mint", "offset": [10153, 10298], "op": "JUMPI", "path": "7"}, "1983": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "PUSH1", "path": "7", "value": "0x40"}, "1985": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "MLOAD", "path": "7"}, "1986": {"op": "PUSH3", "value": "0x461BCD"}, "1990": {"op": "PUSH1", "value": "0xE5"}, "1992": {"op": "SHL"}, "1993": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "DUP2", "path": "7"}, "1994": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "MSTORE", "path": "7"}, "1995": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "PUSH1", "path": "7", "value": "0x4"}, "1997": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "ADD", "path": "7"}, "1998": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "2001": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "SWAP1", "path": "7"}, "2002": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "PUSH2", "path": "7", "value": "0x14E1"}, "2005": {"fn": "Loot.mint", "jump": "i", "offset": [10153, 10298], "op": "JUMP", "path": "7"}, "2006": {"fn": "Loot.mint", "offset": [10153, 10298], "op": "JUMPDEST", "path": "7"}, "2007": {"fn": "Loot.mint", "offset": [10313, 10325], "op": "PUSH1", "path": "7", "value": "0x0"}, "2009": {"fn": "Loot.mint", "offset": [10328, 10335], "op": "DUP4", "path": "7"}, "2010": {"fn": "Loot.mint", "offset": [10347, 10353], "op": "PUSH1", "path": "7", "value": "0x4"}, "2012": {"fn": "Loot.mint", "offset": [10347, 10353], "op": "SLOAD", "path": "7"}, "2013": {"fn": "Loot.mint", "offset": [10336, 10344], "op": "DUP4", "path": "7"}, "2014": {"fn": "Loot.mint", "offset": [10336, 10353], "op": "PUSH2", "path": "7", "value": "0x7E7"}, "2017": {"fn": "Loot.mint", "offset": [10336, 10353], "op": "SWAP2", "path": "7"}, "2018": {"fn": "Loot.mint", "offset": [10336, 10353], "op": "SWAP1", "path": "7"}, "2019": {"fn": "Loot.mint", "offset": [10336, 10353], "op": "PUSH2", "path": "7", "value": "0x15AA"}, "2022": {"fn": "Loot.mint", "jump": "i", "offset": [10336, 10353], "op": "JUMP", "path": "7"}, "2023": {"fn": "Loot.mint", "offset": [10336, 10353], "op": "JUMPDEST", "path": "7"}, "2024": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "DUP2", "path": "7"}, "2025": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "MLOAD", "path": "7"}, "2026": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "DUP2", "path": "7"}, "2027": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "LT", "path": "7"}, "2028": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "PUSH2", "path": "7", "value": "0x7F7"}, "2031": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "JUMPI", "path": "7"}, "2032": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "PUSH2", "path": "7", "value": "0x7F7"}, "2035": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "PUSH2", "path": "7", "value": "0x1683"}, "2038": {"fn": "Loot.mint", "jump": "i", "offset": [10328, 10354], "op": "JUMP", "path": "7"}, "2039": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "JUMPDEST", "path": "7"}, "2040": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "PUSH1", "path": "7", "value": "0x20"}, "2042": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "MUL", "path": "7"}, "2043": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "PUSH1", "path": "7", "value": "0x20"}, "2045": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "ADD", "path": "7"}, "2046": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "ADD", "path": "7"}, "2047": {"fn": "Loot.mint", "offset": [10328, 10354], "op": "MLOAD", "path": "7"}, "2048": {"fn": "Loot.mint", "offset": [10313, 10354], "op": "SWAP1", "path": "7"}, "2049": {"fn": "Loot.mint", "offset": [10313, 10354], "op": "POP", "path": "7"}, "2050": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "PUSH1", "path": "7", "statement": 16, "value": "0x40"}, "2052": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "MLOAD", "path": "7"}, "2053": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "DUP1", "path": "7"}, "2054": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "PUSH1", "path": "7", "value": "0x40"}, "2056": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "ADD", "path": "7"}, "2057": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "PUSH1", "path": "7", "value": "0x40"}, "2059": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "MSTORE", "path": "7"}, "2060": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "DUP1", "path": "7"}, "2061": {"fn": "Loot.mint", "offset": [10393, 10399], "op": "PUSH1", "path": "7", "value": "0x4"}, "2063": {"fn": "Loot.mint", "offset": [10393, 10399], "op": "SLOAD", "path": "7"}, "2064": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "DUP2", "path": "7"}, "2065": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "MSTORE", "path": "7"}, "2066": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "PUSH1", "path": "7", "value": "0x20"}, "2068": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "ADD", "path": "7"}, "2069": {"fn": "Loot.mint", "offset": [10401, 10406], "op": "DUP5", "path": "7"}, "2070": {"fn": "Loot.mint", "offset": [10407, 10413], "op": "PUSH1", "path": "7", "value": "0x4"}, "2072": {"fn": "Loot.mint", "offset": [10407, 10413], "op": "SLOAD", "path": "7"}, "2073": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "DUP2", "path": "7"}, "2074": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "MLOAD", "path": "7"}, "2075": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "DUP2", "path": "7"}, "2076": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "LT", "path": "7"}, "2077": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "PUSH2", "path": "7", "value": "0x828"}, "2080": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "JUMPI", "path": "7"}, "2081": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "PUSH2", "path": "7", "value": "0x828"}, "2084": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "PUSH2", "path": "7", "value": "0x1683"}, "2087": {"fn": "Loot.mint", "jump": "i", "offset": [10401, 10414], "op": "JUMP", "path": "7"}, "2088": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "JUMPDEST", "path": "7"}, "2089": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "PUSH1", "path": "7", "value": "0x20"}, "2091": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "SWAP1", "path": "7"}, "2092": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "DUP2", "path": "7"}, "2093": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "MUL", "path": "7"}, "2094": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "SWAP2", "path": "7"}, "2095": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "SWAP1", "path": "7"}, "2096": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "SWAP2", "path": "7"}, "2097": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "ADD", "path": "7"}, "2098": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "DUP2", "path": "7"}, "2099": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "ADD", "path": "7"}, "2100": {"fn": "Loot.mint", "offset": [10401, 10414], "op": "MLOAD", "path": "7"}, "2101": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "ISZERO", "path": "7"}, "2102": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "ISZERO", "path": "7"}, "2103": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "SWAP1", "path": "7"}, "2104": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "SWAP2", "path": "7"}, "2105": {"fn": "Loot.mint", "offset": [10384, 10415], "op": "MSTORE", "path": "7"}, "2106": {"fn": "Loot.mint", "offset": [10374, 10380], "op": "PUSH1", "path": "7", "value": "0x4"}, "2108": {"fn": "Loot.mint", "offset": [10374, 10380], "op": "SLOAD", "path": "7"}, "2109": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "PUSH1", "path": "7", "value": "0x0"}, "2111": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "SWAP1", "path": "7"}, "2112": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "DUP2", "path": "7"}, "2113": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "MSTORE", "path": "7"}, "2114": {"fn": "Loot.mint", "offset": [10368, 10373], "op": "PUSH1", "path": "7", "value": "0xA"}, "2116": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "DUP3", "path": "7"}, "2117": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "MSTORE", "path": "7"}, "2118": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "PUSH1", "path": "7", "value": "0x40"}, "2120": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "DUP1", "path": "7"}, "2121": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "DUP3", "path": "7"}, "2122": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "KECCAK256", "path": "7"}, "2123": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "DUP5", "path": "7"}, "2124": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "MLOAD", "path": "7"}, "2125": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "DUP2", "path": "7"}, "2126": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SSTORE", "path": "7"}, "2127": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SWAP4", "path": "7"}, "2128": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "DUP4", "path": "7"}, "2129": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "ADD", "path": "7"}, "2130": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "MLOAD", "path": "7"}, "2131": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "PUSH1", "path": "7", "value": "0x1"}, "2133": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SWAP5", "path": "7"}, "2134": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "DUP6", "path": "7"}, "2135": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "ADD", "path": "7"}, "2136": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "DUP1", "path": "7"}, "2137": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SLOAD", "path": "7"}, "2138": {"op": "PUSH1", "value": "0xFF"}, "2140": {"op": "NOT"}, "2141": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "AND", "path": "7"}, "2142": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SWAP2", "path": "7"}, "2143": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "ISZERO", "path": "7"}, "2144": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "ISZERO", "path": "7"}, "2145": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SWAP2", "path": "7"}, "2146": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SWAP1", "path": "7"}, "2147": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SWAP2", "path": "7"}, "2148": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "OR", "path": "7"}, "2149": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SWAP1", "path": "7"}, "2150": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SSTORE", "path": "7"}, "2151": {"op": "PUSH1", "value": "0x1"}, "2153": {"op": "PUSH1", "value": "0x1"}, "2155": {"op": "PUSH1", "value": "0xA0"}, "2157": {"op": "SHL"}, "2158": {"op": "SUB"}, "2159": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "DUP10", "path": "7", "statement": 17}, "2160": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "AND", "path": "7"}, "2161": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "DUP3", "path": "7"}, "2162": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "MSTORE", "path": "7"}, "2163": {"fn": "Loot.mint", "offset": [10429, 10438], "op": "PUSH1", "path": "7", "value": "0x6"}, "2165": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "SWAP1", "path": "7"}, "2166": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "SWAP3", "path": "7"}, "2167": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "MSTORE", "path": "7"}, "2168": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "SWAP1", "path": "7"}, "2169": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "DUP2", "path": "7"}, "2170": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "KECCAK256", "path": "7"}, "2171": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "DUP1", "path": "7"}, "2172": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "SLOAD", "path": "7"}, "2173": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "SWAP1", "path": "7"}, "2174": {"fn": "Loot.mint", "offset": [10429, 10442], "op": "SWAP2", "path": "7"}, "2175": {"fn": "Loot.mint", "offset": [10368, 10381], "op": "SWAP1", "path": "7"}, "2176": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "PUSH2", "path": "7", "value": "0x88A"}, "2179": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "SWAP1", "path": "7"}, "2180": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "DUP5", "path": "7"}, "2181": {"fn": "Loot.mint", "offset": [10368, 10415], "op": "SWAP1", "path": "7"}, "2182": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "PUSH2", "path": "7", "value": "0x157E"}, "2185": {"fn": "Loot.mint", "jump": "i", "offset": [10429, 10447], "op": "JUMP", "path": "7"}, "2186": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "JUMPDEST", "path": "7"}, "2187": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "SWAP1", "path": "7"}, "2188": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "SWAP2", "path": "7"}, "2189": {"fn": "Loot.mint", "offset": [10429, 10447], "op": "SSTORE", "path": "7"}, "2190": {"op": "POP"}, "2191": {"op": "POP"}, "2192": {"fn": "Loot.mint", "offset": [10469, 10475], "op": "PUSH1", "path": "7", "statement": 18, "value": "0x4"}, "2194": {"fn": "Loot.mint", "offset": [10469, 10475], "op": "DUP1", "path": "7"}, "2195": {"fn": "Loot.mint", "offset": [10469, 10475], "op": "SLOAD", "path": "7"}, "2196": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "PUSH1", "path": "7", "value": "0x0"}, "2198": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "SWAP1", "path": "7"}, "2199": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "DUP2", "path": "7"}, "2200": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "MSTORE", "path": "7"}, "2201": {"fn": "Loot.mint", "offset": [10461, 10468], "op": "PUSH1", "path": "7", "value": "0x5"}, "2203": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "PUSH1", "path": "7", "value": "0x20"}, "2205": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "MSTORE", "path": "7"}, "2206": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "PUSH1", "path": "7", "value": "0x40"}, "2208": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "DUP1", "path": "7"}, "2209": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "DUP3", "path": "7"}, "2210": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "KECCAK256", "path": "7"}, "2211": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "DUP1", "path": "7"}, "2212": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "SLOAD", "path": "7"}, "2213": {"op": "PUSH1", "value": "0x1"}, "2215": {"op": "PUSH1", "value": "0x1"}, "2217": {"op": "PUSH1", "value": "0xA0"}, "2219": {"op": "SHL"}, "2220": {"op": "SUB"}, "2221": {"op": "NOT"}, "2222": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "AND", "path": "7"}, "2223": {"op": "PUSH1", "value": "0x1"}, "2225": {"op": "PUSH1", "value": "0x1"}, "2227": {"op": "PUSH1", "value": "0xA0"}, "2229": {"op": "SHL"}, "2230": {"op": "SUB"}, "2231": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "DUP11", "path": "7"}, "2232": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "AND", "path": "7"}, "2233": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "SWAP1", "path": "7"}, "2234": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "DUP2", "path": "7"}, "2235": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "OR", "path": "7"}, "2236": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "SWAP1", "path": "7"}, "2237": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "SWAP2", "path": "7"}, "2238": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "SSTORE", "path": "7"}, "2239": {"fn": "Loot.mint", "offset": [10526, 10532], "op": "SWAP3", "path": "7", "statement": 19}, "2240": {"fn": "Loot.mint", "offset": [10526, 10532], "op": "SLOAD", "path": "7"}, "2241": {"fn": "Loot.mint", "offset": [10501, 10533], "op": "SWAP1", "path": "7"}, "2242": {"fn": "Loot.mint", "offset": [10501, 10533], "op": "MLOAD", "path": "7"}, "2243": {"fn": "Loot.mint", "offset": [10526, 10532], "op": "SWAP1", "path": "7"}, "2244": {"fn": "Loot.mint", "offset": [10526, 10532], "op": "SWAP3", "path": "7"}, "2245": {"fn": "Loot.mint", "offset": [10461, 10481], "op": "SWAP2", "path": "7"}, "2246": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "SWAP1", "path": "7"}, "2247": {"fn": "Loot.mint", "offset": [10501, 10533], "op": "PUSH32", "path": "7", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "2280": {"fn": "Loot.mint", "offset": [10501, 10533], "op": "SWAP1", "path": "7"}, "2281": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "DUP3", "path": "7"}, "2282": {"fn": "Loot.mint", "offset": [10461, 10476], "op": "SWAP1", "path": "7"}, "2283": {"fn": "Loot.mint", "offset": [10501, 10533], "op": "LOG4", "path": "7"}, "2284": {"op": "POP"}, "2285": {"fn": "Loot.mint", "offset": [9991, 9997], "op": "PUSH1", "path": "7", "statement": 20, "value": "0x4"}, "2287": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "DUP1", "path": "7"}, "2288": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "SLOAD", "path": "7"}, "2289": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "SWAP1", "path": "7"}, "2290": {"fn": "Loot.mint", "offset": [9991, 9997], "op": "PUSH1", "path": "7", "value": "0x0"}, "2292": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "PUSH2", "path": "7", "value": "0x8FC"}, "2295": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "DUP4", "path": "7"}, "2296": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "PUSH2", "path": "7", "value": "0x1628"}, "2299": {"fn": "Loot.mint", "jump": "i", "offset": [9991, 9999], "op": "JUMP", "path": "7"}, "2300": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "JUMPDEST", "path": "7"}, "2301": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "SWAP2", "path": "7"}, "2302": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "SWAP1", "path": "7"}, "2303": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "POP", "path": "7"}, "2304": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "SSTORE", "path": "7"}, "2305": {"fn": "Loot.mint", "offset": [9991, 9999], "op": "POP", "path": "7"}, "2306": {"fn": "Loot.mint", "offset": [9959, 10544], "op": "PUSH2", "path": "7", "value": "0x76A"}, "2309": {"fn": "Loot.mint", "offset": [9959, 10544], "op": "JUMP", "path": "7"}, "2310": {"fn": "Loot.mint", "offset": [9959, 10544], "op": "JUMPDEST", "path": "7"}, "2311": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "PUSH1", "path": "7", "statement": 21, "value": "0x0"}, "2313": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "DUP6", "path": "7"}, "2314": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "DUP2", "path": "7"}, "2315": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "MSTORE", "path": "7"}, "2316": {"fn": "Loot.mint", "offset": [10554, 10565], "op": "PUSH1", "path": "7", "value": "0x9"}, "2318": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "PUSH1", "path": "7", "value": "0x20"}, "2320": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "MSTORE", "path": "7"}, "2321": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "PUSH1", "path": "7", "value": "0x40"}, "2323": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "DUP1", "path": "7"}, "2324": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "DUP3", "path": "7"}, "2325": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "KECCAK256", "path": "7"}, "2326": {"fn": "Loot.mint", "offset": [10554, 10580], "op": "DUP1", "path": "7"}, "2327": {"fn": "Loot.mint", "offset": [10554, 10580], "op": "SLOAD", "path": "7"}, "2328": {"op": "PUSH1", "value": "0xFF"}, "2330": {"op": "NOT"}, "2331": {"fn": "Loot.mint", "offset": [10554, 10580], "op": "AND", "path": "7"}, "2332": {"fn": "Loot.mint", "offset": [10576, 10580], "op": "PUSH1", "path": "7", "value": "0x1"}, "2334": {"fn": "Loot.mint", "offset": [10554, 10580], "op": "OR", "path": "7"}, "2335": {"fn": "Loot.mint", "offset": [10554, 10580], "op": "SWAP1", "path": "7"}, "2336": {"fn": "Loot.mint", "offset": [10554, 10580], "op": "SSTORE", "path": "7"}, "2337": {"fn": "Loot.mint", "offset": [10595, 10619], "op": "MLOAD", "path": "7", "statement": 22}, "2338": {"op": "PUSH1", "value": "0x1"}, "2340": {"op": "PUSH1", "value": "0x1"}, "2342": {"op": "PUSH1", "value": "0xA0"}, "2344": {"op": "SHL"}, "2345": {"op": "SUB"}, "2346": {"fn": "Loot.mint", "offset": [10595, 10619], "op": "DUP7", "path": "7"}, "2347": {"fn": "Loot.mint", "offset": [10595, 10619], "op": "AND", "path": "7"}, "2348": {"fn": "Loot.mint", "offset": [10595, 10619], "op": "SWAP2", "path": "7"}, "2349": {"fn": "Loot.mint", "offset": [10566, 10572], "op": "DUP8", "path": "7"}, "2350": {"fn": "Loot.mint", "offset": [10566, 10572], "op": "SWAP2", "path": "7"}, "2351": {"fn": "Loot.mint", "offset": [10595, 10619], "op": "PUSH32", "path": "7", "value": "0x346DED8055A0968941609C2FF8335D290F586F0F20658FAC695B54946923A1F8"}, "2384": {"fn": "Loot.mint", "offset": [10595, 10619], "op": "SWAP2", "path": "7"}, "2385": {"fn": "Loot.mint", "offset": [10554, 10573], "op": "SWAP1", "path": "7"}, "2386": {"fn": "Loot.mint", "offset": [10595, 10619], "op": "LOG3", "path": "7"}, "2387": {"fn": "Loot.mint", "offset": [9567, 10626], "op": "POP", "path": "7"}, "2388": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "POP", "path": "7"}, "2389": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "POP", "path": "7"}, "2390": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "POP", "path": "7"}, "2391": {"fn": "Loot.mint", "offset": [9416, 10626], "op": "POP", "path": "7"}, "2392": {"fn": "Loot.mint", "jump": "o", "offset": [9416, 10626], "op": "JUMP", "path": "7"}, "2393": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "JUMPDEST", "path": "7"}, "2394": {"fn": "Loot.transferFrom", "offset": [5494, 5529], "op": "PUSH2", "path": "7", "statement": 23, "value": "0x964"}, "2397": {"fn": "Loot.transferFrom", "offset": [5511, 5515], "op": "DUP4", "path": "7"}, "2398": {"fn": "Loot.transferFrom", "offset": [5517, 5519], "op": "DUP4", "path": "7"}, "2399": {"fn": "Loot.transferFrom", "offset": [5521, 5528], "op": "DUP4", "path": "7"}, "2400": {"fn": "Loot.transferFrom", "offset": [5494, 5510], "op": "PUSH2", "path": "7", "value": "0x969"}, "2403": {"fn": "Loot.transferFrom", "jump": "i", "offset": [5494, 5529], "op": "JUMP", "path": "7"}, "2404": {"fn": "Loot.transferFrom", "offset": [5494, 5529], "op": "JUMPDEST", "path": "7"}, "2405": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "POP", "path": "7"}, "2406": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "POP", "path": "7"}, "2407": {"fn": "Loot.transferFrom", "offset": [5365, 5536], "op": "POP", "path": "7"}, "2408": {"fn": "Loot.transferFrom", "jump": "o", "offset": [5365, 5536], "op": "JUMP", "path": "7"}, "2409": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "JUMPDEST", "path": "7"}, "2410": {"fn": "Loot.safeTransferFrom", "offset": [4047, 4060], "op": "PUSH1", "path": "7", "value": "0x0"}, "2412": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP2", "path": "7"}, "2413": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP2", "path": "7"}, "2414": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "MSTORE", "path": "7"}, "2415": {"fn": "Loot.ownerOf", "offset": [3766, 3773], "op": "PUSH1", "path": "7", "value": "0x5"}, "2417": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "PUSH1", "path": "7", "value": "0x20"}, "2419": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "MSTORE", "path": "7"}, "2420": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "PUSH1", "path": "7", "value": "0x40"}, "2422": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SWAP1", "path": "7"}, "2423": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "KECCAK256", "path": "7"}, "2424": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "SLOAD", "path": "7"}, "2425": {"op": "PUSH1", "value": "0x1"}, "2427": {"op": "PUSH1", "value": "0x1"}, "2429": {"op": "PUSH1", "value": "0xA0"}, "2431": {"op": "SHL"}, "2432": {"op": "SUB"}, "2433": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "AND", "path": "7"}, "2434": {"fn": "Loot.ownerOf", "offset": [3766, 3782], "op": "DUP1", "path": "7"}, "2435": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "PUSH2", "path": "7", "statement": 24, "value": "0x9CE"}, "2438": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "JUMPI", "path": "7"}, "2439": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "PUSH1", "path": "7", "value": "0x40"}, "2441": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "MLOAD", "path": "7"}, "2442": {"op": "PUSH3", "value": "0x461BCD"}, "2446": {"op": "PUSH1", "value": "0xE5"}, "2448": {"op": "SHL"}, "2449": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "DUP2", "path": "7"}, "2450": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "MSTORE", "path": "7"}, "2451": {"op": "PUSH1", "value": "0x20"}, "2453": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "PUSH1", "path": "7", "value": "0x4"}, "2455": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "DUP3", "path": "7"}, "2456": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "ADD", "path": "7"}, "2457": {"op": "MSTORE"}, "2458": {"op": "PUSH1", "value": "0x18"}, "2460": {"op": "PUSH1", "value": "0x24"}, "2462": {"op": "DUP3"}, "2463": {"op": "ADD"}, "2464": {"op": "MSTORE"}, "2465": {"op": "PUSH32", "value": "0x54686520746F6B656E20646F6573206E6F742065786973740000000000000000"}, "2498": {"op": "PUSH1", "value": "0x44"}, "2500": {"op": "DUP3"}, "2501": {"op": "ADD"}, "2502": {"op": "MSTORE"}, "2503": {"op": "PUSH1", "value": "0x64"}, "2505": {"op": "ADD"}, "2506": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "2509": {"op": "JUMP"}, "2510": {"fn": "Loot.safeTransferFrom", "offset": [4094, 4161], "op": "JUMPDEST", "path": "7"}, "2511": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4202], "op": "CALLER", "path": "7", "statement": 25}, "2512": {"op": "PUSH1", "value": "0x1"}, "2514": {"op": "PUSH1", "value": "0x1"}, "2516": {"op": "PUSH1", "value": "0xA0"}, "2518": {"op": "SHL"}, "2519": {"op": "SUB"}, "2520": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4211], "op": "DUP3", "path": "7"}, "2521": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4211], "op": "AND", "path": "7"}, "2522": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4211], "op": "EQ", "path": "7"}, "2523": {"branch": 61, "fn": "Loot.safeTransferFrom", "offset": [4192, 4211], "op": "DUP1", "path": "7"}, "2524": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4265], "op": "PUSH2", "path": "7", "value": "0x9F5"}, "2527": {"branch": 61, "fn": "Loot.safeTransferFrom", "offset": [4192, 4265], "op": "JUMPI", "path": "7"}, "2528": {"op": "POP"}, "2529": {"fn": "Loot.safeTransferFrom", "offset": [4255, 4265], "op": "CALLER", "path": "7"}, "2530": {"fn": "Loot.safeTransferFrom", "offset": [4231, 4251], "op": "PUSH2", "path": "7", "value": "0x9EA"}, "2533": {"fn": "Loot.safeTransferFrom", "offset": [4243, 4250], "op": "DUP4", "path": "7"}, "2534": {"fn": "Loot.safeTransferFrom", "offset": [4231, 4242], "op": "PUSH2", "path": "7", "value": "0x3A3"}, "2537": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [4231, 4251], "op": "JUMP", "path": "7"}, "2538": {"fn": "Loot.safeTransferFrom", "offset": [4231, 4251], "op": "JUMPDEST", "path": "7"}, "2539": {"op": "PUSH1", "value": "0x1"}, "2541": {"op": "PUSH1", "value": "0x1"}, "2543": {"op": "PUSH1", "value": "0xA0"}, "2545": {"op": "SHL"}, "2546": {"op": "SUB"}, "2547": {"fn": "Loot.safeTransferFrom", "offset": [4231, 4265], "op": "AND", "path": "7"}, "2548": {"branch": 62, "fn": "Loot.safeTransferFrom", "offset": [4231, 4265], "op": "EQ", "path": "7"}, "2549": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4265], "op": "JUMPDEST", "path": "7"}, "2550": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4320], "op": "DUP1", "path": "7"}, "2551": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4320], "op": "PUSH2", "path": "7", "value": "0xA05"}, "2554": {"branch": 62, "fn": "Loot.safeTransferFrom", "offset": [4192, 4320], "op": "JUMPI", "path": "7"}, "2555": {"fn": "Loot.safeTransferFrom", "offset": [4192, 4320], "op": "POP", "path": "7"}, "2556": {"fn": "Loot.safeTransferFrom", "offset": [4285, 4320], "op": "PUSH2", "path": "7", "value": "0xA05"}, "2559": {"fn": "Loot.safeTransferFrom", "offset": [4302, 4307], "op": "DUP2", "path": "7"}, "2560": {"fn": "Loot.safeTransferFrom", "offset": [4309, 4319], "op": "CALLER", "path": "7"}, "2561": {"fn": "Loot.safeTransferFrom", "offset": [4285, 4301], "op": "PUSH2", "path": "7", "value": "0xDF5"}, "2564": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [4285, 4320], "op": "JUMP", "path": "7"}, "2565": {"branch": 63, "fn": "Loot.safeTransferFrom", "offset": [4285, 4320], "op": "JUMPDEST", "path": "7"}, "2566": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "PUSH2", "path": "7", "value": "0xA6D"}, "2569": {"branch": 63, "fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "JUMPI", "path": "7"}, "2570": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "PUSH1", "path": "7", "value": "0x40"}, "2572": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "MLOAD", "path": "7"}, "2573": {"op": "PUSH3", "value": "0x461BCD"}, "2577": {"op": "PUSH1", "value": "0xE5"}, "2579": {"op": "SHL"}, "2580": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "DUP2", "path": "7"}, "2581": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "MSTORE", "path": "7"}, "2582": {"op": "PUSH1", "value": "0x20"}, "2584": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "PUSH1", "path": "7", "value": "0x4"}, "2586": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "DUP3", "path": "7"}, "2587": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "ADD", "path": "7"}, "2588": {"op": "MSTORE"}, "2589": {"op": "PUSH1", "value": "0x33"}, "2591": {"op": "PUSH1", "value": "0x24"}, "2593": {"op": "DUP3"}, "2594": {"op": "ADD"}, "2595": {"op": "MSTORE"}, "2596": {"op": "PUSH32", "value": "0x546865206F70657261746F72206973206E6F7420617070726F76656420746F20"}, "2629": {"op": "PUSH1", "value": "0x44"}, "2631": {"op": "DUP3"}, "2632": {"op": "ADD"}, "2633": {"op": "MSTORE"}, "2634": {"op": "PUSH19", "value": "0x3A3930B739B332B9103A3434B9903A37B5B2B7"}, "2654": {"op": "PUSH1", "value": "0x69"}, "2656": {"op": "SHL"}, "2657": {"op": "PUSH1", "value": "0x64"}, "2659": {"op": "DUP3"}, "2660": {"op": "ADD"}, "2661": {"op": "MSTORE"}, "2662": {"op": "PUSH1", "value": "0x84"}, "2664": {"op": "ADD"}, "2665": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "2668": {"op": "JUMP"}, "2669": {"fn": "Loot.safeTransferFrom", "offset": [4171, 4397], "op": "JUMPDEST", "path": "7"}, "2670": {"fn": "Loot.safeTransferFrom", "offset": [4437, 4441], "op": "DUP4", "path": "7", "statement": 26}, "2671": {"op": "PUSH1", "value": "0x1"}, "2673": {"op": "PUSH1", "value": "0x1"}, "2675": {"op": "PUSH1", "value": "0xA0"}, "2677": {"op": "SHL"}, "2678": {"op": "SUB"}, "2679": {"fn": "Loot.safeTransferFrom", "offset": [4428, 4441], "op": "AND", "path": "7"}, "2680": {"fn": "Loot.safeTransferFrom", "offset": [4428, 4433], "op": "DUP2", "path": "7"}, "2681": {"op": "PUSH1", "value": "0x1"}, "2683": {"op": "PUSH1", "value": "0x1"}, "2685": {"op": "PUSH1", "value": "0xA0"}, "2687": {"op": "SHL"}, "2688": {"op": "SUB"}, "2689": {"fn": "Loot.safeTransferFrom", "offset": [4428, 4441], "op": "AND", "path": "7"}, "2690": {"branch": 64, "fn": "Loot.safeTransferFrom", "offset": [4428, 4441], "op": "EQ", "path": "7"}, "2691": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "PUSH2", "path": "7", "value": "0xAE9"}, "2694": {"branch": 64, "fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "JUMPI", "path": "7"}, "2695": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "PUSH1", "path": "7", "value": "0x40"}, "2697": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "MLOAD", "path": "7"}, "2698": {"op": "PUSH3", "value": "0x461BCD"}, "2702": {"op": "PUSH1", "value": "0xE5"}, "2704": {"op": "SHL"}, "2705": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "DUP2", "path": "7"}, "2706": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "MSTORE", "path": "7"}, "2707": {"op": "PUSH1", "value": "0x20"}, "2709": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "PUSH1", "path": "7", "value": "0x4"}, "2711": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "DUP3", "path": "7"}, "2712": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "ADD", "path": "7"}, "2713": {"op": "MSTORE"}, "2714": {"op": "PUSH1", "value": "0x32"}, "2716": {"op": "PUSH1", "value": "0x24"}, "2718": {"op": "DUP3"}, "2719": {"op": "ADD"}, "2720": {"op": "MSTORE"}, "2721": {"op": "PUSH32", "value": "0x5468652073656E64657220646F6573206E6F74206F776E2074686520746F6B65"}, "2754": {"op": "PUSH1", "value": "0x44"}, "2756": {"op": "DUP3"}, "2757": {"op": "ADD"}, "2758": {"op": "MSTORE"}, "2759": {"op": "PUSH18", "value": "0x1B881D1BC81899481D1C985B9CD9995C9959"}, "2778": {"op": "PUSH1", "value": "0x72"}, "2780": {"op": "SHL"}, "2781": {"op": "PUSH1", "value": "0x64"}, "2783": {"op": "DUP3"}, "2784": {"op": "ADD"}, "2785": {"op": "MSTORE"}, "2786": {"op": "PUSH1", "value": "0x84"}, "2788": {"op": "ADD"}, "2789": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "2792": {"op": "JUMP"}, "2793": {"fn": "Loot.safeTransferFrom", "offset": [4407, 4517], "op": "JUMPDEST", "path": "7"}, "2794": {"op": "PUSH1", "value": "0x1"}, "2796": {"op": "PUSH1", "value": "0x1"}, "2798": {"op": "PUSH1", "value": "0xA0"}, "2800": {"op": "SHL"}, "2801": {"op": "SUB"}, "2802": {"fn": "Loot.safeTransferFrom", "offset": [4548, 4564], "op": "DUP4", "path": "7", "statement": 27}, "2803": {"branch": 65, "fn": "Loot.safeTransferFrom", "offset": [4548, 4564], "op": "AND", "path": "7"}, "2804": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "PUSH2", "path": "7", "value": "0xB0F"}, "2807": {"branch": 65, "fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "JUMPI", "path": "7"}, "2808": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "PUSH1", "path": "7", "value": "0x40"}, "2810": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "MLOAD", "path": "7"}, "2811": {"op": "PUSH3", "value": "0x461BCD"}, "2815": {"op": "PUSH1", "value": "0xE5"}, "2817": {"op": "SHL"}, "2818": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "DUP2", "path": "7"}, "2819": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "MSTORE", "path": "7"}, "2820": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "PUSH1", "path": "7", "value": "0x4"}, "2822": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "ADD", "path": "7"}, "2823": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "2826": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "SWAP1", "path": "7"}, "2827": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "PUSH2", "path": "7", "value": "0x1450"}, "2830": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [4527, 4635], "op": "JUMP", "path": "7"}, "2831": {"fn": "Loot.safeTransferFrom", "offset": [4527, 4635], "op": "JUMPDEST", "path": "7"}, "2832": {"fn": "Loot.safeTransferFrom", "offset": [4666, 4707], "op": "PUSH2", "path": "7", "statement": 28, "value": "0xB1A"}, "2835": {"fn": "Loot.safeTransferFrom", "offset": [4689, 4693], "op": "DUP5", "path": "7"}, "2836": {"fn": "Loot.safeTransferFrom", "offset": [4695, 4697], "op": "DUP5", "path": "7"}, "2837": {"fn": "Loot.safeTransferFrom", "offset": [4699, 4706], "op": "DUP5", "path": "7"}, "2838": {"fn": "Loot.safeTransferFrom", "offset": [4666, 4688], "op": "PUSH2", "path": "7", "value": "0xE23"}, "2841": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [4666, 4707], "op": "JUMP", "path": "7"}, "2842": {"branch": 66, "fn": "Loot.safeTransferFrom", "offset": [4666, 4707], "op": "JUMPDEST", "path": "7"}, "2843": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "PUSH2", "path": "7", "value": "0xB36"}, "2846": {"branch": 66, "fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "JUMPI", "path": "7"}, "2847": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "PUSH1", "path": "7", "value": "0x40"}, "2849": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "MLOAD", "path": "7"}, "2850": {"op": "PUSH3", "value": "0x461BCD"}, "2854": {"op": "PUSH1", "value": "0xE5"}, "2856": {"op": "SHL"}, "2857": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "DUP2", "path": "7"}, "2858": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "MSTORE", "path": "7"}, "2859": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "PUSH1", "path": "7", "value": "0x4"}, "2861": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "ADD", "path": "7"}, "2862": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "2865": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "SWAP1", "path": "7"}, "2866": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "PUSH2", "path": "7", "value": "0x14E1"}, "2869": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [4645, 4773], "op": "JUMP", "path": "7"}, "2870": {"fn": "Loot.safeTransferFrom", "offset": [4645, 4773], "op": "JUMPDEST", "path": "7"}, "2871": {"op": "PUSH1", "value": "0x1"}, "2873": {"op": "PUSH1", "value": "0x1"}, "2875": {"op": "PUSH1", "value": "0xA0"}, "2877": {"op": "SHL"}, "2878": {"op": "SUB"}, "2879": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "DUP5", "path": "7", "statement": 29}, "2880": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "AND", "path": "7"}, "2881": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "PUSH1", "path": "7", "value": "0x0"}, "2883": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "SWAP1", "path": "7"}, "2884": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "DUP2", "path": "7"}, "2885": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "MSTORE", "path": "7"}, "2886": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4793], "op": "PUSH1", "path": "7", "value": "0x6"}, "2888": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "PUSH1", "path": "7", "value": "0x20"}, "2890": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "MSTORE", "path": "7"}, "2891": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "PUSH1", "path": "7", "value": "0x40"}, "2893": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "DUP2", "path": "7"}, "2894": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "KECCAK256", "path": "7"}, "2895": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "DUP1", "path": "7"}, "2896": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "SLOAD", "path": "7"}, "2897": {"fn": "Loot.safeTransferFrom", "offset": [4803, 4804], "op": "PUSH1", "path": "7", "value": "0x1"}, "2899": {"fn": "Loot.safeTransferFrom", "offset": [4803, 4804], "op": "SWAP3", "path": "7"}, "2900": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4799], "op": "SWAP1", "path": "7"}, "2901": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "PUSH2", "path": "7", "value": "0xB5F"}, "2904": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "SWAP1", "path": "7"}, "2905": {"fn": "Loot.safeTransferFrom", "offset": [4803, 4804], "op": "DUP5", "path": "7"}, "2906": {"fn": "Loot.safeTransferFrom", "offset": [4803, 4804], "op": "SWAP1", "path": "7"}, "2907": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "PUSH2", "path": "7", "value": "0x15AA"}, "2910": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [4784, 4804], "op": "JUMP", "path": "7"}, "2911": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "JUMPDEST", "path": "7"}, "2912": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "SWAP1", "path": "7"}, "2913": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "SWAP2", "path": "7"}, "2914": {"fn": "Loot.safeTransferFrom", "offset": [4784, 4804], "op": "SSTORE", "path": "7"}, "2915": {"op": "POP"}, "2916": {"op": "POP"}, "2917": {"op": "PUSH1", "value": "0x1"}, "2919": {"op": "PUSH1", "value": "0x1"}, "2921": {"op": "PUSH1", "value": "0xA0"}, "2923": {"op": "SHL"}, "2924": {"op": "SUB"}, "2925": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "DUP4", "path": "7", "statement": 30}, "2926": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "AND", "path": "7"}, "2927": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "PUSH1", "path": "7", "value": "0x0"}, "2929": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "SWAP1", "path": "7"}, "2930": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "DUP2", "path": "7"}, "2931": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "MSTORE", "path": "7"}, "2932": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4823], "op": "PUSH1", "path": "7", "value": "0x6"}, "2934": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "PUSH1", "path": "7", "value": "0x20"}, "2936": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "MSTORE", "path": "7"}, "2937": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "PUSH1", "path": "7", "value": "0x40"}, "2939": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "DUP2", "path": "7"}, "2940": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "KECCAK256", "path": "7"}, "2941": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "DUP1", "path": "7"}, "2942": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "SLOAD", "path": "7"}, "2943": {"fn": "Loot.safeTransferFrom", "offset": [4831, 4832], "op": "PUSH1", "path": "7", "value": "0x1"}, "2945": {"fn": "Loot.safeTransferFrom", "offset": [4831, 4832], "op": "SWAP3", "path": "7"}, "2946": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4827], "op": "SWAP1", "path": "7"}, "2947": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "PUSH2", "path": "7", "value": "0xB8D"}, "2950": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "SWAP1", "path": "7"}, "2951": {"fn": "Loot.safeTransferFrom", "offset": [4831, 4832], "op": "DUP5", "path": "7"}, "2952": {"fn": "Loot.safeTransferFrom", "offset": [4831, 4832], "op": "SWAP1", "path": "7"}, "2953": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "PUSH2", "path": "7", "value": "0x157E"}, "2956": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [4814, 4832], "op": "JUMP", "path": "7"}, "2957": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "JUMPDEST", "path": "7"}, "2958": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "SWAP1", "path": "7"}, "2959": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "SWAP2", "path": "7"}, "2960": {"fn": "Loot.safeTransferFrom", "offset": [4814, 4832], "op": "SSTORE", "path": "7"}, "2961": {"op": "POP"}, "2962": {"op": "POP"}, "2963": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "PUSH1", "path": "7", "statement": 31, "value": "0x0"}, "2965": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "DUP3", "path": "7"}, "2966": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "DUP2", "path": "7"}, "2967": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "MSTORE", "path": "7"}, "2968": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4849], "op": "PUSH1", "path": "7", "value": "0x5"}, "2970": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "PUSH1", "path": "7", "value": "0x20"}, "2972": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "MSTORE", "path": "7"}, "2973": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "PUSH1", "path": "7", "value": "0x40"}, "2975": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "DUP1", "path": "7"}, "2976": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "DUP3", "path": "7"}, "2977": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "KECCAK256", "path": "7"}, "2978": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "DUP1", "path": "7"}, "2979": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "SLOAD", "path": "7"}, "2980": {"op": "PUSH1", "value": "0x1"}, "2982": {"op": "PUSH1", "value": "0x1"}, "2984": {"op": "PUSH1", "value": "0xA0"}, "2986": {"op": "SHL"}, "2987": {"op": "SUB"}, "2988": {"op": "NOT"}, "2989": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "AND", "path": "7"}, "2990": {"op": "PUSH1", "value": "0x1"}, "2992": {"op": "PUSH1", "value": "0x1"}, "2994": {"op": "PUSH1", "value": "0xA0"}, "2996": {"op": "SHL"}, "2997": {"op": "SUB"}, "2998": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "DUP8", "path": "7"}, "2999": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "DUP2", "path": "7"}, "3000": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "AND", "path": "7"}, "3001": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "SWAP2", "path": "7"}, "3002": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "DUP3", "path": "7"}, "3003": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "OR", "path": "7"}, "3004": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "SWAP1", "path": "7"}, "3005": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "SWAP3", "path": "7"}, "3006": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4863], "op": "SSTORE", "path": "7"}, "3007": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "SWAP2", "path": "7", "statement": 32}, "3008": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "MLOAD", "path": "7"}, "3009": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "DUP6", "path": "7"}, "3010": {"fn": "Loot.safeTransferFrom", "offset": [4842, 4858], "op": "SWAP4", "path": "7"}, "3011": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "SWAP2", "path": "7"}, "3012": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "DUP9", "path": "7"}, "3013": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "AND", "path": "7"}, "3014": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "SWAP2", "path": "7"}, "3015": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "PUSH32", "path": "7", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "3048": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "SWAP2", "path": "7"}, "3049": {"fn": "Loot.safeTransferFrom", "offset": [4879, 4906], "op": "LOG4", "path": "7"}, "3050": {"fn": "Loot.safeTransferFrom", "offset": [4037, 4913], "op": "POP", "path": "7"}, "3051": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "POP", "path": "7"}, "3052": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "POP", "path": "7"}, "3053": {"fn": "Loot.safeTransferFrom", "offset": [3914, 4913], "op": "POP", "path": "7"}, "3054": {"fn": "Loot.safeTransferFrom", "jump": "o", "offset": [3914, 4913], "op": "JUMP", "path": "7"}, "3055": {"fn": "Loot.symbol", "offset": [8428, 8530], "op": "JUMPDEST", "path": "7"}, "3056": {"fn": "Loot.symbol", "offset": [8484, 8497], "op": "PUSH1", "path": "7", "value": "0x60"}, "3058": {"fn": "Loot.symbol", "offset": [8516, 8523], "op": "PUSH1", "path": "7", "statement": 33, "value": "0x1"}, "3060": {"fn": "Loot.symbol", "offset": [8509, 8523], "op": "DUP1", "path": "7"}, "3061": {"fn": "Loot.symbol", "offset": [8509, 8523], "op": "SLOAD", "path": "7"}, "3062": {"fn": "Loot.symbol", "offset": [8509, 8523], "op": "PUSH2", "path": "7", "value": "0x320"}, "3065": {"fn": "Loot.symbol", "offset": [8509, 8523], "op": "SWAP1", "path": "7"}, "3066": {"fn": "Loot.symbol", "offset": [8509, 8523], "op": "PUSH2", "path": "7", "value": "0x15ED"}, "3069": {"fn": "Loot.symbol", "jump": "i", "offset": [8509, 8523], "op": "JUMP", "path": "7"}, "3070": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "JUMPDEST", "path": "7"}, "3071": {"op": "PUSH1", "value": "0x1"}, "3073": {"op": "PUSH1", "value": "0x1"}, "3075": {"op": "PUSH1", "value": "0xA0"}, "3077": {"op": "SHL"}, "3078": {"op": "SUB"}, "3079": {"fn": "Loot.setApprovalForAll", "offset": [7627, 7649], "op": "DUP3", "path": "7", "statement": 34}, "3080": {"fn": "Loot.setApprovalForAll", "offset": [7627, 7649], "op": "AND", "path": "7"}, "3081": {"fn": "Loot.setApprovalForAll", "offset": [7639, 7649], "op": "CALLER", "path": "7"}, "3082": {"fn": "Loot.setApprovalForAll", "offset": [7627, 7649], "op": "EQ", "path": "7"}, "3083": {"branch": 67, "fn": "Loot.setApprovalForAll", "offset": [7627, 7649], "op": "ISZERO", "path": "7"}, "3084": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "PUSH2", "path": "7", "value": "0xC62"}, "3087": {"branch": 67, "fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "JUMPI", "path": "7"}, "3088": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "PUSH1", "path": "7", "value": "0x40"}, "3090": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "MLOAD", "path": "7"}, "3091": {"op": "PUSH3", "value": "0x461BCD"}, "3095": {"op": "PUSH1", "value": "0xE5"}, "3097": {"op": "SHL"}, "3098": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "DUP2", "path": "7"}, "3099": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "MSTORE", "path": "7"}, "3100": {"op": "PUSH1", "value": "0x20"}, "3102": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "PUSH1", "path": "7", "value": "0x4"}, "3104": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "DUP3", "path": "7"}, "3105": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "ADD", "path": "7"}, "3106": {"op": "MSTORE"}, "3107": {"op": "PUSH1", "value": "0x22"}, "3109": {"op": "PUSH1", "value": "0x24"}, "3111": {"op": "DUP3"}, "3112": {"op": "ADD"}, "3113": {"op": "MSTORE"}, "3114": {"op": "PUSH32", "value": "0x5468652073656E646572206D6179206E6F7420626520746865206F7065726174"}, "3147": {"op": "PUSH1", "value": "0x44"}, "3149": {"op": "DUP3"}, "3150": {"op": "ADD"}, "3151": {"op": "MSTORE"}, "3152": {"op": "PUSH2", "value": "0x37B9"}, "3155": {"op": "PUSH1", "value": "0xF1"}, "3157": {"op": "SHL"}, "3158": {"op": "PUSH1", "value": "0x64"}, "3160": {"op": "DUP3"}, "3161": {"op": "ADD"}, "3162": {"op": "MSTORE"}, "3163": {"op": "PUSH1", "value": "0x84"}, "3165": {"op": "ADD"}, "3166": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "3169": {"op": "JUMP"}, "3170": {"fn": "Loot.setApprovalForAll", "offset": [7619, 7688], "op": "JUMPDEST", "path": "7"}, "3171": {"fn": "Loot.setApprovalForAll", "offset": [7718, 7728], "op": "CALLER", "path": "7", "statement": 35}, "3172": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "PUSH1", "path": "7", "value": "0x0"}, "3174": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "DUP2", "path": "7"}, "3175": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "DUP2", "path": "7"}, "3176": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "MSTORE", "path": "7"}, "3177": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7717], "op": "PUSH1", "path": "7", "value": "0x8"}, "3179": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "PUSH1", "path": "7", "value": "0x20"}, "3181": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "SWAP1", "path": "7"}, "3182": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "DUP2", "path": "7"}, "3183": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "MSTORE", "path": "7"}, "3184": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "PUSH1", "path": "7", "value": "0x40"}, "3186": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "DUP1", "path": "7"}, "3187": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "DUP4", "path": "7"}, "3188": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7729], "op": "KECCAK256", "path": "7"}, "3189": {"op": "PUSH1", "value": "0x1"}, "3191": {"op": "PUSH1", "value": "0x1"}, "3193": {"op": "PUSH1", "value": "0xA0"}, "3195": {"op": "SHL"}, "3196": {"op": "SUB"}, "3197": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "DUP8", "path": "7"}, "3198": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "AND", "path": "7"}, "3199": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "DUP1", "path": "7"}, "3200": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "DUP6", "path": "7"}, "3201": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "MSTORE", "path": "7"}, "3202": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "SWAP1", "path": "7"}, "3203": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "DUP4", "path": "7"}, "3204": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "MSTORE", "path": "7"}, "3205": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "SWAP3", "path": "7"}, "3206": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "DUP2", "path": "7"}, "3207": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "SWAP1", "path": "7"}, "3208": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "KECCAK256", "path": "7"}, "3209": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "DUP1", "path": "7"}, "3210": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "SLOAD", "path": "7"}, "3211": {"op": "PUSH1", "value": "0xFF"}, "3213": {"op": "NOT"}, "3214": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "AND", "path": "7"}, "3215": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "DUP7", "path": "7"}, "3216": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "ISZERO", "path": "7"}, "3217": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "ISZERO", "path": "7"}, "3218": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "SWAP1", "path": "7"}, "3219": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "DUP2", "path": "7"}, "3220": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "OR", "path": "7"}, "3221": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "SWAP1", "path": "7"}, "3222": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "SWAP2", "path": "7"}, "3223": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7750], "op": "SSTORE", "path": "7"}, "3224": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "SWAP1", "path": "7", "statement": 36}, "3225": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "MLOAD", "path": "7"}, "3226": {"op": "SWAP1"}, "3227": {"op": "DUP2"}, "3228": {"op": "MSTORE"}, "3229": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "SWAP2", "path": "7"}, "3230": {"fn": "Loot.setApprovalForAll", "offset": [7699, 7739], "op": "SWAP3", "path": "7"}, "3231": {"fn": "Loot.setApprovalForAll", "offset": [7718, 7728], "op": "SWAP2", "path": "7"}, "3232": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "PUSH32", "path": "7", "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"}, "3265": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "SWAP2", "path": "7"}, "3266": {"op": "ADD"}, "3267": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "PUSH1", "path": "7", "value": "0x40"}, "3269": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "MLOAD", "path": "7"}, "3270": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "DUP1", "path": "7"}, "3271": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "SWAP2", "path": "7"}, "3272": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "SUB", "path": "7"}, "3273": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "SWAP1", "path": "7"}, "3274": {"fn": "Loot.setApprovalForAll", "offset": [7765, 7811], "op": "LOG3", "path": "7"}, "3275": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "POP", "path": "7"}, "3276": {"fn": "Loot.setApprovalForAll", "offset": [7497, 7818], "op": "POP", "path": "7"}, "3277": {"fn": "Loot.setApprovalForAll", "jump": "o", "offset": [7497, 7818], "op": "JUMP", "path": "7"}, "3278": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "JUMPDEST", "path": "7"}, "3279": {"fn": "Loot.safeTransferFrom", "offset": [5207, 5242], "op": "PUSH2", "path": "7", "statement": 37, "value": "0xCD9"}, "3282": {"fn": "Loot.safeTransferFrom", "offset": [5224, 5228], "op": "DUP5", "path": "7"}, "3283": {"fn": "Loot.safeTransferFrom", "offset": [5230, 5232], "op": "DUP5", "path": "7"}, "3284": {"fn": "Loot.safeTransferFrom", "offset": [5234, 5241], "op": "DUP5", "path": "7"}, "3285": {"fn": "Loot.safeTransferFrom", "offset": [5207, 5223], "op": "PUSH2", "path": "7", "value": "0x969"}, "3288": {"fn": "Loot.safeTransferFrom", "jump": "i", "offset": [5207, 5242], "op": "JUMP", "path": "7"}, "3289": {"fn": "Loot.safeTransferFrom", "offset": [5207, 5242], "op": "JUMPDEST", "path": "7"}, "3290": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "POP", "path": "7"}, "3291": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "POP", "path": "7"}, "3292": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "POP", "path": "7"}, "3293": {"fn": "Loot.safeTransferFrom", "offset": [5046, 5249], "op": "POP", "path": "7"}, "3294": {"fn": "Loot.safeTransferFrom", "jump": "o", "offset": [5046, 5249], "op": "JUMP", "path": "7"}, "3295": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "JUMPDEST", "path": "7"}, "3296": {"fn": "Loot.tokenURI", "offset": [8824, 8825], "op": "PUSH1", "path": "7", "statement": 38, "value": "0x0"}, "3298": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "DUP2", "path": "7"}, "3299": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "DUP2", "path": "7"}, "3300": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "MSTORE", "path": "7"}, "3301": {"fn": "Loot.tokenURI", "offset": [8796, 8803], "op": "PUSH1", "path": "7", "value": "0x5"}, "3303": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "PUSH1", "path": "7", "value": "0x20"}, "3305": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "MSTORE", "path": "7"}, "3306": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "PUSH1", "path": "7", "value": "0x40"}, "3308": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "SWAP1", "path": "7"}, "3309": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "KECCAK256", "path": "7"}, "3310": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "SLOAD", "path": "7"}, "3311": {"fn": "Loot.tokenURI", "offset": [8746, 8759], "op": "PUSH1", "path": "7", "value": "0x60"}, "3313": {"fn": "Loot.tokenURI", "offset": [8746, 8759], "op": "SWAP1", "path": "7"}, "3314": {"op": "PUSH1", "value": "0x1"}, "3316": {"op": "PUSH1", "value": "0x1"}, "3318": {"op": "PUSH1", "value": "0xA0"}, "3320": {"op": "SHL"}, "3321": {"op": "SUB"}, "3322": {"fn": "Loot.tokenURI", "offset": [8796, 8812], "op": "AND", "path": "7"}, "3323": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "PUSH2", "path": "7", "value": "0xD16"}, "3326": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "JUMPI", "path": "7"}, "3327": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "PUSH1", "path": "7", "value": "0x40"}, "3329": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "MLOAD", "path": "7"}, "3330": {"op": "PUSH3", "value": "0x461BCD"}, "3334": {"op": "PUSH1", "value": "0xE5"}, "3336": {"op": "SHL"}, "3337": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "DUP2", "path": "7"}, "3338": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "MSTORE", "path": "7"}, "3339": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "PUSH1", "path": "7", "value": "0x4"}, "3341": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "ADD", "path": "7"}, "3342": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "3345": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "SWAP1", "path": "7"}, "3346": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "PUSH2", "path": "7", "value": "0x149D"}, "3349": {"fn": "Loot.tokenURI", "jump": "i", "offset": [8775, 8888], "op": "JUMP", "path": "7"}, "3350": {"fn": "Loot.tokenURI", "offset": [8775, 8888], "op": "JUMPDEST", "path": "7"}, "3351": {"fn": "Loot.tokenURI", "offset": [8899, 8920], "op": "PUSH1", "path": "7", "value": "0x0"}, "3353": {"fn": "Loot.tokenURI", "offset": [8923, 8931], "op": "PUSH1", "path": "7", "value": "0x2"}, "3355": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3356": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SLOAD", "path": "7"}, "3357": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0xD25"}, "3360": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3361": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0x15ED"}, "3364": {"fn": "Loot.tokenURI", "jump": "i", "offset": [8899, 8931], "op": "JUMP", "path": "7"}, "3365": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMPDEST", "path": "7"}, "3366": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3367": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x1F"}, "3369": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3370": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x20"}, "3372": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3373": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP2", "path": "7"}, "3374": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DIV", "path": "7"}, "3375": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "MUL", "path": "7"}, "3376": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x20"}, "3378": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3379": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x40"}, "3381": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "MLOAD", "path": "7"}, "3382": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3383": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP2", "path": "7"}, "3384": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3385": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x40"}, "3387": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "MSTORE", "path": "7"}, "3388": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3389": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP3", "path": "7"}, "3390": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP2", "path": "7"}, "3391": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3392": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP2", "path": "7"}, "3393": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP2", "path": "7"}, "3394": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "MSTORE", "path": "7"}, "3395": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x20"}, "3397": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3398": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP3", "path": "7"}, "3399": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3400": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SLOAD", "path": "7"}, "3401": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0xD51"}, "3404": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3405": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0x15ED"}, "3408": {"fn": "Loot.tokenURI", "jump": "i", "offset": [8899, 8931], "op": "JUMP", "path": "7"}, "3409": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMPDEST", "path": "7"}, "3410": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3411": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ISZERO", "path": "7"}, "3412": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0xD9E"}, "3415": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMPI", "path": "7"}, "3416": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3417": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x1F"}, "3419": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "LT", "path": "7"}, "3420": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0xD73"}, "3423": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMPI", "path": "7"}, "3424": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0x100"}, "3427": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3428": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP4", "path": "7"}, "3429": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SLOAD", "path": "7"}, "3430": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DIV", "path": "7"}, "3431": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "MUL", "path": "7"}, "3432": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP4", "path": "7"}, "3433": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "MSTORE", "path": "7"}, "3434": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP2", "path": "7"}, "3435": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x20"}, "3437": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3438": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP2", "path": "7"}, "3439": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0xD9E"}, "3442": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMP", "path": "7"}, "3443": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMPDEST", "path": "7"}, "3444": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP3", "path": "7"}, "3445": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3446": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP2", "path": "7"}, "3447": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3448": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x0"}, "3450": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "MSTORE", "path": "7"}, "3451": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x20"}, "3453": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x0"}, "3455": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "KECCAK256", "path": "7"}, "3456": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3457": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMPDEST", "path": "7"}, "3458": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP2", "path": "7"}, "3459": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SLOAD", "path": "7"}, "3460": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP2", "path": "7"}, "3461": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "MSTORE", "path": "7"}, "3462": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3463": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x1"}, "3465": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3466": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3467": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x20"}, "3469": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3470": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP1", "path": "7"}, "3471": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP4", "path": "7"}, "3472": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "GT", "path": "7"}, "3473": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH2", "path": "7", "value": "0xD81"}, "3476": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMPI", "path": "7"}, "3477": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP3", "path": "7"}, "3478": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3479": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SUB", "path": "7"}, "3480": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "PUSH1", "path": "7", "value": "0x1F"}, "3482": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "AND", "path": "7"}, "3483": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "DUP3", "path": "7"}, "3484": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "ADD", "path": "7"}, "3485": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP2", "path": "7"}, "3486": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "JUMPDEST", "path": "7"}, "3487": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "POP", "path": "7"}, "3488": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "POP", "path": "7"}, "3489": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "POP", "path": "7"}, "3490": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "POP", "path": "7"}, "3491": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "POP", "path": "7"}, "3492": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "SWAP1", "path": "7"}, "3493": {"fn": "Loot.tokenURI", "offset": [8899, 8931], "op": "POP", "path": "7"}, "3494": {"fn": "Loot.tokenURI", "offset": [8984, 8985], "op": "PUSH1", "path": "7", "statement": 39, "value": "0x0"}, "3496": {"fn": "Loot.tokenURI", "offset": [8966, 8973], "op": "DUP2", "path": "7"}, "3497": {"fn": "Loot.tokenURI", "offset": [8960, 8981], "op": "MLOAD", "path": "7"}, "3498": {"branch": 68, "fn": "Loot.tokenURI", "offset": [8960, 8985], "op": "GT", "path": "7"}, "3499": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "PUSH2", "path": "7", "value": "0xDC3"}, "3502": {"branch": 68, "fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "JUMPI", "path": "7"}, "3503": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "PUSH1", "path": "7", "value": "0x40"}, "3505": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "MLOAD", "path": "7"}, "3506": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "DUP1", "path": "7"}, "3507": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "PUSH1", "path": "7", "value": "0x20"}, "3509": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "ADD", "path": "7"}, "3510": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "PUSH1", "path": "7", "value": "0x40"}, "3512": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "MSTORE", "path": "7"}, "3513": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "DUP1", "path": "7"}, "3514": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "PUSH1", "path": "7", "value": "0x0"}, "3516": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "DUP2", "path": "7"}, "3517": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "MSTORE", "path": "7"}, "3518": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "POP", "path": "7"}, "3519": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "PUSH2", "path": "7", "value": "0xDEE"}, "3522": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "JUMP", "path": "7"}, "3523": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "JUMPDEST", "path": "7"}, "3524": {"fn": "Loot.tokenURI", "offset": [9028, 9035], "op": "DUP1", "path": "7"}, "3525": {"fn": "Loot.tokenURI", "offset": [9037, 9055], "op": "PUSH2", "path": "7", "value": "0xDCD"}, "3528": {"fn": "Loot.tokenURI", "offset": [9037, 9044], "op": "DUP5", "path": "7"}, "3529": {"fn": "Loot.tokenURI", "offset": [9037, 9053], "op": "PUSH2", "path": "7", "value": "0xF41"}, "3532": {"fn": "Loot.tokenURI", "jump": "i", "offset": [9037, 9055], "op": "JUMP", "path": "7"}, "3533": {"fn": "Loot.tokenURI", "offset": [9037, 9055], "op": "JUMPDEST", "path": "7"}, "3534": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "PUSH1", "path": "7", "value": "0x40"}, "3536": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "MLOAD", "path": "7"}, "3537": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "PUSH1", "path": "7", "value": "0x20"}, "3539": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "ADD", "path": "7"}, "3540": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "PUSH2", "path": "7", "value": "0xDDE"}, "3543": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "SWAP3", "path": "7"}, "3544": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "SWAP2", "path": "7"}, "3545": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "SWAP1", "path": "7"}, "3546": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "PUSH2", "path": "7", "value": "0x13EE"}, "3549": {"fn": "Loot.tokenURI", "jump": "i", "offset": [9011, 9056], "op": "JUMP", "path": "7"}, "3550": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "JUMPDEST", "path": "7"}, "3551": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "PUSH1", "path": "7", "value": "0x40"}, "3553": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "MLOAD", "path": "7"}, "3554": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "PUSH1", "path": "7", "value": "0x20"}, "3556": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "DUP2", "path": "7"}, "3557": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "DUP4", "path": "7"}, "3558": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "SUB", "path": "7"}, "3559": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "SUB", "path": "7"}, "3560": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "DUP2", "path": "7"}, "3561": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "MSTORE", "path": "7"}, "3562": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "SWAP1", "path": "7"}, "3563": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "PUSH1", "path": "7", "value": "0x40"}, "3565": {"fn": "Loot.tokenURI", "offset": [9011, 9056], "op": "MSTORE", "path": "7"}, "3566": {"fn": "Loot.tokenURI", "offset": [8960, 9078], "op": "JUMPDEST", "path": "7"}, "3567": {"fn": "Loot.tokenURI", "offset": [8941, 9078], "op": "SWAP4", "path": "7"}, "3568": {"fn": "Loot.tokenURI", "offset": [8633, 9085], "op": "SWAP3", "path": "7"}, "3569": {"op": "POP"}, "3570": {"op": "POP"}, "3571": {"op": "POP"}, "3572": {"fn": "Loot.tokenURI", "jump": "o", "offset": [8633, 9085], "op": "JUMP", "path": "7"}, "3573": {"fn": "Loot.isApprovedForAll", "offset": [7924, 8130], "op": "JUMPDEST", "path": "7"}, "3574": {"op": "PUSH1", "value": "0x1"}, "3576": {"op": "PUSH1", "value": "0x1"}, "3578": {"op": "PUSH1", "value": "0xA0"}, "3580": {"op": "SHL"}, "3581": {"op": "SUB"}, "3582": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "SWAP2", "path": "7", "statement": 40}, "3583": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "DUP3", "path": "7"}, "3584": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "AND", "path": "7"}, "3585": {"fn": "Loot.isApprovedForAll", "offset": [8061, 8065], "op": "PUSH1", "path": "7", "value": "0x0"}, "3587": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "SWAP1", "path": "7"}, "3588": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "DUP2", "path": "7"}, "3589": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "MSTORE", "path": "7"}, "3590": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8106], "op": "PUSH1", "path": "7", "value": "0x8"}, "3592": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "PUSH1", "path": "7", "value": "0x20"}, "3594": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "SWAP1", "path": "7"}, "3595": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "DUP2", "path": "7"}, "3596": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "MSTORE", "path": "7"}, "3597": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "PUSH1", "path": "7", "value": "0x40"}, "3599": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "DUP1", "path": "7"}, "3600": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "DUP4", "path": "7"}, "3601": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8113], "op": "KECCAK256", "path": "7"}, "3602": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "SWAP4", "path": "7"}, "3603": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "SWAP1", "path": "7"}, "3604": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "SWAP5", "path": "7"}, "3605": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "AND", "path": "7"}, "3606": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "DUP3", "path": "7"}, "3607": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "MSTORE", "path": "7"}, "3608": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "SWAP2", "path": "7"}, "3609": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "SWAP1", "path": "7"}, "3610": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "SWAP2", "path": "7"}, "3611": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "MSTORE", "path": "7"}, "3612": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "KECCAK256", "path": "7"}, "3613": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "SLOAD", "path": "7"}, "3614": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "PUSH1", "path": "7", "value": "0xFF"}, "3616": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "AND", "path": "7"}, "3617": {"fn": "Loot.isApprovedForAll", "offset": [8088, 8123], "op": "SWAP1", "path": "7"}, "3618": {"fn": "Loot.isApprovedForAll", "jump": "o", "offset": [7924, 8130], "op": "JUMP", "path": "7"}, "3619": {"fn": "Loot._checkOnERC721Received", "offset": [5624, 6485], "op": "JUMPDEST", "path": "7"}, "3620": {"fn": "Loot._checkOnERC721Received", "offset": [5746, 5750], "op": "PUSH1", "path": "7", "value": "0x0"}, "3622": {"op": "PUSH1", "value": "0x1"}, "3624": {"op": "PUSH1", "value": "0x1"}, "3626": {"op": "PUSH1", "value": "0xA0"}, "3628": {"op": "SHL"}, "3629": {"op": "SUB"}, "3630": {"fn": "Loot._checkOnERC721Received", "offset": [5766, 5779], "op": "DUP4", "path": "7"}, "3631": {"fn": "Loot._checkOnERC721Received", "offset": [5766, 5779], "op": "AND", "path": "7"}, "3632": {"fn": "Address.isContract", "offset": [1034, 1054], "op": "EXTCODESIZE", "path": "3"}, "3633": {"fn": "Address.isContract", "offset": [1080, 1088], "op": "ISZERO", "path": "3", "statement": 41}, "3634": {"fn": "Loot._checkOnERC721Received", "offset": [5762, 6479], "op": "PUSH2", "path": "7", "value": "0xF37"}, "3637": {"fn": "Loot._checkOnERC721Received", "offset": [5762, 6479], "op": "JUMPI", "path": "7"}, "3638": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x40"}, "3640": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "MLOAD", "path": "7"}, "3641": {"op": "PUSH4", "value": "0xA85BD01"}, "3646": {"op": "PUSH1", "value": "0xE1"}, "3648": {"op": "SHL"}, "3649": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP2", "path": "7"}, "3650": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "MSTORE", "path": "7"}, "3651": {"fn": "Loot._checkOnERC721Received", "offset": [5875, 5885], "op": "CALLER", "path": "7"}, "3652": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x4"}, "3654": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP3", "path": "7"}, "3655": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "ADD", "path": "7"}, "3656": {"op": "MSTORE"}, "3657": {"op": "PUSH1", "value": "0x1"}, "3659": {"op": "PUSH1", "value": "0x1"}, "3661": {"op": "PUSH1", "value": "0xA0"}, "3663": {"op": "SHL"}, "3664": {"op": "SUB"}, "3665": {"op": "DUP6"}, "3666": {"op": "DUP2"}, "3667": {"op": "AND"}, "3668": {"op": "PUSH1", "value": "0x24"}, "3670": {"op": "DUP4"}, "3671": {"op": "ADD"}, "3672": {"op": "MSTORE"}, "3673": {"op": "PUSH1", "value": "0x44"}, "3675": {"op": "DUP3"}, "3676": {"op": "ADD"}, "3677": {"op": "DUP5"}, "3678": {"op": "SWAP1"}, "3679": {"op": "MSTORE"}, "3680": {"op": "PUSH1", "value": "0x80"}, "3682": {"op": "PUSH1", "value": "0x64"}, "3684": {"op": "DUP4"}, "3685": {"op": "ADD"}, "3686": {"op": "MSTORE"}, "3687": {"op": "PUSH1", "value": "0x0"}, "3689": {"op": "PUSH1", "value": "0x84"}, "3691": {"op": "DUP4"}, "3692": {"op": "ADD"}, "3693": {"op": "MSTORE"}, "3694": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5853], "op": "DUP5", "path": "7"}, "3695": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5853], "op": "AND", "path": "7"}, "3696": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5853], "op": "SWAP1", "path": "7"}, "3697": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5853], "op": "PUSH4", "path": "7", "value": "0x150B7A02"}, "3702": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5853], "op": "SWAP1", "path": "7"}, "3703": {"op": "PUSH1", "value": "0xA4"}, "3705": {"op": "ADD"}, "3706": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x20"}, "3708": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x40"}, "3710": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "MLOAD", "path": "7"}, "3711": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP1", "path": "7"}, "3712": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP4", "path": "7"}, "3713": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "SUB", "path": "7"}, "3714": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP2", "path": "7"}, "3715": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x0"}, "3717": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP8", "path": "7"}, "3718": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP1", "path": "7"}, "3719": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "EXTCODESIZE", "path": "7"}, "3720": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "ISZERO", "path": "7"}, "3721": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP1", "path": "7"}, "3722": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "ISZERO", "path": "7"}, "3723": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH2", "path": "7", "value": "0xE93"}, "3726": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "JUMPI", "path": "7"}, "3727": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x0"}, "3729": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP1", "path": "7"}, "3730": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "REVERT", "path": "7"}, "3731": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "JUMPDEST", "path": "7"}, "3732": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "POP", "path": "7"}, "3733": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "GAS", "path": "7"}, "3734": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "CALL", "path": "7"}, "3735": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "SWAP3", "path": "7"}, "3736": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "POP", "path": "7"}, "3737": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "POP", "path": "7"}, "3738": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "POP", "path": "7"}, "3739": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP1", "path": "7"}, "3740": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "ISZERO", "path": "7"}, "3741": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH2", "path": "7", "value": "0xEC3"}, "3744": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "JUMPI", "path": "7"}, "3745": {"op": "POP"}, "3746": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x40"}, "3748": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP1", "path": "7"}, "3749": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "MLOAD", "path": "7"}, "3750": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x1F"}, "3752": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "RETURNDATASIZE", "path": "7"}, "3753": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "SWAP1", "path": "7"}, "3754": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP2", "path": "7"}, "3755": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "ADD", "path": "7"}, "3756": {"op": "PUSH1", "value": "0x1F"}, "3758": {"op": "NOT"}, "3759": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "AND", "path": "7"}, "3760": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP3", "path": "7"}, "3761": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "ADD", "path": "7"}, "3762": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "SWAP1", "path": "7"}, "3763": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "SWAP3", "path": "7"}, "3764": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "MSTORE", "path": "7"}, "3765": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH2", "path": "7", "value": "0xEC0"}, "3768": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "SWAP2", "path": "7"}, "3769": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "DUP2", "path": "7"}, "3770": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "ADD", "path": "7"}, "3771": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "SWAP1", "path": "7"}, "3772": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH2", "path": "7", "value": "0x12CB"}, "3775": {"fn": "Loot._checkOnERC721Received", "jump": "i", "offset": [5817, 5982], "op": "JUMP", "path": "7"}, "3776": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "JUMPDEST", "path": "7"}, "3777": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "PUSH1", "path": "7", "value": "0x1"}, "3779": {"fn": "Loot._checkOnERC721Received", "offset": [5817, 5982], "op": "JUMPDEST", "path": "7"}, "3780": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH2", "path": "7", "value": "0xF1D"}, "3783": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "JUMPI", "path": "7"}, "3784": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "RETURNDATASIZE", "path": "7"}, "3785": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "DUP1", "path": "7"}, "3786": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "DUP1", "path": "7"}, "3787": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "ISZERO", "path": "7"}, "3788": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH2", "path": "7", "value": "0xEF1"}, "3791": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "JUMPI", "path": "7"}, "3792": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH1", "path": "7", "value": "0x40"}, "3794": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "MLOAD", "path": "7"}, "3795": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "SWAP2", "path": "7"}, "3796": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "POP", "path": "7"}, "3797": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH1", "path": "7", "value": "0x1F"}, "3799": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "NOT", "path": "7"}, "3800": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH1", "path": "7", "value": "0x3F"}, "3802": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "RETURNDATASIZE", "path": "7"}, "3803": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "ADD", "path": "7"}, "3804": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "AND", "path": "7"}, "3805": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "DUP3", "path": "7"}, "3806": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "ADD", "path": "7"}, "3807": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH1", "path": "7", "value": "0x40"}, "3809": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "MSTORE", "path": "7"}, "3810": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "RETURNDATASIZE", "path": "7"}, "3811": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "DUP3", "path": "7"}, "3812": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "MSTORE", "path": "7"}, "3813": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "RETURNDATASIZE", "path": "7"}, "3814": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH1", "path": "7", "value": "0x0"}, "3816": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH1", "path": "7", "value": "0x20"}, "3818": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "DUP5", "path": "7"}, "3819": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "ADD", "path": "7"}, "3820": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "RETURNDATACOPY", "path": "7"}, "3821": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH2", "path": "7", "value": "0xEF6"}, "3824": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "JUMP", "path": "7"}, "3825": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "JUMPDEST", "path": "7"}, "3826": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "PUSH1", "path": "7", "value": "0x60"}, "3828": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "SWAP2", "path": "7"}, "3829": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "POP", "path": "7"}, "3830": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "JUMPDEST", "path": "7"}, "3831": {"op": "POP"}, "3832": {"fn": "Loot._checkOnERC721Received", "offset": [6161, 6174], "op": "DUP1", "path": "7"}, "3833": {"fn": "Loot._checkOnERC721Received", "offset": [6161, 6174], "op": "MLOAD", "path": "7"}, "3834": {"fn": "Loot._checkOnERC721Received", "offset": [6157, 6413], "op": "PUSH2", "path": "7", "value": "0xF15"}, "3837": {"fn": "Loot._checkOnERC721Received", "offset": [6157, 6413], "op": "JUMPI", "path": "7"}, "3838": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "PUSH1", "path": "7", "statement": 42, "value": "0x40"}, "3840": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "MLOAD", "path": "7"}, "3841": {"op": "PUSH3", "value": "0x461BCD"}, "3845": {"op": "PUSH1", "value": "0xE5"}, "3847": {"op": "SHL"}, "3848": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "DUP2", "path": "7"}, "3849": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "MSTORE", "path": "7"}, "3850": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "PUSH1", "path": "7", "value": "0x4"}, "3852": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "ADD", "path": "7"}, "3853": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "PUSH2", "path": "7", "value": "0x3D7"}, "3856": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "SWAP1", "path": "7"}, "3857": {"fn": "Loot._checkOnERC721Received", "offset": [6203, 6253], "op": "PUSH2", "path": "7", "value": "0x14E1"}, "3860": {"fn": "Loot._checkOnERC721Received", "jump": "i", "offset": [6203, 6253], "op": "JUMP", "path": "7"}, "3861": {"fn": "Loot._checkOnERC721Received", "offset": [6157, 6413], "op": "JUMPDEST", "path": "7"}, "3862": {"fn": "Loot._checkOnERC721Received", "offset": [6365, 6371], "op": "DUP1", "path": "7"}, "3863": {"fn": "Loot._checkOnERC721Received", "offset": [6359, 6372], "op": "MLOAD", "path": "7"}, "3864": {"fn": "Loot._checkOnERC721Received", "offset": [6350, 6356], "op": "DUP2", "path": "7"}, "3865": {"fn": "Loot._checkOnERC721Received", "offset": [6346, 6348], "op": "PUSH1", "path": "7", "value": "0x20"}, "3867": {"fn": "Loot._checkOnERC721Received", "offset": [6342, 6357], "op": "ADD", "path": "7"}, "3868": {"fn": "Loot._checkOnERC721Received", "offset": [6335, 6373], "op": "REVERT", "path": "7"}, "3869": {"fn": "Loot._checkOnERC721Received", "offset": [5797, 6427], "op": "JUMPDEST", "path": "7"}, "3870": {"op": "PUSH1", "value": "0x1"}, "3872": {"op": "PUSH1", "value": "0x1"}, "3874": {"op": "PUSH1", "value": "0xE0"}, "3876": {"op": "SHL"}, "3877": {"op": "SUB"}, "3878": {"op": "NOT"}, "3879": {"fn": "Loot._checkOnERC721Received", "offset": [6044, 6095], "op": "AND", "path": "7", "statement": 43}, "3880": {"op": "PUSH4", "value": "0xA85BD01"}, "3885": {"op": "PUSH1", "value": "0xE1"}, "3887": {"op": "SHL"}, "3888": {"fn": "Loot._checkOnERC721Received", "offset": [6044, 6095], "op": "EQ", "path": "7"}, "3889": {"fn": "Loot._checkOnERC721Received", "offset": [6044, 6095], "op": "SWAP1", "path": "7"}, "3890": {"op": "POP"}, "3891": {"fn": "Loot._checkOnERC721Received", "offset": [6037, 6095], "op": "PUSH2", "path": "7", "value": "0xDEE"}, "3894": {"fn": "Loot._checkOnERC721Received", "offset": [6037, 6095], "op": "JUMP", "path": "7"}, "3895": {"fn": "Loot._checkOnERC721Received", "offset": [5762, 6479], "op": "JUMPDEST", "path": "7"}, "3896": {"op": "POP"}, "3897": {"fn": "Loot._checkOnERC721Received", "offset": [6464, 6468], "op": "PUSH1", "path": "7", "statement": 44, "value": "0x1"}, "3899": {"fn": "Loot._checkOnERC721Received", "offset": [5624, 6485], "op": "SWAP4", "path": "7"}, "3900": {"fn": "Loot._checkOnERC721Received", "offset": [5624, 6485], "op": "SWAP3", "path": "7"}, "3901": {"fn": "Loot._checkOnERC721Received", "offset": [5624, 6485], "op": "POP", "path": "7"}, "3902": {"fn": "Loot._checkOnERC721Received", "offset": [5624, 6485], "op": "POP", "path": "7"}, "3903": {"fn": "Loot._checkOnERC721Received", "offset": [5624, 6485], "op": "POP", "path": "7"}, "3904": {"fn": "Loot._checkOnERC721Received", "jump": "o", "offset": [5624, 6485], "op": "JUMP", "path": "7"}, "3905": {"fn": "Strings.toString", "offset": [275, 978], "op": "JUMPDEST", "path": "4"}, "3906": {"fn": "Strings.toString", "offset": [331, 344], "op": "PUSH1", "path": "4", "value": "0x60"}, "3908": {"branch": 69, "fn": "Strings.toString", "offset": [548, 558], "op": "DUP2", "path": "4"}, "3909": {"fn": "Strings.toString", "offset": [544, 595], "op": "PUSH2", "path": "4", "value": "0xF65"}, "3912": {"branch": 69, "fn": "Strings.toString", "offset": [544, 595], "op": "JUMPI", "path": "4"}, "3913": {"op": "POP"}, "3914": {"op": "POP"}, "3915": {"fn": "Strings.toString", "offset": [574, 584], "op": "PUSH1", "path": "4", "statement": 45, "value": "0x40"}, "3917": {"fn": "Strings.toString", "offset": [574, 584], "op": "DUP1", "path": "4"}, "3918": {"fn": "Strings.toString", "offset": [574, 584], "op": "MLOAD", "path": "4"}, "3919": {"fn": "Strings.toString", "offset": [574, 584], "op": "DUP1", "path": "4"}, "3920": {"fn": "Strings.toString", "offset": [574, 584], "op": "DUP3", "path": "4"}, "3921": {"fn": "Strings.toString", "offset": [574, 584], "op": "ADD", "path": "4"}, "3922": {"fn": "Strings.toString", "offset": [574, 584], "op": "SWAP1", "path": "4"}, "3923": {"fn": "Strings.toString", "offset": [574, 584], "op": "SWAP2", "path": "4"}, "3924": {"fn": "Strings.toString", "offset": [574, 584], "op": "MSTORE", "path": "4"}, "3925": {"fn": "Strings.toString", "offset": [574, 584], "op": "PUSH1", "path": "4", "value": "0x1"}, "3927": {"fn": "Strings.toString", "offset": [574, 584], "op": "DUP2", "path": "4"}, "3928": {"fn": "Strings.toString", "offset": [574, 584], "op": "MSTORE", "path": "4"}, "3929": {"op": "PUSH1", "value": "0x3"}, "3931": {"op": "PUSH1", "value": "0xFC"}, "3933": {"op": "SHL"}, "3934": {"fn": "Strings.toString", "offset": [574, 584], "op": "PUSH1", "path": "4", "value": "0x20"}, "3936": {"fn": "Strings.toString", "offset": [574, 584], "op": "DUP3", "path": "4"}, "3937": {"fn": "Strings.toString", "offset": [574, 584], "op": "ADD", "path": "4"}, "3938": {"fn": "Strings.toString", "offset": [574, 584], "op": "MSTORE", "path": "4"}, "3939": {"fn": "Strings.toString", "offset": [574, 584], "op": "SWAP1", "path": "4"}, "3940": {"fn": "Strings.toString", "jump": "o", "offset": [275, 978], "op": "JUMP", "path": "4"}, "3941": {"fn": "Strings.toString", "offset": [544, 595], "op": "JUMPDEST", "path": "4"}, "3942": {"fn": "Strings.toString", "offset": [619, 624], "op": "DUP2", "path": "4"}, "3943": {"fn": "Strings.toString", "offset": [604, 616], "op": "PUSH1", "path": "4", "value": "0x0"}, "3945": {"fn": "Strings.toString", "offset": [658, 733], "op": "JUMPDEST", "path": "4"}, "3946": {"fn": "Strings.toString", "offset": [665, 674], "op": "DUP2", "path": "4"}, "3947": {"fn": "Strings.toString", "offset": [665, 674], "op": "ISZERO", "path": "4"}, "3948": {"fn": "Strings.toString", "offset": [658, 733], "op": "PUSH2", "path": "4", "value": "0xF8F"}, "3951": {"fn": "Strings.toString", "offset": [658, 733], "op": "JUMPI", "path": "4"}, "3952": {"fn": "Strings.toString", "offset": [690, 698], "op": "DUP1", "path": "4", "statement": 46}, "3953": {"fn": "Strings.toString", "offset": [690, 698], "op": "PUSH2", "path": "4", "value": "0xF79"}, "3956": {"fn": "Strings.toString", "offset": [690, 698], "op": "DUP2", "path": "4"}, "3957": {"fn": "Strings.toString", "offset": [690, 698], "op": "PUSH2", "path": "4", "value": "0x1628"}, "3960": {"fn": "Strings.toString", "jump": "i", "offset": [690, 698], "op": "JUMP", "path": "4"}, "3961": {"fn": "Strings.toString", "offset": [690, 698], "op": "JUMPDEST", "path": "4"}, "3962": {"fn": "Strings.toString", "offset": [690, 698], "op": "SWAP2", "path": "4"}, "3963": {"op": "POP"}, "3964": {"fn": "Strings.toString", "offset": [712, 722], "op": "PUSH2", "path": "4", "statement": 47, "value": "0xF88"}, "3967": {"fn": "Strings.toString", "offset": [712, 722], "op": "SWAP1", "path": "4"}, "3968": {"op": "POP"}, "3969": {"fn": "Strings.toString", "offset": [720, 722], "op": "PUSH1", "path": "4", "value": "0xA"}, "3971": {"fn": "Strings.toString", "offset": [712, 722], "op": "DUP4", "path": "4"}, "3972": {"fn": "Strings.toString", "offset": [712, 722], "op": "PUSH2", "path": "4", "value": "0x1596"}, "3975": {"fn": "Strings.toString", "jump": "i", "offset": [712, 722], "op": "JUMP", "path": "4"}, "3976": {"fn": "Strings.toString", "offset": [712, 722], "op": "JUMPDEST", "path": "4"}, "3977": {"fn": "Strings.toString", "offset": [712, 722], "op": "SWAP2", "path": "4"}, "3978": {"fn": "Strings.toString", "offset": [712, 722], "op": "POP", "path": "4"}, "3979": {"fn": "Strings.toString", "offset": [658, 733], "op": "PUSH2", "path": "4", "value": "0xF69"}, "3982": {"fn": "Strings.toString", "offset": [658, 733], "op": "JUMP", "path": "4"}, "3983": {"fn": "Strings.toString", "offset": [658, 733], "op": "JUMPDEST", "path": "4"}, "3984": {"fn": "Strings.toString", "offset": [742, 761], "op": "PUSH1", "path": "4", "value": "0x0"}, "3986": {"fn": "Strings.toString", "offset": [774, 780], "op": "DUP2", "path": "4"}, "3987": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH8", "path": "4", "value": "0xFFFFFFFFFFFFFFFF"}, "3996": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP2", "path": "4"}, "3997": {"fn": "Strings.toString", "offset": [764, 781], "op": "GT", "path": "4"}, "3998": {"fn": "Strings.toString", "offset": [764, 781], "op": "ISZERO", "path": "4"}, "3999": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH2", "path": "4", "value": "0xFAA"}, "4002": {"fn": "Strings.toString", "offset": [764, 781], "op": "JUMPI", "path": "4"}, "4003": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH2", "path": "4", "value": "0xFAA"}, "4006": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH2", "path": "4", "value": "0x1699"}, "4009": {"fn": "Strings.toString", "jump": "i", "offset": [764, 781], "op": "JUMP", "path": "4"}, "4010": {"fn": "Strings.toString", "offset": [764, 781], "op": "JUMPDEST", "path": "4"}, "4011": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH1", "path": "4", "value": "0x40"}, "4013": {"fn": "Strings.toString", "offset": [764, 781], "op": "MLOAD", "path": "4"}, "4014": {"fn": "Strings.toString", "offset": [764, 781], "op": "SWAP1", "path": "4"}, "4015": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP1", "path": "4"}, "4016": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP3", "path": "4"}, "4017": {"fn": "Strings.toString", "offset": [764, 781], "op": "MSTORE", "path": "4"}, "4018": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP1", "path": "4"}, "4019": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH1", "path": "4", "value": "0x1F"}, "4021": {"fn": "Strings.toString", "offset": [764, 781], "op": "ADD", "path": "4"}, "4022": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH1", "path": "4", "value": "0x1F"}, "4024": {"fn": "Strings.toString", "offset": [764, 781], "op": "NOT", "path": "4"}, "4025": {"fn": "Strings.toString", "offset": [764, 781], "op": "AND", "path": "4"}, "4026": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH1", "path": "4", "value": "0x20"}, "4028": {"fn": "Strings.toString", "offset": [764, 781], "op": "ADD", "path": "4"}, "4029": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP3", "path": "4"}, "4030": {"fn": "Strings.toString", "offset": [764, 781], "op": "ADD", "path": "4"}, "4031": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH1", "path": "4", "value": "0x40"}, "4033": {"fn": "Strings.toString", "offset": [764, 781], "op": "MSTORE", "path": "4"}, "4034": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP1", "path": "4"}, "4035": {"fn": "Strings.toString", "offset": [764, 781], "op": "ISZERO", "path": "4"}, "4036": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH2", "path": "4", "value": "0xFD4"}, "4039": {"fn": "Strings.toString", "offset": [764, 781], "op": "JUMPI", "path": "4"}, "4040": {"fn": "Strings.toString", "offset": [764, 781], "op": "PUSH1", "path": "4", "value": "0x20"}, "4042": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP3", "path": "4"}, "4043": {"fn": "Strings.toString", "offset": [764, 781], "op": "ADD", "path": "4"}, "4044": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP2", "path": "4"}, "4045": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP1", "path": "4"}, "4046": {"fn": "Strings.toString", "offset": [764, 781], "op": "CALLDATASIZE", "path": "4"}, "4047": {"fn": "Strings.toString", "offset": [764, 781], "op": "DUP4", "path": "4"}, "4048": {"fn": "Strings.toString", "offset": [764, 781], "op": "CALLDATACOPY", "path": "4"}, "4049": {"fn": "Strings.toString", "offset": [764, 781], "op": "ADD", "path": "4"}, "4050": {"fn": "Strings.toString", "offset": [764, 781], "op": "SWAP1", "path": "4"}, "4051": {"op": "POP"}, "4052": {"fn": "Strings.toString", "offset": [764, 781], "op": "JUMPDEST", "path": "4"}, "4053": {"fn": "Strings.toString", "offset": [764, 781], "op": "POP", "path": "4"}, "4054": {"fn": "Strings.toString", "offset": [742, 781], "op": "SWAP1", "path": "4"}, "4055": {"fn": "Strings.toString", "offset": [742, 781], "op": "POP", "path": "4"}, "4056": {"fn": "Strings.toString", "offset": [791, 941], "op": "JUMPDEST", "path": "4"}, "4057": {"fn": "Strings.toString", "offset": [798, 808], "op": "DUP5", "path": "4"}, "4058": {"fn": "Strings.toString", "offset": [798, 808], "op": "ISZERO", "path": "4"}, "4059": {"fn": "Strings.toString", "offset": [791, 941], "op": "PUSH2", "path": "4", "value": "0x103F"}, "4062": {"fn": "Strings.toString", "offset": [791, 941], "op": "JUMPI", "path": "4"}, "4063": {"fn": "Strings.toString", "offset": [824, 835], "op": "PUSH2", "path": "4", "statement": 48, "value": "0xFE9"}, "4066": {"fn": "Strings.toString", "offset": [834, 835], "op": "PUSH1", "path": "4", "value": "0x1"}, "4068": {"fn": "Strings.toString", "offset": [824, 835], "op": "DUP4", "path": "4"}, "4069": {"fn": "Strings.toString", "offset": [824, 835], "op": "PUSH2", "path": "4", "value": "0x15AA"}, "4072": {"fn": "Strings.toString", "jump": "i", "offset": [824, 835], "op": "JUMP", "path": "4"}, "4073": {"fn": "Strings.toString", "offset": [824, 835], "op": "JUMPDEST", "path": "4"}, "4074": {"fn": "Strings.toString", "offset": [824, 835], "op": "SWAP2", "path": "4"}, "4075": {"op": "POP"}, "4076": {"fn": "Strings.toString", "offset": [892, 902], "op": "PUSH2", "path": "4", "statement": 49, "value": "0xFF6"}, "4079": {"fn": "Strings.toString", "offset": [900, 902], "op": "PUSH1", "path": "4", "value": "0xA"}, "4081": {"fn": "Strings.toString", "offset": [892, 897], "op": "DUP7", "path": "4"}, "4082": {"fn": "Strings.toString", "offset": [892, 902], "op": "PUSH2", "path": "4", "value": "0x1643"}, "4085": {"fn": "Strings.toString", "jump": "i", "offset": [892, 902], "op": "JUMP", "path": "4"}, "4086": {"fn": "Strings.toString", "offset": [892, 902], "op": "JUMPDEST", "path": "4"}, "4087": {"fn": "Strings.toString", "offset": [879, 903], "op": "PUSH2", "path": "4", "value": "0x1001"}, "4090": {"fn": "Strings.toString", "offset": [879, 903], "op": "SWAP1", "path": "4"}, "4091": {"fn": "Strings.toString", "offset": [879, 881], "op": "PUSH1", "path": "4", "value": "0x30"}, "4093": {"fn": "Strings.toString", "offset": [879, 903], "op": "PUSH2", "path": "4", "value": "0x157E"}, "4096": {"fn": "Strings.toString", "jump": "i", "offset": [879, 903], "op": "JUMP", "path": "4"}, "4097": {"fn": "Strings.toString", "offset": [879, 903], "op": "JUMPDEST", "path": "4"}, "4098": {"fn": "Strings.toString", "offset": [866, 905], "op": "PUSH1", "path": "4", "value": "0xF8"}, "4100": {"fn": "Strings.toString", "offset": [866, 905], "op": "SHL", "path": "4"}, "4101": {"fn": "Strings.toString", "offset": [849, 855], "op": "DUP2", "path": "4"}, "4102": {"fn": "Strings.toString", "offset": [856, 862], "op": "DUP4", "path": "4"}, "4103": {"fn": "Strings.toString", "offset": [849, 863], "op": "DUP2", "path": "4"}, "4104": {"fn": "Strings.toString", "offset": [849, 863], "op": "MLOAD", "path": "4"}, "4105": {"fn": "Strings.toString", "offset": [849, 863], "op": "DUP2", "path": "4"}, "4106": {"fn": "Strings.toString", "offset": [849, 863], "op": "LT", "path": "4"}, "4107": {"fn": "Strings.toString", "offset": [849, 863], "op": "PUSH2", "path": "4", "value": "0x1016"}, "4110": {"fn": "Strings.toString", "offset": [849, 863], "op": "JUMPI", "path": "4"}, "4111": {"fn": "Strings.toString", "offset": [849, 863], "op": "PUSH2", "path": "4", "value": "0x1016"}, "4114": {"fn": "Strings.toString", "offset": [849, 863], "op": "PUSH2", "path": "4", "value": "0x1683"}, "4117": {"fn": "Strings.toString", "jump": "i", "offset": [849, 863], "op": "JUMP", "path": "4"}, "4118": {"fn": "Strings.toString", "offset": [849, 863], "op": "JUMPDEST", "path": "4"}, "4119": {"fn": "Strings.toString", "offset": [849, 863], "op": "PUSH1", "path": "4", "value": "0x20"}, "4121": {"fn": "Strings.toString", "offset": [849, 863], "op": "ADD", "path": "4"}, "4122": {"fn": "Strings.toString", "offset": [849, 863], "op": "ADD", "path": "4"}, "4123": {"fn": "Strings.toString", "offset": [849, 905], "op": "SWAP1", "path": "4"}, "4124": {"op": "PUSH1", "value": "0x1"}, "4126": {"op": "PUSH1", "value": "0x1"}, "4128": {"op": "PUSH1", "value": "0xF8"}, "4130": {"op": "SHL"}, "4131": {"op": "SUB"}, "4132": {"fn": "Strings.toString", "offset": [849, 905], "op": "NOT", "path": "4"}, "4133": {"fn": "Strings.toString", "offset": [849, 905], "op": "AND", "path": "4"}, "4134": {"fn": "Strings.toString", "offset": [849, 905], "op": "SWAP1", "path": "4"}, "4135": {"fn": "Strings.toString", "offset": [849, 905], "op": "DUP2", "path": "4"}, "4136": {"fn": "Strings.toString", "offset": [849, 905], "op": "PUSH1", "path": "4", "value": "0x0"}, "4138": {"fn": "Strings.toString", "offset": [849, 905], "op": "BYTE", "path": "4"}, "4139": {"fn": "Strings.toString", "offset": [849, 905], "op": "SWAP1", "path": "4"}, "4140": {"fn": "Strings.toString", "offset": [849, 905], "op": "MSTORE8", "path": "4"}, "4141": {"op": "POP"}, "4142": {"fn": "Strings.toString", "offset": [919, 930], "op": "PUSH2", "path": "4", "statement": 50, "value": "0x1038"}, "4145": {"fn": "Strings.toString", "offset": [928, 930], "op": "PUSH1", "path": "4", "value": "0xA"}, "4147": {"fn": "Strings.toString", "offset": [919, 930], "op": "DUP7", "path": "4"}, "4148": {"fn": "Strings.toString", "offset": [919, 930], "op": "PUSH2", "path": "4", "value": "0x1596"}, "4151": {"fn": "Strings.toString", "jump": "i", "offset": [919, 930], "op": "JUMP", "path": "4"}, "4152": {"fn": "Strings.toString", "offset": [919, 930], "op": "JUMPDEST", "path": "4"}, "4153": {"fn": "Strings.toString", "offset": [919, 930], "op": "SWAP5", "path": "4"}, "4154": {"fn": "Strings.toString", "offset": [919, 930], "op": "POP", "path": "4"}, "4155": {"fn": "Strings.toString", "offset": [791, 941], "op": "PUSH2", "path": "4", "value": "0xFD8"}, "4158": {"fn": "Strings.toString", "offset": [791, 941], "op": "JUMP", "path": "4"}, "4159": {"fn": "Strings.toString", "offset": [791, 941], "op": "JUMPDEST", "path": "4"}, "4160": {"fn": "Strings.toString", "offset": [964, 970], "op": "SWAP5", "path": "4", "statement": 51}, "4161": {"fn": "Strings.toString", "offset": [275, 978], "op": "SWAP4", "path": "4"}, "4162": {"op": "POP"}, "4163": {"op": "POP"}, "4164": {"op": "POP"}, "4165": {"op": "POP"}, "4166": {"fn": "Strings.toString", "jump": "o", "offset": [275, 978], "op": "JUMP", "path": "4"}, "4167": {"op": "JUMPDEST"}, "4168": {"op": "PUSH1", "value": "0x0"}, "4170": {"op": "DUP3"}, "4171": {"op": "PUSH1", "value": "0x1F"}, "4173": {"op": "DUP4"}, "4174": {"op": "ADD"}, "4175": {"op": "SLT"}, "4176": {"op": "PUSH2", "value": "0x1058"}, "4179": {"op": "JUMPI"}, "4180": {"op": "PUSH1", "value": "0x0"}, "4182": {"op": "DUP1"}, "4183": {"op": "REVERT"}, "4184": {"op": "JUMPDEST"}, "4185": {"op": "DUP2"}, "4186": {"op": "CALLDATALOAD"}, "4187": {"op": "PUSH1", "value": "0x20"}, "4189": {"op": "PUSH2", "value": "0x106D"}, "4192": {"op": "PUSH2", "value": "0x1068"}, "4195": {"op": "DUP4"}, "4196": {"op": "PUSH2", "value": "0x155A"}, "4199": {"jump": "i", "op": "JUMP"}, "4200": {"op": "JUMPDEST"}, "4201": {"op": "PUSH2", "value": "0x1529"}, "4204": {"jump": "i", "op": "JUMP"}, "4205": {"op": "JUMPDEST"}, "4206": {"op": "DUP1"}, "4207": {"op": "DUP4"}, "4208": {"op": "DUP3"}, "4209": {"op": "MSTORE"}, "4210": {"op": "DUP3"}, "4211": {"op": "DUP3"}, "4212": {"op": "ADD"}, "4213": {"op": "SWAP2"}, "4214": {"op": "POP"}, "4215": {"op": "DUP3"}, "4216": {"op": "DUP7"}, "4217": {"op": "ADD"}, "4218": {"op": "DUP8"}, "4219": {"op": "DUP5"}, "4220": {"op": "DUP7"}, "4221": {"op": "PUSH1", "value": "0x5"}, "4223": {"op": "SHL"}, "4224": {"op": "DUP10"}, "4225": {"op": "ADD"}, "4226": {"op": "ADD"}, "4227": {"op": "GT"}, "4228": {"op": "ISZERO"}, "4229": {"op": "PUSH2", "value": "0x108D"}, "4232": {"op": "JUMPI"}, "4233": {"op": "PUSH1", "value": "0x0"}, "4235": {"op": "DUP1"}, "4236": {"op": "REVERT"}, "4237": {"op": "JUMPDEST"}, "4238": {"op": "PUSH1", "value": "0x0"}, "4240": {"op": "JUMPDEST"}, "4241": {"op": "DUP6"}, "4242": {"op": "DUP2"}, "4243": {"op": "LT"}, "4244": {"op": "ISZERO"}, "4245": {"op": "PUSH2", "value": "0x10B3"}, "4248": {"op": "JUMPI"}, "4249": {"op": "PUSH2", "value": "0x10A1"}, "4252": {"op": "DUP3"}, "4253": {"op": "PUSH2", "value": "0x10C0"}, "4256": {"jump": "i", "op": "JUMP"}, "4257": {"op": "JUMPDEST"}, "4258": {"op": "DUP5"}, "4259": {"op": "MSTORE"}, "4260": {"op": "SWAP3"}, "4261": {"op": "DUP5"}, "4262": {"op": "ADD"}, "4263": {"op": "SWAP3"}, "4264": {"op": "SWAP1"}, "4265": {"op": "DUP5"}, "4266": {"op": "ADD"}, "4267": {"op": "SWAP1"}, "4268": {"op": "PUSH1", "value": "0x1"}, "4270": {"op": "ADD"}, "4271": {"op": "PUSH2", "value": "0x1090"}, "4274": {"op": "JUMP"}, "4275": {"op": "JUMPDEST"}, "4276": {"op": "POP"}, "4277": {"op": "SWAP1"}, "4278": {"op": "SWAP8"}, "4279": {"op": "SWAP7"}, "4280": {"op": "POP"}, "4281": {"op": "POP"}, "4282": {"op": "POP"}, "4283": {"op": "POP"}, "4284": {"op": "POP"}, "4285": {"op": "POP"}, "4286": {"op": "POP"}, "4287": {"jump": "o", "op": "JUMP"}, "4288": {"op": "JUMPDEST"}, "4289": {"op": "DUP1"}, "4290": {"op": "CALLDATALOAD"}, "4291": {"op": "DUP1"}, "4292": {"op": "ISZERO"}, "4293": {"op": "ISZERO"}, "4294": {"op": "DUP2"}, "4295": {"op": "EQ"}, "4296": {"op": "PUSH2", "value": "0x10D0"}, "4299": {"op": "JUMPI"}, "4300": {"op": "PUSH1", "value": "0x0"}, "4302": {"op": "DUP1"}, "4303": {"op": "REVERT"}, "4304": {"op": "JUMPDEST"}, "4305": {"op": "SWAP2"}, "4306": {"op": "SWAP1"}, "4307": {"op": "POP"}, "4308": {"jump": "o", "op": "JUMP"}, "4309": {"op": "JUMPDEST"}, "4310": {"op": "PUSH1", "value": "0x0"}, "4312": {"op": "PUSH1", "value": "0x20"}, "4314": {"op": "DUP3"}, "4315": {"op": "DUP5"}, "4316": {"op": "SUB"}, "4317": {"op": "SLT"}, "4318": {"op": "ISZERO"}, "4319": {"op": "PUSH2", "value": "0x10E7"}, "4322": {"op": "JUMPI"}, "4323": {"op": "PUSH1", "value": "0x0"}, "4325": {"op": "DUP1"}, "4326": {"op": "REVERT"}, "4327": {"op": "JUMPDEST"}, "4328": {"op": "DUP2"}, "4329": {"op": "CALLDATALOAD"}, "4330": {"op": "PUSH2", "value": "0xDEE"}, "4333": {"op": "DUP2"}, "4334": {"op": "PUSH2", "value": "0x16AF"}, "4337": {"jump": "i", "op": "JUMP"}, "4338": {"op": "JUMPDEST"}, "4339": {"op": "PUSH1", "value": "0x0"}, "4341": {"op": "PUSH1", "value": "0x20"}, "4343": {"op": "DUP3"}, "4344": {"op": "DUP5"}, "4345": {"op": "SUB"}, "4346": {"op": "SLT"}, "4347": {"op": "ISZERO"}, "4348": {"op": "PUSH2", "value": "0x1104"}, "4351": {"op": "JUMPI"}, "4352": {"op": "PUSH1", "value": "0x0"}, "4354": {"op": "DUP1"}, "4355": {"op": "REVERT"}, "4356": {"op": "JUMPDEST"}, "4357": {"op": "DUP2"}, "4358": {"op": "MLOAD"}, "4359": {"op": "PUSH2", "value": "0xDEE"}, "4362": {"op": "DUP2"}, "4363": {"op": "PUSH2", "value": "0x16AF"}, "4366": {"jump": "i", "op": "JUMP"}, "4367": {"op": "JUMPDEST"}, "4368": {"op": "PUSH1", "value": "0x0"}, "4370": {"op": "DUP1"}, "4371": {"op": "PUSH1", "value": "0x40"}, "4373": {"op": "DUP4"}, "4374": {"op": "DUP6"}, "4375": {"op": "SUB"}, "4376": {"op": "SLT"}, "4377": {"op": "ISZERO"}, "4378": {"op": "PUSH2", "value": "0x1122"}, "4381": {"op": "JUMPI"}, "4382": {"op": "PUSH1", "value": "0x0"}, "4384": {"op": "DUP1"}, "4385": {"op": "REVERT"}, "4386": {"op": "JUMPDEST"}, "4387": {"op": "DUP3"}, "4388": {"op": "CALLDATALOAD"}, "4389": {"op": "PUSH2", "value": "0x112D"}, "4392": {"op": "DUP2"}, "4393": {"op": "PUSH2", "value": "0x16AF"}, "4396": {"jump": "i", "op": "JUMP"}, "4397": {"op": "JUMPDEST"}, "4398": {"op": "SWAP2"}, "4399": {"op": "POP"}, "4400": {"op": "PUSH1", "value": "0x20"}, "4402": {"op": "DUP4"}, "4403": {"op": "ADD"}, "4404": {"op": "CALLDATALOAD"}, "4405": {"op": "PUSH2", "value": "0x113D"}, "4408": {"op": "DUP2"}, "4409": {"op": "PUSH2", "value": "0x16AF"}, "4412": {"jump": "i", "op": "JUMP"}, "4413": {"op": "JUMPDEST"}, "4414": {"op": "DUP1"}, "4415": {"op": "SWAP2"}, "4416": {"op": "POP"}, "4417": {"op": "POP"}, "4418": {"op": "SWAP3"}, "4419": {"op": "POP"}, "4420": {"op": "SWAP3"}, "4421": {"op": "SWAP1"}, "4422": {"op": "POP"}, "4423": {"jump": "o", "op": "JUMP"}, "4424": {"op": "JUMPDEST"}, "4425": {"op": "PUSH1", "value": "0x0"}, "4427": {"op": "DUP1"}, "4428": {"op": "PUSH1", "value": "0x0"}, "4430": {"op": "PUSH1", "value": "0x60"}, "4432": {"op": "DUP5"}, "4433": {"op": "DUP7"}, "4434": {"op": "SUB"}, "4435": {"op": "SLT"}, "4436": {"op": "ISZERO"}, "4437": {"op": "PUSH2", "value": "0x115D"}, "4440": {"op": "JUMPI"}, "4441": {"op": "PUSH1", "value": "0x0"}, "4443": {"op": "DUP1"}, "4444": {"op": "REVERT"}, "4445": {"op": "JUMPDEST"}, "4446": {"op": "DUP4"}, "4447": {"op": "CALLDATALOAD"}, "4448": {"op": "PUSH2", "value": "0x1168"}, "4451": {"op": "DUP2"}, "4452": {"op": "PUSH2", "value": "0x16AF"}, "4455": {"jump": "i", "op": "JUMP"}, "4456": {"op": "JUMPDEST"}, "4457": {"op": "SWAP3"}, "4458": {"op": "POP"}, "4459": {"op": "PUSH1", "value": "0x20"}, "4461": {"op": "DUP5"}, "4462": {"op": "ADD"}, "4463": {"op": "CALLDATALOAD"}, "4464": {"op": "PUSH2", "value": "0x1178"}, "4467": {"op": "DUP2"}, "4468": {"op": "PUSH2", "value": "0x16AF"}, "4471": {"jump": "i", "op": "JUMP"}, "4472": {"op": "JUMPDEST"}, "4473": {"op": "SWAP3"}, "4474": {"op": "SWAP6"}, "4475": {"op": "SWAP3"}, "4476": {"op": "SWAP5"}, "4477": {"op": "POP"}, "4478": {"op": "POP"}, "4479": {"op": "POP"}, "4480": {"op": "PUSH1", "value": "0x40"}, "4482": {"op": "SWAP2"}, "4483": {"op": "SWAP1"}, "4484": {"op": "SWAP2"}, "4485": {"op": "ADD"}, "4486": {"op": "CALLDATALOAD"}, "4487": {"op": "SWAP1"}, "4488": {"jump": "o", "op": "JUMP"}, "4489": {"op": "JUMPDEST"}, "4490": {"op": "PUSH1", "value": "0x0"}, "4492": {"op": "DUP1"}, "4493": {"op": "PUSH1", "value": "0x0"}, "4495": {"op": "DUP1"}, "4496": {"op": "PUSH1", "value": "0x80"}, "4498": {"op": "DUP6"}, "4499": {"op": "DUP8"}, "4500": {"op": "SUB"}, "4501": {"op": "SLT"}, "4502": {"op": "ISZERO"}, "4503": {"op": "PUSH2", "value": "0x119F"}, "4506": {"op": "JUMPI"}, "4507": {"op": "PUSH1", "value": "0x0"}, "4509": {"op": "DUP1"}, "4510": {"op": "REVERT"}, "4511": {"op": "JUMPDEST"}, "4512": {"op": "DUP5"}, "4513": {"op": "CALLDATALOAD"}, "4514": {"op": "PUSH2", "value": "0x11AA"}, "4517": {"op": "DUP2"}, "4518": {"op": "PUSH2", "value": "0x16AF"}, "4521": {"jump": "i", "op": "JUMP"}, "4522": {"op": "JUMPDEST"}, "4523": {"op": "SWAP4"}, "4524": {"op": "POP"}, "4525": {"op": "PUSH1", "value": "0x20"}, "4527": {"op": "DUP6"}, "4528": {"op": "DUP2"}, "4529": {"op": "ADD"}, "4530": {"op": "CALLDATALOAD"}, "4531": {"op": "PUSH2", "value": "0x11BB"}, "4534": {"op": "DUP2"}, "4535": {"op": "PUSH2", "value": "0x16AF"}, "4538": {"jump": "i", "op": "JUMP"}, "4539": {"op": "JUMPDEST"}, "4540": {"op": "SWAP4"}, "4541": {"op": "POP"}, "4542": {"op": "PUSH1", "value": "0x40"}, "4544": {"op": "DUP7"}, "4545": {"op": "ADD"}, "4546": {"op": "CALLDATALOAD"}, "4547": {"op": "SWAP3"}, "4548": {"op": "POP"}, "4549": {"op": "PUSH1", "value": "0x60"}, "4551": {"op": "DUP7"}, "4552": {"op": "ADD"}, "4553": {"op": "CALLDATALOAD"}, "4554": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "4563": {"op": "DUP1"}, "4564": {"op": "DUP3"}, "4565": {"op": "GT"}, "4566": {"op": "ISZERO"}, "4567": {"op": "PUSH2", "value": "0x11DF"}, "4570": {"op": "JUMPI"}, "4571": {"op": "PUSH1", "value": "0x0"}, "4573": {"op": "DUP1"}, "4574": {"op": "REVERT"}, "4575": {"op": "JUMPDEST"}, "4576": {"op": "DUP2"}, "4577": {"op": "DUP9"}, "4578": {"op": "ADD"}, "4579": {"op": "SWAP2"}, "4580": {"op": "POP"}, "4581": {"op": "DUP9"}, "4582": {"op": "PUSH1", "value": "0x1F"}, "4584": {"op": "DUP4"}, "4585": {"op": "ADD"}, "4586": {"op": "SLT"}, "4587": {"op": "PUSH2", "value": "0x11F3"}, "4590": {"op": "JUMPI"}, "4591": {"op": "PUSH1", "value": "0x0"}, "4593": {"op": "DUP1"}, "4594": {"op": "REVERT"}, "4595": {"op": "JUMPDEST"}, "4596": {"op": "DUP2"}, "4597": {"op": "CALLDATALOAD"}, "4598": {"op": "DUP2"}, "4599": {"op": "DUP2"}, "4600": {"op": "GT"}, "4601": {"op": "ISZERO"}, "4602": {"op": "PUSH2", "value": "0x1205"}, "4605": {"op": "JUMPI"}, "4606": {"op": "PUSH2", "value": "0x1205"}, "4609": {"op": "PUSH2", "value": "0x1699"}, "4612": {"jump": "i", "op": "JUMP"}, "4613": {"op": "JUMPDEST"}, "4614": {"op": "PUSH2", "value": "0x1217"}, "4617": {"op": "PUSH1", "value": "0x1F"}, "4619": {"op": "DUP3"}, "4620": {"op": "ADD"}, "4621": {"op": "PUSH1", "value": "0x1F"}, "4623": {"op": "NOT"}, "4624": {"op": "AND"}, "4625": {"op": "DUP6"}, "4626": {"op": "ADD"}, "4627": {"op": "PUSH2", "value": "0x1529"}, "4630": {"jump": "i", "op": "JUMP"}, "4631": {"op": "JUMPDEST"}, "4632": {"op": "SWAP2"}, "4633": {"op": "POP"}, "4634": {"op": "DUP1"}, "4635": {"op": "DUP3"}, "4636": {"op": "MSTORE"}, "4637": {"op": "DUP10"}, "4638": {"op": "DUP5"}, "4639": {"op": "DUP3"}, "4640": {"op": "DUP6"}, "4641": {"op": "ADD"}, "4642": {"op": "ADD"}, "4643": {"op": "GT"}, "4644": {"op": "ISZERO"}, "4645": {"op": "PUSH2", "value": "0x122D"}, "4648": {"op": "JUMPI"}, "4649": {"op": "PUSH1", "value": "0x0"}, "4651": {"op": "DUP1"}, "4652": {"op": "REVERT"}, "4653": {"op": "JUMPDEST"}, "4654": {"op": "DUP1"}, "4655": {"op": "DUP5"}, "4656": {"op": "DUP5"}, "4657": {"op": "ADD"}, "4658": {"op": "DUP6"}, "4659": {"op": "DUP5"}, "4660": {"op": "ADD"}, "4661": {"op": "CALLDATACOPY"}, "4662": {"op": "PUSH1", "value": "0x0"}, "4664": {"op": "DUP5"}, "4665": {"op": "DUP3"}, "4666": {"op": "DUP5"}, "4667": {"op": "ADD"}, "4668": {"op": "ADD"}, "4669": {"op": "MSTORE"}, "4670": {"op": "POP"}, "4671": {"op": "DUP1"}, "4672": {"op": "SWAP4"}, "4673": {"op": "POP"}, "4674": {"op": "POP"}, "4675": {"op": "POP"}, "4676": {"op": "POP"}, "4677": {"op": "SWAP3"}, "4678": {"op": "SWAP6"}, "4679": {"op": "SWAP2"}, "4680": {"op": "SWAP5"}, "4681": {"op": "POP"}, "4682": {"op": "SWAP3"}, "4683": {"op": "POP"}, "4684": {"jump": "o", "op": "JUMP"}, "4685": {"op": "JUMPDEST"}, "4686": {"op": "PUSH1", "value": "0x0"}, "4688": {"op": "DUP1"}, "4689": {"op": "PUSH1", "value": "0x40"}, "4691": {"op": "DUP4"}, "4692": {"op": "DUP6"}, "4693": {"op": "SUB"}, "4694": {"op": "SLT"}, "4695": {"op": "ISZERO"}, "4696": {"op": "PUSH2", "value": "0x1260"}, "4699": {"op": "JUMPI"}, "4700": {"op": "PUSH1", "value": "0x0"}, "4702": {"op": "DUP1"}, "4703": {"op": "REVERT"}, "4704": {"op": "JUMPDEST"}, "4705": {"op": "DUP3"}, "4706": {"op": "CALLDATALOAD"}, "4707": {"op": "PUSH2", "value": "0x126B"}, "4710": {"op": "DUP2"}, "4711": {"op": "PUSH2", "value": "0x16AF"}, "4714": {"jump": "i", "op": "JUMP"}, "4715": {"op": "JUMPDEST"}, "4716": {"op": "SWAP2"}, "4717": {"op": "POP"}, "4718": {"op": "PUSH2", "value": "0x1279"}, "4721": {"op": "PUSH1", "value": "0x20"}, "4723": {"op": "DUP5"}, "4724": {"op": "ADD"}, "4725": {"op": "PUSH2", "value": "0x10C0"}, "4728": {"jump": "i", "op": "JUMP"}, "4729": {"op": "JUMPDEST"}, "4730": {"op": "SWAP1"}, "4731": {"op": "POP"}, "4732": {"op": "SWAP3"}, "4733": {"op": "POP"}, "4734": {"op": "SWAP3"}, "4735": {"op": "SWAP1"}, "4736": {"op": "POP"}, "4737": {"jump": "o", "op": "JUMP"}, "4738": {"op": "JUMPDEST"}, "4739": {"op": "PUSH1", "value": "0x0"}, "4741": {"op": "DUP1"}, "4742": {"op": "PUSH1", "value": "0x40"}, "4744": {"op": "DUP4"}, "4745": {"op": "DUP6"}, "4746": {"op": "SUB"}, "4747": {"op": "SLT"}, "4748": {"op": "ISZERO"}, "4749": {"op": "PUSH2", "value": "0x1295"}, "4752": {"op": "JUMPI"}, "4753": {"op": "PUSH1", "value": "0x0"}, "4755": {"op": "DUP1"}, "4756": {"op": "REVERT"}, "4757": {"op": "JUMPDEST"}, "4758": {"op": "DUP3"}, "4759": {"op": "CALLDATALOAD"}, "4760": {"op": "PUSH2", "value": "0x12A0"}, "4763": {"op": "DUP2"}, "4764": {"op": "PUSH2", "value": "0x16AF"}, "4767": {"jump": "i", "op": "JUMP"}, "4768": {"op": "JUMPDEST"}, "4769": {"op": "SWAP5"}, "4770": {"op": "PUSH1", "value": "0x20"}, "4772": {"op": "SWAP4"}, "4773": {"op": "SWAP1"}, "4774": {"op": "SWAP4"}, "4775": {"op": "ADD"}, "4776": {"op": "CALLDATALOAD"}, "4777": {"op": "SWAP4"}, "4778": {"op": "POP"}, "4779": {"op": "POP"}, "4780": {"op": "POP"}, "4781": {"jump": "o", "op": "JUMP"}, "4782": {"op": "JUMPDEST"}, "4783": {"op": "PUSH1", "value": "0x0"}, "4785": {"op": "PUSH1", "value": "0x20"}, "4787": {"op": "DUP3"}, "4788": {"op": "DUP5"}, "4789": {"op": "SUB"}, "4790": {"op": "SLT"}, "4791": {"op": "ISZERO"}, "4792": {"op": "PUSH2", "value": "0x12C0"}, "4795": {"op": "JUMPI"}, "4796": {"op": "PUSH1", "value": "0x0"}, "4798": {"op": "DUP1"}, "4799": {"op": "REVERT"}, "4800": {"op": "JUMPDEST"}, "4801": {"op": "DUP2"}, "4802": {"op": "CALLDATALOAD"}, "4803": {"op": "PUSH2", "value": "0xDEE"}, "4806": {"op": "DUP2"}, "4807": {"op": "PUSH2", "value": "0x16C7"}, "4810": {"jump": "i", "op": "JUMP"}, "4811": {"op": "JUMPDEST"}, "4812": {"op": "PUSH1", "value": "0x0"}, "4814": {"op": "PUSH1", "value": "0x20"}, "4816": {"op": "DUP3"}, "4817": {"op": "DUP5"}, "4818": {"op": "SUB"}, "4819": {"op": "SLT"}, "4820": {"op": "ISZERO"}, "4821": {"op": "PUSH2", "value": "0x12DD"}, "4824": {"op": "JUMPI"}, "4825": {"op": "PUSH1", "value": "0x0"}, "4827": {"op": "DUP1"}, "4828": {"op": "REVERT"}, "4829": {"op": "JUMPDEST"}, "4830": {"op": "DUP2"}, "4831": {"op": "MLOAD"}, "4832": {"op": "PUSH2", "value": "0xDEE"}, "4835": {"op": "DUP2"}, "4836": {"op": "PUSH2", "value": "0x16C7"}, "4839": {"jump": "i", "op": "JUMP"}, "4840": {"op": "JUMPDEST"}, "4841": {"op": "PUSH1", "value": "0x0"}, "4843": {"op": "PUSH1", "value": "0x20"}, "4845": {"op": "DUP3"}, "4846": {"op": "DUP5"}, "4847": {"op": "SUB"}, "4848": {"op": "SLT"}, "4849": {"op": "ISZERO"}, "4850": {"op": "PUSH2", "value": "0x12FA"}, "4853": {"op": "JUMPI"}, "4854": {"op": "PUSH1", "value": "0x0"}, "4856": {"op": "DUP1"}, "4857": {"op": "REVERT"}, "4858": {"op": "JUMPDEST"}, "4859": {"op": "POP"}, "4860": {"op": "CALLDATALOAD"}, "4861": {"op": "SWAP2"}, "4862": {"op": "SWAP1"}, "4863": {"op": "POP"}, "4864": {"jump": "o", "op": "JUMP"}, "4865": {"op": "JUMPDEST"}, "4866": {"op": "PUSH1", "value": "0x0"}, "4868": {"op": "DUP1"}, "4869": {"op": "PUSH1", "value": "0x0"}, "4871": {"op": "DUP1"}, "4872": {"op": "PUSH1", "value": "0x80"}, "4874": {"op": "DUP6"}, "4875": {"op": "DUP8"}, "4876": {"op": "SUB"}, "4877": {"op": "SLT"}, "4878": {"op": "ISZERO"}, "4879": {"op": "PUSH2", "value": "0x1317"}, "4882": {"op": "JUMPI"}, "4883": {"op": "PUSH1", "value": "0x0"}, "4885": {"op": "DUP1"}, "4886": {"op": "REVERT"}, "4887": {"op": "JUMPDEST"}, "4888": {"op": "DUP5"}, "4889": {"op": "CALLDATALOAD"}, "4890": {"op": "SWAP4"}, "4891": {"op": "POP"}, "4892": {"op": "PUSH1", "value": "0x20"}, "4894": {"op": "DUP1"}, "4895": {"op": "DUP7"}, "4896": {"op": "ADD"}, "4897": {"op": "CALLDATALOAD"}, "4898": {"op": "PUSH2", "value": "0x132A"}, "4901": {"op": "DUP2"}, "4902": {"op": "PUSH2", "value": "0x16AF"}, "4905": {"jump": "i", "op": "JUMP"}, "4906": {"op": "JUMPDEST"}, "4907": {"op": "SWAP4"}, "4908": {"op": "POP"}, "4909": {"op": "PUSH1", "value": "0x40"}, "4911": {"op": "DUP7"}, "4912": {"op": "ADD"}, "4913": {"op": "CALLDATALOAD"}, "4914": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "4923": {"op": "DUP1"}, "4924": {"op": "DUP3"}, "4925": {"op": "GT"}, "4926": {"op": "ISZERO"}, "4927": {"op": "PUSH2", "value": "0x1347"}, "4930": {"op": "JUMPI"}, "4931": {"op": "PUSH1", "value": "0x0"}, "4933": {"op": "DUP1"}, "4934": {"op": "REVERT"}, "4935": {"op": "JUMPDEST"}, "4936": {"op": "DUP2"}, "4937": {"op": "DUP9"}, "4938": {"op": "ADD"}, "4939": {"op": "SWAP2"}, "4940": {"op": "POP"}, "4941": {"op": "DUP9"}, "4942": {"op": "PUSH1", "value": "0x1F"}, "4944": {"op": "DUP4"}, "4945": {"op": "ADD"}, "4946": {"op": "SLT"}, "4947": {"op": "PUSH2", "value": "0x135B"}, "4950": {"op": "JUMPI"}, "4951": {"op": "PUSH1", "value": "0x0"}, "4953": {"op": "DUP1"}, "4954": {"op": "REVERT"}, "4955": {"op": "JUMPDEST"}, "4956": {"op": "DUP2"}, "4957": {"op": "CALLDATALOAD"}, "4958": {"op": "PUSH2", "value": "0x1369"}, "4961": {"op": "PUSH2", "value": "0x1068"}, "4964": {"op": "DUP3"}, "4965": {"op": "PUSH2", "value": "0x155A"}, "4968": {"jump": "i", "op": "JUMP"}, "4969": {"op": "JUMPDEST"}, "4970": {"op": "DUP1"}, "4971": {"op": "DUP3"}, "4972": {"op": "DUP3"}, "4973": {"op": "MSTORE"}, "4974": {"op": "DUP6"}, "4975": {"op": "DUP3"}, "4976": {"op": "ADD"}, "4977": {"op": "SWAP2"}, "4978": {"op": "POP"}, "4979": {"op": "DUP6"}, "4980": {"op": "DUP6"}, "4981": {"op": "ADD"}, "4982": {"op": "DUP13"}, "4983": {"op": "DUP8"}, "4984": {"op": "DUP6"}, "4985": {"op": "PUSH1", "value": "0x5"}, "4987": {"op": "SHL"}, "4988": {"op": "DUP9"}, "4989": {"op": "ADD"}, "4990": {"op": "ADD"}, "4991": {"op": "GT"}, "4992": {"op": "ISZERO"}, "4993": {"op": "PUSH2", "value": "0x1389"}, "4996": {"op": "JUMPI"}, "4997": {"op": "PUSH1", "value": "0x0"}, "4999": {"op": "DUP1"}, "5000": {"op": "REVERT"}, "5001": {"op": "JUMPDEST"}, "5002": {"op": "PUSH1", "value": "0x0"}, "5004": {"op": "SWAP6"}, "5005": {"op": "POP"}, "5006": {"op": "JUMPDEST"}, "5007": {"op": "DUP4"}, "5008": {"op": "DUP7"}, "5009": {"op": "LT"}, "5010": {"op": "ISZERO"}, "5011": {"op": "PUSH2", "value": "0x13BB"}, "5014": {"op": "JUMPI"}, "5015": {"op": "DUP1"}, "5016": {"op": "CALLDATALOAD"}, "5017": {"op": "PUSH1", "value": "0xFF"}, "5019": {"op": "DUP2"}, "5020": {"op": "AND"}, "5021": {"op": "DUP2"}, "5022": {"op": "EQ"}, "5023": {"op": "PUSH2", "value": "0x13A7"}, "5026": {"op": "JUMPI"}, "5027": {"op": "PUSH1", "value": "0x0"}, "5029": {"op": "DUP1"}, "5030": {"op": "REVERT"}, "5031": {"op": "JUMPDEST"}, "5032": {"op": "DUP4"}, "5033": {"op": "MSTORE"}, "5034": {"op": "PUSH1", "value": "0x1"}, "5036": {"op": "SWAP6"}, "5037": {"op": "SWAP1"}, "5038": {"op": "SWAP6"}, "5039": {"op": "ADD"}, "5040": {"op": "SWAP5"}, "5041": {"op": "SWAP2"}, "5042": {"op": "DUP7"}, "5043": {"op": "ADD"}, "5044": {"op": "SWAP2"}, "5045": {"op": "DUP7"}, "5046": {"op": "ADD"}, "5047": {"op": "PUSH2", "value": "0x138E"}, "5050": {"op": "JUMP"}, "5051": {"op": "JUMPDEST"}, "5052": {"op": "POP"}, "5053": {"op": "SWAP7"}, "5054": {"op": "POP"}, "5055": {"op": "POP"}, "5056": {"op": "POP"}, "5057": {"op": "PUSH1", "value": "0x60"}, "5059": {"op": "DUP9"}, "5060": {"op": "ADD"}, "5061": {"op": "CALLDATALOAD"}, "5062": {"op": "SWAP3"}, "5063": {"op": "POP"}, "5064": {"op": "DUP1"}, "5065": {"op": "DUP4"}, "5066": {"op": "GT"}, "5067": {"op": "ISZERO"}, "5068": {"op": "PUSH2", "value": "0x13D4"}, "5071": {"op": "JUMPI"}, "5072": {"op": "PUSH1", "value": "0x0"}, "5074": {"op": "DUP1"}, "5075": {"op": "REVERT"}, "5076": {"op": "JUMPDEST"}, "5077": {"op": "POP"}, "5078": {"op": "POP"}, "5079": {"op": "PUSH2", "value": "0x13E2"}, "5082": {"op": "DUP8"}, "5083": {"op": "DUP3"}, "5084": {"op": "DUP9"}, "5085": {"op": "ADD"}, "5086": {"op": "PUSH2", "value": "0x1047"}, "5089": {"jump": "i", "op": "JUMP"}, "5090": {"op": "JUMPDEST"}, "5091": {"op": "SWAP2"}, "5092": {"op": "POP"}, "5093": {"op": "POP"}, "5094": {"op": "SWAP3"}, "5095": {"op": "SWAP6"}, "5096": {"op": "SWAP2"}, "5097": {"op": "SWAP5"}, "5098": {"op": "POP"}, "5099": {"op": "SWAP3"}, "5100": {"op": "POP"}, "5101": {"jump": "o", "op": "JUMP"}, "5102": {"op": "JUMPDEST"}, "5103": {"op": "PUSH1", "value": "0x0"}, "5105": {"op": "DUP4"}, "5106": {"op": "MLOAD"}, "5107": {"op": "PUSH2", "value": "0x1400"}, "5110": {"op": "DUP2"}, "5111": {"op": "DUP5"}, "5112": {"op": "PUSH1", "value": "0x20"}, "5114": {"op": "DUP9"}, "5115": {"op": "ADD"}, "5116": {"op": "PUSH2", "value": "0x15C1"}, "5119": {"jump": "i", "op": "JUMP"}, "5120": {"op": "JUMPDEST"}, "5121": {"op": "DUP4"}, "5122": {"op": "MLOAD"}, "5123": {"op": "SWAP1"}, "5124": {"op": "DUP4"}, "5125": {"op": "ADD"}, "5126": {"op": "SWAP1"}, "5127": {"op": "PUSH2", "value": "0x1414"}, "5130": {"op": "DUP2"}, "5131": {"op": "DUP4"}, "5132": {"op": "PUSH1", "value": "0x20"}, "5134": {"op": "DUP9"}, "5135": {"op": "ADD"}, "5136": {"op": "PUSH2", "value": "0x15C1"}, "5139": {"jump": "i", "op": "JUMP"}, "5140": {"op": "JUMPDEST"}, "5141": {"op": "ADD"}, "5142": {"op": "SWAP5"}, "5143": {"op": "SWAP4"}, "5144": {"op": "POP"}, "5145": {"op": "POP"}, "5146": {"op": "POP"}, "5147": {"op": "POP"}, "5148": {"jump": "o", "op": "JUMP"}, "5149": {"op": "JUMPDEST"}, "5150": {"op": "PUSH1", "value": "0x20"}, "5152": {"op": "DUP2"}, "5153": {"op": "MSTORE"}, "5154": {"op": "PUSH1", "value": "0x0"}, "5156": {"op": "DUP3"}, "5157": {"op": "MLOAD"}, "5158": {"op": "DUP1"}, "5159": {"op": "PUSH1", "value": "0x20"}, "5161": {"op": "DUP5"}, "5162": {"op": "ADD"}, "5163": {"op": "MSTORE"}, "5164": {"op": "PUSH2", "value": "0x143C"}, "5167": {"op": "DUP2"}, "5168": {"op": "PUSH1", "value": "0x40"}, "5170": {"op": "DUP6"}, "5171": {"op": "ADD"}, "5172": {"op": "PUSH1", "value": "0x20"}, "5174": {"op": "DUP8"}, "5175": {"op": "ADD"}, "5176": {"op": "PUSH2", "value": "0x15C1"}, "5179": {"jump": "i", "op": "JUMP"}, "5180": {"op": "JUMPDEST"}, "5181": {"op": "PUSH1", "value": "0x1F"}, "5183": {"op": "ADD"}, "5184": {"op": "PUSH1", "value": "0x1F"}, "5186": {"op": "NOT"}, "5187": {"op": "AND"}, "5188": {"op": "SWAP2"}, "5189": {"op": "SWAP1"}, "5190": {"op": "SWAP2"}, "5191": {"op": "ADD"}, "5192": {"op": "PUSH1", "value": "0x40"}, "5194": {"op": "ADD"}, "5195": {"op": "SWAP3"}, "5196": {"op": "SWAP2"}, "5197": {"op": "POP"}, "5198": {"op": "POP"}, "5199": {"jump": "o", "op": "JUMP"}, "5200": {"op": "JUMPDEST"}, "5201": {"op": "PUSH1", "value": "0x20"}, "5203": {"op": "DUP1"}, "5204": {"op": "DUP3"}, "5205": {"op": "MSTORE"}, "5206": {"op": "PUSH1", "value": "0x2D"}, "5208": {"op": "SWAP1"}, "5209": {"op": "DUP3"}, "5210": {"op": "ADD"}, "5211": {"op": "MSTORE"}, "5212": {"op": "PUSH32", "value": "0x54686520746F6B656E206D6179206E6F742062652073656E7420746F20746865"}, "5245": {"op": "PUSH1", "value": "0x40"}, "5247": {"op": "DUP3"}, "5248": {"op": "ADD"}, "5249": {"op": "MSTORE"}, "5250": {"op": "PUSH13", "value": "0x207A65726F2061646472657373"}, "5264": {"op": "PUSH1", "value": "0x98"}, "5266": {"op": "SHL"}, "5267": {"op": "PUSH1", "value": "0x60"}, "5269": {"op": "DUP3"}, "5270": {"op": "ADD"}, "5271": {"op": "MSTORE"}, "5272": {"op": "PUSH1", "value": "0x80"}, "5274": {"op": "ADD"}, "5275": {"op": "SWAP1"}, "5276": {"jump": "o", "op": "JUMP"}, "5277": {"op": "JUMPDEST"}, "5278": {"op": "PUSH1", "value": "0x20"}, "5280": {"op": "DUP1"}, "5281": {"op": "DUP3"}, "5282": {"op": "MSTORE"}, "5283": {"op": "PUSH1", "value": "0x24"}, "5285": {"op": "SWAP1"}, "5286": {"op": "DUP3"}, "5287": {"op": "ADD"}, "5288": {"op": "MSTORE"}, "5289": {"op": "PUSH32", "value": "0x5468652070726F766964656420746F6B656E20494420646F6573206E6F742065"}, "5322": {"op": "PUSH1", "value": "0x40"}, "5324": {"op": "DUP3"}, "5325": {"op": "ADD"}, "5326": {"op": "MSTORE"}, "5327": {"op": "PUSH4", "value": "0x1E1A5CDD"}, "5332": {"op": "PUSH1", "value": "0xE2"}, "5334": {"op": "SHL"}, "5335": {"op": "PUSH1", "value": "0x60"}, "5337": {"op": "DUP3"}, "5338": {"op": "ADD"}, "5339": {"op": "MSTORE"}, "5340": {"op": "PUSH1", "value": "0x80"}, "5342": {"op": "ADD"}, "5343": {"op": "SWAP1"}, "5344": {"jump": "o", "op": "JUMP"}, "5345": {"op": "JUMPDEST"}, "5346": {"op": "PUSH1", "value": "0x20"}, "5348": {"op": "DUP1"}, "5349": {"op": "DUP3"}, "5350": {"op": "MSTORE"}, "5351": {"op": "PUSH1", "value": "0x28"}, "5353": {"op": "SWAP1"}, "5354": {"op": "DUP3"}, "5355": {"op": "ADD"}, "5356": {"op": "MSTORE"}, "5357": {"op": "PUSH32", "value": "0x5468652072656365697665722063616E6E6F7420616363657074204552433732"}, "5390": {"op": "PUSH1", "value": "0x40"}, "5392": {"op": "DUP3"}, "5393": {"op": "ADD"}, "5394": {"op": "MSTORE"}, "5395": {"op": "PUSH8", "value": "0x3120746F6B656E73"}, "5404": {"op": "PUSH1", "value": "0xC0"}, "5406": {"op": "SHL"}, "5407": {"op": "PUSH1", "value": "0x60"}, "5409": {"op": "DUP3"}, "5410": {"op": "ADD"}, "5411": {"op": "MSTORE"}, "5412": {"op": "PUSH1", "value": "0x80"}, "5414": {"op": "ADD"}, "5415": {"op": "SWAP1"}, "5416": {"jump": "o", "op": "JUMP"}, "5417": {"op": "JUMPDEST"}, "5418": {"op": "PUSH1", "value": "0x40"}, "5420": {"op": "MLOAD"}, "5421": {"op": "PUSH1", "value": "0x1F"}, "5423": {"op": "DUP3"}, "5424": {"op": "ADD"}, "5425": {"op": "PUSH1", "value": "0x1F"}, "5427": {"op": "NOT"}, "5428": {"op": "AND"}, "5429": {"op": "DUP2"}, "5430": {"op": "ADD"}, "5431": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "5440": {"op": "DUP2"}, "5441": {"op": "GT"}, "5442": {"op": "DUP3"}, "5443": {"op": "DUP3"}, "5444": {"op": "LT"}, "5445": {"op": "OR"}, "5446": {"op": "ISZERO"}, "5447": {"op": "PUSH2", "value": "0x1552"}, "5450": {"op": "JUMPI"}, "5451": {"op": "PUSH2", "value": "0x1552"}, "5454": {"op": "PUSH2", "value": "0x1699"}, "5457": {"jump": "i", "op": "JUMP"}, "5458": {"op": "JUMPDEST"}, "5459": {"op": "PUSH1", "value": "0x40"}, "5461": {"op": "MSTORE"}, "5462": {"op": "SWAP2"}, "5463": {"op": "SWAP1"}, "5464": {"op": "POP"}, "5465": {"jump": "o", "op": "JUMP"}, "5466": {"op": "JUMPDEST"}, "5467": {"op": "PUSH1", "value": "0x0"}, "5469": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "5478": {"op": "DUP3"}, "5479": {"op": "GT"}, "5480": {"op": "ISZERO"}, "5481": {"op": "PUSH2", "value": "0x1574"}, "5484": {"op": "JUMPI"}, "5485": {"op": "PUSH2", "value": "0x1574"}, "5488": {"op": "PUSH2", "value": "0x1699"}, "5491": {"jump": "i", "op": "JUMP"}, "5492": {"op": "JUMPDEST"}, "5493": {"op": "POP"}, "5494": {"op": "PUSH1", "value": "0x5"}, "5496": {"op": "SHL"}, "5497": {"op": "PUSH1", "value": "0x20"}, "5499": {"op": "ADD"}, "5500": {"op": "SWAP1"}, "5501": {"jump": "o", "op": "JUMP"}, "5502": {"op": "JUMPDEST"}, "5503": {"op": "PUSH1", "value": "0x0"}, "5505": {"op": "DUP3"}, "5506": {"op": "NOT"}, "5507": {"op": "DUP3"}, "5508": {"op": "GT"}, "5509": {"op": "ISZERO"}, "5510": {"op": "PUSH2", "value": "0x1591"}, "5513": {"op": "JUMPI"}, "5514": {"op": "PUSH2", "value": "0x1591"}, "5517": {"op": "PUSH2", "value": "0x1657"}, "5520": {"jump": "i", "op": "JUMP"}, "5521": {"op": "JUMPDEST"}, "5522": {"op": "POP"}, "5523": {"op": "ADD"}, "5524": {"op": "SWAP1"}, "5525": {"jump": "o", "op": "JUMP"}, "5526": {"op": "JUMPDEST"}, "5527": {"op": "PUSH1", "value": "0x0"}, "5529": {"op": "DUP3"}, "5530": {"op": "PUSH2", "value": "0x15A5"}, "5533": {"op": "JUMPI"}, "5534": {"op": "PUSH2", "value": "0x15A5"}, "5537": {"op": "PUSH2", "value": "0x166D"}, "5540": {"jump": "i", "op": "JUMP"}, "5541": {"op": "JUMPDEST"}, "5542": {"op": "POP"}, "5543": {"op": "DIV"}, "5544": {"op": "SWAP1"}, "5545": {"jump": "o", "op": "JUMP"}, "5546": {"op": "JUMPDEST"}, "5547": {"op": "PUSH1", "value": "0x0"}, "5549": {"op": "DUP3"}, "5550": {"op": "DUP3"}, "5551": {"op": "LT"}, "5552": {"op": "ISZERO"}, "5553": {"op": "PUSH2", "value": "0x15BC"}, "5556": {"op": "JUMPI"}, "5557": {"op": "PUSH2", "value": "0x15BC"}, "5560": {"op": "PUSH2", "value": "0x1657"}, "5563": {"jump": "i", "op": "JUMP"}, "5564": {"op": "JUMPDEST"}, "5565": {"op": "POP"}, "5566": {"op": "SUB"}, "5567": {"op": "SWAP1"}, "5568": {"jump": "o", "op": "JUMP"}, "5569": {"op": "JUMPDEST"}, "5570": {"op": "PUSH1", "value": "0x0"}, "5572": {"op": "JUMPDEST"}, "5573": {"op": "DUP4"}, "5574": {"op": "DUP2"}, "5575": {"op": "LT"}, "5576": {"op": "ISZERO"}, "5577": {"op": "PUSH2", "value": "0x15DC"}, "5580": {"op": "JUMPI"}, "5581": {"op": "DUP2"}, "5582": {"op": "DUP2"}, "5583": {"op": "ADD"}, "5584": {"op": "MLOAD"}, "5585": {"op": "DUP4"}, "5586": {"op": "DUP3"}, "5587": {"op": "ADD"}, "5588": {"op": "MSTORE"}, "5589": {"op": "PUSH1", "value": "0x20"}, "5591": {"op": "ADD"}, "5592": {"op": "PUSH2", "value": "0x15C4"}, "5595": {"op": "JUMP"}, "5596": {"op": "JUMPDEST"}, "5597": {"op": "DUP4"}, "5598": {"op": "DUP2"}, "5599": {"op": "GT"}, "5600": {"op": "ISZERO"}, "5601": {"op": "PUSH2", "value": "0xCD9"}, "5604": {"op": "JUMPI"}, "5605": {"op": "POP"}, "5606": {"op": "POP"}, "5607": {"op": "PUSH1", "value": "0x0"}, "5609": {"op": "SWAP2"}, "5610": {"op": "ADD"}, "5611": {"op": "MSTORE"}, "5612": {"jump": "o", "op": "JUMP"}, "5613": {"op": "JUMPDEST"}, "5614": {"op": "PUSH1", "value": "0x1"}, "5616": {"op": "DUP2"}, "5617": {"op": "DUP2"}, "5618": {"op": "SHR"}, "5619": {"op": "SWAP1"}, "5620": {"op": "DUP3"}, "5621": {"op": "AND"}, "5622": {"op": "DUP1"}, "5623": {"op": "PUSH2", "value": "0x1601"}, "5626": {"op": "JUMPI"}, "5627": {"op": "PUSH1", "value": "0x7F"}, "5629": {"op": "DUP3"}, "5630": {"op": "AND"}, "5631": {"op": "SWAP2"}, "5632": {"op": "POP"}, "5633": {"op": "JUMPDEST"}, "5634": {"op": "PUSH1", "value": "0x20"}, "5636": {"op": "DUP3"}, "5637": {"op": "LT"}, "5638": {"op": "DUP2"}, "5639": {"op": "EQ"}, "5640": {"op": "ISZERO"}, "5641": {"op": "PUSH2", "value": "0x1622"}, "5644": {"op": "JUMPI"}, "5645": {"op": "PUSH4", "value": "0x4E487B71"}, "5650": {"op": "PUSH1", "value": "0xE0"}, "5652": {"op": "SHL"}, "5653": {"op": "PUSH1", "value": "0x0"}, "5655": {"op": "MSTORE"}, "5656": {"op": "PUSH1", "value": "0x22"}, "5658": {"op": "PUSH1", "value": "0x4"}, "5660": {"op": "MSTORE"}, "5661": {"op": "PUSH1", "value": "0x24"}, "5663": {"op": "PUSH1", "value": "0x0"}, "5665": {"op": "REVERT"}, "5666": {"op": "JUMPDEST"}, "5667": {"op": "POP"}, "5668": {"op": "SWAP2"}, "5669": {"op": "SWAP1"}, "5670": {"op": "POP"}, "5671": {"jump": "o", "op": "JUMP"}, "5672": {"op": "JUMPDEST"}, "5673": {"op": "PUSH1", "value": "0x0"}, "5675": {"op": "PUSH1", "value": "0x0"}, "5677": {"op": "NOT"}, "5678": {"op": "DUP3"}, "5679": {"op": "EQ"}, "5680": {"op": "ISZERO"}, "5681": {"op": "PUSH2", "value": "0x163C"}, "5684": {"op": "JUMPI"}, "5685": {"op": "PUSH2", "value": "0x163C"}, "5688": {"op": "PUSH2", "value": "0x1657"}, "5691": {"jump": "i", "op": "JUMP"}, "5692": {"op": "JUMPDEST"}, "5693": {"op": "POP"}, "5694": {"op": "PUSH1", "value": "0x1"}, "5696": {"op": "ADD"}, "5697": {"op": "SWAP1"}, "5698": {"jump": "o", "op": "JUMP"}, "5699": {"op": "JUMPDEST"}, "5700": {"op": "PUSH1", "value": "0x0"}, "5702": {"op": "DUP3"}, "5703": {"op": "PUSH2", "value": "0x1652"}, "5706": {"op": "JUMPI"}, "5707": {"op": "PUSH2", "value": "0x1652"}, "5710": {"op": "PUSH2", "value": "0x166D"}, "5713": {"jump": "i", "op": "JUMP"}, "5714": {"op": "JUMPDEST"}, "5715": {"op": "POP"}, "5716": {"op": "MOD"}, "5717": {"op": "SWAP1"}, "5718": {"jump": "o", "op": "JUMP"}, "5719": {"op": "JUMPDEST"}, "5720": {"op": "PUSH4", "value": "0x4E487B71"}, "5725": {"op": "PUSH1", "value": "0xE0"}, "5727": {"op": "SHL"}, "5728": {"op": "PUSH1", "value": "0x0"}, "5730": {"op": "MSTORE"}, "5731": {"op": "PUSH1", "value": "0x11"}, "5733": {"op": "PUSH1", "value": "0x4"}, "5735": {"op": "MSTORE"}, "5736": {"op": "PUSH1", "value": "0x24"}, "5738": {"op": "PUSH1", "value": "0x0"}, "5740": {"op": "REVERT"}, "5741": {"op": "JUMPDEST"}, "5742": {"op": "PUSH4", "value": "0x4E487B71"}, "5747": {"op": "PUSH1", "value": "0xE0"}, "5749": {"op": "SHL"}, "5750": {"op": "PUSH1", "value": "0x0"}, "5752": {"op": "MSTORE"}, "5753": {"op": "PUSH1", "value": "0x12"}, "5755": {"op": "PUSH1", "value": "0x4"}, "5757": {"op": "MSTORE"}, "5758": {"op": "PUSH1", "value": "0x24"}, "5760": {"op": "PUSH1", "value": "0x0"}, "5762": {"op": "REVERT"}, "5763": {"op": "JUMPDEST"}, "5764": {"op": "PUSH4", "value": "0x4E487B71"}, "5769": {"op": "PUSH1", "value": "0xE0"}, "5771": {"op": "SHL"}, "5772": {"op": "PUSH1", "value": "0x0"}, "5774": {"op": "MSTORE"}, "5775": {"op": "PUSH1", "value": "0x32"}, "5777": {"op": "PUSH1", "value": "0x4"}, "5779": {"op": "MSTORE"}, "5780": {"op": "PUSH1", "value": "0x24"}, "5782": {"op": "PUSH1", "value": "0x0"}, "5784": {"op": "REVERT"}, "5785": {"op": "JUMPDEST"}, "5786": {"op": "PUSH4", "value": "0x4E487B71"}, "5791": {"op": "PUSH1", "value": "0xE0"}, "5793": {"op": "SHL"}, "5794": {"op": "PUSH1", "value": "0x0"}, "5796": {"op": "MSTORE"}, "5797": {"op": "PUSH1", "value": "0x41"}, "5799": {"op": "PUSH1", "value": "0x4"}, "5801": {"op": "MSTORE"}, "5802": {"op": "PUSH1", "value": "0x24"}, "5804": {"op": "PUSH1", "value": "0x0"}, "5806": {"op": "REVERT"}, "5807": {"op": "JUMPDEST"}, "5808": {"op": "PUSH1", "value": "0x1"}, "5810": {"op": "PUSH1", "value": "0x1"}, "5812": {"op": "PUSH1", "value": "0xA0"}, "5814": {"op": "SHL"}, "5815": {"op": "SUB"}, "5816": {"op": "DUP2"}, "5817": {"op": "AND"}, "5818": {"op": "DUP2"}, "5819": {"op": "EQ"}, "5820": {"op": "PUSH2", "value": "0x16C4"}, "5823": {"op": "JUMPI"}, "5824": {"op": "PUSH1", "value": "0x0"}, "5826": {"op": "DUP1"}, "5827": {"op": "REVERT"}, "5828": {"op": "JUMPDEST"}, "5829": {"op": "POP"}, "5830": {"jump": "o", "op": "JUMP"}, "5831": {"op": "JUMPDEST"}, "5832": {"op": "PUSH1", "value": "0x1"}, "5834": {"op": "PUSH1", "value": "0x1"}, "5836": {"op": "PUSH1", "value": "0xE0"}, "5838": {"op": "SHL"}, "5839": {"op": "SUB"}, "5840": {"op": "NOT"}, "5841": {"op": "DUP2"}, "5842": {"op": "AND"}, "5843": {"op": "DUP2"}, "5844": {"op": "EQ"}, "5845": {"op": "PUSH2", "value": "0x16C4"}, "5848": {"op": "JUMPI"}, "5849": {"op": "PUSH1", "value": "0x0"}, "5851": {"op": "DUP1"}, "5852": {"op": "REVERT"}}, "sha1": "afaea585c86051e33663e54f514b0eb798439165", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Oracle.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title Loot NFT\n * @dev This contract is a light implementation of ERC721 to save on gas and bloat\n * @notice Much of this code is taken from the OpenZeppelin ERC721 implementation\n *         https://docs.openzeppelin.com/contracts/4.x/api/token/erc721\n */\ncontract Loot is ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Token base URI\n    string private _baseURI;\n\n    // The oracle\n    Oracle private _oracle;\n\n    // Index of the current token\n    uint256 private _index;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Mapping that checks if punk has already been looted\n    mapping(uint256 => bool) private _punkMinted;\n\n    // Structure of a loot item\n    struct LootItem {\n        uint256 index;\n        bool shiny;\n    }\n\n    // Mapping of token ID to loot item\n    mapping(uint256 => LootItem) public items;\n\n    // Event called when a punk is consumed\n    event PunkConsumed(uint256 indexed punkId, address indexed to);\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        string memory baseURI_,\n        address oracle_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n        _baseURI = baseURI_;\n        _oracle = Oracle(oracle_);\n    }\n\n    /**\n     * @dev Modifier that only oracle operators may call\n     */\n    modifier onlyOracleOperator() {\n        require(\n            msg.sender == _oracle.operator(),\n            \"Only the oracle operator may perform this action\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Gets the oracle operator address\n     */\n    function getOracle() public view returns (address) {\n        return address(_oracle);\n    }\n\n    /**\n     * @dev Defines the ERC165 interfaces\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Check the balance of the provided address\n     * @notice Does not throw for zero address queries\n     */\n    function balanceOf(address owner)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return _balances[owner];\n    }\n\n    /**\n     * @dev Get the owner of a specific token\n     * @notice Does not throw for zero address queries\n     */\n    function ownerOf(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        address owner = _owners[tokenId];\n        return owner;\n    }\n\n    /**\n     * @dev Transfers a token and checks that the receiver accepts ERC721 tokens\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        address owner = Loot.ownerOf(tokenId);\n        require(_owners[tokenId] != address(0), \"The token does not exist\");\n        require(\n            msg.sender == owner ||\n                getApproved(tokenId) == msg.sender ||\n                isApprovedForAll(owner, msg.sender),\n            \"The operator is not approved to transfer this token\"\n        );\n        require(\n            owner == from,\n            \"The sender does not own the token to be transfered\"\n        );\n        require(\n            to != address(0),\n            \"The token may not be sent to the zero address\"\n        );\n        require(\n            _checkOnERC721Received(from, to, tokenId),\n            \"The receiver cannot accept ERC721 tokens\"\n        );\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Defaults to the safe transfer method and discards data\n     * @notice Required for ERC721 standard\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId);\n    }\n\n    /**\n     * @dev Defaults to the safe transfer method\n     * @notice Required for ERC721 interface\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId);\n    }\n\n    /**\n     * @dev Checks if the receiver can handle receiving an ERC721\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try\n                IERC721Receiver(to).onERC721Received(\n                    msg.sender,\n                    from,\n                    tokenId,\n                    \"\"\n                )\n            returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"The receiver cannot accept ERC721 tokens\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Approves an operator to handle the ERC721\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = Loot.ownerOf(tokenId);\n        require(to != owner, \"The owner does not need to be approved\");\n\n        require(\n            msg.sender == owner || isApprovedForAll(owner, msg.sender),\n            \"Only owners or operators may call this function\"\n        );\n\n        _tokenApprovals[tokenId] = to;\n        emit Approval(Loot.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Checks which address is approved for given token ID\n     */\n    function getApproved(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        require(\n            _owners[tokenId] != address(0),\n            \"The provided token ID does not exist\"\n        );\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Approve or remove operator as an operator for the caller\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        require(operator != msg.sender, \"The sender may not be the operator\");\n\n        _operatorApprovals[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    /**\n     * @dev Returns if the operator is allowed to manage all of the assets of owner\n     */\n    function isApprovedForAll(address owner, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns the name of the token\n     * @notice Required for ERC721\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token\n     * @notice Required for ERC721\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the base URI of the token\n     * @notice Required for ERC721\n     */\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _owners[tokenId] != address(0),\n            \"The provided token ID does not exist\"\n        );\n\n        string memory baseURI = _baseURI;\n        return\n            bytes(baseURI).length > 0\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\n                : \"\";\n    }\n\n    /**\n     * @dev Mints one or multiple loot items\n     * @param punkId    The ID of the original CryptoPunk\n     * @param to        The address to mind the items to\n     * @param itemIds   An array of item IDs obtainable from Traits.sol\n     * @param shiny     Determines id the item being minted is shiny (array)\n     */\n    function mint(\n        uint256 punkId,\n        address to,\n        uint8[] memory itemIds,\n        bool[] memory shiny\n    ) public onlyOracleOperator {\n        require(\n            to != address(0),\n            \"The token may not be sent to the zero address\"\n        );\n        require(!_punkMinted[punkId], \"The CryptoPunk was already minted\");\n        require(\n            itemIds.length == shiny.length,\n            \"itemIds[] and shiny[] must have the same length\"\n        );\n\n        uint256 newIndex = _index + itemIds.length;\n\n        for (_index; _index < newIndex; _index++) {\n            require(\n                _owners[_index] == address(0),\n                \"The provided token ID does not exist\"\n            );\n            require(\n                _checkOnERC721Received(address(0), to, _index),\n                \"The receiver cannot accept ERC721 tokens\"\n            );\n\n            uint8 itemId = itemIds[newIndex - _index];\n            items[_index] = LootItem(_index, shiny[_index]);\n            _balances[to] += 1;\n            _owners[_index] = to;\n\n            emit Transfer(address(0), to, _index);\n        }\n\n        _punkMinted[punkId] = true;\n        emit PunkConsumed(punkId, to);\n    }\n}\n", "sourceMap": "783:9845:7:-:0;;;2110:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2255:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2278:17:7;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2305:19:7;;;;:8;;:19;;;;;:::i;:::-;-1:-1:-1;2334:7:7;:25;;-1:-1:-1;;;;;;2334:25:7;-1:-1:-1;;;;;2334:25:7;;;;;;;;;;-1:-1:-1;783:9845:7;;-1:-1:-1;;783:9845:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:9845:7;;;-1:-1:-1;783:9845:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:9;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:9;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:9;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:9:o;904:934::-;1031:6;1039;1047;1055;1108:3;1096:9;1087:7;1083:23;1079:33;1076:2;;;1125:1;1122;1115:12;1076:2;1152:16;;-1:-1:-1;;;;;1217:14:9;;;1214:2;;;1244:1;1241;1234:12;1214:2;1267:61;1320:7;1311:6;1300:9;1296:22;1267:61;:::i;:::-;1257:71;;1374:2;1363:9;1359:18;1353:25;1337:41;;1403:2;1393:8;1390:16;1387:2;;;1419:1;1416;1409:12;1387:2;1442:63;1497:7;1486:8;1475:9;1471:24;1442:63;:::i;:::-;1432:73;;1551:2;1540:9;1536:18;1530:25;1514:41;;1580:2;1570:8;1567:16;1564:2;;;1596:1;1593;1586:12;1564:2;;1619:63;1674:7;1663:8;1652:9;1648:24;1619:63;:::i;:::-;1725:2;1710:18;;1704:25;1609:73;;-1:-1:-1;1704:25:9;-1:-1:-1;;;;;;1758:31:9;;1748:42;;1738:2;;1804:1;1801;1794:12;1738:2;1066:772;;;;-1:-1:-1;1066:772:9;;-1:-1:-1;;1066:772:9:o;1843:380::-;1922:1;1918:12;;;;1965;;;1986:2;;2040:4;2032:6;2028:17;2018:27;;1986:2;2093;2085:6;2082:14;2062:18;2059:38;2056:2;;;2139:10;2134:3;2130:20;2127:1;2120:31;2174:4;2171:1;2164:15;2202:4;2199:1;2192:15;2056:2;;1898:325;;;:::o;2228:127::-;2289:10;2284:3;2280:20;2277:1;2270:31;2320:4;2317:1;2310:15;2344:4;2341:1;2334:15;2260:95;783:9845:7;;;;;;", "sourcePath": "contracts/Loot.sol", "type": "contract", "deployment": {"address": "0x60472F242474AE6868884f9aC31Ff7Be576696A9", "chainid": "4", "blockHeight": 9237695}}