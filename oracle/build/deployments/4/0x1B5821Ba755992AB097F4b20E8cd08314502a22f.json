{"abi": [{"inputs": [{"internalType": "address", "name": "punkContract", "type": "address"}], "payable": false, "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "approved", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "operator", "type": "address"}, {"indexed": false, "internalType": "bool", "name": "approved", "type": "bool"}], "name": "ApprovalForAll", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "account", "type": "address"}], "name": "Paused", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "address", "name": "proxy", "type": "address"}], "name": "ProxyRegistered", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "account", "type": "address"}], "name": "Unpaused", "type": "event"}, {"constant": false, "inputs": [{"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "approve", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "baseURI", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"internalType": "uint256", "name": "punkIndex", "type": "uint256"}], "name": "burn", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "getApproved", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "operator", "type": "address"}], "name": "isApprovedForAll", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"internalType": "uint256", "name": "punkIndex", "type": "uint256"}], "name": "mint", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "ownerOf", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [], "name": "pause", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "paused", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "address", "name": "user", "type": "address"}], "name": "proxyInfo", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "punkContract", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [], "name": "registerProxy", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [], "name": "renounceOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "safeTransferFrom", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}, {"internalType": "bytes", "name": "_data", "type": "bytes"}], "name": "safeTransferFrom", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"internalType": "address", "name": "to", "type": "address"}, {"internalType": "bool", "name": "approved", "type": "bool"}], "name": "setApprovalForAll", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"internalType": "string", "name": "baseUri", "type": "string"}], "name": "setBaseURI", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [{"internalType": "bytes4", "name": "interfaceId", "type": "bytes4"}], "name": "supportsInterface", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "tokenByIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "tokenOfOwnerByIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "tokenURI", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "transferFrom", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [], "name": "unpause", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"0": "contracts/reference/WrappedPunk.sol"}, "ast": {"absolutePath": "contracts/reference/WrappedPunk.sol", "exportedSymbols": {"Address": [437], "Context": [26], "Counters": [396], "ERC165": [610], "ERC721": [1271], "ERC721Enumerable": [1602], "ERC721Full": [1905], "ERC721Metadata": [1887], "ICryptoPunk": [1941], "IERC165": [560], "IERC721": [536], "IERC721Enumerable": [225], "IERC721Metadata": [1703], "IERC721Receiver": [551], "Ownable": [123], "Pausable": [202], "SafeMath": [349], "Strings": [1684], "UserProxy": [1986], "WrappedPunk": [2202]}, "id": 2203, "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "242:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 26, "linearizedBaseContracts": [26], "name": "Context", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 4, "nodeType": "Block", "src": "967:2:0", "statements": []}, "documentation": null, "id": 5, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 2, "nodeType": "ParameterList", "parameters": [], "src": "955:2:0"}, "returnParameters": {"id": 3, "nodeType": "ParameterList", "parameters": [], "src": "967:0:0"}, "scope": 26, "src": "944:25:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 13, "nodeType": "Block", "src": "1091:34:0", "statements": [{"expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 10, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2217, "src": "1108:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 11, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "1108:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "functionReturnParameters": 9, "id": 12, "nodeType": "Return", "src": "1101:17:0"}]}, "documentation": null, "id": 14, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nodeType": "FunctionDefinition", "parameters": {"id": 6, "nodeType": "ParameterList", "parameters": [], "src": "1048:2:0"}, "returnParameters": {"id": 9, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8, "name": "", "nodeType": "VariableDeclaration", "scope": 14, "src": "1074:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 7, "name": "address", "nodeType": "ElementaryTypeName", "src": "1074:15:0", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "value": null, "visibility": "internal"}], "src": "1073:17:0"}, "scope": 26, "src": "1029:96:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}, {"body": {"id": 24, "nodeType": "Block", "src": "1188:165:0", "statements": [{"expression": {"argumentTypes": null, "id": 19, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2231, "src": "1198:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$26", "typeString": "contract Context"}}, "id": 20, "nodeType": "ExpressionStatement", "src": "1198:4:0"}, {"expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 21, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2217, "src": "1338:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 22, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "data", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "1338:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, "functionReturnParameters": 18, "id": 23, "nodeType": "Return", "src": "1331:15:0"}]}, "documentation": null, "id": 25, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nodeType": "FunctionDefinition", "parameters": {"id": 15, "nodeType": "ParameterList", "parameters": [], "src": "1148:2:0"}, "returnParameters": {"id": 18, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 17, "name": "", "nodeType": "VariableDeclaration", "scope": 25, "src": "1174:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 16, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1174:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "1173:14:0"}, "scope": 26, "src": "1131:222:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}], "scope": 2203, "src": "767:588:0"}, {"id": 27, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "1396:23:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 28, "name": "Context", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26, "src": "1936:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$26", "typeString": "contract Context"}}, "id": 29, "nodeType": "InheritanceSpecifier", "src": "1936:7:0"}], "contractDependencies": [26], "contractKind": "contract", "documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.", "fullyImplemented": true, "id": 123, "linearizedBaseContracts": [123, 26], "name": "Ownable", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 31, "name": "_owner", "nodeType": "VariableDeclaration", "scope": 123, "src": "1950:22:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 30, "name": "address", "nodeType": "ElementaryTypeName", "src": "1950:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "private"}, {"anonymous": false, "documentation": null, "id": 37, "name": "OwnershipTransferred", "nodeType": "EventDefinition", "parameters": {"id": 36, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 33, "indexed": true, "name": "previousOwner", "nodeType": "VariableDeclaration", "scope": 37, "src": "2015:29:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 32, "name": "address", "nodeType": "ElementaryTypeName", "src": "2015:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 35, "indexed": true, "name": "newOwner", "nodeType": "VariableDeclaration", "scope": 37, "src": "2054:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 34, "name": "address", "nodeType": "ElementaryTypeName", "src": "2054:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "2005:79:0"}, "src": "1979:106:0"}, {"body": {"id": 56, "nodeType": "Block", "src": "2210:137:0", "statements": [{"assignments": [41], "declarations": [{"constant": false, "id": 41, "name": "msgSender", "nodeType": "VariableDeclaration", "scope": 56, "src": "2220:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 40, "name": "address", "nodeType": "ElementaryTypeName", "src": "2220:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 44, "initialValue": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 42, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "2240:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 43, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2240:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "VariableDeclarationStatement", "src": "2220:32:0"}, {"expression": {"argumentTypes": null, "id": 47, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 45, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "2263:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 46, "name": "msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "2272:9:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2263:18:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 48, "nodeType": "ExpressionStatement", "src": "2263:18:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 51, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2326:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 50, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2318:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 52, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2318:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 53, "name": "msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "2330:9:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 49, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "2297:20:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 54, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2297:43:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 55, "nodeType": "EmitStatement", "src": "2292:48:0"}]}, "documentation": "@dev Initializes the contract setting the deployer as the initial owner.", "id": 57, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 38, "nodeType": "ParameterList", "parameters": [], "src": "2198:2:0"}, "returnParameters": {"id": 39, "nodeType": "ParameterList", "parameters": [], "src": "2210:0:0"}, "scope": 123, "src": "2187:160:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 64, "nodeType": "Block", "src": "2470:30:0", "statements": [{"expression": {"argumentTypes": null, "id": 62, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "2487:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 61, "id": 63, "nodeType": "Return", "src": "2480:13:0"}]}, "documentation": "@dev Returns the address of the current owner.", "id": 65, "implemented": true, "kind": "function", "modifiers": [], "name": "owner", "nodeType": "FunctionDefinition", "parameters": {"id": 58, "nodeType": "ParameterList", "parameters": [], "src": "2437:2:0"}, "returnParameters": {"id": 61, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 60, "name": "", "nodeType": "VariableDeclaration", "scope": 65, "src": "2461:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 59, "name": "address", "nodeType": "ElementaryTypeName", "src": "2461:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "2460:9:0"}, "scope": 123, "src": "2423:77:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 76, "nodeType": "Block", "src": "2609:95:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 71, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 68, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "2627:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 69, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "2637:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 70, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2637:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "2627:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572", "id": 72, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2651:34:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe", "typeString": "literal_string \"Ownable: caller is not the owner\""}, "value": "Ownable: caller is not the owner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe", "typeString": "literal_string \"Ownable: caller is not the owner\""}], "id": 67, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "2619:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2619:67:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 74, "nodeType": "ExpressionStatement", "src": "2619:67:0"}, {"id": 75, "nodeType": "PlaceholderStatement", "src": "2696:1:0"}]}, "documentation": "@dev Throws if called by any account other than the owner.", "id": 77, "name": "onlyOwner", "nodeType": "ModifierDefinition", "parameters": {"id": 66, "nodeType": "ParameterList", "parameters": [], "src": "2606:2:0"}, "src": "2588:116:0", "visibility": "internal"}, {"body": {"id": 95, "nodeType": "Block", "src": "3092:92:0", "statements": [{"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 83, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "3128:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 85, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3144:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 84, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3136:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 86, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3136:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 82, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "3107:20:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 87, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3107:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 88, "nodeType": "EmitStatement", "src": "3102:45:0"}, {"expression": {"argumentTypes": null, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 89, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "3158:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 91, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3175:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 90, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3167:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 92, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3167:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3158:19:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 94, "nodeType": "ExpressionStatement", "src": "3158:19:0"}]}, "documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.", "id": 96, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 80, "modifierName": {"argumentTypes": null, "id": 79, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "3082:9:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "3082:9:0"}], "name": "renounceOwnership", "nodeType": "FunctionDefinition", "parameters": {"id": 78, "nodeType": "ParameterList", "parameters": [], "src": "3072:2:0"}, "returnParameters": {"id": 81, "nodeType": "ParameterList", "parameters": [], "src": "3092:0:0"}, "scope": 123, "src": "3046:138:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 121, "nodeType": "Block", "src": "3395:206:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 108, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 104, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "3426:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 106, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3446:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 105, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3438:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 107, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3438:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "3426:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373", "id": 109, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3462:40:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe", "typeString": "literal_string \"Ownable: new owner is the zero address\""}, "value": "Ownable: new owner is the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe", "typeString": "literal_string \"Ownable: new owner is the zero address\""}], "id": 103, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "3405:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 110, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3405:107:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 111, "nodeType": "ExpressionStatement", "src": "3405:107:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 113, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "3549:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 114, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "3557:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 112, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "3528:20:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 115, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3528:38:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 116, "nodeType": "EmitStatement", "src": "3523:43:0"}, {"expression": {"argumentTypes": null, "id": 119, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 117, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "3577:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 118, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "3586:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3577:17:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 120, "nodeType": "ExpressionStatement", "src": "3577:17:0"}]}, "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.", "id": 122, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 101, "modifierName": {"argumentTypes": null, "id": 100, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "3385:9:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "3385:9:0"}], "name": "transferOwnership", "nodeType": "FunctionDefinition", "parameters": {"id": 99, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 98, "name": "newOwner", "nodeType": "VariableDeclaration", "scope": 122, "src": "3360:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 97, "name": "address", "nodeType": "ElementaryTypeName", "src": "3360:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "3359:18:0"}, "returnParameters": {"id": 102, "nodeType": "ParameterList", "parameters": [], "src": "3395:0:0"}, "scope": 123, "src": "3333:268:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}], "scope": 2203, "src": "1916:1687:0"}, {"id": 124, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "3644:23:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 125, "name": "Context", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26, "src": "4130:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$26", "typeString": "contract Context"}}, "id": 126, "nodeType": "InheritanceSpecifier", "src": "4130:7:0"}], "contractDependencies": [26], "contractKind": "contract", "documentation": "@dev Contract module which allows children to implement an emergency stop\nmechanism that can be triggered by an authorized account.\n * This module is used through inheritance. It will make available the\nmodifiers `whenNotPaused` and `whenPaused`, which can be applied to\nthe functions of your contract. Note that they will not be pausable by\nsimply including this module, only once the modifiers are put in place.", "fullyImplemented": true, "id": 202, "linearizedBaseContracts": [202, 26], "name": "Pausable", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "documentation": "@dev Emitted when the pause is triggered by `account`.", "id": 130, "name": "Paused", "nodeType": "EventDefinition", "parameters": {"id": 129, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 128, "indexed": false, "name": "account", "nodeType": "VariableDeclaration", "scope": 130, "src": "4235:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 127, "name": "address", "nodeType": "ElementaryTypeName", "src": "4235:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "4234:17:0"}, "src": "4222:30:0"}, {"anonymous": false, "documentation": "@dev Emitted when the pause is lifted by `account`.", "id": 134, "name": "Unpaused", "nodeType": "EventDefinition", "parameters": {"id": 133, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 132, "indexed": false, "name": "account", "nodeType": "VariableDeclaration", "scope": 134, "src": "4348:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 131, "name": "address", "nodeType": "ElementaryTypeName", "src": "4348:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "4347:17:0"}, "src": "4333:32:0"}, {"constant": false, "id": 136, "name": "_paused", "nodeType": "VariableDeclaration", "scope": 202, "src": "4371:20:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 135, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4371:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "private"}, {"body": {"id": 143, "nodeType": "Block", "src": "4493:32:0", "statements": [{"expression": {"argumentTypes": null, "id": 141, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 139, "name": "_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "4503:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "hexValue": "66616c7365", "id": 140, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4513:5:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "4503:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 142, "nodeType": "ExpressionStatement", "src": "4503:15:0"}]}, "documentation": "@dev Initializes the contract in unpaused state.", "id": 144, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 137, "nodeType": "ParameterList", "parameters": [], "src": "4481:2:0"}, "returnParameters": {"id": 138, "nodeType": "ParameterList", "parameters": [], "src": "4493:0:0"}, "scope": 202, "src": "4470:55:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 151, "nodeType": "Block", "src": "4665:31:0", "statements": [{"expression": {"argumentTypes": null, "id": 149, "name": "_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "4682:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 148, "id": 150, "nodeType": "Return", "src": "4675:14:0"}]}, "documentation": "@dev Returns true if the contract is paused, and false otherwise.", "id": 152, "implemented": true, "kind": "function", "modifiers": [], "name": "paused", "nodeType": "FunctionDefinition", "parameters": {"id": 145, "nodeType": "ParameterList", "parameters": [], "src": "4635:2:0"}, "returnParameters": {"id": 148, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 147, "name": "", "nodeType": "VariableDeclaration", "scope": 152, "src": "4659:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 146, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4659:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "4658:6:0"}, "scope": 202, "src": "4620:76:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 161, "nodeType": "Block", "src": "4907:65:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "4925:8:0", "subExpression": {"argumentTypes": null, "id": 155, "name": "_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "4926:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "5061757361626c653a20706175736564", "id": 157, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4935:18:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a", "typeString": "literal_string \"Pausable: paused\""}, "value": "Pausable: paused"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a", "typeString": "literal_string \"Pausable: paused\""}], "id": 154, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "4917:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 158, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4917:37:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 159, "nodeType": "ExpressionStatement", "src": "4917:37:0"}, {"id": 160, "nodeType": "PlaceholderStatement", "src": "4964:1:0"}]}, "documentation": "@dev Modifier to make a function callable only when the contract is not paused.\n     * Requirements:\n     * - The contract must not be paused.", "id": 162, "name": "whenNotPaused", "nodeType": "ModifierDefinition", "parameters": {"id": 153, "nodeType": "ParameterList", "parameters": [], "src": "4904:2:0"}, "src": "4882:90:0", "visibility": "internal"}, {"body": {"id": 170, "nodeType": "Block", "src": "5172:68:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 165, "name": "_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "5190:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "5061757361626c653a206e6f7420706175736564", "id": 166, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5199:22:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a", "typeString": "literal_string \"Pausable: not paused\""}, "value": "Pausable: not paused"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a", "typeString": "literal_string \"Pausable: not paused\""}], "id": 164, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "5182:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5182:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 168, "nodeType": "ExpressionStatement", "src": "5182:40:0"}, {"id": 169, "nodeType": "PlaceholderStatement", "src": "5232:1:0"}]}, "documentation": "@dev Modifier to make a function callable only when the contract is paused.\n     * Requirements:\n     * - The contract must be paused.", "id": 171, "name": "whenPaused", "nodeType": "ModifierDefinition", "parameters": {"id": 163, "nodeType": "ParameterList", "parameters": [], "src": "5169:2:0"}, "src": "5150:90:0", "visibility": "internal"}, {"body": {"id": 185, "nodeType": "Block", "src": "5416:67:0", "statements": [{"expression": {"argumentTypes": null, "id": 178, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 176, "name": "_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "5426:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "hexValue": "74727565", "id": 177, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5436:4:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5426:14:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 179, "nodeType": "ExpressionStatement", "src": "5426:14:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 181, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "5463:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 182, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5463:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 180, "name": "Paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 130, "src": "5456:6:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 183, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5456:20:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 184, "nodeType": "EmitStatement", "src": "5451:25:0"}]}, "documentation": "@dev Triggers stopped state.\n     * Requirements:\n     * - The contract must not be paused.", "id": 186, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 174, "modifierName": {"argumentTypes": null, "id": 173, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "5402:13:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "5402:13:0"}], "name": "_pause", "nodeType": "FunctionDefinition", "parameters": {"id": 172, "nodeType": "ParameterList", "parameters": [], "src": "5390:2:0"}, "returnParameters": {"id": 175, "nodeType": "ParameterList", "parameters": [], "src": "5416:0:0"}, "scope": 202, "src": "5375:108:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 200, "nodeType": "Block", "src": "5655:70:0", "statements": [{"expression": {"argumentTypes": null, "id": 193, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 191, "name": "_paused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "5665:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "hexValue": "66616c7365", "id": 192, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5675:5:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "5665:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 194, "nodeType": "ExpressionStatement", "src": "5665:15:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 196, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "5705:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 197, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5705:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 195, "name": "Unpaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 134, "src": "5696:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5696:22:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 199, "nodeType": "EmitStatement", "src": "5691:27:0"}]}, "documentation": "@dev Returns to normal state.\n     * Requirements:\n     * - The contract must be paused.", "id": 201, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 189, "modifierName": {"argumentTypes": null, "id": 188, "name": "whenPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 171, "src": "5644:10:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "5644:10:0"}], "name": "_unpause", "nodeType": "FunctionDefinition", "parameters": {"id": 187, "nodeType": "ParameterList", "parameters": [], "src": "5632:2:0"}, "returnParameters": {"id": 190, "nodeType": "ParameterList", "parameters": [], "src": "5655:0:0"}, "scope": 202, "src": "5615:110:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}], "scope": 2203, "src": "4109:1618:0"}, {"id": 203, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "5784:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": "@title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n@dev See https://eips.ethereum.org/EIPS/eip-721", "fullyImplemented": false, "id": 225, "linearizedBaseContracts": [225], "name": "IERC721Enumerable", "nodeType": "ContractDefinition", "nodes": [{"body": null, "documentation": "@dev Returns the total amount of tokens stored by the contract.", "id": 208, "implemented": false, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 204, "nodeType": "ParameterList", "parameters": [], "src": "6087:2:0"}, "returnParameters": {"id": 207, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 206, "name": "", "nodeType": "VariableDeclaration", "scope": 208, "src": "6113:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 205, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6113:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "6112:9:0"}, "scope": 225, "src": "6067:55:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns a token ID owned by `owner` at a given `index` of its token list.\nUse along with {balanceOf} to enumerate all of ``owner``'s tokens.", "id": 217, "implemented": false, "kind": "function", "modifiers": [], "name": "tokenOfOwnerByIndex", "nodeType": "FunctionDefinition", "parameters": {"id": 213, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 210, "name": "owner", "nodeType": "VariableDeclaration", "scope": 217, "src": "6333:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 209, "name": "address", "nodeType": "ElementaryTypeName", "src": "6333:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 212, "name": "index", "nodeType": "VariableDeclaration", "scope": 217, "src": "6348:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 211, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6348:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "6332:30:0"}, "returnParameters": {"id": 216, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 215, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 217, "src": "6410:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 214, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6410:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "6409:17:0"}, "scope": 225, "src": "6304:123:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns a token ID at a given `index` of all the tokens stored by the contract.\nUse along with {totalSupply} to enumerate all tokens.", "id": 224, "implemented": false, "kind": "function", "modifiers": [], "name": "tokenByIndex", "nodeType": "FunctionDefinition", "parameters": {"id": 220, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 219, "name": "index", "nodeType": "VariableDeclaration", "scope": 224, "src": "6624:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 218, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6624:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "6623:15:0"}, "returnParameters": {"id": 223, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 222, "name": "", "nodeType": "VariableDeclaration", "scope": 224, "src": "6662:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 221, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6662:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "6661:9:0"}, "scope": 225, "src": "6602:69:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}], "scope": 2203, "src": "5946:727:0"}, {"id": 226, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "6713:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.", "fullyImplemented": true, "id": 349, "linearizedBaseContracts": [349], "name": "SafeMath", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 250, "nodeType": "Block", "src": "7614:110:0", "statements": [{"assignments": [236], "declarations": [{"constant": false, "id": 236, "name": "c", "nodeType": "VariableDeclaration", "scope": 250, "src": "7624:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 235, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7624:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 240, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 239, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 237, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "7636:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"argumentTypes": null, "id": 238, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 230, "src": "7640:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7636:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7624:17:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 242, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 236, "src": "7660:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"argumentTypes": null, "id": 243, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "7665:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7660:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77", "id": 245, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7668:29:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a", "typeString": "literal_string \"SafeMath: addition overflow\""}, "value": "SafeMath: addition overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a", "typeString": "literal_string \"SafeMath: addition overflow\""}], "id": 241, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "7652:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 246, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7652:46:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 247, "nodeType": "ExpressionStatement", "src": "7652:46:0"}, {"expression": {"argumentTypes": null, "id": 248, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 236, "src": "7716:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 234, "id": 249, "nodeType": "Return", "src": "7709:8:0"}]}, "documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.", "id": 251, "implemented": true, "kind": "function", "modifiers": [], "name": "add", "nodeType": "FunctionDefinition", "parameters": {"id": 231, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 228, "name": "a", "nodeType": "VariableDeclaration", "scope": 251, "src": "7560:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 227, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7560:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 230, "name": "b", "nodeType": "VariableDeclaration", "scope": 251, "src": "7571:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 229, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7571:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "7559:22:0"}, "returnParameters": {"id": 234, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 233, "name": "", "nodeType": "VariableDeclaration", "scope": 251, "src": "7605:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 232, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7605:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "7604:9:0"}, "scope": 349, "src": "7547:177:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 271, "nodeType": "Block", "src": "8055:89:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 261, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 255, "src": "8073:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"argumentTypes": null, "id": 262, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 253, "src": "8078:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8073:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77", "id": 264, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8081:32:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862", "typeString": "literal_string \"SafeMath: subtraction overflow\""}, "value": "SafeMath: subtraction overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862", "typeString": "literal_string \"SafeMath: subtraction overflow\""}], "id": 260, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "8065:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 265, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8065:49:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 266, "nodeType": "ExpressionStatement", "src": "8065:49:0"}, {"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 267, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 253, "src": "8132:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"argumentTypes": null, "id": 268, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 255, "src": "8136:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8132:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 259, "id": 270, "nodeType": "Return", "src": "8125:12:0"}]}, "documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.", "id": 272, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nodeType": "FunctionDefinition", "parameters": {"id": 256, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 253, "name": "a", "nodeType": "VariableDeclaration", "scope": 272, "src": "8001:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 252, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8001:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 255, "name": "b", "nodeType": "VariableDeclaration", "scope": 272, "src": "8012:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 254, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8012:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "8000:22:0"}, "returnParameters": {"id": 259, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 258, "name": "", "nodeType": "VariableDeclaration", "scope": 272, "src": "8046:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 257, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8046:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "8045:9:0"}, "scope": 349, "src": "7988:156:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 305, "nodeType": "Block", "src": "8451:393:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 283, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 281, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 274, "src": "8683:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 282, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8688:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8683:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 287, "nodeType": "IfStatement", "src": "8679:45:0", "trueBody": {"id": 286, "nodeType": "Block", "src": "8691:33:0", "statements": [{"expression": {"argumentTypes": null, "hexValue": "30", "id": 284, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8712:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 280, "id": 285, "nodeType": "Return", "src": "8705:8:0"}]}}, {"assignments": [289], "declarations": [{"constant": false, "id": 289, "name": "c", "nodeType": "VariableDeclaration", "scope": 305, "src": "8734:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8734:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 293, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 292, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 290, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 274, "src": "8746:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"argumentTypes": null, "id": 291, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 276, "src": "8750:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8746:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8734:17:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 299, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 297, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 295, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 289, "src": "8770:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "id": 296, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 274, "src": "8774:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8770:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 298, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 276, "src": "8779:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8770:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77", "id": 300, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8782:35:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3", "typeString": "literal_string \"SafeMath: multiplication overflow\""}, "value": "SafeMath: multiplication overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3", "typeString": "literal_string \"SafeMath: multiplication overflow\""}], "id": 294, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "8762:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 301, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8762:56:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 302, "nodeType": "ExpressionStatement", "src": "8762:56:0"}, {"expression": {"argumentTypes": null, "id": 303, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 289, "src": "8836:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 280, "id": 304, "nodeType": "Return", "src": "8829:8:0"}]}, "documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.", "id": 306, "implemented": true, "kind": "function", "modifiers": [], "name": "mul", "nodeType": "FunctionDefinition", "parameters": {"id": 277, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 274, "name": "a", "nodeType": "VariableDeclaration", "scope": 306, "src": "8397:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 273, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8397:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 276, "name": "b", "nodeType": "VariableDeclaration", "scope": 306, "src": "8408:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 275, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8408:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "8396:22:0"}, "returnParameters": {"id": 280, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 279, "name": "", "nodeType": "VariableDeclaration", "scope": 306, "src": "8442:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 278, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8442:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "8441:9:0"}, "scope": 349, "src": "8384:460:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 326, "nodeType": "Block", "src": "9366:84:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 316, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 310, "src": "9384:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 317, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9388:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9384:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f", "id": 319, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9391:28:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f", "typeString": "literal_string \"SafeMath: division by zero\""}, "value": "SafeMath: division by zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f", "typeString": "literal_string \"SafeMath: division by zero\""}], "id": 315, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "9376:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9376:44:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 321, "nodeType": "ExpressionStatement", "src": "9376:44:0"}, {"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 324, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 322, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 308, "src": "9438:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "id": 323, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 310, "src": "9442:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9438:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 314, "id": 325, "nodeType": "Return", "src": "9431:12:0"}]}, "documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.", "id": 327, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nodeType": "FunctionDefinition", "parameters": {"id": 311, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 308, "name": "a", "nodeType": "VariableDeclaration", "scope": 327, "src": "9312:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 307, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9312:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 310, "name": "b", "nodeType": "VariableDeclaration", "scope": 327, "src": "9323:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 309, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9323:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "9311:22:0"}, "returnParameters": {"id": 314, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 313, "name": "", "nodeType": "VariableDeclaration", "scope": 327, "src": "9357:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 312, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9357:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "9356:9:0"}, "scope": 349, "src": "9299:151:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}, {"body": {"id": 347, "nodeType": "Block", "src": "9961:82:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 339, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 337, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 331, "src": "9979:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 338, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9983:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9979:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f", "id": 340, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9986:26:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832", "typeString": "literal_string \"SafeMath: modulo by zero\""}, "value": "SafeMath: modulo by zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832", "typeString": "literal_string \"SafeMath: modulo by zero\""}], "id": 336, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "9971:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 341, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9971:42:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 342, "nodeType": "ExpressionStatement", "src": "9971:42:0"}, {"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 343, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "10031:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"argumentTypes": null, "id": 344, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 331, "src": "10035:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10031:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 335, "id": 346, "nodeType": "Return", "src": "10024:12:0"}]}, "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.", "id": 348, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nodeType": "FunctionDefinition", "parameters": {"id": 332, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 329, "name": "a", "nodeType": "VariableDeclaration", "scope": 348, "src": "9907:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 328, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9907:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 331, "name": "b", "nodeType": "VariableDeclaration", "scope": 348, "src": "9918:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 330, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9918:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "9906:22:0"}, "returnParameters": {"id": 335, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 334, "name": "", "nodeType": "VariableDeclaration", "scope": 348, "src": "9952:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 333, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9952:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "9951:9:0"}, "scope": 349, "src": "9894:149:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}], "scope": 2203, "src": "7302:2743:0"}, {"id": 350, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "10085:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.", "fullyImplemented": true, "id": 396, "linearizedBaseContracts": [396], "name": "Counters", "nodeType": "ContractDefinition", "nodes": [{"id": 353, "libraryName": {"contractScope": null, "id": 351, "name": "SafeMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 349, "src": "10711:8:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeMath_$349", "typeString": "library SafeMath"}}, "nodeType": "UsingForDirective", "src": "10705:27:0", "typeName": {"id": 352, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10724:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"canonicalName": "Counters.Counter", "id": 356, "members": [{"constant": false, "id": 355, "name": "_value", "nodeType": "VariableDeclaration", "scope": 356, "src": "11077:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 354, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11077:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "name": "Counter", "nodeType": "StructDefinition", "scope": 396, "src": "10738:374:0", "visibility": "public"}, {"body": {"id": 366, "nodeType": "Block", "src": "11192:38:0", "statements": [{"expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 363, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "11209:7:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 364, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 355, "src": "11209:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 362, "id": 365, "nodeType": "Return", "src": "11202:21:0"}]}, "documentation": null, "id": 367, "implemented": true, "kind": "function", "modifiers": [], "name": "current", "nodeType": "FunctionDefinition", "parameters": {"id": 359, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 358, "name": "counter", "nodeType": "VariableDeclaration", "scope": 367, "src": "11135:23:0", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter"}, "typeName": {"contractScope": null, "id": 357, "name": "Counter", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 356, "src": "11135:7:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter"}}, "value": null, "visibility": "internal"}], "src": "11134:25:0"}, "returnParameters": {"id": 362, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 361, "name": "", "nodeType": "VariableDeclaration", "scope": 367, "src": "11183:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 360, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11183:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "11182:9:0"}, "scope": 396, "src": "11118:112:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}, {"body": {"id": 378, "nodeType": "Block", "src": "11289:125:0", "statements": [{"expression": {"argumentTypes": null, "id": 376, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 372, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 369, "src": "11388:7:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 374, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 355, "src": "11388:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"argumentTypes": null, "hexValue": "31", "id": 375, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11406:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "11388:19:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 377, "nodeType": "ExpressionStatement", "src": "11388:19:0"}]}, "documentation": null, "id": 379, "implemented": true, "kind": "function", "modifiers": [], "name": "increment", "nodeType": "FunctionDefinition", "parameters": {"id": 370, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 369, "name": "counter", "nodeType": "VariableDeclaration", "scope": 379, "src": "11255:23:0", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter"}, "typeName": {"contractScope": null, "id": 368, "name": "Counter", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 356, "src": "11255:7:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter"}}, "value": null, "visibility": "internal"}], "src": "11254:25:0"}, "returnParameters": {"id": 371, "nodeType": "ParameterList", "parameters": [], "src": "11289:0:0"}, "scope": 396, "src": "11236:178:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 394, "nodeType": "Block", "src": "11473:55:0", "statements": [{"expression": {"argumentTypes": null, "id": 392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 384, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "11483:7:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 386, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 355, "src": "11483:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "31", "id": 390, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11519:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 387, "name": "counter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "11500:7:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter storage pointer"}}, "id": 388, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "_value", "nodeType": "MemberAccess", "referencedDeclaration": 355, "src": "11500:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 389, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 272, "src": "11500:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11500:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11483:38:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 393, "nodeType": "ExpressionStatement", "src": "11483:38:0"}]}, "documentation": null, "id": 395, "implemented": true, "kind": "function", "modifiers": [], "name": "decrement", "nodeType": "FunctionDefinition", "parameters": {"id": 382, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 381, "name": "counter", "nodeType": "VariableDeclaration", "scope": 395, "src": "11439:23:0", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter"}, "typeName": {"contractScope": null, "id": 380, "name": "Counter", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 356, "src": "11439:7:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter"}}, "value": null, "visibility": "internal"}], "src": "11438:25:0"}, "returnParameters": {"id": 383, "nodeType": "ParameterList", "parameters": [], "src": "11473:0:0"}, "scope": 396, "src": "11420:108:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}], "scope": 2203, "src": "10682:848:0"}, {"id": 397, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "11569:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@dev Collection of functions related to the address type", "fullyImplemented": true, "id": 437, "linearizedBaseContracts": [437], "name": "Address", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 421, "nodeType": "Block", "src": "12320:566:0", "statements": [{"assignments": [405], "declarations": [{"constant": false, "id": 405, "name": "codehash", "nodeType": "VariableDeclaration", "scope": 421, "src": "12572:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 404, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12572:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": null, "visibility": "internal"}], "id": 406, "initialValue": null, "nodeType": "VariableDeclarationStatement", "src": "12572:16:0"}, {"assignments": [408], "declarations": [{"constant": false, "id": 408, "name": "accountHash", "nodeType": "VariableDeclaration", "scope": 421, "src": "12598:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 407, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12598:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "value": null, "visibility": "internal"}], "id": 410, "initialValue": {"argumentTypes": null, "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730", "id": 409, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12620:66:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1", "typeString": "int_const 8947...(69 digits omitted)...1552"}, "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"}, "nodeType": "VariableDeclarationStatement", "src": "12598:88:0"}, {"externalReferences": [{"codehash": {"declaration": 405, "isOffset": false, "isSlot": false, "src": "12776:8:0", "valueSize": 1}}, {"account": {"declaration": 399, "isOffset": false, "isSlot": false, "src": "12800:7:0", "valueSize": 1}}], "id": 411, "nodeType": "InlineAssembly", "operations": "{\n    codehash := extcodehash(account)\n}", "src": "12753:65:0"}, {"expression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 418, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 414, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 412, "name": "codehash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 405, "src": "12836:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "id": 413, "name": "accountHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "12848:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "12836:23:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 417, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 415, "name": "codehash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 405, "src": "12863:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "hexValue": "307830", "id": 416, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12875:3:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0x0"}, "src": "12863:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12836:42:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 419, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "12835:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 403, "id": 420, "nodeType": "Return", "src": "12828:51:0"}]}, "documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====", "id": 422, "implemented": true, "kind": "function", "modifiers": [], "name": "isContract", "nodeType": "FunctionDefinition", "parameters": {"id": 400, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 399, "name": "account", "nodeType": "VariableDeclaration", "scope": 422, "src": "12274:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 398, "name": "address", "nodeType": "ElementaryTypeName", "src": "12274:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "12273:17:0"}, "returnParameters": {"id": 403, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 402, "name": "", "nodeType": "VariableDeclaration", "scope": 422, "src": "12314:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 401, "name": "bool", "nodeType": "ElementaryTypeName", "src": "12314:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "12313:6:0"}, "scope": 437, "src": "12254:632:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}, {"body": {"id": 435, "nodeType": "Block", "src": "13199:49:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 431, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "13232:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 430, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13224:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint160_$", "typeString": "type(uint160)"}, "typeName": "uint160"}, "id": 432, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13224:16:0", "typeDescriptions": {"typeIdentifier": "t_uint160", "typeString": "uint160"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint160", "typeString": "uint160"}], "id": 429, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "13216:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 433, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13216:25:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "functionReturnParameters": 428, "id": 434, "nodeType": "Return", "src": "13209:32:0"}]}, "documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._", "id": 436, "implemented": true, "kind": "function", "modifiers": [], "name": "toPayable", "nodeType": "FunctionDefinition", "parameters": {"id": 425, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 424, "name": "account", "nodeType": "VariableDeclaration", "scope": 436, "src": "13114:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 423, "name": "address", "nodeType": "ElementaryTypeName", "src": "13114:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "13113:17:0"}, "returnParameters": {"id": 428, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 427, "name": "", "nodeType": "VariableDeclaration", "scope": 436, "src": "13178:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 426, "name": "address", "nodeType": "ElementaryTypeName", "src": "13178:15:0", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "value": null, "visibility": "internal"}], "src": "13177:17:0"}, "scope": 437, "src": "13095:153:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}], "scope": 2203, "src": "11662:1588:0"}, {"id": 438, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "13297:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": "@dev Required interface of an ERC721 compliant contract.", "fullyImplemented": false, "id": 536, "linearizedBaseContracts": [536], "name": "IERC721", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "documentation": "@dev Emitted when `tokenId` token is transfered from `from` to `to`.", "id": 446, "name": "Transfer", "nodeType": "EventDefinition", "parameters": {"id": 445, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 440, "indexed": true, "name": "from", "nodeType": "VariableDeclaration", "scope": 446, "src": "13530:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 439, "name": "address", "nodeType": "ElementaryTypeName", "src": "13530:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 442, "indexed": true, "name": "to", "nodeType": "VariableDeclaration", "scope": 446, "src": "13560:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 441, "name": "address", "nodeType": "ElementaryTypeName", "src": "13560:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 444, "indexed": true, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 446, "src": "13588:23:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 443, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13588:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "13520:97:0"}, "src": "13506:112:0"}, {"anonymous": false, "documentation": "@dev Emitted when `owner` enables `approved` to manage the `tokenId` token.", "id": 454, "name": "Approval", "nodeType": "EventDefinition", "parameters": {"id": 453, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 448, "indexed": true, "name": "owner", "nodeType": "VariableDeclaration", "scope": 454, "src": "13747:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 447, "name": "address", "nodeType": "ElementaryTypeName", "src": "13747:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 450, "indexed": true, "name": "approved", "nodeType": "VariableDeclaration", "scope": 454, "src": "13778:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 449, "name": "address", "nodeType": "ElementaryTypeName", "src": "13778:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 452, "indexed": true, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 454, "src": "13812:23:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 451, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13812:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "13737:104:0"}, "src": "13723:119:0"}, {"anonymous": false, "documentation": "@dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.", "id": 462, "name": "ApprovalForAll", "nodeType": "EventDefinition", "parameters": {"id": 461, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 456, "indexed": true, "name": "owner", "nodeType": "VariableDeclaration", "scope": 462, "src": "14000:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 455, "name": "address", "nodeType": "ElementaryTypeName", "src": "14000:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 458, "indexed": true, "name": "operator", "nodeType": "VariableDeclaration", "scope": 462, "src": "14031:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 457, "name": "address", "nodeType": "ElementaryTypeName", "src": "14031:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 460, "indexed": false, "name": "approved", "nodeType": "VariableDeclaration", "scope": 462, "src": "14065:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 459, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14065:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "13990:94:0"}, "src": "13970:115:0"}, {"body": null, "documentation": "@dev Returns the number of tokens in ``owner``'s account.", "id": 469, "implemented": false, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "parameters": {"id": 465, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 464, "name": "owner", "nodeType": "VariableDeclaration", "scope": 469, "src": "14191:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 463, "name": "address", "nodeType": "ElementaryTypeName", "src": "14191:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "14190:15:0"}, "returnParameters": {"id": 468, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 467, "name": "balance", "nodeType": "VariableDeclaration", "scope": 469, "src": "14229:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 466, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14229:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "14228:17:0"}, "scope": 536, "src": "14172:74:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns the owner of the `tokenId` token.\n     * Requirements:\n     * - `tokenId` must exist.", "id": 476, "implemented": false, "kind": "function", "modifiers": [], "name": "ownerOf", "nodeType": "FunctionDefinition", "parameters": {"id": 472, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 471, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 476, "src": "14405:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 470, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14405:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "14404:17:0"}, "returnParameters": {"id": 475, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 474, "name": "owner", "nodeType": "VariableDeclaration", "scope": 476, "src": "14445:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 473, "name": "address", "nodeType": "ElementaryTypeName", "src": "14445:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "14444:15:0"}, "scope": 536, "src": "14388:72:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\nare aware of the ERC721 protocol to prevent tokens from being forever locked.\n     * Requirements:\n     * - `from`, `to` cannot be zero.\n- `tokenId` token must exist and be owned by `from`.\n- If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n- If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     * Emits a {Transfer} event.", "id": 485, "implemented": false, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 483, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 478, "name": "from", "nodeType": "VariableDeclaration", "scope": 485, "src": "15148:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 477, "name": "address", "nodeType": "ElementaryTypeName", "src": "15148:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 480, "name": "to", "nodeType": "VariableDeclaration", "scope": 485, "src": "15170:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 479, "name": "address", "nodeType": "ElementaryTypeName", "src": "15170:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 482, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 485, "src": "15190:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 481, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15190:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "15138:73:0"}, "returnParameters": {"id": 484, "nodeType": "ParameterList", "parameters": [], "src": "15220:0:0"}, "scope": 536, "src": "15113:108:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Transfers `tokenId` token from `from` to `to`.\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     * Requirements:\n     * - `from`, `to` cannot be zero.\n- `tokenId` token must be owned by `from`.\n- If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * Emits a {Transfer} event.", "id": 494, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 492, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 487, "name": "from", "nodeType": "VariableDeclaration", "scope": 494, "src": "15719:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 486, "name": "address", "nodeType": "ElementaryTypeName", "src": "15719:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 489, "name": "to", "nodeType": "VariableDeclaration", "scope": 494, "src": "15741:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 488, "name": "address", "nodeType": "ElementaryTypeName", "src": "15741:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 491, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 494, "src": "15761:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15761:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "15709:73:0"}, "returnParameters": {"id": 493, "nodeType": "ParameterList", "parameters": [], "src": "15791:0:0"}, "scope": 536, "src": "15688:104:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Gives permission to `to` to transfer `tokenId` token to another account.\nThe approval is cleared when the token is transferred.\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     * Requirements:\n     * - The caller must own the token or be an approved operator.\n- `tokenId` must exist.\n     * Emits an {Approval} event.", "id": 501, "implemented": false, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "parameters": {"id": 499, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 496, "name": "to", "nodeType": "VariableDeclaration", "scope": 501, "src": "16272:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 495, "name": "address", "nodeType": "ElementaryTypeName", "src": "16272:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 498, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 501, "src": "16284:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 497, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16284:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "16271:29:0"}, "returnParameters": {"id": 500, "nodeType": "ParameterList", "parameters": [], "src": "16309:0:0"}, "scope": 536, "src": "16255:55:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns the account approved for `tokenId` token.\n     * Requirements:\n     * - `tokenId` must exist.", "id": 508, "implemented": false, "kind": "function", "modifiers": [], "name": "getApproved", "nodeType": "FunctionDefinition", "parameters": {"id": 504, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 503, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 508, "src": "16481:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 502, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16481:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "16480:17:0"}, "returnParameters": {"id": 507, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 506, "name": "operator", "nodeType": "VariableDeclaration", "scope": 508, "src": "16545:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 505, "name": "address", "nodeType": "ElementaryTypeName", "src": "16545:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "16544:18:0"}, "scope": 536, "src": "16460:103:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Approve or remove `operator` as an operator for the caller.\nOperators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     * Requirements:\n     * - The `operator` cannot be the caller.\n     * Emits an {ApprovalForAll} event.", "id": 515, "implemented": false, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nodeType": "FunctionDefinition", "parameters": {"id": 513, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 510, "name": "operator", "nodeType": "VariableDeclaration", "scope": 515, "src": "16910:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 509, "name": "address", "nodeType": "ElementaryTypeName", "src": "16910:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 512, "name": "_approved", "nodeType": "VariableDeclaration", "scope": 515, "src": "16928:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 511, "name": "bool", "nodeType": "ElementaryTypeName", "src": "16928:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "16909:34:0"}, "returnParameters": {"id": 514, "nodeType": "ParameterList", "parameters": [], "src": "16952:0:0"}, "scope": 536, "src": "16883:70:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     * See {setApprovalForAll}", "id": 524, "implemented": false, "kind": "function", "modifiers": [], "name": "isApprovedForAll", "nodeType": "FunctionDefinition", "parameters": {"id": 520, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 517, "name": "owner", "nodeType": "VariableDeclaration", "scope": 524, "src": "17128:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 516, "name": "address", "nodeType": "ElementaryTypeName", "src": "17128:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 519, "name": "operator", "nodeType": "VariableDeclaration", "scope": 524, "src": "17143:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 518, "name": "address", "nodeType": "ElementaryTypeName", "src": "17143:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "17127:33:0"}, "returnParameters": {"id": 523, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 522, "name": "", "nodeType": "VariableDeclaration", "scope": 524, "src": "17208:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 521, "name": "bool", "nodeType": "ElementaryTypeName", "src": "17208:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "17207:6:0"}, "scope": 536, "src": "17102:112:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Safely transfers `tokenId` token from `from` to `to`.\n     * Requirements:\n     * - `from`, `to` cannot be zero.\n- `tokenId` token must exist and be owned by `from`.\n- If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n- If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     * Emits a {Transfer} event.", "id": 535, "implemented": false, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 533, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 526, "name": "from", "nodeType": "VariableDeclaration", "scope": 535, "src": "17768:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 525, "name": "address", "nodeType": "ElementaryTypeName", "src": "17768:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 528, "name": "to", "nodeType": "VariableDeclaration", "scope": 535, "src": "17790:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 527, "name": "address", "nodeType": "ElementaryTypeName", "src": "17790:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 530, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 535, "src": "17810:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 529, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17810:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 532, "name": "data", "nodeType": "VariableDeclaration", "scope": 535, "src": "17835:19:0", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 531, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "17835:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "17758:102:0"}, "returnParameters": {"id": 534, "nodeType": "ParameterList", "parameters": [], "src": "17869:0:0"}, "scope": 536, "src": "17733:137:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}], "scope": 2203, "src": "13390:4482:0"}, {"id": 537, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "17927:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": "@title ERC721 token receiver interface\n@dev Interface for any contract that wants to support safeTransfers\nfrom ERC721 asset contracts.", "fullyImplemented": false, "id": 551, "linearizedBaseContracts": [551], "name": "IERC721Receiver", "nodeType": "ContractDefinition", "nodes": [{"body": null, "documentation": "@notice Handle the receipt of an NFT\n@dev The ERC721 smart contract calls this function on the recipient\nafter a {IERC721-safeTransferFrom}. This function MUST return the function selector,\notherwise the caller will revert the transaction. The selector to be\nreturned can be obtained as `this.onERC721Received.selector`. This\nfunction MAY throw to revert and reject the transfer.\nNote: the ERC721 contract address is always the message sender.\n@param operator The address which called `safeTransferFrom` function\n@param from The address which previously owned the token\n@param tokenId The NFT identifier which is being transferred\n@param data Additional data with no specified format\n@return bytes4 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`", "id": 550, "implemented": false, "kind": "function", "modifiers": [], "name": "onERC721Received", "nodeType": "FunctionDefinition", "parameters": {"id": 546, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 539, "name": "operator", "nodeType": "VariableDeclaration", "scope": 550, "src": "19042:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 538, "name": "address", "nodeType": "ElementaryTypeName", "src": "19042:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 541, "name": "from", "nodeType": "VariableDeclaration", "scope": 550, "src": "19068:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 540, "name": "address", "nodeType": "ElementaryTypeName", "src": "19068:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 543, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 550, "src": "19090:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 542, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "19090:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 545, "name": "data", "nodeType": "VariableDeclaration", "scope": 550, "src": "19115:19:0", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 544, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "19115:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "19032:108:0"}, "returnParameters": {"id": 549, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 548, "name": "", "nodeType": "VariableDeclaration", "scope": 550, "src": "19159:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 547, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "19159:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": null, "visibility": "internal"}], "src": "19158:8:0"}, "scope": 551, "src": "19007:160:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}], "scope": 2203, "src": "18105:1064:0"}, {"id": 552, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "19216:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": "@dev Interface of the ERC165 standard, as defined in the\nhttps://eips.ethereum.org/EIPS/eip-165[EIP].\n * Implementers can declare support of contract interfaces, which can then be\nqueried by others ({ERC165Checker}).\n * For an implementation, see {ERC165}.", "fullyImplemented": false, "id": 560, "linearizedBaseContracts": [560], "name": "IERC165", "nodeType": "ContractDefinition", "nodes": [{"body": null, "documentation": "@dev Returns true if this contract implements the interface defined by\n`interfaceId`. See the corresponding\nhttps://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\nto learn more about how these ids are created.\n     * This function call must use less than 30 000 gas.", "id": 559, "implemented": false, "kind": "function", "modifiers": [], "name": "supportsInterface", "nodeType": "FunctionDefinition", "parameters": {"id": 555, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 554, "name": "interfaceId", "nodeType": "VariableDeclaration", "scope": 559, "src": "19917:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 553, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "19917:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": null, "visibility": "internal"}], "src": "19916:20:0"}, "returnParameters": {"id": 558, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 557, "name": "", "nodeType": "VariableDeclaration", "scope": 559, "src": "19960:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 556, "name": "bool", "nodeType": "ElementaryTypeName", "src": "19960:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "19959:6:0"}, "scope": 560, "src": "19890:76:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}], "scope": 2203, "src": "19521:447:0"}, {"id": 561, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "20014:23:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 562, "name": "IERC165", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 560, "src": "20230:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC165_$560", "typeString": "contract IERC165"}}, "id": 563, "nodeType": "InheritanceSpecifier", "src": "20230:7:0"}], "contractDependencies": [560], "contractKind": "contract", "documentation": "@dev Implementation of the {IERC165} interface.\n * Contracts may inherit from this and call {_registerInterface} to declare\ntheir support of an interface.", "fullyImplemented": true, "id": 610, "linearizedBaseContracts": [610, 560], "name": "ERC165", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 566, "name": "_INTERFACE_ID_ERC165", "nodeType": "VariableDeclaration", "scope": 610, "src": "20327:57:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 564, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "20327:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": {"argumentTypes": null, "hexValue": "30783031666663396137", "id": 565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20374:10:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_33540519_by_1", "typeString": "int_const 33540519"}, "value": "0x01ffc9a7"}, "visibility": "private"}, {"constant": false, "id": 570, "name": "_supportedInterfaces", "nodeType": "VariableDeclaration", "scope": 610, "src": "20478:52:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$", "typeString": "mapping(bytes4 => bool)"}, "typeName": {"id": 569, "keyType": {"id": 567, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "20486:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "Mapping", "src": "20478:23:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$", "typeString": "mapping(bytes4 => bool)"}, "valueType": {"id": 568, "name": "bool", "nodeType": "ElementaryTypeName", "src": "20496:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "value": null, "visibility": "private"}, {"body": {"id": 577, "nodeType": "Block", "src": "20560:193:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 574, "name": "_INTERFACE_ID_ERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 566, "src": "20725:20:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "id": 573, "name": "_registerInterface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 609, "src": "20706:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$", "typeString": "function (bytes4)"}}, "id": 575, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20706:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 576, "nodeType": "ExpressionStatement", "src": "20706:40:0"}]}, "documentation": null, "id": 578, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 571, "nodeType": "ParameterList", "parameters": [], "src": "20548:2:0"}, "returnParameters": {"id": 572, "nodeType": "ParameterList", "parameters": [], "src": "20560:0:0"}, "scope": 610, "src": "20537:216:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 589, "nodeType": "Block", "src": "20977:57:0", "statements": [{"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 585, "name": "_supportedInterfaces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 570, "src": "20994:20:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$", "typeString": "mapping(bytes4 => bool)"}}, "id": 587, "indexExpression": {"argumentTypes": null, "id": 586, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 580, "src": "21015:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "20994:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 584, "id": 588, "nodeType": "Return", "src": "20987:40:0"}]}, "documentation": "@dev See {IERC165-supportsInterface}.\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.", "id": 590, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nodeType": "FunctionDefinition", "parameters": {"id": 581, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 580, "name": "interfaceId", "nodeType": "VariableDeclaration", "scope": 590, "src": "20930:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 579, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "20930:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": null, "visibility": "internal"}], "src": "20929:20:0"}, "returnParameters": {"id": 584, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 583, "name": "", "nodeType": "VariableDeclaration", "scope": 590, "src": "20971:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 582, "name": "bool", "nodeType": "ElementaryTypeName", "src": "20971:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "20970:6:0"}, "scope": 610, "src": "20903:131:0", "stateMutability": "view", "superFunction": 559, "visibility": "public"}, {"body": {"id": 608, "nodeType": "Block", "src": "21485:134:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 596, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 592, "src": "21503:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "hexValue": "30786666666666666666", "id": 597, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "21518:10:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_4294967295_by_1", "typeString": "int_const 4294967295"}, "value": "0xffffffff"}, "src": "21503:25:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433136353a20696e76616c696420696e74657266616365206964", "id": 599, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "21530:30:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee", "typeString": "literal_string \"ERC165: invalid interface id\""}, "value": "ERC165: invalid interface id"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee", "typeString": "literal_string \"ERC165: invalid interface id\""}], "id": 595, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "21495:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21495:66:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 601, "nodeType": "ExpressionStatement", "src": "21495:66:0"}, {"expression": {"argumentTypes": null, "id": 606, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 602, "name": "_supportedInterfaces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 570, "src": "21572:20:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$", "typeString": "mapping(bytes4 => bool)"}}, "id": 604, "indexExpression": {"argumentTypes": null, "id": 603, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 592, "src": "21593:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "21572:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "hexValue": "74727565", "id": 605, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "21608:4:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "21572:40:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 607, "nodeType": "ExpressionStatement", "src": "21572:40:0"}]}, "documentation": "@dev Registers the contract as an implementer of the interface defined by\n`interfaceId`. Support of the actual ERC165 interface is automatic and\nregistering its interface id is not required.\n     * See {IERC165-supportsInterface}.\n     * Requirements:\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).", "id": 609, "implemented": true, "kind": "function", "modifiers": [], "name": "_registerInterface", "nodeType": "FunctionDefinition", "parameters": {"id": 593, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 592, "name": "interfaceId", "nodeType": "VariableDeclaration", "scope": 609, "src": "21456:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 591, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "21456:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": null, "visibility": "internal"}], "src": "21455:20:0"}, "returnParameters": {"id": 594, "nodeType": "ParameterList", "parameters": [], "src": "21485:0:0"}, "scope": 610, "src": "21428:191:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}], "scope": 2203, "src": "20211:1410:0"}, {"id": 611, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "21667:23:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 612, "name": "Context", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 26, "src": "21836:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$26", "typeString": "contract Context"}}, "id": 613, "nodeType": "InheritanceSpecifier", "src": "21836:7:0"}, {"arguments": null, "baseName": {"contractScope": null, "id": 614, "name": "ERC165", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 610, "src": "21845:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC165_$610", "typeString": "contract ERC165"}}, "id": 615, "nodeType": "InheritanceSpecifier", "src": "21845:6:0"}, {"arguments": null, "baseName": {"contractScope": null, "id": 616, "name": "IERC721", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 536, "src": "21853:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721_$536", "typeString": "contract IERC721"}}, "id": 617, "nodeType": "InheritanceSpecifier", "src": "21853:7:0"}], "contractDependencies": [26, 536, 560, 610], "contractKind": "contract", "documentation": "@title ERC721 Non-Fungible Token Standard basic implementation\n@dev see https://eips.ethereum.org/EIPS/eip-721", "fullyImplemented": true, "id": 1271, "linearizedBaseContracts": [1271, 536, 610, 560, 26], "name": "ERC721", "nodeType": "ContractDefinition", "nodes": [{"id": 620, "libraryName": {"contractScope": null, "id": 618, "name": "SafeMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 349, "src": "21873:8:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeMath_$349", "typeString": "library SafeMath"}}, "nodeType": "UsingForDirective", "src": "21867:27:0", "typeName": {"id": 619, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21886:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 623, "libraryName": {"contractScope": null, "id": 621, "name": "Address", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 437, "src": "21905:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Address_$437", "typeString": "library Address"}}, "nodeType": "UsingForDirective", "src": "21899:26:0", "typeName": {"id": 622, "name": "address", "nodeType": "ElementaryTypeName", "src": "21917:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, {"id": 626, "libraryName": {"contractScope": null, "id": 624, "name": "Counters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 396, "src": "21936:8:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Counters_$396", "typeString": "library Counters"}}, "nodeType": "UsingForDirective", "src": "21930:36:0", "typeName": {"contractScope": null, "id": 625, "name": "Counters.Counter", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 356, "src": "21949:16:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter"}}}, {"constant": true, "id": 629, "name": "_ERC721_RECEIVED", "nodeType": "VariableDeclaration", "scope": 1271, "src": "22144:53:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 627, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "22144:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": {"argumentTypes": null, "hexValue": "30783135306237613032", "id": 628, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "22187:10:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_353073666_by_1", "typeString": "int_const 353073666"}, "value": "0x150b7a02"}, "visibility": "private"}, {"constant": false, "id": 633, "name": "_tokenOwner", "nodeType": "VariableDeclaration", "scope": 1271, "src": "22242:47:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "typeName": {"id": 632, "keyType": {"id": 630, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22250:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "22242:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "valueType": {"id": 631, "name": "address", "nodeType": "ElementaryTypeName", "src": "22261:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "value": null, "visibility": "private"}, {"constant": false, "id": 637, "name": "_tokenApprovals", "nodeType": "VariableDeclaration", "scope": 1271, "src": "22345:51:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "typeName": {"id": 636, "keyType": {"id": 634, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "22353:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "22345:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "valueType": {"id": 635, "name": "address", "nodeType": "ElementaryTypeName", "src": "22364:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "value": null, "visibility": "private"}, {"constant": false, "id": 641, "name": "_ownedTokensCount", "nodeType": "VariableDeclaration", "scope": 1271, "src": "22454:62:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$356_storage_$", "typeString": "mapping(address => struct Counters.Counter)"}, "typeName": {"id": 640, "keyType": {"id": 638, "name": "address", "nodeType": "ElementaryTypeName", "src": "22462:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "22454:36:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$356_storage_$", "typeString": "mapping(address => struct Counters.Counter)"}, "valueType": {"contractScope": null, "id": 639, "name": "Counters.Counter", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 356, "src": "22473:16:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage_ptr", "typeString": "struct Counters.Counter"}}}, "value": null, "visibility": "private"}, {"constant": false, "id": 647, "name": "_operatorApprovals", "nodeType": "VariableDeclaration", "scope": 1271, "src": "22571:71:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}, "typeName": {"id": 646, "keyType": {"id": 642, "name": "address", "nodeType": "ElementaryTypeName", "src": "22579:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "22571:44:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}, "valueType": {"id": 645, "keyType": {"id": 643, "name": "address", "nodeType": "ElementaryTypeName", "src": "22598:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "22590:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 644, "name": "bool", "nodeType": "ElementaryTypeName", "src": "22609:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}}, "value": null, "visibility": "private"}, {"constant": true, "id": 650, "name": "_INTERFACE_ID_ERC721", "nodeType": "VariableDeclaration", "scope": 1271, "src": "23517:57:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 648, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "23517:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": {"argumentTypes": null, "hexValue": "30783830616335386364", "id": 649, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "23564:10:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_2158778573_by_1", "typeString": "int_const 2158778573"}, "value": "0x80ac58cd"}, "visibility": "private"}, {"body": {"id": 657, "nodeType": "Block", "src": "23602:134:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 654, "name": "_INTERFACE_ID_ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 650, "src": "23708:20:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "id": 653, "name": "_registerInterface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 609, "src": "23689:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$", "typeString": "function (bytes4)"}}, "id": 655, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23689:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 656, "nodeType": "ExpressionStatement", "src": "23689:40:0"}]}, "documentation": null, "id": 658, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 651, "nodeType": "ParameterList", "parameters": [], "src": "23592:2:0"}, "returnParameters": {"id": 652, "nodeType": "ParameterList", "parameters": [], "src": "23602:0:0"}, "scope": 1271, "src": "23581:155:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 680, "nodeType": "Block", "src": "24004:177:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 670, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 666, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "24035:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 668, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24052:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 667, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24044:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 669, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24044:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "24035:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373", "id": 671, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "24068:44:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba", "typeString": "literal_string \"ERC721: balance query for the zero address\""}, "value": "ERC721: balance query for the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba", "typeString": "literal_string \"ERC721: balance query for the zero address\""}], "id": 665, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "24014:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 672, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24014:108:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 673, "nodeType": "ExpressionStatement", "src": "24014:108:0"}, {"expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 674, "name": "_ownedTokensCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 641, "src": "24140:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$356_storage_$", "typeString": "mapping(address => struct Counters.Counter storage ref)"}}, "id": 676, "indexExpression": {"argumentTypes": null, "id": 675, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "24158:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "24140:24:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 677, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "current", "nodeType": "MemberAccess", "referencedDeclaration": 367, "src": "24140:32:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$356_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"}}, "id": 678, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24140:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 664, "id": 679, "nodeType": "Return", "src": "24133:41:0"}]}, "documentation": "@dev Gets the balance of the specified address.\n@param owner address to query the balance of\n@return uint256 representing the amount owned by the passed address", "id": 681, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "parameters": {"id": 661, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 660, "name": "owner", "nodeType": "VariableDeclaration", "scope": 681, "src": "23959:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 659, "name": "address", "nodeType": "ElementaryTypeName", "src": "23959:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "23958:15:0"}, "returnParameters": {"id": 664, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 663, "name": "", "nodeType": "VariableDeclaration", "scope": 681, "src": "23995:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 662, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "23995:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "23994:9:0"}, "scope": 1271, "src": "23940:241:0", "stateMutability": "view", "superFunction": 469, "visibility": "public"}, {"body": {"id": 705, "nodeType": "Block", "src": "24464:194:0", "statements": [{"assignments": [689], "declarations": [{"constant": false, "id": 689, "name": "owner", "nodeType": "VariableDeclaration", "scope": 705, "src": "24474:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 688, "name": "address", "nodeType": "ElementaryTypeName", "src": "24474:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 693, "initialValue": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 690, "name": "_tokenOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "24490:11:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 692, "indexExpression": {"argumentTypes": null, "id": 691, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 683, "src": "24502:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "24490:20:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "24474:36:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 699, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 695, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 689, "src": "24542:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 697, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24559:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 696, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "24551:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 698, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24551:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "24542:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 700, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "24575:43:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397", "typeString": "literal_string \"ERC721: owner query for nonexistent token\""}, "value": "ERC721: owner query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397", "typeString": "literal_string \"ERC721: owner query for nonexistent token\""}], "id": 694, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "24521:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 701, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24521:107:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 702, "nodeType": "ExpressionStatement", "src": "24521:107:0"}, {"expression": {"argumentTypes": null, "id": 703, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 689, "src": "24646:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 687, "id": 704, "nodeType": "Return", "src": "24639:12:0"}]}, "documentation": "@dev Gets the owner of the specified token ID.\n@param tokenId uint256 ID of the token to query the owner of\n@return address currently marked as the owner of the given token ID", "id": 706, "implemented": true, "kind": "function", "modifiers": [], "name": "ownerOf", "nodeType": "FunctionDefinition", "parameters": {"id": 684, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 683, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 706, "src": "24417:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 682, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "24417:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "24416:17:0"}, "returnParameters": {"id": 687, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 686, "name": "", "nodeType": "VariableDeclaration", "scope": 706, "src": "24455:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 685, "name": "address", "nodeType": "ElementaryTypeName", "src": "24455:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "24454:9:0"}, "scope": 1271, "src": "24400:258:0", "stateMutability": "view", "superFunction": 476, "visibility": "public"}, {"body": {"id": 752, "nodeType": "Block", "src": "25132:377:0", "statements": [{"assignments": [714], "declarations": [{"constant": false, "id": 714, "name": "owner", "nodeType": "VariableDeclaration", "scope": 752, "src": "25142:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 713, "name": "address", "nodeType": "ElementaryTypeName", "src": "25142:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 718, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 716, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 710, "src": "25166:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 715, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 706, "src": "25158:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 717, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25158:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "25142:32:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 722, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 720, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 708, "src": "25193:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "id": 721, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 714, "src": "25199:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "25193:11:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572", "id": 723, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25206:35:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942", "typeString": "literal_string \"ERC721: approval to current owner\""}, "value": "ERC721: approval to current owner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942", "typeString": "literal_string \"ERC721: approval to current owner\""}], "id": 719, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "25185:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 724, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25185:57:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 725, "nodeType": "ExpressionStatement", "src": "25185:57:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 730, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 727, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "25274:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 728, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25274:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 729, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 714, "src": "25290:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "25274:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 732, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 714, "src": "25316:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 733, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "25323:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 734, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25323:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "id": 731, "name": "isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 822, "src": "25299:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view returns (bool)"}}, "id": 735, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25299:37:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "25274:62:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c", "id": 737, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25350:58:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d", "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""}, "value": "ERC721: approve caller is not owner nor approved for all"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d", "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""}], "id": 726, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "25253:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 738, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25253:165:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 739, "nodeType": "ExpressionStatement", "src": "25253:165:0"}, {"expression": {"argumentTypes": null, "id": 744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 740, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "25429:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 742, "indexExpression": {"argumentTypes": null, "id": 741, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 710, "src": "25445:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "25429:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 743, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 708, "src": "25456:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "25429:29:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 745, "nodeType": "ExpressionStatement", "src": "25429:29:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 747, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 714, "src": "25483:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 748, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 708, "src": "25490:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 749, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 710, "src": "25494:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 746, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 454, "src": "25474:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 750, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25474:28:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 751, "nodeType": "EmitStatement", "src": "25469:33:0"}]}, "documentation": "@dev Approves another address to transfer the given token ID\nThe zero address indicates there is no approved address.\nThere can only be one approved address per token at a given time.\nCan only be called by the token owner or an approved operator.\n@param to address to be approved for the given token ID\n@param tokenId uint256 ID of the token to be approved", "id": 753, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "parameters": {"id": 711, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 708, "name": "to", "nodeType": "VariableDeclaration", "scope": 753, "src": "25096:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 707, "name": "address", "nodeType": "ElementaryTypeName", "src": "25096:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 710, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 753, "src": "25108:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 709, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25108:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "25095:29:0"}, "returnParameters": {"id": 712, "nodeType": "ParameterList", "parameters": [], "src": "25132:0:0"}, "scope": 1271, "src": "25079:430:0", "stateMutability": "nonpayable", "superFunction": 501, "visibility": "public"}, {"body": {"id": 771, "nodeType": "Block", "src": "25862:166:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 762, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 755, "src": "25901:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 761, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "25893:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 763, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25893:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 764, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "25923:46:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d", "typeString": "literal_string \"ERC721: approved query for nonexistent token\""}, "value": "ERC721: approved query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d", "typeString": "literal_string \"ERC721: approved query for nonexistent token\""}], "id": 760, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "25872:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 765, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "25872:107:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 766, "nodeType": "ExpressionStatement", "src": "25872:107:0"}, {"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 767, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "25997:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 769, "indexExpression": {"argumentTypes": null, "id": 768, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 755, "src": "26013:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "25997:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 759, "id": 770, "nodeType": "Return", "src": "25990:31:0"}]}, "documentation": "@dev Gets the approved address for a token ID, or zero if no address set\nReverts if the token ID does not exist.\n@param tokenId uint256 ID of the token to query the approval of\n@return address currently approved for the given token ID", "id": 772, "implemented": true, "kind": "function", "modifiers": [], "name": "getApproved", "nodeType": "FunctionDefinition", "parameters": {"id": 756, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 755, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 772, "src": "25815:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 754, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25815:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "25814:17:0"}, "returnParameters": {"id": 759, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 758, "name": "", "nodeType": "VariableDeclaration", "scope": 772, "src": "25853:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 757, "name": "address", "nodeType": "ElementaryTypeName", "src": "25853:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "25852:9:0"}, "scope": 1271, "src": "25794:234:0", "stateMutability": "view", "superFunction": 508, "visibility": "public"}, {"body": {"id": 805, "nodeType": "Block", "src": "26382:223:0", "statements": [{"assignments": [780], "declarations": [{"constant": false, "id": 780, "name": "msgSender", "nodeType": "VariableDeclaration", "scope": 805, "src": "26392:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 779, "name": "address", "nodeType": "ElementaryTypeName", "src": "26392:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 783, "initialValue": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 781, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "26412:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 782, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26412:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "VariableDeclarationStatement", "src": "26392:32:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 787, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 785, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 774, "src": "26443:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "id": 786, "name": "msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 780, "src": "26449:9:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "26443:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572", "id": 788, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "26460:27:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05", "typeString": "literal_string \"ERC721: approve to caller\""}, "value": "ERC721: approve to caller"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05", "typeString": "literal_string \"ERC721: approve to caller\""}], "id": 784, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "26435:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 789, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26435:53:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 790, "nodeType": "ExpressionStatement", "src": "26435:53:0"}, {"expression": {"argumentTypes": null, "id": 797, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 791, "name": "_operatorApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "26499:18:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}}, "id": 794, "indexExpression": {"argumentTypes": null, "id": 792, "name": "msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 780, "src": "26518:9:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "26499:29:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 795, "indexExpression": {"argumentTypes": null, "id": 793, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 774, "src": "26529:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "26499:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 796, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 776, "src": "26535:8:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "26499:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 798, "nodeType": "ExpressionStatement", "src": "26499:44:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 800, "name": "msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 780, "src": "26574:9:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 801, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 774, "src": "26585:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 802, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 776, "src": "26589:8:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 799, "name": "ApprovalForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "26559:14:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,address,bool)"}}, "id": 803, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "26559:39:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 804, "nodeType": "EmitStatement", "src": "26554:44:0"}]}, "documentation": "@dev Sets or unsets the approval of a given operator\nAn operator is allowed to transfer all tokens of the sender on their behalf.\n@param to operator address to set the approval\n@param approved representing the status of the approval to be set", "id": 806, "implemented": true, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nodeType": "FunctionDefinition", "parameters": {"id": 777, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 774, "name": "to", "nodeType": "VariableDeclaration", "scope": 806, "src": "26348:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 773, "name": "address", "nodeType": "ElementaryTypeName", "src": "26348:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 776, "name": "approved", "nodeType": "VariableDeclaration", "scope": 806, "src": "26360:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 775, "name": "bool", "nodeType": "ElementaryTypeName", "src": "26360:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "26347:27:0"}, "returnParameters": {"id": 778, "nodeType": "ParameterList", "parameters": [], "src": "26382:0:0"}, "scope": 1271, "src": "26321:284:0", "stateMutability": "nonpayable", "superFunction": 515, "visibility": "public"}, {"body": {"id": 821, "nodeType": "Block", "src": "27041:59:0", "statements": [{"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 815, "name": "_operatorApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 647, "src": "27058:18:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}}, "id": 817, "indexExpression": {"argumentTypes": null, "id": 816, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "27077:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "27058:25:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 819, "indexExpression": {"argumentTypes": null, "id": 818, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 810, "src": "27084:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "27058:35:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 814, "id": 820, "nodeType": "Return", "src": "27051:42:0"}]}, "documentation": "@dev Tells whether an operator is approved by a given owner.\n@param owner owner address which you want to query the approval of\n@param operator operator address which you want to query the approval of\n@return bool whether the given operator is approved by the given owner", "id": 822, "implemented": true, "kind": "function", "modifiers": [], "name": "isApprovedForAll", "nodeType": "FunctionDefinition", "parameters": {"id": 811, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 808, "name": "owner", "nodeType": "VariableDeclaration", "scope": 822, "src": "26953:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 807, "name": "address", "nodeType": "ElementaryTypeName", "src": "26953:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 810, "name": "operator", "nodeType": "VariableDeclaration", "scope": 822, "src": "26968:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 809, "name": "address", "nodeType": "ElementaryTypeName", "src": "26968:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "26952:33:0"}, "returnParameters": {"id": 814, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 813, "name": "", "nodeType": "VariableDeclaration", "scope": 822, "src": "27031:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 812, "name": "bool", "nodeType": "ElementaryTypeName", "src": "27031:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "27030:6:0"}, "scope": 1271, "src": "26927:173:0", "stateMutability": "view", "superFunction": 524, "visibility": "public"}, {"body": {"id": 846, "nodeType": "Block", "src": "27639:250:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 833, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "27742:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 834, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27742:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 835, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 828, "src": "27756:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 832, "name": "_isApprovedOrOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 975, "src": "27723:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) view returns (bool)"}}, "id": 836, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27723:41:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564", "id": 837, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "27778:51:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2", "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""}, "value": "ERC721: transfer caller is not owner nor approved"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2", "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""}], "id": 831, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "27702:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 838, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27702:137:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 839, "nodeType": "ExpressionStatement", "src": "27702:137:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 841, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 824, "src": "27864:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 842, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 826, "src": "27870:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 843, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 828, "src": "27874:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 840, "name": "_transferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1173, "src": "27850:13:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 844, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "27850:32:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 845, "nodeType": "ExpressionStatement", "src": "27850:32:0"}]}, "documentation": "@dev Transfers the ownership of a given token ID to another address.\nUsage of this method is discouraged, use {safeTransferFrom} whenever possible.\nRequires the msg.sender to be the owner, approved, or operator.\n@param from current owner of the token\n@param to address to receive the ownership of the given token ID\n@param tokenId uint256 ID of the token to be transferred", "id": 847, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 829, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 824, "name": "from", "nodeType": "VariableDeclaration", "scope": 847, "src": "27568:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 823, "name": "address", "nodeType": "ElementaryTypeName", "src": "27568:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 826, "name": "to", "nodeType": "VariableDeclaration", "scope": 847, "src": "27590:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 825, "name": "address", "nodeType": "ElementaryTypeName", "src": "27590:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 828, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 847, "src": "27610:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 827, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27610:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "27558:73:0"}, "returnParameters": {"id": 830, "nodeType": "ParameterList", "parameters": [], "src": "27639:0:0"}, "scope": 1271, "src": "27537:352:0", "stateMutability": "nonpayable", "superFunction": 494, "visibility": "public"}, {"body": {"id": 863, "nodeType": "Block", "src": "28644:56:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 857, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 849, "src": "28671:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 858, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 851, "src": "28677:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 859, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 853, "src": "28681:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "", "id": 860, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "28690:2:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "id": 856, "name": "safeTransferFrom", "nodeType": "Identifier", "overloadedDeclarations": [864, 892], "referencedDeclaration": 892, "src": "28654:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)"}}, "id": 861, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28654:39:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 862, "nodeType": "ExpressionStatement", "src": "28654:39:0"}]}, "documentation": "@dev Safely transfers the ownership of a given token ID to another address\nIf the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\nwhich is called upon a safe transfer, and return the magic value\n`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\nthe transfer is reverted.\nRequires the msg.sender to be the owner, approved, or operator\n@param from current owner of the token\n@param to address to receive the ownership of the given token ID\n@param tokenId uint256 ID of the token to be transferred", "id": 864, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 854, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 849, "name": "from", "nodeType": "VariableDeclaration", "scope": 864, "src": "28573:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 848, "name": "address", "nodeType": "ElementaryTypeName", "src": "28573:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 851, "name": "to", "nodeType": "VariableDeclaration", "scope": 864, "src": "28595:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 850, "name": "address", "nodeType": "ElementaryTypeName", "src": "28595:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 853, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 864, "src": "28615:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 852, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28615:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "28563:73:0"}, "returnParameters": {"id": 855, "nodeType": "ParameterList", "parameters": [], "src": "28644:0:0"}, "scope": 1271, "src": "28538:162:0", "stateMutability": "nonpayable", "superFunction": 485, "visibility": "public"}, {"body": {"id": 891, "nodeType": "Block", "src": "29557:208:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 877, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "29607:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 878, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29607:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 879, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 870, "src": "29621:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 876, "name": "_isApprovedOrOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 975, "src": "29588:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) view returns (bool)"}}, "id": 880, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29588:41:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564", "id": 881, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "29643:51:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2", "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""}, "value": "ERC721: transfer caller is not owner nor approved"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2", "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""}], "id": 875, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "29567:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 882, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29567:137:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 883, "nodeType": "ExpressionStatement", "src": "29567:137:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 885, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 866, "src": "29733:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 886, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 868, "src": "29739:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 887, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 870, "src": "29743:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 888, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 872, "src": "29752:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 884, "name": "_safeTransferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 920, "src": "29715:17:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)"}}, "id": 889, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29715:43:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 890, "nodeType": "ExpressionStatement", "src": "29715:43:0"}]}, "documentation": "@dev Safely transfers the ownership of a given token ID to another address\nIf the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\nwhich is called upon a safe transfer, and return the magic value\n`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\nthe transfer is reverted.\nRequires the _msgSender() to be the owner, approved, or operator\n@param from current owner of the token\n@param to address to receive the ownership of the given token ID\n@param tokenId uint256 ID of the token to be transferred\n@param _data bytes data to send along with a safe transfer check", "id": 892, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 873, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 866, "name": "from", "nodeType": "VariableDeclaration", "scope": 892, "src": "29458:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 865, "name": "address", "nodeType": "ElementaryTypeName", "src": "29458:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 868, "name": "to", "nodeType": "VariableDeclaration", "scope": 892, "src": "29480:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 867, "name": "address", "nodeType": "ElementaryTypeName", "src": "29480:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 870, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 892, "src": "29500:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 869, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29500:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 872, "name": "_data", "nodeType": "VariableDeclaration", "scope": 892, "src": "29525:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 871, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "29525:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "29448:101:0"}, "returnParameters": {"id": 874, "nodeType": "ParameterList", "parameters": [], "src": "29557:0:0"}, "scope": 1271, "src": "29423:342:0", "stateMutability": "nonpayable", "superFunction": 535, "visibility": "public"}, {"body": {"id": 919, "nodeType": "Block", "src": "30607:205:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 904, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 894, "src": "30631:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 905, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 896, "src": "30637:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 906, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 898, "src": "30641:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 903, "name": "_transferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1173, "src": "30617:13:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 907, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30617:32:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 908, "nodeType": "ExpressionStatement", "src": "30617:32:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 911, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 894, "src": "30704:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 912, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 896, "src": "30710:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 913, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 898, "src": "30714:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 914, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 900, "src": "30723:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 910, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1247, "src": "30681:22:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,address,uint256,bytes memory) returns (bool)"}}, "id": 915, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30681:48:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572", "id": 916, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "30743:52:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}, "value": "ERC721: transfer to non ERC721Receiver implementer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}], "id": 909, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "30660:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 917, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30660:145:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 918, "nodeType": "ExpressionStatement", "src": "30660:145:0"}]}, "documentation": "@dev Safely transfers the ownership of a given token ID to another address\nIf the target address is a contract, it must implement `onERC721Received`,\nwhich is called upon a safe transfer, and return the magic value\n`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\nthe transfer is reverted.\nRequires the msg.sender to be the owner, approved, or operator\n@param from current owner of the token\n@param to address to receive the ownership of the given token ID\n@param tokenId uint256 ID of the token to be transferred\n@param _data bytes data to send along with a safe transfer check", "id": 920, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeTransferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 901, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 894, "name": "from", "nodeType": "VariableDeclaration", "scope": 920, "src": "30506:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 893, "name": "address", "nodeType": "ElementaryTypeName", "src": "30506:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 896, "name": "to", "nodeType": "VariableDeclaration", "scope": 920, "src": "30528:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 895, "name": "address", "nodeType": "ElementaryTypeName", "src": "30528:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 898, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 920, "src": "30548:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 897, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30548:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 900, "name": "_data", "nodeType": "VariableDeclaration", "scope": 920, "src": "30573:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 899, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "30573:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "30496:101:0"}, "returnParameters": {"id": 902, "nodeType": "ParameterList", "parameters": [], "src": "30607:0:0"}, "scope": 1271, "src": "30470:342:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 935, "nodeType": "Block", "src": "31070:58:0", "statements": [{"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 933, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 927, "name": "_tokenOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "31087:11:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 929, "indexExpression": {"argumentTypes": null, "id": 928, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 922, "src": "31099:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "31087:20:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 931, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "31119:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 930, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "31111:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 932, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31111:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "31087:34:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 926, "id": 934, "nodeType": "Return", "src": "31080:41:0"}]}, "documentation": "@dev Returns whether the specified token exists.\n@param tokenId uint256 ID of the token to query the existence of\n@return bool whether the token exists", "id": 936, "implemented": true, "kind": "function", "modifiers": [], "name": "_exists", "nodeType": "FunctionDefinition", "parameters": {"id": 923, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 922, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 936, "src": "31024:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 921, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31024:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "31023:17:0"}, "returnParameters": {"id": 926, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 925, "name": "", "nodeType": "VariableDeclaration", "scope": 936, "src": "31064:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 924, "name": "bool", "nodeType": "ElementaryTypeName", "src": "31064:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "31063:6:0"}, "scope": 1271, "src": "31007:121:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}, {"body": {"id": 974, "nodeType": "Block", "src": "31608:298:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 947, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 940, "src": "31647:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 946, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "31639:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 948, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31639:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 949, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "31669:46:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c", "typeString": "literal_string \"ERC721: operator query for nonexistent token\""}, "value": "ERC721: operator query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c", "typeString": "literal_string \"ERC721: operator query for nonexistent token\""}], "id": 945, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "31618:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 950, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31618:107:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 951, "nodeType": "ExpressionStatement", "src": "31618:107:0"}, {"assignments": [953], "declarations": [{"constant": false, "id": 953, "name": "owner", "nodeType": "VariableDeclaration", "scope": 974, "src": "31736:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 952, "name": "address", "nodeType": "ElementaryTypeName", "src": "31736:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 957, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 955, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 940, "src": "31760:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 954, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 706, "src": "31752:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 956, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31752:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "31736:32:0"}, {"expression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 971, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 966, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 960, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 958, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 938, "src": "31787:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 959, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 953, "src": "31798:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "31787:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 965, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 962, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 940, "src": "31831:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 961, "name": "getApproved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 772, "src": "31819:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 963, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31819:20:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 964, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 938, "src": "31843:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "31819:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "31787:63:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 968, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 953, "src": "31883:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 969, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 938, "src": "31890:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 967, "name": "isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 822, "src": "31866:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view returns (bool)"}}, "id": 970, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31866:32:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "31787:111:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 972, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "31786:113:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 944, "id": 973, "nodeType": "Return", "src": "31779:120:0"}]}, "documentation": "@dev Returns whether the given spender can transfer a given token ID.\n@param spender address of the spender to query\n@param tokenId uint256 ID of the token to be transferred\n@return bool whether the msg.sender is approved for the given token ID,\nis an operator of the owner, or is the owner of the token", "id": 975, "implemented": true, "kind": "function", "modifiers": [], "name": "_isApprovedOrOwner", "nodeType": "FunctionDefinition", "parameters": {"id": 941, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 938, "name": "spender", "nodeType": "VariableDeclaration", "scope": 975, "src": "31517:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 937, "name": "address", "nodeType": "ElementaryTypeName", "src": "31517:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 940, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 975, "src": "31534:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 939, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31534:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "31516:34:0"}, "returnParameters": {"id": 944, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 943, "name": "", "nodeType": "VariableDeclaration", "scope": 975, "src": "31598:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 942, "name": "bool", "nodeType": "ElementaryTypeName", "src": "31598:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "31597:6:0"}, "scope": 1271, "src": "31489:417:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}, {"body": {"id": 988, "nodeType": "Block", "src": "32492:43:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 983, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 977, "src": "32512:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 984, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 979, "src": "32516:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "", "id": 985, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "32525:2:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "id": 982, "name": "_safeMint", "nodeType": "Identifier", "overloadedDeclarations": [989, 1016], "referencedDeclaration": 1016, "src": "32502:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,uint256,bytes memory)"}}, "id": 986, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32502:26:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 987, "nodeType": "ExpressionStatement", "src": "32502:26:0"}]}, "documentation": "@dev Internal function to safely mint a new token.\nReverts if the given token ID already exists.\nIf the target address is a contract, it must implement `onERC721Received`,\nwhich is called upon a safe transfer, and return the magic value\n`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\nthe transfer is reverted.\n@param to The address that will own the minted token\n@param tokenId uint256 ID of the token to be minted", "id": 989, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeMint", "nodeType": "FunctionDefinition", "parameters": {"id": 980, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 977, "name": "to", "nodeType": "VariableDeclaration", "scope": 989, "src": "32454:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 976, "name": "address", "nodeType": "ElementaryTypeName", "src": "32454:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 979, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 989, "src": "32466:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 978, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32466:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "32453:29:0"}, "returnParameters": {"id": 981, "nodeType": "ParameterList", "parameters": [], "src": "32492:0:0"}, "scope": 1271, "src": "32435:100:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1015, "nodeType": "Block", "src": "33243:197:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 999, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 991, "src": "33259:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1000, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 993, "src": "33263:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 998, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1061, "src": "33253:5:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1001, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33253:18:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1002, "nodeType": "ExpressionStatement", "src": "33253:18:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1006, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "33334:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1005, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "33326:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1007, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33326:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 1008, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 991, "src": "33338:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1009, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 993, "src": "33342:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 1010, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 995, "src": "33351:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1004, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1247, "src": "33303:22:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,address,uint256,bytes memory) returns (bool)"}}, "id": 1011, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33303:54:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572", "id": 1012, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "33371:52:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}, "value": "ERC721: transfer to non ERC721Receiver implementer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}], "id": 1003, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "33282:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1013, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33282:151:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1014, "nodeType": "ExpressionStatement", "src": "33282:151:0"}]}, "documentation": "@dev Internal function to safely mint a new token.\nReverts if the given token ID already exists.\nIf the target address is a contract, it must implement `onERC721Received`,\nwhich is called upon a safe transfer, and return the magic value\n`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\nthe transfer is reverted.\n@param to The address that will own the minted token\n@param tokenId uint256 ID of the token to be minted\n@param _data bytes data to send along with a safe transfer check", "id": 1016, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeMint", "nodeType": "FunctionDefinition", "parameters": {"id": 996, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 991, "name": "to", "nodeType": "VariableDeclaration", "scope": 1016, "src": "33164:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 990, "name": "address", "nodeType": "ElementaryTypeName", "src": "33164:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 993, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1016, "src": "33184:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 992, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33184:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 995, "name": "_data", "nodeType": "VariableDeclaration", "scope": 1016, "src": "33209:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 994, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "33209:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "33154:79:0"}, "returnParameters": {"id": 997, "nodeType": "ParameterList", "parameters": [], "src": "33243:0:0"}, "scope": 1271, "src": "33136:304:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1060, "nodeType": "Block", "src": "33738:274:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1028, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1024, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1018, "src": "33756:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1026, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "33770:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1025, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "33762:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1027, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33762:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "33756:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373", "id": 1029, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "33774:34:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6", "typeString": "literal_string \"ERC721: mint to the zero address\""}, "value": "ERC721: mint to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6", "typeString": "literal_string \"ERC721: mint to the zero address\""}], "id": 1023, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "33748:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1030, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33748:61:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1031, "nodeType": "ExpressionStatement", "src": "33748:61:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1036, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "33827:17:0", "subExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1034, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1020, "src": "33836:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1033, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "33828:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 1035, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33828:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564", "id": 1037, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "33846:30:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57", "typeString": "literal_string \"ERC721: token already minted\""}, "value": "ERC721: token already minted"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57", "typeString": "literal_string \"ERC721: token already minted\""}], "id": 1032, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "33819:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1038, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33819:58:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1039, "nodeType": "ExpressionStatement", "src": "33819:58:0"}, {"expression": {"argumentTypes": null, "id": 1044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1040, "name": "_tokenOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "33888:11:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1042, "indexExpression": {"argumentTypes": null, "id": 1041, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1020, "src": "33900:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "33888:20:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1043, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1018, "src": "33911:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "33888:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1045, "nodeType": "ExpressionStatement", "src": "33888:25:0"}, {"expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1046, "name": "_ownedTokensCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 641, "src": "33923:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$356_storage_$", "typeString": "mapping(address => struct Counters.Counter storage ref)"}}, "id": 1048, "indexExpression": {"argumentTypes": null, "id": 1047, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1018, "src": "33941:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "33923:21:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 1049, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "increment", "nodeType": "MemberAccess", "referencedDeclaration": 379, "src": "33923:31:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$356_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer)"}}, "id": 1050, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33923:33:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1051, "nodeType": "ExpressionStatement", "src": "33923:33:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1054, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "33989:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1053, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "33981:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1055, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33981:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 1056, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1018, "src": "33993:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1057, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1020, "src": "33997:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1052, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "33972:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1058, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33972:33:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1059, "nodeType": "EmitStatement", "src": "33967:38:0"}]}, "documentation": "@dev Internal function to mint a new token.\nReverts if the given token ID already exists.\n@param to The address that will own the minted token\n@param tokenId uint256 ID of the token to be minted", "id": 1061, "implemented": true, "kind": "function", "modifiers": [], "name": "_mint", "nodeType": "FunctionDefinition", "parameters": {"id": 1021, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1018, "name": "to", "nodeType": "VariableDeclaration", "scope": 1061, "src": "33700:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1017, "name": "address", "nodeType": "ElementaryTypeName", "src": "33700:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1020, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1061, "src": "33712:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1019, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "33712:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "33699:29:0"}, "returnParameters": {"id": 1022, "nodeType": "ParameterList", "parameters": [], "src": "33738:0:0"}, "scope": 1271, "src": "33685:327:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1103, "nodeType": "Block", "src": "34336:302:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1073, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1070, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "34375:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1069, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 706, "src": "34367:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1071, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34367:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 1072, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1063, "src": "34387:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "34367:25:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e", "id": 1074, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "34406:39:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_d9af5b321f427d3820b5fc07b432b1ddf1bb6411d5d926d9de9773fd616ab5ee", "typeString": "literal_string \"ERC721: burn of token that is not own\""}, "value": "ERC721: burn of token that is not own"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d9af5b321f427d3820b5fc07b432b1ddf1bb6411d5d926d9de9773fd616ab5ee", "typeString": "literal_string \"ERC721: burn of token that is not own\""}], "id": 1068, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "34346:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1075, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34346:109:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1076, "nodeType": "ExpressionStatement", "src": "34346:109:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1078, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "34481:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1077, "name": "_clearApproval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1270, "src": "34466:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1079, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34466:23:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1080, "nodeType": "ExpressionStatement", "src": "34466:23:0"}, {"expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1081, "name": "_ownedTokensCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 641, "src": "34500:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$356_storage_$", "typeString": "mapping(address => struct Counters.Counter storage ref)"}}, "id": 1083, "indexExpression": {"argumentTypes": null, "id": 1082, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1063, "src": "34518:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "34500:24:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 1084, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "decrement", "nodeType": "MemberAccess", "referencedDeclaration": 395, "src": "34500:34:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$356_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer)"}}, "id": 1085, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34500:36:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1086, "nodeType": "ExpressionStatement", "src": "34500:36:0"}, {"expression": {"argumentTypes": null, "id": 1093, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1087, "name": "_tokenOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "34546:11:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1089, "indexExpression": {"argumentTypes": null, "id": 1088, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "34558:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "34546:20:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1091, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "34577:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1090, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "34569:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1092, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34569:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "34546:33:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1094, "nodeType": "ExpressionStatement", "src": "34546:33:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1096, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1063, "src": "34604:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1098, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "34619:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1097, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "34611:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1099, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34611:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 1100, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1065, "src": "34623:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1095, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "34595:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1101, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34595:36:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1102, "nodeType": "EmitStatement", "src": "34590:41:0"}]}, "documentation": "@dev Internal function to burn a specific token.\nReverts if the token does not exist.\nDeprecated, use {_burn} instead.\n@param owner owner of the token to burn\n@param tokenId uint256 ID of the token being burned", "id": 1104, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nodeType": "FunctionDefinition", "parameters": {"id": 1066, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1063, "name": "owner", "nodeType": "VariableDeclaration", "scope": 1104, "src": "34295:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1062, "name": "address", "nodeType": "ElementaryTypeName", "src": "34295:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1065, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1104, "src": "34310:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1064, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34310:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "34294:32:0"}, "returnParameters": {"id": 1067, "nodeType": "ParameterList", "parameters": [], "src": "34336:0:0"}, "scope": 1271, "src": "34280:358:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1116, "nodeType": "Block", "src": "34860:49:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1111, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1106, "src": "34884:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1110, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 706, "src": "34876:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1112, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34876:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1113, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1106, "src": "34894:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1109, "name": "_burn", "nodeType": "Identifier", "overloadedDeclarations": [1104, 1117], "referencedDeclaration": 1104, "src": "34870:5:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1114, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34870:32:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1115, "nodeType": "ExpressionStatement", "src": "34870:32:0"}]}, "documentation": "@dev Internal function to burn a specific token.\nReverts if the token does not exist.\n@param tokenId uint256 ID of the token being burned", "id": 1117, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nodeType": "FunctionDefinition", "parameters": {"id": 1107, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1106, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1117, "src": "34834:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1105, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34834:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "34833:17:0"}, "returnParameters": {"id": 1108, "nodeType": "ParameterList", "parameters": [], "src": "34860:0:0"}, "scope": 1271, "src": "34819:90:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1172, "nodeType": "Block", "src": "35391:406:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1128, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1123, "src": "35430:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1127, "name": "ownerOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 706, "src": "35422:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1129, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35422:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 1130, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1119, "src": "35442:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "35422:24:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e", "id": 1132, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "35460:43:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950", "typeString": "literal_string \"ERC721: transfer of token that is not own\""}, "value": "ERC721: transfer of token that is not own"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950", "typeString": "literal_string \"ERC721: transfer of token that is not own\""}], "id": 1126, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "35401:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1133, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35401:112:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1134, "nodeType": "ExpressionStatement", "src": "35401:112:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1140, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1136, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1121, "src": "35531:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1138, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "35545:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1137, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "35537:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1139, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35537:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "35531:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373", "id": 1141, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "35549:38:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4", "typeString": "literal_string \"ERC721: transfer to the zero address\""}, "value": "ERC721: transfer to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4", "typeString": "literal_string \"ERC721: transfer to the zero address\""}], "id": 1135, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "35523:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1142, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35523:65:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1143, "nodeType": "ExpressionStatement", "src": "35523:65:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1145, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1123, "src": "35614:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1144, "name": "_clearApproval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1270, "src": "35599:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1146, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35599:23:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1147, "nodeType": "ExpressionStatement", "src": "35599:23:0"}, {"expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1148, "name": "_ownedTokensCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 641, "src": "35633:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$356_storage_$", "typeString": "mapping(address => struct Counters.Counter storage ref)"}}, "id": 1150, "indexExpression": {"argumentTypes": null, "id": 1149, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1119, "src": "35651:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "35633:23:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 1151, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "decrement", "nodeType": "MemberAccess", "referencedDeclaration": 395, "src": "35633:33:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$356_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer)"}}, "id": 1152, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35633:35:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1153, "nodeType": "ExpressionStatement", "src": "35633:35:0"}, {"expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1154, "name": "_ownedTokensCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 641, "src": "35678:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$356_storage_$", "typeString": "mapping(address => struct Counters.Counter storage ref)"}}, "id": 1156, "indexExpression": {"argumentTypes": null, "id": 1155, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1121, "src": "35696:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "35678:21:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Counter_$356_storage", "typeString": "struct Counters.Counter storage ref"}}, "id": 1157, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "increment", "nodeType": "MemberAccess", "referencedDeclaration": 379, "src": "35678:31:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$356_storage_ptr_$", "typeString": "function (struct Counters.Counter storage pointer)"}}, "id": 1158, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35678:33:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1159, "nodeType": "ExpressionStatement", "src": "35678:33:0"}, {"expression": {"argumentTypes": null, "id": 1164, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1160, "name": "_tokenOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 633, "src": "35722:11:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1162, "indexExpression": {"argumentTypes": null, "id": 1161, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1123, "src": "35734:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "35722:20:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1163, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1121, "src": "35745:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "35722:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1165, "nodeType": "ExpressionStatement", "src": "35722:25:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1167, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1119, "src": "35772:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1168, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1121, "src": "35778:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1169, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1123, "src": "35782:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1166, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "35763:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1170, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35763:27:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1171, "nodeType": "EmitStatement", "src": "35758:32:0"}]}, "documentation": "@dev Internal function to transfer ownership of a given token ID to another address.\nAs opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n@param from current owner of the token\n@param to address to receive the ownership of the given token ID\n@param tokenId uint256 ID of the token to be transferred", "id": 1173, "implemented": true, "kind": "function", "modifiers": [], "name": "_transferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 1124, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1119, "name": "from", "nodeType": "VariableDeclaration", "scope": 1173, "src": "35318:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1118, "name": "address", "nodeType": "ElementaryTypeName", "src": "35318:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1121, "name": "to", "nodeType": "VariableDeclaration", "scope": 1173, "src": "35340:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1120, "name": "address", "nodeType": "ElementaryTypeName", "src": "35340:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1123, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1173, "src": "35360:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1122, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "35360:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "35308:73:0"}, "returnParameters": {"id": 1125, "nodeType": "ParameterList", "parameters": [], "src": "35391:0:0"}, "scope": 1271, "src": "35286:511:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1246, "nodeType": "Block", "src": "36593:968:0", "statements": [{"condition": {"argumentTypes": null, "id": 1189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "36607:16:0", "subExpression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "expression": {"argumentTypes": null, "id": 1186, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1177, "src": "36608:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1187, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isContract", "nodeType": "MemberAccess", "referencedDeclaration": 422, "src": "36608:13:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$", "typeString": "function (address) view returns (bool)"}}, "id": 1188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36608:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1193, "nodeType": "IfStatement", "src": "36603:58:0", "trueBody": {"id": 1192, "nodeType": "Block", "src": "36625:36:0", "statements": [{"expression": {"argumentTypes": null, "hexValue": "74727565", "id": 1190, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "36646:4:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1185, "id": 1191, "nodeType": "Return", "src": "36639:11:0"}]}}, {"assignments": [1195, 1197], "declarations": [{"constant": false, "id": 1195, "name": "success", "nodeType": "VariableDeclaration", "scope": 1246, "src": "36731:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1194, "name": "bool", "nodeType": "ElementaryTypeName", "src": "36731:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1197, "name": "returndata", "nodeType": "VariableDeclaration", "scope": 1246, "src": "36745:23:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1196, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "36745:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "id": 1214, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1203, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1177, "src": "36849:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1202, "name": "IERC721Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 551, "src": "36833:15:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$551_$", "typeString": "type(contract IERC721Receiver)"}}, "id": 1204, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36833:19:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Receiver_$551", "typeString": "contract IERC721Receiver"}}, "id": 1205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "onERC721Received", "nodeType": "MemberAccess", "referencedDeclaration": 550, "src": "36833:36:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$", "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"}}, "id": 1206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "36833:45:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 1207, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "36896:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 1208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36896:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"argumentTypes": null, "id": 1209, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1175, "src": "36926:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1210, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1179, "src": "36948:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 1211, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1181, "src": "36973:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": null, "id": 1200, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2204, "src": "36793:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 1201, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSelector", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "36793:22:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bytes4) pure returns (bytes memory)"}}, "id": 1212, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36793:199:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": null, "id": 1198, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1177, "src": "36772:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "36772:7:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 1213, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36772:230:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "36730:272:0"}, {"condition": {"argumentTypes": null, "id": 1216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "37017:8:0", "subExpression": {"argumentTypes": null, "id": 1215, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1195, "src": "37018:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1244, "nodeType": "Block", "src": "37433:122:0", "statements": [{"assignments": [1231], "declarations": [{"constant": false, "id": 1231, "name": "retval", "nodeType": "VariableDeclaration", "scope": 1244, "src": "37447:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1230, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "37447:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": null, "visibility": "internal"}], "id": 1238, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1234, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1197, "src": "37474:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"argumentTypes": null, "components": [{"argumentTypes": null, "id": 1235, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "37487:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)"}, "typeName": "bytes4"}], "id": 1236, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "37486:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)"}], "expression": {"argumentTypes": null, "id": 1232, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2204, "src": "37463:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 1233, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "decode", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "37463:10:0", "typeDescriptions": {"typeIdentifier": "t_function_abidecode_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1237, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37463:32:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "VariableDeclarationStatement", "src": "37447:48:0"}, {"expression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 1241, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1239, "name": "retval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1231, "src": "37517:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 1240, "name": "_ERC721_RECEIVED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 629, "src": "37527:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "37517:26:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 1242, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "37516:28:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1185, "id": 1243, "nodeType": "Return", "src": "37509:35:0"}]}, "id": 1245, "nodeType": "IfStatement", "src": "37013:542:0", "trueBody": {"id": 1229, "nodeType": "Block", "src": "37027:400:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1217, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1197, "src": "37045:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1218, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "37045:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1219, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "37065:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "37045:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1227, "nodeType": "Block", "src": "37324:93:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572", "id": 1224, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "37349:52:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}, "value": "ERC721: transfer to non ERC721Receiver implementer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}], "id": 1223, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [2222, 2223], "referencedDeclaration": 2223, "src": "37342:6:0", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1225, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37342:60:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1226, "nodeType": "ExpressionStatement", "src": "37342:60:0"}]}, "id": 1228, "nodeType": "IfStatement", "src": "37041:376:0", "trueBody": {"id": 1222, "nodeType": "Block", "src": "37068:250:0", "statements": [{"externalReferences": [{"returndata": {"declaration": 1197, "isOffset": false, "isSlot": false, "src": "37210:10:0", "valueSize": 1}}, {"returndata": {"declaration": 1197, "isOffset": false, "isSlot": false, "src": "37257:10:0", "valueSize": 1}}], "id": 1221, "nodeType": "InlineAssembly", "operations": "{\n    let returndata_size := mload(returndata)\n    revert(add(32, returndata), returndata_size)\n}", "src": "37150:154:0"}]}}]}}]}, "documentation": "@dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\nThe call is not executed if the target address is not a contract.\n     * This is an internal detail of the `ERC721` contract and its use is deprecated.\n@param from address representing the previous owner of the given token ID\n@param to target address that will receive the tokens\n@param tokenId uint256 ID of the token to be transferred\n@param _data bytes optional data to send along with the call\n@return bool whether the call correctly returned the expected magic value", "id": 1247, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkOnERC721Received", "nodeType": "FunctionDefinition", "parameters": {"id": 1182, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1175, "name": "from", "nodeType": "VariableDeclaration", "scope": 1247, "src": "36477:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1174, "name": "address", "nodeType": "ElementaryTypeName", "src": "36477:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1177, "name": "to", "nodeType": "VariableDeclaration", "scope": 1247, "src": "36499:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1176, "name": "address", "nodeType": "ElementaryTypeName", "src": "36499:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1179, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1247, "src": "36519:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1178, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "36519:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1181, "name": "_data", "nodeType": "VariableDeclaration", "scope": 1247, "src": "36544:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1180, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "36544:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "src": "36467:101:0"}, "returnParameters": {"id": 1185, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1184, "name": "", "nodeType": "VariableDeclaration", "scope": 1247, "src": "36587:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1183, "name": "bool", "nodeType": "ElementaryTypeName", "src": "36587:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "36586:6:0"}, "scope": 1271, "src": "36436:1125:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1269, "nodeType": "Block", "src": "37772:122:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1252, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "37786:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1254, "indexExpression": {"argumentTypes": null, "id": 1253, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1249, "src": "37802:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "37786:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1256, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "37822:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1255, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "37814:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1257, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37814:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "37786:38:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1268, "nodeType": "IfStatement", "src": "37782:106:0", "trueBody": {"id": 1267, "nodeType": "Block", "src": "37826:62:0", "statements": [{"expression": {"argumentTypes": null, "id": 1265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1259, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "37840:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1261, "indexExpression": {"argumentTypes": null, "id": 1260, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1249, "src": "37856:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "37840:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 1263, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "37875:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1262, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "37867:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 1264, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37867:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "37840:37:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1266, "nodeType": "ExpressionStatement", "src": "37840:37:0"}]}}]}, "documentation": "@dev Private function to clear current approval of a given token ID.\n@param tokenId uint256 ID of the token to be transferred", "id": 1270, "implemented": true, "kind": "function", "modifiers": [], "name": "_clearApproval", "nodeType": "FunctionDefinition", "parameters": {"id": 1250, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1249, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1270, "src": "37747:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1248, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "37747:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "37746:17:0"}, "returnParameters": {"id": 1251, "nodeType": "ParameterList", "parameters": [], "src": "37772:0:0"}, "scope": 1271, "src": "37723:171:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "private"}], "scope": 2203, "src": "21817:16079:0"}, {"id": 1272, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "37952:23:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 1273, "name": "ERC721", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1271, "src": "38144:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC721_$1271", "typeString": "contract ERC721"}}, "id": 1274, "nodeType": "InheritanceSpecifier", "src": "38144:6:0"}, {"arguments": null, "baseName": {"contractScope": null, "id": 1275, "name": "IERC721Enumerable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 225, "src": "38152:17:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Enumerable_$225", "typeString": "contract IERC721Enumerable"}}, "id": 1276, "nodeType": "InheritanceSpecifier", "src": "38152:17:0"}], "contractDependencies": [26, 225, 536, 560, 610, 1271], "contractKind": "contract", "documentation": "@title ERC-721 Non-Fungible Token with optional enumeration extension logic\n@dev See https://eips.ethereum.org/EIPS/eip-721", "fullyImplemented": true, "id": 1602, "linearizedBaseContracts": [1602, 225, 1271, 536, 610, 560, 26], "name": "ERC721Enumerable", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 1281, "name": "_ownedTokens", "nodeType": "VariableDeclaration", "scope": 1602, "src": "38229:50:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[])"}, "typeName": {"id": 1280, "keyType": {"id": 1277, "name": "address", "nodeType": "ElementaryTypeName", "src": "38237:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "38229:29:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[])"}, "valueType": {"baseType": {"id": 1278, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "38248:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1279, "length": null, "nodeType": "ArrayTypeName", "src": "38248:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "value": null, "visibility": "private"}, {"constant": false, "id": 1285, "name": "_ownedTokensIndex", "nodeType": "VariableDeclaration", "scope": 1602, "src": "38349:53:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "typeName": {"id": 1284, "keyType": {"id": 1282, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "38357:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "38349:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "valueType": {"id": 1283, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "38368:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "value": null, "visibility": "private"}, {"constant": false, "id": 1288, "name": "_allTokens", "nodeType": "VariableDeclaration", "scope": 1602, "src": "38463:28:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1286, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "38463:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1287, "length": null, "nodeType": "ArrayTypeName", "src": "38463:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "value": null, "visibility": "private"}, {"constant": false, "id": 1292, "name": "_allTokensIndex", "nodeType": "VariableDeclaration", "scope": 1602, "src": "38562:51:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "typeName": {"id": 1291, "keyType": {"id": 1289, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "38570:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "38562:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "valueType": {"id": 1290, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "38581:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "value": null, "visibility": "private"}, {"constant": true, "id": 1295, "name": "_INTERFACE_ID_ERC721_ENUMERABLE", "nodeType": "VariableDeclaration", "scope": 1602, "src": "38918:68:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1293, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "38918:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": {"argumentTypes": null, "hexValue": "30783738306539643633", "id": 1294, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38976:10:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_2014223715_by_1", "typeString": "int_const 2014223715"}, "value": "0x780e9d63"}, "visibility": "private"}, {"body": {"id": 1302, "nodeType": "Block", "src": "39014:154:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1299, "name": "_INTERFACE_ID_ERC721_ENUMERABLE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1295, "src": "39129:31:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "id": 1298, "name": "_registerInterface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 609, "src": "39110:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$", "typeString": "function (bytes4)"}}, "id": 1300, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "39110:51:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1301, "nodeType": "ExpressionStatement", "src": "39110:51:0"}]}, "documentation": null, "id": 1303, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 1296, "nodeType": "ParameterList", "parameters": [], "src": "39004:2:0"}, "returnParameters": {"id": 1297, "nodeType": "ParameterList", "parameters": [], "src": "39014:0:0"}, "scope": 1602, "src": "38993:175:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 1327, "nodeType": "Block", "src": "39659:175:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1317, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1313, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1307, "src": "39690:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1315, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1305, "src": "39708:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1314, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 681, "src": "39698:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1316, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "39698:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "39690:24:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473", "id": 1318, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "39728:45:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c", "typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""}, "value": "ERC721Enumerable: owner index out of bounds"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c", "typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""}], "id": 1312, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "39669:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1319, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "39669:114:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1320, "nodeType": "ExpressionStatement", "src": "39669:114:0"}, {"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1321, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "39801:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1323, "indexExpression": {"argumentTypes": null, "id": 1322, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1305, "src": "39814:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "39801:19:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1325, "indexExpression": {"argumentTypes": null, "id": 1324, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1307, "src": "39821:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "39801:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1311, "id": 1326, "nodeType": "Return", "src": "39794:33:0"}]}, "documentation": "@dev Gets the token ID at a given index of the tokens list of the requested owner.\n@param owner address owning the tokens list to be accessed\n@param index uint256 representing the index to be accessed of the requested tokens list\n@return uint256 token ID at the given index of the tokens list owned by the requested address", "id": 1328, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenOfOwnerByIndex", "nodeType": "FunctionDefinition", "parameters": {"id": 1308, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1305, "name": "owner", "nodeType": "VariableDeclaration", "scope": 1328, "src": "39571:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1304, "name": "address", "nodeType": "ElementaryTypeName", "src": "39571:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1307, "name": "index", "nodeType": "VariableDeclaration", "scope": 1328, "src": "39586:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1306, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "39586:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "39570:30:0"}, "returnParameters": {"id": 1311, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1310, "name": "", "nodeType": "VariableDeclaration", "scope": 1328, "src": "39646:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1309, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "39646:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "39645:9:0"}, "scope": 1602, "src": "39542:292:0", "stateMutability": "view", "superFunction": 217, "visibility": "public"}, {"body": {"id": 1336, "nodeType": "Block", "src": "40040:41:0", "statements": [{"expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1333, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "40057:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1334, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "40057:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1332, "id": 1335, "nodeType": "Return", "src": "40050:24:0"}]}, "documentation": "@dev Gets the total amount of tokens stored by the contract.\n@return uint256 representing the total amount of tokens", "id": 1337, "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "parameters": {"id": 1329, "nodeType": "ParameterList", "parameters": [], "src": "40007:2:0"}, "returnParameters": {"id": 1332, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1331, "name": "", "nodeType": "VariableDeclaration", "scope": 1337, "src": "40031:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1330, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "40031:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "40030:9:0"}, "scope": 1602, "src": "39987:94:0", "stateMutability": "view", "superFunction": 208, "visibility": "public"}, {"body": {"id": 1356, "nodeType": "Block", "src": "40486:164:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1348, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1345, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1339, "src": "40517:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 1346, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1337, "src": "40525:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1347, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "40525:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "40517:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473", "id": 1349, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "40552:46:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc", "typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""}, "value": "ERC721Enumerable: global index out of bounds"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc", "typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""}], "id": 1344, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "40496:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1350, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "40496:112:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1351, "nodeType": "ExpressionStatement", "src": "40496:112:0"}, {"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1352, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "40626:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1354, "indexExpression": {"argumentTypes": null, "id": 1353, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1339, "src": "40637:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "40626:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1343, "id": 1355, "nodeType": "Return", "src": "40619:24:0"}]}, "documentation": "@dev Gets the token ID at a given index of all the tokens in this contract\nReverts if the index is greater or equal to the total number of tokens.\n@param index uint256 representing the index to be accessed of the tokens list\n@return uint256 token ID at the given index of the tokens list", "id": 1357, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenByIndex", "nodeType": "FunctionDefinition", "parameters": {"id": 1340, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1339, "name": "index", "nodeType": "VariableDeclaration", "scope": 1357, "src": "40441:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1338, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "40441:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "40440:15:0"}, "returnParameters": {"id": 1343, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1342, "name": "", "nodeType": "VariableDeclaration", "scope": 1357, "src": "40477:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1341, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "40477:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "40476:9:0"}, "scope": 1602, "src": "40419:231:0", "stateMutability": "view", "superFunction": 224, "visibility": "public"}, {"body": {"id": 1384, "nodeType": "Block", "src": "41130:164:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1369, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1359, "src": "41160:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1370, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1361, "src": "41166:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1371, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1363, "src": "41170:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1366, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2256, "src": "41140:5:0", "typeDescriptions": {"typeIdentifier": "t_super$_ERC721Enumerable_$1602", "typeString": "contract super ERC721Enumerable"}}, "id": 1368, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1173, "src": "41140:19:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "41140:38:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1373, "nodeType": "ExpressionStatement", "src": "41140:38:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1375, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1359, "src": "41222:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1376, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1363, "src": "41228:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1374, "name": "_removeTokenFromOwnerEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1552, "src": "41189:32:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1377, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "41189:47:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1378, "nodeType": "ExpressionStatement", "src": "41189:47:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1380, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1361, "src": "41275:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1381, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1363, "src": "41279:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1379, "name": "_addTokenToOwnerEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1476, "src": "41247:27:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1382, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "41247:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1383, "nodeType": "ExpressionStatement", "src": "41247:40:0"}]}, "documentation": "@dev Internal function to transfer ownership of a given token ID to another address.\nAs opposed to transferFrom, this imposes no restrictions on msg.sender.\n@param from current owner of the token\n@param to address to receive the ownership of the given token ID\n@param tokenId uint256 ID of the token to be transferred", "id": 1385, "implemented": true, "kind": "function", "modifiers": [], "name": "_transferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 1364, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1359, "name": "from", "nodeType": "VariableDeclaration", "scope": 1385, "src": "41057:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1358, "name": "address", "nodeType": "ElementaryTypeName", "src": "41057:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1361, "name": "to", "nodeType": "VariableDeclaration", "scope": 1385, "src": "41079:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1360, "name": "address", "nodeType": "ElementaryTypeName", "src": "41079:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1363, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1385, "src": "41099:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1362, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41099:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "41047:73:0"}, "returnParameters": {"id": 1365, "nodeType": "ParameterList", "parameters": [], "src": "41130:0:0"}, "scope": 1602, "src": "41025:269:0", "stateMutability": "nonpayable", "superFunction": 1173, "visibility": "internal"}, {"body": {"id": 1408, "nodeType": "Block", "src": "41604:143:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1395, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1387, "src": "41626:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1396, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1389, "src": "41630:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1392, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2256, "src": "41614:5:0", "typeDescriptions": {"typeIdentifier": "t_super$_ERC721Enumerable_$1602", "typeString": "contract super ERC721Enumerable"}}, "id": 1394, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_mint", "nodeType": "MemberAccess", "referencedDeclaration": 1061, "src": "41614:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1397, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "41614:24:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1398, "nodeType": "ExpressionStatement", "src": "41614:24:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1400, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1387, "src": "41677:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1401, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1389, "src": "41681:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1399, "name": "_addTokenToOwnerEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1476, "src": "41649:27:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1402, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "41649:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1403, "nodeType": "ExpressionStatement", "src": "41649:40:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1405, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1389, "src": "41732:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1404, "name": "_addTokenToAllTokensEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1495, "src": "41700:31:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1406, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "41700:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1407, "nodeType": "ExpressionStatement", "src": "41700:40:0"}]}, "documentation": "@dev Internal function to mint a new token.\nReverts if the given token ID already exists.\n@param to address the beneficiary that will own the minted token\n@param tokenId uint256 ID of the token to be minted", "id": 1409, "implemented": true, "kind": "function", "modifiers": [], "name": "_mint", "nodeType": "FunctionDefinition", "parameters": {"id": 1390, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1387, "name": "to", "nodeType": "VariableDeclaration", "scope": 1409, "src": "41566:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1386, "name": "address", "nodeType": "ElementaryTypeName", "src": "41566:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1389, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1409, "src": "41578:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1388, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41578:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "41565:29:0"}, "returnParameters": {"id": 1391, "nodeType": "ParameterList", "parameters": [], "src": "41604:0:0"}, "scope": 1602, "src": "41551:196:0", "stateMutability": "nonpayable", "superFunction": 1061, "visibility": "internal"}, {"body": {"id": 1438, "nodeType": "Block", "src": "42078:309:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1419, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1411, "src": "42100:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1420, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1413, "src": "42107:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1416, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2256, "src": "42088:5:0", "typeDescriptions": {"typeIdentifier": "t_super$_ERC721Enumerable_$1602", "typeString": "contract super ERC721Enumerable"}}, "id": 1418, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_burn", "nodeType": "MemberAccess", "referencedDeclaration": 1104, "src": "42088:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1421, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42088:27:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1422, "nodeType": "ExpressionStatement", "src": "42088:27:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1424, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1411, "src": "42159:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1425, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1413, "src": "42166:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1423, "name": "_removeTokenFromOwnerEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1552, "src": "42126:32:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1426, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42126:48:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1427, "nodeType": "ExpressionStatement", "src": "42126:48:0"}, {"expression": {"argumentTypes": null, "id": 1432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1428, "name": "_ownedTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1285, "src": "42294:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1430, "indexExpression": {"argumentTypes": null, "id": 1429, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1413, "src": "42312:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "42294:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "hexValue": "30", "id": 1431, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "42323:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "42294:30:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1433, "nodeType": "ExpressionStatement", "src": "42294:30:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1435, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1413, "src": "42372:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1434, "name": "_removeTokenFromAllTokensEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1601, "src": "42335:36:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1436, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42335:45:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1437, "nodeType": "ExpressionStatement", "src": "42335:45:0"}]}, "documentation": "@dev Internal function to burn a specific token.\nReverts if the token does not exist.\nDeprecated, use {ERC721-_burn} instead.\n@param owner owner of the token to burn\n@param tokenId uint256 ID of the token being burned", "id": 1439, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nodeType": "FunctionDefinition", "parameters": {"id": 1414, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1411, "name": "owner", "nodeType": "VariableDeclaration", "scope": 1439, "src": "42037:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1410, "name": "address", "nodeType": "ElementaryTypeName", "src": "42037:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1413, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1439, "src": "42052:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1412, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "42052:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "42036:32:0"}, "returnParameters": {"id": 1415, "nodeType": "ParameterList", "parameters": [], "src": "42078:0:0"}, "scope": 1602, "src": "42022:365:0", "stateMutability": "nonpayable", "superFunction": 1104, "visibility": "internal"}, {"body": {"id": 1451, "nodeType": "Block", "src": "42701:43:0", "statements": [{"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1447, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "42718:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1449, "indexExpression": {"argumentTypes": null, "id": 1448, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1441, "src": "42731:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "42718:19:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "functionReturnParameters": 1446, "id": 1450, "nodeType": "Return", "src": "42711:26:0"}]}, "documentation": "@dev Gets the list of token IDs of the requested owner.\n@param owner address owning the tokens\n@return uint256[] List of token IDs owned by the requested address", "id": 1452, "implemented": true, "kind": "function", "modifiers": [], "name": "_tokensOfOwner", "nodeType": "FunctionDefinition", "parameters": {"id": 1442, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1441, "name": "owner", "nodeType": "VariableDeclaration", "scope": 1452, "src": "42616:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1440, "name": "address", "nodeType": "ElementaryTypeName", "src": "42616:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "42615:15:0"}, "returnParameters": {"id": 1446, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1445, "name": "", "nodeType": "VariableDeclaration", "scope": 1452, "src": "42678:17:0", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1443, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "42678:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1444, "length": null, "nodeType": "ArrayTypeName", "src": "42678:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "value": null, "visibility": "internal"}], "src": "42677:19:0"}, "scope": 1602, "src": "42592:152:0", "stateMutability": "view", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1475, "nodeType": "Block", "src": "43112:109:0", "statements": [{"expression": {"argumentTypes": null, "id": 1466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1459, "name": "_ownedTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1285, "src": "43122:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1461, "indexExpression": {"argumentTypes": null, "id": 1460, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1456, "src": "43140:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "43122:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1462, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "43151:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1464, "indexExpression": {"argumentTypes": null, "id": 1463, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1454, "src": "43164:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "43151:16:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1465, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "43151:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "43122:52:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1467, "nodeType": "ExpressionStatement", "src": "43122:52:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1472, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1456, "src": "43206:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1468, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "43184:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1470, "indexExpression": {"argumentTypes": null, "id": 1469, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1454, "src": "43197:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "43184:16:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1471, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "43184:21:0", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) returns (uint256)"}}, "id": 1473, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "43184:30:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1474, "nodeType": "ExpressionStatement", "src": "43184:30:0"}]}, "documentation": "@dev Private function to add a token to this extension's ownership-tracking data structures.\n@param to address representing the new owner of the given token ID\n@param tokenId uint256 ID of the token to be added to the tokens list of the given address", "id": 1476, "implemented": true, "kind": "function", "modifiers": [], "name": "_addTokenToOwnerEnumeration", "nodeType": "FunctionDefinition", "parameters": {"id": 1457, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1454, "name": "to", "nodeType": "VariableDeclaration", "scope": 1476, "src": "43075:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1453, "name": "address", "nodeType": "ElementaryTypeName", "src": "43075:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1456, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1476, "src": "43087:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1455, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "43087:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "43074:29:0"}, "returnParameters": {"id": 1458, "nodeType": "ParameterList", "parameters": [], "src": "43112:0:0"}, "scope": 1602, "src": "43038:183:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "private"}, {"body": {"id": 1494, "nodeType": "Block", "src": "43482:95:0", "statements": [{"expression": {"argumentTypes": null, "id": 1486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1481, "name": "_allTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1292, "src": "43492:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1483, "indexExpression": {"argumentTypes": null, "id": 1482, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "43508:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "43492:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1484, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "43519:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1485, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "43519:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "43492:44:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1487, "nodeType": "ExpressionStatement", "src": "43492:44:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1491, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "43562:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1488, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "43546:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "43546:15:0", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) returns (uint256)"}}, "id": 1492, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "43546:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1493, "nodeType": "ExpressionStatement", "src": "43546:24:0"}]}, "documentation": "@dev Private function to add a token to this extension's token tracking data structures.\n@param tokenId uint256 ID of the token to be added to the tokens list", "id": 1495, "implemented": true, "kind": "function", "modifiers": [], "name": "_addTokenToAllTokensEnumeration", "nodeType": "FunctionDefinition", "parameters": {"id": 1479, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1478, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1495, "src": "43457:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1477, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "43457:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "43456:17:0"}, "returnParameters": {"id": 1480, "nodeType": "ParameterList", "parameters": [], "src": "43482:0:0"}, "scope": 1602, "src": "43416:161:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "private"}, {"body": {"id": 1551, "nodeType": "Block", "src": "44287:1047:0", "statements": [{"assignments": [1503], "declarations": [{"constant": false, "id": 1503, "name": "lastTokenIndex", "nodeType": "VariableDeclaration", "scope": 1551, "src": "44468:22:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1502, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "44468:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1511, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "31", "id": 1509, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "44523:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1504, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "44493:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1506, "indexExpression": {"argumentTypes": null, "id": 1505, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1497, "src": "44506:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "44493:18:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1507, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "44493:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1508, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 272, "src": "44493:29:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1510, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "44493:32:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "44468:57:0"}, {"assignments": [1513], "declarations": [{"constant": false, "id": 1513, "name": "tokenIndex", "nodeType": "VariableDeclaration", "scope": 1551, "src": "44535:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1512, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "44535:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1517, "initialValue": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1514, "name": "_ownedTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1285, "src": "44556:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1516, "indexExpression": {"argumentTypes": null, "id": 1515, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1499, "src": "44574:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "44556:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "44535:47:0"}, {"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1518, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1513, "src": "44686:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "id": 1519, "name": "lastTokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1503, "src": "44700:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "44686:28:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1544, "nodeType": "IfStatement", "src": "44682:323:0", "trueBody": {"id": 1543, "nodeType": "Block", "src": "44716:289:0", "statements": [{"assignments": [1522], "declarations": [{"constant": false, "id": 1522, "name": "lastTokenId", "nodeType": "VariableDeclaration", "scope": 1543, "src": "44730:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1521, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "44730:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1528, "initialValue": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1523, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "44752:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1525, "indexExpression": {"argumentTypes": null, "id": 1524, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1497, "src": "44765:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "44752:18:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1527, "indexExpression": {"argumentTypes": null, "id": 1526, "name": "lastTokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1503, "src": "44771:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "44752:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "44730:56:0"}, {"expression": {"argumentTypes": null, "id": 1535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1529, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "44801:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1532, "indexExpression": {"argumentTypes": null, "id": 1530, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1497, "src": "44814:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "44801:18:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1533, "indexExpression": {"argumentTypes": null, "id": 1531, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1513, "src": "44820:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "44801:30:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1534, "name": "lastTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1522, "src": "44834:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "44801:44:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1536, "nodeType": "ExpressionStatement", "src": "44801:44:0"}, {"expression": {"argumentTypes": null, "id": 1541, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1537, "name": "_ownedTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1285, "src": "44917:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1539, "indexExpression": {"argumentTypes": null, "id": 1538, "name": "lastTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1522, "src": "44935:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "44917:30:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1540, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1513, "src": "44950:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "44917:43:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1542, "nodeType": "ExpressionStatement", "src": "44917:43:0"}]}}, {"expression": {"argumentTypes": null, "id": 1549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": false, "src": "45091:27:0", "subExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1545, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1281, "src": "45091:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$", "typeString": "mapping(address => uint256[] storage ref)"}}, "id": 1547, "indexExpression": {"argumentTypes": null, "id": 1546, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1497, "src": "45104:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "45091:18:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1548, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "45091:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1550, "nodeType": "ExpressionStatement", "src": "45091:27:0"}]}, "documentation": "@dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\nwhile the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\ngas optimizations e.g. when performing a transfer operation (avoiding double writes).\nThis has O(1) time complexity, but alters the order of the _ownedTokens array.\n@param from address representing the previous owner of the given token ID\n@param tokenId uint256 ID of the token to be removed from the tokens list of the given address", "id": 1552, "implemented": true, "kind": "function", "modifiers": [], "name": "_removeTokenFromOwnerEnumeration", "nodeType": "FunctionDefinition", "parameters": {"id": 1500, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1497, "name": "from", "nodeType": "VariableDeclaration", "scope": 1552, "src": "44236:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1496, "name": "address", "nodeType": "ElementaryTypeName", "src": "44236:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1499, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1552, "src": "44250:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1498, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "44250:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "44235:31:0"}, "returnParameters": {"id": 1501, "nodeType": "ParameterList", "parameters": [], "src": "44287:0:0"}, "scope": 1602, "src": "44194:1140:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "private"}, {"body": {"id": 1600, "nodeType": "Block", "src": "45693:993:0", "statements": [{"assignments": [1558], "declarations": [{"constant": false, "id": 1558, "name": "lastTokenIndex", "nodeType": "VariableDeclaration", "scope": 1600, "src": "45871:22:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1557, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "45871:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1564, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "31", "id": 1562, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "45918:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "expression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1559, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "45896:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1560, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "45896:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 272, "src": "45896:21:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 1563, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "45896:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "45871:49:0"}, {"assignments": [1566], "declarations": [{"constant": false, "id": 1566, "name": "tokenIndex", "nodeType": "VariableDeclaration", "scope": 1600, "src": "45930:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1565, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "45930:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1570, "initialValue": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1567, "name": "_allTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1292, "src": "45951:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1569, "indexExpression": {"argumentTypes": null, "id": 1568, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1554, "src": "45967:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "45951:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "45930:45:0"}, {"assignments": [1572], "declarations": [{"constant": false, "id": 1572, "name": "lastTokenId", "nodeType": "VariableDeclaration", "scope": 1600, "src": "46297:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1571, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "46297:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1576, "initialValue": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1573, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "46319:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1575, "indexExpression": {"argumentTypes": null, "id": 1574, "name": "lastTokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1558, "src": "46330:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "46319:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "46297:48:0"}, {"expression": {"argumentTypes": null, "id": 1581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1577, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "46356:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1579, "indexExpression": {"argumentTypes": null, "id": 1578, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1566, "src": "46367:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "46356:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1580, "name": "lastTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1572, "src": "46381:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "46356:36:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1582, "nodeType": "ExpressionStatement", "src": "46356:36:0"}, {"expression": {"argumentTypes": null, "id": 1587, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1583, "name": "_allTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1292, "src": "46460:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1585, "indexExpression": {"argumentTypes": null, "id": 1584, "name": "lastTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1572, "src": "46476:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "46460:28:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1586, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1566, "src": "46491:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "46460:41:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1588, "nodeType": "ExpressionStatement", "src": "46460:41:0"}, {"expression": {"argumentTypes": null, "id": 1592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": false, "src": "46622:19:0", "subExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1589, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1288, "src": "46622:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1591, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "46622:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1593, "nodeType": "ExpressionStatement", "src": "46622:19:0"}, {"expression": {"argumentTypes": null, "id": 1598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1594, "name": "_allTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1292, "src": "46651:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1596, "indexExpression": {"argumentTypes": null, "id": 1595, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1554, "src": "46667:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "46651:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "hexValue": "30", "id": 1597, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "46678:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "46651:28:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1599, "nodeType": "ExpressionStatement", "src": "46651:28:0"}]}, "documentation": "@dev Private function to remove a token from this extension's token tracking data structures.\nThis has O(1) time complexity, but alters the order of the _allTokens array.\n@param tokenId uint256 ID of the token to be removed from the tokens list", "id": 1601, "implemented": true, "kind": "function", "modifiers": [], "name": "_removeTokenFromAllTokensEnumeration", "nodeType": "FunctionDefinition", "parameters": {"id": 1555, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1554, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1601, "src": "45668:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1553, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "45668:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "45667:17:0"}, "returnParameters": {"id": 1556, "nodeType": "ParameterList", "parameters": [], "src": "45693:0:0"}, "scope": 1602, "src": "45622:1064:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "private"}], "scope": 2203, "src": "38115:8573:0"}, {"id": 1603, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "46727:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@title Strings\n@dev String operations.", "fullyImplemented": true, "id": 1684, "linearizedBaseContracts": [1684], "name": "Strings", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 1682, "nodeType": "Block", "src": "47119:474:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1610, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1605, "src": "47133:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1611, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47142:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "47133:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1616, "nodeType": "IfStatement", "src": "47129:51:0", "trueBody": {"id": 1615, "nodeType": "Block", "src": "47145:35:0", "statements": [{"expression": {"argumentTypes": null, "hexValue": "30", "id": 1613, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "47166:3:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d", "typeString": "literal_string \"0\""}, "value": "0"}, "functionReturnParameters": 1609, "id": 1614, "nodeType": "Return", "src": "47159:10:0"}]}}, {"assignments": [1618], "declarations": [{"constant": false, "id": 1618, "name": "temp", "nodeType": "VariableDeclaration", "scope": 1682, "src": "47190:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1617, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "47190:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1620, "initialValue": {"argumentTypes": null, "id": 1619, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1605, "src": "47205:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "47190:20:0"}, {"assignments": [1622], "declarations": [{"constant": false, "id": 1622, "name": "digits", "nodeType": "VariableDeclaration", "scope": 1682, "src": "47220:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1621, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "47220:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1623, "initialValue": null, "nodeType": "VariableDeclarationStatement", "src": "47220:14:0"}, {"body": {"id": 1634, "nodeType": "Block", "src": "47263:57:0", "statements": [{"expression": {"argumentTypes": null, "id": 1628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "47277:8:0", "subExpression": {"argumentTypes": null, "id": 1627, "name": "digits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1622, "src": "47277:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1629, "nodeType": "ExpressionStatement", "src": "47277:8:0"}, {"expression": {"argumentTypes": null, "id": 1632, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1630, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1618, "src": "47299:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "/=", "rightHandSide": {"argumentTypes": null, "hexValue": "3130", "id": 1631, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47307:2:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "47299:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1633, "nodeType": "ExpressionStatement", "src": "47299:10:0"}]}, "condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1626, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1624, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1618, "src": "47252:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1625, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47260:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "47252:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1635, "nodeType": "WhileStatement", "src": "47245:75:0"}, {"assignments": [1637], "declarations": [{"constant": false, "id": 1637, "name": "buffer", "nodeType": "VariableDeclaration", "scope": 1682, "src": "47330:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1636, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "47330:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "value": null, "visibility": "internal"}], "id": 1642, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1640, "name": "digits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1622, "src": "47362:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1639, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "47352:9:0", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$", "typeString": "function (uint256) pure returns (bytes memory)"}, "typeName": {"id": 1638, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "47356:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, "id": 1641, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "47352:17:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory", "typeString": "bytes memory"}}, "nodeType": "VariableDeclarationStatement", "src": "47330:39:0"}, {"assignments": [1644], "declarations": [{"constant": false, "id": 1644, "name": "index", "nodeType": "VariableDeclaration", "scope": 1682, "src": "47379:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1643, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "47379:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 1648, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1647, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1645, "name": "digits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1622, "src": "47395:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"argumentTypes": null, "hexValue": "31", "id": 1646, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47404:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "47395:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "47379:26:0"}, {"expression": {"argumentTypes": null, "id": 1651, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1649, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1618, "src": "47416:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1650, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1605, "src": "47423:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "47416:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1652, "nodeType": "ExpressionStatement", "src": "47416:12:0"}, {"body": {"id": 1676, "nodeType": "Block", "src": "47457:98:0", "statements": [{"expression": {"argumentTypes": null, "id": 1670, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1656, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1637, "src": "47471:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1659, "indexExpression": {"argumentTypes": null, "id": 1658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": false, "src": "47478:7:0", "subExpression": {"argumentTypes": null, "id": 1657, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1644, "src": "47478:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "47471:15:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1667, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "hexValue": "3438", "id": 1662, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47502:2:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_48_by_1", "typeString": "int_const 48"}, "value": "48"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"argumentTypes": null, "components": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1665, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1663, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1618, "src": "47508:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"argumentTypes": null, "hexValue": "3130", "id": 1664, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47515:2:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "47508:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 1666, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "47507:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "47502:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1661, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "47496:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": "uint8"}, "id": 1668, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "47496:23:0", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 1660, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "47489:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": "bytes1"}, "id": 1669, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "47489:31:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "src": "47471:49:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "id": 1671, "nodeType": "ExpressionStatement", "src": "47471:49:0"}, {"expression": {"argumentTypes": null, "id": 1674, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1672, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1618, "src": "47534:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "/=", "rightHandSide": {"argumentTypes": null, "hexValue": "3130", "id": 1673, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47542:2:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "47534:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1675, "nodeType": "ExpressionStatement", "src": "47534:10:0"}]}, "condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1653, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1618, "src": "47446:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1654, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47454:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "47446:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1677, "nodeType": "WhileStatement", "src": "47439:116:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1679, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1637, "src": "47579:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1678, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "47572:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": "string"}, "id": 1680, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "47572:14:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 1609, "id": 1681, "nodeType": "Return", "src": "47565:21:0"}]}, "documentation": "@dev Converts a `uint256` to a `string`.\nvia OraclizeAPI - MIT licence\nhttps://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol", "id": 1683, "implemented": true, "kind": "function", "modifiers": [], "name": "fromUint256", "nodeType": "FunctionDefinition", "parameters": {"id": 1606, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1605, "name": "value", "nodeType": "VariableDeclaration", "scope": 1683, "src": "47066:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1604, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "47066:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "47065:15:0"}, "returnParameters": {"id": 1609, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1608, "name": "", "nodeType": "VariableDeclaration", "scope": 1683, "src": "47104:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1607, "name": "string", "nodeType": "ElementaryTypeName", "src": "47104:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "47103:15:0"}, "scope": 1684, "src": "47045:548:0", "stateMutability": "pure", "superFunction": null, "visibility": "internal"}], "scope": 2203, "src": "46805:790:0"}, {"id": 1685, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "47650:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": "@title ERC-721 Non-Fungible Token Standard, optional metadata extension\n@dev See https://eips.ethereum.org/EIPS/eip-721", "fullyImplemented": false, "id": 1703, "linearizedBaseContracts": [1703], "name": "IERC721Metadata", "nodeType": "ContractDefinition", "nodes": [{"body": null, "documentation": "@dev Returns the token collection name.", "id": 1690, "implemented": false, "kind": "function", "modifiers": [], "name": "name", "nodeType": "FunctionDefinition", "parameters": {"id": 1686, "nodeType": "ParameterList", "parameters": [], "src": "47917:2:0"}, "returnParameters": {"id": 1689, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1688, "name": "", "nodeType": "VariableDeclaration", "scope": 1690, "src": "47943:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1687, "name": "string", "nodeType": "ElementaryTypeName", "src": "47943:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "47942:15:0"}, "scope": 1703, "src": "47904:54:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns the token collection symbol.", "id": 1695, "implemented": false, "kind": "function", "modifiers": [], "name": "symbol", "nodeType": "FunctionDefinition", "parameters": {"id": 1691, "nodeType": "ParameterList", "parameters": [], "src": "48044:2:0"}, "returnParameters": {"id": 1694, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1693, "name": "", "nodeType": "VariableDeclaration", "scope": 1695, "src": "48070:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1692, "name": "string", "nodeType": "ElementaryTypeName", "src": "48070:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "48069:15:0"}, "scope": 1703, "src": "48029:56:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": "@dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.", "id": 1702, "implemented": false, "kind": "function", "modifiers": [], "name": "tokenURI", "nodeType": "FunctionDefinition", "parameters": {"id": 1698, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1697, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1702, "src": "48204:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1696, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "48204:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "48203:17:0"}, "returnParameters": {"id": 1701, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1700, "name": "", "nodeType": "VariableDeclaration", "scope": 1702, "src": "48244:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1699, "name": "string", "nodeType": "ElementaryTypeName", "src": "48244:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "48243:15:0"}, "scope": 1703, "src": "48186:73:0", "stateMutability": "view", "superFunction": null, "visibility": "external"}], "scope": 2203, "src": "47809:452:0"}, {"id": 1704, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "48315:23:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 1705, "name": "ERC721", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1271, "src": "48367:6:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC721_$1271", "typeString": "contract ERC721"}}, "id": 1706, "nodeType": "InheritanceSpecifier", "src": "48367:6:0"}, {"arguments": null, "baseName": {"contractScope": null, "id": 1707, "name": "IERC721Metadata", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1703, "src": "48375:15:0", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Metadata_$1703", "typeString": "contract IERC721Metadata"}}, "id": 1708, "nodeType": "InheritanceSpecifier", "src": "48375:15:0"}], "contractDependencies": [26, 536, 560, 610, 1271, 1703], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 1887, "linearizedBaseContracts": [1887, 1703, 1271, 536, 610, 560, 26], "name": "ERC721Metadata", "nodeType": "ContractDefinition", "nodes": [{"id": 1711, "libraryName": {"contractScope": null, "id": 1709, "name": "Strings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1684, "src": "48403:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Strings_$1684", "typeString": "library Strings"}}, "nodeType": "UsingForDirective", "src": "48397:26:0", "typeName": {"id": 1710, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "48415:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"constant": false, "id": 1713, "name": "_name", "nodeType": "VariableDeclaration", "scope": 1887, "src": "48447:20:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 1712, "name": "string", "nodeType": "ElementaryTypeName", "src": "48447:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "private"}, {"constant": false, "id": 1715, "name": "_symbol", "nodeType": "VariableDeclaration", "scope": 1887, "src": "48494:22:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 1714, "name": "string", "nodeType": "ElementaryTypeName", "src": "48494:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "private"}, {"constant": false, "id": 1717, "name": "_baseURI", "nodeType": "VariableDeclaration", "scope": 1887, "src": "48539:23:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 1716, "name": "string", "nodeType": "ElementaryTypeName", "src": "48539:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "private"}, {"constant": false, "id": 1721, "name": "_tokenURIs", "nodeType": "VariableDeclaration", "scope": 1887, "src": "48608:45:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string)"}, "typeName": {"id": 1720, "keyType": {"id": 1718, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "48616:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "48608:26:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string)"}, "valueType": {"id": 1719, "name": "string", "nodeType": "ElementaryTypeName", "src": "48627:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}}, "value": null, "visibility": "private"}, {"constant": true, "id": 1724, "name": "_INTERFACE_ID_ERC721_METADATA", "nodeType": "VariableDeclaration", "scope": 1887, "src": "48919:66:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1722, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "48919:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "value": {"argumentTypes": null, "hexValue": "30783562356531333966", "id": 1723, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "48975:10:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1532892063_by_1", "typeString": "int_const 1532892063"}, "value": "0x5b5e139f"}, "visibility": "private"}, {"body": {"id": 1743, "nodeType": "Block", "src": "49102:192:0", "statements": [{"expression": {"argumentTypes": null, "id": 1733, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1731, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1713, "src": "49112:5:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1732, "name": "name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1726, "src": "49120:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "49112:12:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 1734, "nodeType": "ExpressionStatement", "src": "49112:12:0"}, {"expression": {"argumentTypes": null, "id": 1737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1735, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1715, "src": "49134:7:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1736, "name": "symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1728, "src": "49144:6:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "49134:16:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 1738, "nodeType": "ExpressionStatement", "src": "49134:16:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1740, "name": "_INTERFACE_ID_ERC721_METADATA", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1724, "src": "49257:29:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "id": 1739, "name": "_registerInterface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 609, "src": "49238:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$", "typeString": "function (bytes4)"}}, "id": 1741, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "49238:49:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1742, "nodeType": "ExpressionStatement", "src": "49238:49:0"}]}, "documentation": "@dev Constructor function", "id": 1744, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 1729, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1726, "name": "name", "nodeType": "VariableDeclaration", "scope": 1744, "src": "49053:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1725, "name": "string", "nodeType": "ElementaryTypeName", "src": "49053:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1728, "name": "symbol", "nodeType": "VariableDeclaration", "scope": 1744, "src": "49073:20:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1727, "name": "string", "nodeType": "ElementaryTypeName", "src": "49073:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "49052:42:0"}, "returnParameters": {"id": 1730, "nodeType": "ParameterList", "parameters": [], "src": "49102:0:0"}, "scope": 1887, "src": "49041:253:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 1751, "nodeType": "Block", "src": "49451:29:0", "statements": [{"expression": {"argumentTypes": null, "id": 1749, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1713, "src": "49468:5:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 1748, "id": 1750, "nodeType": "Return", "src": "49461:12:0"}]}, "documentation": "@dev Gets the token name.\n@return string representing the token name", "id": 1752, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nodeType": "FunctionDefinition", "parameters": {"id": 1745, "nodeType": "ParameterList", "parameters": [], "src": "49412:2:0"}, "returnParameters": {"id": 1748, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1747, "name": "", "nodeType": "VariableDeclaration", "scope": 1752, "src": "49436:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1746, "name": "string", "nodeType": "ElementaryTypeName", "src": "49436:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "49435:15:0"}, "scope": 1887, "src": "49399:81:0", "stateMutability": "view", "superFunction": 1690, "visibility": "public"}, {"body": {"id": 1759, "nodeType": "Block", "src": "49643:31:0", "statements": [{"expression": {"argumentTypes": null, "id": 1757, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1715, "src": "49660:7:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 1756, "id": 1758, "nodeType": "Return", "src": "49653:14:0"}]}, "documentation": "@dev Gets the token symbol.\n@return string representing the token symbol", "id": 1760, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nodeType": "FunctionDefinition", "parameters": {"id": 1753, "nodeType": "ParameterList", "parameters": [], "src": "49604:2:0"}, "returnParameters": {"id": 1756, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1755, "name": "", "nodeType": "VariableDeclaration", "scope": 1760, "src": "49628:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1754, "name": "string", "nodeType": "ElementaryTypeName", "src": "49628:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "49627:15:0"}, "scope": 1887, "src": "49589:85:0", "stateMutability": "view", "superFunction": 1695, "visibility": "public"}, {"body": {"id": 1816, "nodeType": "Block", "src": "50588:699:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1769, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1762, "src": "50627:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1768, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "50619:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 1770, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "50619:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 1771, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "50649:49:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb", "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""}, "value": "ERC721Metadata: URI query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb", "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""}], "id": 1767, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "50598:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1772, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "50598:110:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1773, "nodeType": "ExpressionStatement", "src": "50598:110:0"}, {"assignments": [1775], "declarations": [{"constant": false, "id": 1775, "name": "_tokenURI", "nodeType": "VariableDeclaration", "scope": 1816, "src": "50719:23:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1774, "name": "string", "nodeType": "ElementaryTypeName", "src": "50719:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "id": 1779, "initialValue": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1776, "name": "_tokenURIs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1721, "src": "50745:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string storage ref)"}}, "id": 1778, "indexExpression": {"argumentTypes": null, "id": 1777, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1762, "src": "50756:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "50745:19:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "50719:45:0"}, {"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1781, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1717, "src": "50843:8:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}], "id": 1780, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "50837:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": "bytes"}, "id": 1782, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "50837:15:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes storage pointer"}}, "id": 1783, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "50837:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1784, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "50863:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "50837:27:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1789, "nodeType": "IfStatement", "src": "50833:74:0", "trueBody": {"id": 1788, "nodeType": "Block", "src": "50866:41:0", "statements": [{"expression": {"argumentTypes": null, "id": 1786, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1775, "src": "50887:9:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 1766, "id": 1787, "nodeType": "Return", "src": "50880:16:0"}]}}, {"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1791, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1775, "src": "51016:9:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1790, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "51010:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": "bytes"}, "id": 1792, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51010:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1793, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "51010:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1794, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "51036:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "51010:27:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1805, "nodeType": "IfStatement", "src": "51006:110:0", "trueBody": {"id": 1804, "nodeType": "Block", "src": "51039:77:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1799, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1717, "src": "51084:8:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"argumentTypes": null, "id": 1800, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1775, "src": "51094:9:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "expression": {"argumentTypes": null, "id": 1797, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2204, "src": "51067:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 1798, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "51067:16:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 1801, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51067:37:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1796, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "51060:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": "string"}, "id": 1802, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51060:45:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 1766, "id": 1803, "nodeType": "Return", "src": "51053:52:0"}]}}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1809, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1717, "src": "51247:8:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "expression": {"argumentTypes": null, "id": 1810, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1762, "src": "51257:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1811, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "fromUint256", "nodeType": "MemberAccess", "referencedDeclaration": 1683, "src": "51257:19:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (string memory)"}}, "id": 1812, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51257:21:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "expression": {"argumentTypes": null, "id": 1807, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2204, "src": "51230:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 1808, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "51230:16:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 1813, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51230:49:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1806, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "51223:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": "string"}, "id": 1814, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51223:57:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 1766, "id": 1815, "nodeType": "Return", "src": "51216:64:0"}]}, "documentation": "@dev Returns the URI for a given token ID. May return an empty string.\n     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the\ntoken's own URI (via {_setTokenURI}).\n     * If there is a base URI but no token URI, the token's ID will be used as\nits URI when appending it to the base URI. This pattern for autogenerated\ntoken URIs can lead to large gas savings.\n     * .Examples\n|===\n|`_setBaseURI()` |`_setTokenURI()` |`tokenURI()`\n| \"\"\n| \"\"\n| \"\"\n| \"\"\n| \"token.uri/123\"\n| \"token.uri/123\"\n| \"token.uri/\"\n| \"123\"\n| \"token.uri/123\"\n| \"token.uri/\"\n| \"\"\n| \"token.uri/<tokenId>\"\n|===\n     * Requirements:\n     * - `tokenId` must exist.", "id": 1817, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenURI", "nodeType": "FunctionDefinition", "parameters": {"id": 1763, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1762, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1817, "src": "50535:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1761, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "50535:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "50534:17:0"}, "returnParameters": {"id": 1766, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1765, "name": "", "nodeType": "VariableDeclaration", "scope": 1817, "src": "50573:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1764, "name": "string", "nodeType": "ElementaryTypeName", "src": "50573:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "50572:15:0"}, "scope": 1887, "src": "50517:770:0", "stateMutability": "view", "superFunction": 1702, "visibility": "public"}, {"body": {"id": 1837, "nodeType": "Block", "src": "51684:166:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1826, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1819, "src": "51723:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1825, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "51715:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 1827, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51715:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e", "id": 1828, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "51745:46:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978", "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""}, "value": "ERC721Metadata: URI set of nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978", "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""}], "id": 1824, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "51694:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1829, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51694:107:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1830, "nodeType": "ExpressionStatement", "src": "51694:107:0"}, {"expression": {"argumentTypes": null, "id": 1835, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1831, "name": "_tokenURIs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1721, "src": "51812:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string storage ref)"}}, "id": 1833, "indexExpression": {"argumentTypes": null, "id": 1832, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1819, "src": "51823:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "51812:19:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1834, "name": "_tokenURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1821, "src": "51834:9:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "51812:31:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 1836, "nodeType": "ExpressionStatement", "src": "51812:31:0"}]}, "documentation": "@dev Internal function to set the token URI for a given token.\n     * Reverts if the token ID does not exist.\n     * TIP: if all token IDs share a prefix (e.g. if your URIs look like\n`http://api.myproject.com/token/<id>`), use {_setBaseURI} to store\nit and save gas.", "id": 1838, "implemented": true, "kind": "function", "modifiers": [], "name": "_setTokenURI", "nodeType": "FunctionDefinition", "parameters": {"id": 1822, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1819, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1838, "src": "51633:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1818, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "51633:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1821, "name": "_tokenURI", "nodeType": "VariableDeclaration", "scope": 1838, "src": "51650:23:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1820, "name": "string", "nodeType": "ElementaryTypeName", "src": "51650:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "51632:42:0"}, "returnParameters": {"id": 1823, "nodeType": "ParameterList", "parameters": [], "src": "51684:0:0"}, "scope": 1887, "src": "51611:239:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1847, "nodeType": "Block", "src": "52116:35:0", "statements": [{"expression": {"argumentTypes": null, "id": 1845, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1843, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1717, "src": "52126:8:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 1844, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1840, "src": "52137:7:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "52126:18:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 1846, "nodeType": "ExpressionStatement", "src": "52126:18:0"}]}, "documentation": "@dev Internal function to set the base URI for all token IDs. It is\nautomatically added as a prefix to the value returned in {tokenURI}.\n     * _Available since v2.5.0._", "id": 1848, "implemented": true, "kind": "function", "modifiers": [], "name": "_setBaseURI", "nodeType": "FunctionDefinition", "parameters": {"id": 1841, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1840, "name": "baseURI", "nodeType": "VariableDeclaration", "scope": 1848, "src": "52084:21:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1839, "name": "string", "nodeType": "ElementaryTypeName", "src": "52084:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "52083:23:0"}, "returnParameters": {"id": 1842, "nodeType": "ParameterList", "parameters": [], "src": "52116:0:0"}, "scope": 1887, "src": "52063:88:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "internal"}, {"body": {"id": 1855, "nodeType": "Block", "src": "52444:32:0", "statements": [{"expression": {"argumentTypes": null, "id": 1853, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1717, "src": "52461:8:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 1852, "id": 1854, "nodeType": "Return", "src": "52454:15:0"}]}, "documentation": "@dev Returns the base URI set via {_setBaseURI}. This will be\nautomatically added as a preffix in {tokenURI} to each token's URI, when\nthey are non-empty.\n     * _Available since v2.5.0._", "id": 1856, "implemented": true, "kind": "function", "modifiers": [], "name": "baseURI", "nodeType": "FunctionDefinition", "parameters": {"id": 1849, "nodeType": "ParameterList", "parameters": [], "src": "52405:2:0"}, "returnParameters": {"id": 1852, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1851, "name": "", "nodeType": "VariableDeclaration", "scope": 1856, "src": "52429:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1850, "name": "string", "nodeType": "ElementaryTypeName", "src": "52429:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "52428:15:0"}, "scope": 1887, "src": "52389:87:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 1885, "nodeType": "Block", "src": "52825:185:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 1866, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1858, "src": "52847:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1867, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1860, "src": "52854:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1863, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2262, "src": "52835:5:0", "typeDescriptions": {"typeIdentifier": "t_super$_ERC721Metadata_$1887", "typeString": "contract super ERC721Metadata"}}, "id": 1865, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_burn", "nodeType": "MemberAccess", "referencedDeclaration": 1104, "src": "52835:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1868, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52835:27:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1869, "nodeType": "ExpressionStatement", "src": "52835:27:0"}, {"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1877, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1871, "name": "_tokenURIs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1721, "src": "52919:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string storage ref)"}}, "id": 1873, "indexExpression": {"argumentTypes": null, "id": 1872, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1860, "src": "52930:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "52919:19:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}], "id": 1870, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "52913:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": "bytes"}, "id": 1874, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52913:26:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes storage pointer"}}, "id": 1875, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "52913:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 1876, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "52950:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "52913:38:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1884, "nodeType": "IfStatement", "src": "52909:95:0", "trueBody": {"id": 1883, "nodeType": "Block", "src": "52953:51:0", "statements": [{"expression": {"argumentTypes": null, "id": 1881, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "52967:26:0", "subExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 1878, "name": "_tokenURIs", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1721, "src": "52974:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$", "typeString": "mapping(uint256 => string storage ref)"}}, "id": 1880, "indexExpression": {"argumentTypes": null, "id": 1879, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1860, "src": "52985:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "52974:19:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1882, "nodeType": "ExpressionStatement", "src": "52967:26:0"}]}}]}, "documentation": "@dev Internal function to burn a specific token.\nReverts if the token does not exist.\nDeprecated, use _burn(uint256) instead.\n@param owner owner of the token to burn\n@param tokenId uint256 ID of the token being burned by the msg.sender", "id": 1886, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nodeType": "FunctionDefinition", "parameters": {"id": 1861, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1858, "name": "owner", "nodeType": "VariableDeclaration", "scope": 1886, "src": "52784:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1857, "name": "address", "nodeType": "ElementaryTypeName", "src": "52784:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1860, "name": "tokenId", "nodeType": "VariableDeclaration", "scope": 1886, "src": "52799:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1859, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "52799:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "52783:32:0"}, "returnParameters": {"id": 1862, "nodeType": "ParameterList", "parameters": [], "src": "52825:0:0"}, "scope": 1887, "src": "52769:241:0", "stateMutability": "nonpayable", "superFunction": 1104, "visibility": "internal"}], "scope": 2203, "src": "48340:4672:0"}, {"id": 1888, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "53062:23:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 1889, "name": "ERC721Enumerable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1602, "src": "53383:16:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC721Enumerable_$1602", "typeString": "contract ERC721Enumerable"}}, "id": 1890, "nodeType": "InheritanceSpecifier", "src": "53383:16:0"}, {"arguments": null, "baseName": {"contractScope": null, "id": 1891, "name": "ERC721Metadata", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1887, "src": "53401:14:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC721Metadata_$1887", "typeString": "contract ERC721Metadata"}}, "id": 1892, "nodeType": "InheritanceSpecifier", "src": "53401:14:0"}], "contractDependencies": [26, 225, 536, 560, 610, 1271, 1602, 1703, 1887], "contractKind": "contract", "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721", "fullyImplemented": true, "id": 1905, "linearizedBaseContracts": [1905, 1887, 1703, 1602, 225, 1271, 536, 610, 560, 26], "name": "ERC721Full", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 1903, "nodeType": "Block", "src": "53532:64:0", "statements": []}, "documentation": null, "id": 1904, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"argumentTypes": null, "id": 1899, "name": "name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1894, "src": "53514:4:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"argumentTypes": null, "id": 1900, "name": "symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1896, "src": "53520:6:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "id": 1901, "modifierName": {"argumentTypes": null, "id": 1898, "name": "ERC721Metadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1887, "src": "53499:14:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1887_$", "typeString": "type(contract ERC721Metadata)"}}, "nodeType": "ModifierInvocation", "src": "53499:28:0"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 1897, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1894, "name": "name", "nodeType": "VariableDeclaration", "scope": 1904, "src": "53434:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1893, "name": "string", "nodeType": "ElementaryTypeName", "src": "53434:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1896, "name": "symbol", "nodeType": "VariableDeclaration", "scope": 1904, "src": "53454:20:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1895, "name": "string", "nodeType": "ElementaryTypeName", "src": "53454:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "53433:42:0"}, "returnParameters": {"id": 1902, "nodeType": "ParameterList", "parameters": [], "src": "53532:0:0"}, "scope": 1905, "src": "53422:174:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}], "scope": 2203, "src": "53360:238:0"}, {"id": 1906, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "53647:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "interface", "documentation": null, "fullyImplemented": false, "id": 1941, "linearizedBaseContracts": [1941], "name": "ICryptoPunk", "nodeType": "ContractDefinition", "nodes": [{"body": null, "documentation": null, "id": 1913, "implemented": false, "kind": "function", "modifiers": [], "name": "punkIndexToAddress", "nodeType": "FunctionDefinition", "parameters": {"id": 1909, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1908, "name": "punkIndex", "nodeType": "VariableDeclaration", "scope": 1913, "src": "53728:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1907, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "53728:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "53727:19:0"}, "returnParameters": {"id": 1912, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1911, "name": "", "nodeType": "VariableDeclaration", "scope": 1913, "src": "53765:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1910, "name": "address", "nodeType": "ElementaryTypeName", "src": "53765:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "53764:9:0"}, "scope": 1941, "src": "53700:74:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": null, "id": 1928, "implemented": false, "kind": "function", "modifiers": [], "name": "punksOfferedForSale", "nodeType": "FunctionDefinition", "parameters": {"id": 1916, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1915, "name": "punkIndex", "nodeType": "VariableDeclaration", "scope": 1928, "src": "53809:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1914, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "53809:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "53808:19:0"}, "returnParameters": {"id": 1927, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1918, "name": "", "nodeType": "VariableDeclaration", "scope": 1928, "src": "53875:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1917, "name": "bool", "nodeType": "ElementaryTypeName", "src": "53875:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1920, "name": "", "nodeType": "VariableDeclaration", "scope": 1928, "src": "53893:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1919, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "53893:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1922, "name": "", "nodeType": "VariableDeclaration", "scope": 1928, "src": "53914:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1921, "name": "address", "nodeType": "ElementaryTypeName", "src": "53914:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1924, "name": "", "nodeType": "VariableDeclaration", "scope": 1928, "src": "53935:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1923, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "53935:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1926, "name": "", "nodeType": "VariableDeclaration", "scope": 1928, "src": "53956:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1925, "name": "address", "nodeType": "ElementaryTypeName", "src": "53956:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "53861:112:0"}, "scope": 1941, "src": "53780:194:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": null, "id": 1933, "implemented": false, "kind": "function", "modifiers": [], "name": "buyPunk", "nodeType": "FunctionDefinition", "parameters": {"id": 1931, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1930, "name": "punkIndex", "nodeType": "VariableDeclaration", "scope": 1933, "src": "53997:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1929, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "53997:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "53996:19:0"}, "returnParameters": {"id": 1932, "nodeType": "ParameterList", "parameters": [], "src": "54032:0:0"}, "scope": 1941, "src": "53980:53:0", "stateMutability": "payable", "superFunction": null, "visibility": "external"}, {"body": null, "documentation": null, "id": 1940, "implemented": false, "kind": "function", "modifiers": [], "name": "transferPunk", "nodeType": "FunctionDefinition", "parameters": {"id": 1938, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1935, "name": "to", "nodeType": "VariableDeclaration", "scope": 1940, "src": "54061:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1934, "name": "address", "nodeType": "ElementaryTypeName", "src": "54061:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1937, "name": "punkIndex", "nodeType": "VariableDeclaration", "scope": 1940, "src": "54073:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1936, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "54073:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "54060:31:0"}, "returnParameters": {"id": 1939, "nodeType": "ParameterList", "parameters": [], "src": "54100:0:0"}, "scope": 1941, "src": "54039:62:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}], "scope": 2203, "src": "53672:431:0"}, {"id": 1942, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "54163:23:0"}, {"baseContracts": [], "contractDependencies": [], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 1986, "linearizedBaseContracts": [1986], "name": "UserProxy", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 1944, "name": "_owner", "nodeType": "VariableDeclaration", "scope": 1986, "src": "54213:22:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1943, "name": "address", "nodeType": "ElementaryTypeName", "src": "54213:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "private"}, {"body": {"id": 1952, "nodeType": "Block", "src": "54325:36:0", "statements": [{"expression": {"argumentTypes": null, "id": 1950, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 1947, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1944, "src": "54335:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1948, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2217, "src": "54344:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1949, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "54344:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "54335:19:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1951, "nodeType": "ExpressionStatement", "src": "54335:19:0"}]}, "documentation": "@dev Initializes the contract settings", "id": 1953, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 1945, "nodeType": "ParameterList", "parameters": [], "src": "54315:2:0"}, "returnParameters": {"id": 1946, "nodeType": "ParameterList", "parameters": [], "src": "54325:0:0"}, "scope": 1986, "src": "54304:57:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 1984, "nodeType": "Block", "src": "54541:310:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1965, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 1962, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1944, "src": "54555:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 1963, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2217, "src": "54565:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1964, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "54565:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "54555:20:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 1969, "nodeType": "IfStatement", "src": "54551:63:0", "trueBody": {"id": 1968, "nodeType": "Block", "src": "54577:37:0", "statements": [{"expression": {"argumentTypes": null, "hexValue": "66616c7365", "id": 1966, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "54598:5:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 1961, "id": 1967, "nodeType": "Return", "src": "54591:12:0"}]}}, {"assignments": [1971, null], "declarations": [{"constant": false, "id": 1971, "name": "result", "nodeType": "VariableDeclaration", "scope": 1984, "src": "54625:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1970, "name": "bool", "nodeType": "ElementaryTypeName", "src": "54625:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}, null], "id": 1981, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "7472616e7366657250756e6b28616464726573732c75696e7432353629", "id": 1976, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "54714:31:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_8b72a2ecdf0e41a7b4badedcdb0477c3aed4d6be3bb2fa66e1e1f1f19aa135a5", "typeString": "literal_string \"transferPunk(address,uint256)\""}, "value": "transferPunk(address,uint256)"}, {"argumentTypes": null, "id": 1977, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1944, "src": "54763:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 1978, "name": "punkIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1957, "src": "54787:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_8b72a2ecdf0e41a7b4badedcdb0477c3aed4d6be3bb2fa66e1e1f1f19aa135a5", "typeString": "literal_string \"transferPunk(address,uint256)\""}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 1974, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2204, "src": "54673:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 1975, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSignature", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "54673:23:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (string memory) pure returns (bytes memory)"}}, "id": 1979, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "54673:137:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": null, "id": 1972, "name": "punkContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1955, "src": "54642:12:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1973, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "54642:17:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 1980, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "54642:178:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "54624:196:0"}, {"expression": {"argumentTypes": null, "id": 1982, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1971, "src": "54838:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1961, "id": 1983, "nodeType": "Return", "src": "54831:13:0"}]}, "documentation": "@dev Transfers punk to the smart contract owner", "id": 1985, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "parameters": {"id": 1958, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1955, "name": "punkContract", "nodeType": "VariableDeclaration", "scope": 1985, "src": "54456:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1954, "name": "address", "nodeType": "ElementaryTypeName", "src": "54456:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1957, "name": "punkIndex", "nodeType": "VariableDeclaration", "scope": 1985, "src": "54478:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1956, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "54478:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "54455:41:0"}, "returnParameters": {"id": 1961, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1960, "name": "", "nodeType": "VariableDeclaration", "scope": 1985, "src": "54531:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1959, "name": "bool", "nodeType": "ElementaryTypeName", "src": "54531:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "54530:6:0"}, "scope": 1986, "src": "54438:413:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "external"}], "scope": 2203, "src": "54188:665:0"}, {"id": 1987, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "54915:23:0"}, {"baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 1988, "name": "Ownable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 123, "src": "54964:7:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Ownable_$123", "typeString": "contract Ownable"}}, "id": 1989, "nodeType": "InheritanceSpecifier", "src": "54964:7:0"}, {"arguments": null, "baseName": {"contractScope": null, "id": 1990, "name": "ERC721Full", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1905, "src": "54973:10:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC721Full_$1905", "typeString": "contract ERC721Full"}}, "id": 1991, "nodeType": "InheritanceSpecifier", "src": "54973:10:0"}, {"arguments": null, "baseName": {"contractScope": null, "id": 1992, "name": "Pausable", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 202, "src": "54985:8:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Pausable_$202", "typeString": "contract Pausable"}}, "id": 1993, "nodeType": "InheritanceSpecifier", "src": "54985:8:0"}], "contractDependencies": [26, 123, 202, 225, 536, 560, 610, 1271, 1602, 1703, 1887, 1905, 1986], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 2202, "linearizedBaseContracts": [2202, 202, 1905, 1887, 1703, 1602, 225, 1271, 536, 610, 560, 123, 26], "name": "WrappedPunk", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "documentation": null, "id": 1999, "name": "ProxyRegistered", "nodeType": "EventDefinition", "parameters": {"id": 1998, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1995, "indexed": false, "name": "user", "nodeType": "VariableDeclaration", "scope": 1999, "src": "55022:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1994, "name": "address", "nodeType": "ElementaryTypeName", "src": "55022:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 1997, "indexed": false, "name": "proxy", "nodeType": "VariableDeclaration", "scope": 1999, "src": "55036:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1996, "name": "address", "nodeType": "ElementaryTypeName", "src": "55036:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "55021:29:0"}, "src": "55000:51:0"}, {"constant": false, "id": 2001, "name": "_punkContract", "nodeType": "VariableDeclaration", "scope": 2202, "src": "55102:33:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}, "typeName": {"contractScope": null, "id": 2000, "name": "ICryptoPunk", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1941, "src": "55102:11:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}}, "value": null, "visibility": "private"}, {"constant": false, "id": 2005, "name": "_proxies", "nodeType": "VariableDeclaration", "scope": 2202, "src": "55192:44:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "typeName": {"id": 2004, "keyType": {"id": 2002, "name": "address", "nodeType": "ElementaryTypeName", "src": "55200:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "55192:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}, "valueType": {"id": 2003, "name": "address", "nodeType": "ElementaryTypeName", "src": "55211:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "value": null, "visibility": "private"}, {"body": {"id": 2020, "nodeType": "Block", "src": "55410:58:0", "statements": [{"expression": {"argumentTypes": null, "id": 2018, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 2014, "name": "_punkContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2001, "src": "55420:13:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2016, "name": "punkContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2007, "src": "55448:12:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2015, "name": "ICryptoPunk", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1941, "src": "55436:11:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICryptoPunk_$1941_$", "typeString": "type(contract ICryptoPunk)"}}, "id": 2017, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "55436:25:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}}, "src": "55420:41:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}}, "id": 2019, "nodeType": "ExpressionStatement", "src": "55420:41:0"}]}, "documentation": "@dev Initializes the contract settings", "id": 2021, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"argumentTypes": null, "hexValue": "577261707065642043727970746f70756e6b73", "id": 2010, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "55373:21:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_3514b5bae7a174de09b1388816be15f5e8bcb64e57a1ee0d30d04c906a431bc8", "typeString": "literal_string \"Wrapped Cryptopunks\""}, "value": "Wrapped Cryptopunks"}, {"argumentTypes": null, "hexValue": "5750554e4b53", "id": 2011, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "55396:8:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_c4cecc127857f85f2ddb3e712184d3431e2c982794df368953a6a7ddef5db135", "typeString": "literal_string \"WPUNKS\""}, "value": "WPUNKS"}], "id": 2012, "modifierName": {"argumentTypes": null, "id": 2009, "name": "ERC721Full", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1905, "src": "55362:10:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721Full_$1905_$", "typeString": "type(contract ERC721Full)"}}, "nodeType": "ModifierInvocation", "src": "55362:43:0"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 2008, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2007, "name": "punkContract", "nodeType": "VariableDeclaration", "scope": 2021, "src": "55317:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2006, "name": "address", "nodeType": "ElementaryTypeName", "src": "55317:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "55316:22:0"}, "returnParameters": {"id": 2013, "nodeType": "ParameterList", "parameters": [], "src": "55410:0:0"}, "scope": 2202, "src": "55305:163:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 2030, "nodeType": "Block", "src": "55598:46:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2027, "name": "_punkContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2001, "src": "55623:13:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}], "id": 2026, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "55615:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 2028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "55615:22:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 2025, "id": 2029, "nodeType": "Return", "src": "55608:29:0"}]}, "documentation": "@dev Gets address of cryptopunk smart contract", "id": 2031, "implemented": true, "kind": "function", "modifiers": [], "name": "punkContract", "nodeType": "FunctionDefinition", "parameters": {"id": 2022, "nodeType": "ParameterList", "parameters": [], "src": "55565:2:0"}, "returnParameters": {"id": 2025, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2024, "name": "", "nodeType": "VariableDeclaration", "scope": 2031, "src": "55589:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2023, "name": "address", "nodeType": "ElementaryTypeName", "src": "55589:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "55588:9:0"}, "scope": 2202, "src": "55544:100:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 2042, "nodeType": "Block", "src": "55770:37:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2039, "name": "baseUri", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2033, "src": "55792:7:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 2038, "name": "_setBaseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1848, "src": "55780:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory)"}}, "id": 2040, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "55780:20:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2041, "nodeType": "ExpressionStatement", "src": "55780:20:0"}]}, "documentation": "@dev Sets the base URI for all token", "id": 2043, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 2036, "modifierName": {"argumentTypes": null, "id": 2035, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "55760:9:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "55760:9:0"}], "name": "setBaseURI", "nodeType": "FunctionDefinition", "parameters": {"id": 2034, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2033, "name": "baseUri", "nodeType": "VariableDeclaration", "scope": 2043, "src": "55730:21:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2032, "name": "string", "nodeType": "ElementaryTypeName", "src": "55730:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "55729:23:0"}, "returnParameters": {"id": 2037, "nodeType": "ParameterList", "parameters": [], "src": "55770:0:0"}, "scope": 2202, "src": "55710:97:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 2051, "nodeType": "Block", "src": "55916:25:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 2048, "name": "_pause", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 186, "src": "55926:6:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 2049, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "55926:8:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2050, "nodeType": "ExpressionStatement", "src": "55926:8:0"}]}, "documentation": "@dev Triggers smart contract to stopped state", "id": 2052, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 2046, "modifierName": {"argumentTypes": null, "id": 2045, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "55906:9:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "55906:9:0"}], "name": "pause", "nodeType": "FunctionDefinition", "parameters": {"id": 2044, "nodeType": "ParameterList", "parameters": [], "src": "55896:2:0"}, "returnParameters": {"id": 2047, "nodeType": "ParameterList", "parameters": [], "src": "55916:0:0"}, "scope": 2202, "src": "55882:59:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 2060, "nodeType": "Block", "src": "56050:27:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 2057, "name": "_unpause", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 201, "src": "56060:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 2058, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56060:10:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2059, "nodeType": "ExpressionStatement", "src": "56060:10:0"}]}, "documentation": "@dev Returns smart contract to normal state", "id": 2061, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 2055, "modifierName": {"argumentTypes": null, "id": 2054, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "56040:9:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "56040:9:0"}], "name": "unpause", "nodeType": "FunctionDefinition", "parameters": {"id": 2053, "nodeType": "ParameterList", "parameters": [], "src": "56030:2:0"}, "returnParameters": {"id": 2056, "nodeType": "ParameterList", "parameters": [], "src": "56050:0:0"}, "scope": 2202, "src": "56014:63:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 2099, "nodeType": "Block", "src": "56159:310:0", "statements": [{"assignments": [2065], "declarations": [{"constant": false, "id": 2065, "name": "sender", "nodeType": "VariableDeclaration", "scope": 2099, "src": "56169:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2064, "name": "address", "nodeType": "ElementaryTypeName", "src": "56169:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 2068, "initialValue": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 2066, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "56186:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 2067, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56186:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "VariableDeclarationStatement", "src": "56169:29:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2076, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 2070, "name": "_proxies", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2005, "src": "56230:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 2072, "indexExpression": {"argumentTypes": null, "id": 2071, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2065, "src": "56239:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "56230:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "hexValue": "30", "id": 2074, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "56258:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2073, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "56250:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 2075, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56250:10:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "56230:30:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "50756e6b577261707065723a2063616c6c6572206861732072656769737465726564207468652070726f7879", "id": 2077, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "56274:46:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_755bdbac13c31c7104861fe65dae28c379ba47b2c0c88837402bfd281cc10f8e", "typeString": "literal_string \"PunkWrapper: caller has registered the proxy\""}, "value": "PunkWrapper: caller has registered the proxy"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_755bdbac13c31c7104861fe65dae28c379ba47b2c0c88837402bfd281cc10f8e", "typeString": "literal_string \"PunkWrapper: caller has registered the proxy\""}], "id": 2069, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "56209:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2078, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56209:121:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2079, "nodeType": "ExpressionStatement", "src": "56209:121:0"}, {"assignments": [2081], "declarations": [{"constant": false, "id": 2081, "name": "proxy", "nodeType": "VariableDeclaration", "scope": 2099, "src": "56341:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2080, "name": "address", "nodeType": "ElementaryTypeName", "src": "56341:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 2087, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 2084, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "56365:13:0", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserProxy_$1986_$", "typeString": "function () returns (contract UserProxy)"}, "typeName": {"contractScope": null, "id": 2083, "name": "UserProxy", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1986, "src": "56369:9:0", "typeDescriptions": {"typeIdentifier": "t_contract$_UserProxy_$1986", "typeString": "contract UserProxy"}}}, "id": 2085, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56365:15:0", "typeDescriptions": {"typeIdentifier": "t_contract$_UserProxy_$1986", "typeString": "contract UserProxy"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_UserProxy_$1986", "typeString": "contract UserProxy"}], "id": 2082, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "56357:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 2086, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56357:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "56341:40:0"}, {"expression": {"argumentTypes": null, "id": 2092, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 2088, "name": "_proxies", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2005, "src": "56392:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 2090, "indexExpression": {"argumentTypes": null, "id": 2089, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2065, "src": "56401:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "56392:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "id": 2091, "name": "proxy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2081, "src": "56411:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "56392:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 2093, "nodeType": "ExpressionStatement", "src": "56392:24:0"}, {"eventCall": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2095, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2065, "src": "56448:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 2096, "name": "proxy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2081, "src": "56456:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 2094, "name": "ProxyRegistered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1999, "src": "56432:15:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 2097, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56432:30:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2098, "nodeType": "EmitStatement", "src": "56427:35:0"}]}, "documentation": "@dev Registers proxy", "id": 2100, "implemented": true, "kind": "function", "modifiers": [], "name": "registerProxy", "nodeType": "FunctionDefinition", "parameters": {"id": 2062, "nodeType": "ParameterList", "parameters": [], "src": "56149:2:0"}, "returnParameters": {"id": 2063, "nodeType": "ParameterList", "parameters": [], "src": "56159:0:0"}, "scope": 2202, "src": "56127:342:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 2111, "nodeType": "Block", "src": "56585:38:0", "statements": [{"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 2107, "name": "_proxies", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2005, "src": "56602:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 2109, "indexExpression": {"argumentTypes": null, "id": 2108, "name": "user", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2102, "src": "56611:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "56602:14:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 2106, "id": 2110, "nodeType": "Return", "src": "56595:21:0"}]}, "documentation": "@dev Gets proxy address", "id": 2112, "implemented": true, "kind": "function", "modifiers": [], "name": "proxyInfo", "nodeType": "FunctionDefinition", "parameters": {"id": 2103, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2102, "name": "user", "nodeType": "VariableDeclaration", "scope": 2112, "src": "56541:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2101, "name": "address", "nodeType": "ElementaryTypeName", "src": "56541:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "56540:14:0"}, "returnParameters": {"id": 2106, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2105, "name": "", "nodeType": "VariableDeclaration", "scope": 2112, "src": "56576:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2104, "name": "address", "nodeType": "ElementaryTypeName", "src": "56576:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "src": "56575:9:0"}, "scope": 2202, "src": "56522:101:0", "stateMutability": "view", "superFunction": null, "visibility": "public"}, {"body": {"id": 2148, "nodeType": "Block", "src": "56732:270:0", "statements": [{"assignments": [2120], "declarations": [{"constant": false, "id": 2120, "name": "sender", "nodeType": "VariableDeclaration", "scope": 2148, "src": "56742:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2119, "name": "address", "nodeType": "ElementaryTypeName", "src": "56742:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 2123, "initialValue": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 2121, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "56759:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 2122, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56759:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "VariableDeclarationStatement", "src": "56742:29:0"}, {"assignments": [2125], "declarations": [{"constant": false, "id": 2125, "name": "proxy", "nodeType": "VariableDeclaration", "scope": 2148, "src": "56782:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_UserProxy_$1986", "typeString": "contract UserProxy"}, "typeName": {"contractScope": null, "id": 2124, "name": "UserProxy", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 1986, "src": "56782:9:0", "typeDescriptions": {"typeIdentifier": "t_contract$_UserProxy_$1986", "typeString": "contract UserProxy"}}, "value": null, "visibility": "internal"}], "id": 2131, "initialValue": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 2127, "name": "_proxies", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2005, "src": "56810:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_address_$", "typeString": "mapping(address => address)"}}, "id": 2129, "indexExpression": {"argumentTypes": null, "id": 2128, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2120, "src": "56819:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "56810:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2126, "name": "UserProxy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1986, "src": "56800:9:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_UserProxy_$1986_$", "typeString": "type(contract UserProxy)"}}, "id": 2130, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56800:27:0", "typeDescriptions": {"typeIdentifier": "t_contract$_UserProxy_$1986", "typeString": "contract UserProxy"}}, "nodeType": "VariableDeclarationStatement", "src": "56782:45:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2136, "name": "_punkContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2001, "src": "56882:13:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}], "id": 2135, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "56874:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": "address"}, "id": 2137, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56874:22:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 2138, "name": "punkIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2114, "src": "56898:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 2133, "name": "proxy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2125, "src": "56859:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_UserProxy_$1986", "typeString": "contract UserProxy"}}, "id": 2134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1985, "src": "56859:14:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 2139, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56859:49:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "50756e6b577261707065723a207472616e73666572206661696c", "id": 2140, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "56922:28:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_509d5b0bca5e0af5276de1d70b45847e93ae39f1e8b650858d52cc0b9745bb1a", "typeString": "literal_string \"PunkWrapper: transfer fail\""}, "value": "PunkWrapper: transfer fail"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_509d5b0bca5e0af5276de1d70b45847e93ae39f1e8b650858d52cc0b9745bb1a", "typeString": "literal_string \"PunkWrapper: transfer fail\""}], "id": 2132, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "56838:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2141, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56838:122:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2142, "nodeType": "ExpressionStatement", "src": "56838:122:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2144, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2120, "src": "56977:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 2145, "name": "punkIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2114, "src": "56985:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2143, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [1409], "referencedDeclaration": 1409, "src": "56971:5:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2146, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "56971:24:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2147, "nodeType": "ExpressionStatement", "src": "56971:24:0"}]}, "documentation": "@dev Mints a wrapped punk", "id": 2149, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 2117, "modifierName": {"argumentTypes": null, "id": 2116, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "56718:13:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "56718:13:0"}], "name": "mint", "nodeType": "FunctionDefinition", "parameters": {"id": 2115, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2114, "name": "punkIndex", "nodeType": "VariableDeclaration", "scope": 2149, "src": "56692:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "56692:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "56691:19:0"}, "returnParameters": {"id": 2118, "nodeType": "ParameterList", "parameters": [], "src": "56732:0:0"}, "scope": 2202, "src": "56678:324:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 2180, "nodeType": "Block", "src": "57120:356:0", "statements": [{"assignments": [2157], "declarations": [{"constant": false, "id": 2157, "name": "sender", "nodeType": "VariableDeclaration", "scope": 2180, "src": "57130:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2156, "name": "address", "nodeType": "ElementaryTypeName", "src": "57130:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}], "id": 2160, "initialValue": {"argumentTypes": null, "arguments": [], "expression": {"argumentTypes": [], "id": 2158, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "57147:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 2159, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "57147:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "VariableDeclarationStatement", "src": "57130:29:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2163, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2157, "src": "57210:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 2164, "name": "punkIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2151, "src": "57218:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2162, "name": "_isApprovedOrOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 975, "src": "57191:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) view returns (bool)"}}, "id": 2165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "57191:37:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "50756e6b577261707065723a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564", "id": 2166, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "57242:47:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_199472bcacd6158f03f2814240a3084d17ae622f6081f5efb8b89fda3533ba5d", "typeString": "literal_string \"PunkWrapper: caller is not owner nor approved\""}, "value": "PunkWrapper: caller is not owner nor approved"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_199472bcacd6158f03f2814240a3084d17ae622f6081f5efb8b89fda3533ba5d", "typeString": "literal_string \"PunkWrapper: caller is not owner nor approved\""}], "id": 2161, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [2220, 2221], "referencedDeclaration": 2221, "src": "57170:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "57170:129:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2168, "nodeType": "ExpressionStatement", "src": "57170:129:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2170, "name": "punkIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2151, "src": "57316:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2169, "name": "_burn", "nodeType": "Identifier", "overloadedDeclarations": [1886, 1117], "referencedDeclaration": 1117, "src": "57310:5:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 2171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "57310:16:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2172, "nodeType": "ExpressionStatement", "src": "57310:16:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2176, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2157, "src": "57451:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 2177, "name": "punkIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2151, "src": "57459:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 2173, "name": "_punkContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2001, "src": "57424:13:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICryptoPunk_$1941", "typeString": "contract ICryptoPunk"}}, "id": 2175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferPunk", "nodeType": "MemberAccess", "referencedDeclaration": 1940, "src": "57424:26:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256) external"}}, "id": 2178, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "57424:45:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2179, "nodeType": "ExpressionStatement", "src": "57424:45:0"}]}, "documentation": "@dev Burns a specific wrapped punk", "id": 2181, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 2154, "modifierName": {"argumentTypes": null, "id": 2153, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "57106:13:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "57106:13:0"}], "name": "burn", "nodeType": "FunctionDefinition", "parameters": {"id": 2152, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2151, "name": "punkIndex", "nodeType": "VariableDeclaration", "scope": 2181, "src": "57080:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2150, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "57080:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "57079:19:0"}, "returnParameters": {"id": 2155, "nodeType": "ParameterList", "parameters": [], "src": "57120:0:0"}, "scope": 2202, "src": "57066:410:0", "stateMutability": "nonpayable", "superFunction": null, "visibility": "public"}, {"body": {"id": 2200, "nodeType": "Block", "src": "57712:57:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 2195, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2183, "src": "57742:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 2196, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2185, "src": "57748:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"argumentTypes": null, "id": 2197, "name": "punkIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2187, "src": "57752:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 2192, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2270, "src": "57722:5:0", "typeDescriptions": {"typeIdentifier": "t_super$_WrappedPunk_$2202", "typeString": "contract super WrappedPunk"}}, "id": 2194, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1385, "src": "57722:19:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "57722:40:0", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2199, "nodeType": "ExpressionStatement", "src": "57722:40:0"}]}, "documentation": "@dev Internal function to transfer ownership of a given punk index to another address", "id": 2201, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 2190, "modifierName": {"argumentTypes": null, "id": 2189, "name": "whenNotPaused", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "57698:13:0", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "57698:13:0"}], "name": "_transferFrom", "nodeType": "FunctionDefinition", "parameters": {"id": 2188, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2183, "name": "from", "nodeType": "VariableDeclaration", "scope": 2201, "src": "57623:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2182, "name": "address", "nodeType": "ElementaryTypeName", "src": "57623:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 2185, "name": "to", "nodeType": "VariableDeclaration", "scope": 2201, "src": "57645:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2184, "name": "address", "nodeType": "ElementaryTypeName", "src": "57645:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 2187, "name": "punkIndex", "nodeType": "VariableDeclaration", "scope": 2201, "src": "57665:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2186, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "57665:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "57613:75:0"}, "returnParameters": {"id": 2191, "nodeType": "ParameterList", "parameters": [], "src": "57712:0:0"}, "scope": 2202, "src": "57591:178:0", "stateMutability": "nonpayable", "superFunction": 1385, "visibility": "internal"}], "scope": 2203, "src": "54940:2831:0"}], "src": "242:57530:0"}, "bytecode": "", "bytecodeSha1": "0f9cd31661adbbd471789b88f8ea013e8d6e4490", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.5.17+commit.d19bba13"}, "contractName": "WrappedPunk", "coverageMap": {"branches": {"0": {"ERC721._burn": {"155": [34367, 34392, true]}, "ERC721._checkOnERC721Received": {"147": [36608, 36623, false], "148": [37018, 37025, false], "149": [37045, 37066, false]}, "ERC721._clearApproval": {"153": [37786, 37824, false]}, "ERC721._isApprovedOrOwner": {"140": [31639, 31655, true]}, "ERC721._mint": {"145": [33756, 33772, true], "146": [33827, 33844, true]}, "ERC721._safeTransferFrom": {"142": [30681, 30729, true]}, "ERC721._transferFrom": {"150": [35422, 35446, true], "151": [35531, 35547, true]}, "ERC721.approve": {"123": [25193, 25204, true], "124": [25274, 25295, true], "125": [25299, 25336, true]}, "ERC721.balanceOf": {"131": [24035, 24054, true]}, "ERC721.getApproved": {"122": [25893, 25909, true]}, "ERC721.ownerOf": {"130": [24542, 24561, true]}, "ERC721.safeTransferFrom": {"134": [29588, 29629, true]}, "ERC721.setApprovalForAll": {"133": [26443, 26458, true]}, "ERC721.transferFrom": {"126": [27723, 27764, true]}, "ERC721Enumerable._removeTokenFromOwnerEnumeration": {"152": [44686, 44714, false]}, "ERC721Enumerable.tokenByIndex": {"129": [40517, 40538, true]}, "ERC721Enumerable.tokenOfOwnerByIndex": {"127": [39690, 39714, true]}, "ERC721Metadata._burn": {"144": [52913, 52951, false]}, "ERC721Metadata.tokenURI": {"135": [50619, 50635, true], "136": [51010, 51037, false]}, "Ownable.transferOwnership": {"138": [2627, 2649, true], "139": [3426, 3448, true]}, "Pausable._unpause": {"141": [5190, 5197, true]}, "SafeMath.sub": {"154": [8073, 8079, true]}, "Strings.fromUint256": {"143": [47133, 47143, false]}, "WrappedPunk.burn": {"128": [57191, 57228, true]}, "WrappedPunk.mint": {"132": [56859, 56908, true]}, "WrappedPunk.registerProxy": {"137": [56230, 56260, true]}}}, "statements": {"0": {"Address.isContract": {"108": [12828, 12879]}, "Context._msgSender": {"53": [1101, 1118]}, "Counters.current": {"61": [11202, 11223]}, "Counters.decrement": {"110": [11483, 11521]}, "Counters.increment": {"107": [11388, 11407]}, "ERC165.supportsInterface": {"0": [20987, 21027]}, "ERC721._burn": {"59": [34870, 34902], "113": [34346, 34455], "114": [34466, 34489], "115": [34500, 34536], "116": [34546, 34579], "117": [34590, 34631]}, "ERC721._checkOnERC721Received": {"90": [36639, 36650], "91": [37342, 37402], "92": [37509, 37544]}, "ERC721._clearApproval": {"109": [37840, 37877]}, "ERC721._exists": {"52": [31080, 31121]}, "ERC721._isApprovedOrOwner": {"54": [31618, 31725], "55": [31779, 31899]}, "ERC721._mint": {"81": [33748, 33809], "82": [33819, 33877], "83": [33888, 33913], "84": [33923, 33956], "85": [33967, 34005]}, "ERC721._safeTransferFrom": {"67": [30617, 30649], "68": [30660, 30805]}, "ERC721._transferFrom": {"93": [35401, 35513], "94": [35523, 35588], "95": [35599, 35622], "96": [35633, 35668], "97": [35678, 35711], "98": [35722, 35747], "99": [35758, 35790]}, "ERC721.approve": {"4": [25185, 25242], "5": [25253, 25418], "6": [25429, 25458], "7": [25469, 25502]}, "ERC721.balanceOf": {"25": [24014, 24122], "26": [24133, 24174]}, "ERC721.getApproved": {"2": [25872, 25979], "3": [25990, 26021]}, "ERC721.isApprovedForAll": {"47": [27051, 27093]}, "ERC721.ownerOf": {"22": [24521, 24628], "23": [24639, 24651]}, "ERC721.safeTransferFrom": {"14": [28654, 28693], "38": [29567, 29704], "39": [29715, 29758]}, "ERC721.setApprovalForAll": {"34": [26435, 26488], "35": [26499, 26543], "36": [26554, 26598]}, "ERC721.transferFrom": {"9": [27702, 27839], "10": [27850, 27882]}, "ERC721Enumerable._addTokenToAllTokensEnumeration": {"88": [43492, 43536], "89": [43546, 43570]}, "ERC721Enumerable._addTokenToOwnerEnumeration": {"86": [43122, 43174], "87": [43184, 43214]}, "ERC721Enumerable._burn": {"103": [42088, 42115], "104": [42126, 42174], "105": [42294, 42324], "106": [42335, 42380]}, "ERC721Enumerable._mint": {"64": [41614, 41638], "65": [41649, 41689], "66": [41700, 41740]}, "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {"118": [46356, 46392], "119": [46460, 46501], "120": [46622, 46641], "121": [46651, 46679]}, "ERC721Enumerable._removeTokenFromOwnerEnumeration": {"100": [44801, 44845], "101": [44917, 44960], "102": [45091, 45118]}, "ERC721Enumerable._transferFrom": {"76": [41140, 41178], "77": [41189, 41236], "78": [41247, 41287]}, "ERC721Enumerable.tokenByIndex": {"18": [40496, 40608], "19": [40619, 40643]}, "ERC721Enumerable.tokenOfOwnerByIndex": {"11": [39669, 39783], "12": [39794, 39827]}, "ERC721Enumerable.totalSupply": {"8": [40050, 40074]}, "ERC721Metadata._burn": {"79": [52835, 52862], "80": [52967, 52993]}, "ERC721Metadata._setBaseURI": {"60": [52126, 52144]}, "ERC721Metadata.baseURI": {"24": [52454, 52469]}, "ERC721Metadata.name": {"1": [49461, 49473]}, "ERC721Metadata.symbol": {"31": [49653, 49667]}, "ERC721Metadata.tokenURI": {"40": [50598, 50708], "41": [50880, 50896], "42": [51053, 51105], "43": [51216, 51280]}, "Ownable.owner": {"30": [2480, 2493]}, "Ownable.renounceOwnership": {"27": [3102, 3147], "28": [3158, 3177]}, "Ownable.transferOwnership": {"48": [3405, 3512], "49": [3523, 3566], "50": [3577, 3594]}, "Pausable._pause": {"62": [5426, 5440], "63": [5451, 5476]}, "Pausable._unpause": {"57": [5665, 5680], "58": [5691, 5718]}, "Pausable.paused": {"21": [4675, 4689]}, "SafeMath.sub": {"111": [8065, 8114], "112": [8125, 8137]}, "Strings.fromUint256": {"69": [47159, 47169], "70": [47277, 47285], "71": [47299, 47309], "72": [47416, 47428], "73": [47471, 47520], "74": [47534, 47544], "75": [47565, 47586]}, "WrappedPunk._transferFrom": {"56": [57722, 57762]}, "WrappedPunk.burn": {"15": [57170, 57299], "16": [57310, 57326], "17": [57424, 57469]}, "WrappedPunk.mint": {"32": [56838, 56960], "33": [56971, 56995]}, "WrappedPunk.pause": {"29": [55926, 55934]}, "WrappedPunk.proxyInfo": {"37": [56595, 56616]}, "WrappedPunk.punkContract": {"51": [55608, 55637]}, "WrappedPunk.registerProxy": {"44": [56209, 56330], "45": [56392, 56416], "46": [56427, 56462]}, "WrappedPunk.setBaseURI": {"20": [55780, 55800]}, "WrappedPunk.unpause": {"13": [56060, 56070]}}}}, "dependencies": ["Address", "Context", "Counters", "ERC165", "ERC721", "ERC721Enumerable", "ERC721Full", "ERC721Metadata", "ICryptoPunk", "IERC165", "IERC721", "IERC721Enumerable", "IERC721Metadata", "IERC721Receiver", "Ownable", "Pausable", "SafeMath", "Strings", "UserProxy"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636c0360eb11610104578063a22cb465116100a2578063ddd81f8211610071578063ddd81f8214610654578063e985e9c51461065c578063f2fde38b1461068a578063f97e48ee146106b0576101cf565b8063a22cb4651461051d578063a9c7b2c81461054b578063b88d4fde14610571578063c87b56dd14610637576101cf565b80638456cb59116100de5780638456cb59146104e85780638da5cb5b146104f057806395d89b41146104f8578063a0712d6814610500576101cf565b80636c0360eb146104b257806370a08231146104ba578063715018a6146104e0576101cf565b80633f4ba83a116101715780634f6ccce71161014b5780634f6ccce7146103ca57806355f804b3146103e75780635c975abb1461048d5780636352211e14610495576101cf565b80633f4ba83a1461036f57806342842e0e1461037757806342966c68146103ad576101cf565b8063095ea7b3116101ad578063095ea7b3146102c557806318160ddd146102f357806323b872dd1461030d5780632f745c5914610343576101cf565b806301ffc9a7146101d457806306fdde031461020f578063081812fc1461028c575b600080fd5b6101fb600480360360208110156101ea57600080fd5b50356001600160e01b0319166106b8565b604080519115158252519081900360200190f35b6102176106db565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610251578181015183820152602001610239565b50505050905090810190601f16801561027e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a9600480360360208110156102a257600080fd5b5035610772565b604080516001600160a01b039092168252519081900360200190f35b6102f1600480360360408110156102db57600080fd5b506001600160a01b0381351690602001356107d4565b005b6102fb6108fc565b60408051918252519081900360200190f35b6102f16004803603606081101561032357600080fd5b506001600160a01b03813581169160208101359091169060400135610902565b6102fb6004803603604081101561035957600080fd5b506001600160a01b03813516906020013561095e565b6102f16109dd565b6102f16004803603606081101561038d57600080fd5b506001600160a01b03813581169160208101359091169060400135610a3f565b6102f1600480360360208110156103c357600080fd5b5035610a5a565b6102fb600480360360208110156103e057600080fd5b5035610b76565b6102f1600480360360208110156103fd57600080fd5b81019060208101813564010000000081111561041857600080fd5b82018360208201111561042a57600080fd5b8035906020019184600183028401116401000000008311171561044c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610bdc945050505050565b6101fb610c40565b6102a9600480360360208110156104ab57600080fd5b5035610c49565b610217610ca3565b6102fb600480360360208110156104d057600080fd5b50356001600160a01b0316610d04565b6102f1610d6c565b6102f1610e0e565b6102a9610e6e565b610217610e7d565b6102f16004803603602081101561051657600080fd5b5035610ede565b6102f16004803603604081101561053357600080fd5b506001600160a01b0381351690602001351515611029565b6102a96004803603602081101561056157600080fd5b50356001600160a01b031661110a565b6102f16004803603608081101561058757600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156105c257600080fd5b8201836020820111156105d457600080fd5b803590602001918460018302840111640100000000831117156105f657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611128945050505050565b6102176004803603602081101561064d57600080fd5b5035611186565b6102f161142d565b6101fb6004803603604081101561067257600080fd5b506001600160a01b038135811691602001351661152c565b6102f1600480360360208110156106a057600080fd5b50356001600160a01b031661155a565b6102a9611652565b6001600160e01b0319811660009081526001602052604090205460ff165b919050565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b820191906000526020600020905b81548152906001019060200180831161074a57829003601f168201915b505050505090505b90565b600061077d82611666565b6107b85760405162461bcd60e51b815260040180806020018281038252602c8152602001806127c2602c913960400191505060405180910390fd5b506000908152600360205260409020546001600160a01b031690565b60006107df82610c49565b9050806001600160a01b0316836001600160a01b031614156108325760405162461bcd60e51b81526004018080602001828103825260218152602001806128666021913960400191505060405180910390fd5b806001600160a01b0316610844611683565b6001600160a01b03161480610865575061086581610860611683565b61152c565b6108a05760405162461bcd60e51b815260040180806020018281038252603881526020018061270b6038913960400191505060405180910390fd5b60008281526003602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60085490565b61091361090d611683565b82611687565b61094e5760405162461bcd60e51b81526004018080602001828103825260318152602001806128876031913960400191505060405180910390fd5b61095983838361172b565b505050565b600061096983610d04565b82106109a65760405162461bcd60e51b815260040180806020018281038252602b815260200180612638602b913960400191505060405180910390fd5b6001600160a01b03831660009081526006602052604090208054839081106109ca57fe5b9060005260206000200154905092915050565b6109e5611683565b6000546001600160a01b03908116911614610a35576040805162461bcd60e51b815260206004820181905260248201526000805160206127ee833981519152604482015290519081900360640190fd5b610a3d611781565b565b61095983838360405180602001604052806000815250611128565b600e5460ff1615610aa5576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000610aaf611683565b9050610abb8183611687565b610af65760405162461bcd60e51b815260040180806020018281038252602d81526020018061260b602d913960400191505060405180910390fd5b610aff8261181f565b600e54604080516322dca8bb60e21b81526001600160a01b03848116600483015260248201869052915161010090930490911691638b72a2ec9160448082019260009290919082900301818387803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b505050505050565b6000610b806108fc565b8210610bbd5760405162461bcd60e51b815260040180806020018281038252602c8152602001806128b8602c913960400191505060405180910390fd5b60088281548110610bca57fe5b90600052602060002001549050919050565b610be4611683565b6000546001600160a01b03908116911614610c34576040805162461bcd60e51b815260206004820181905260248201526000805160206127ee833981519152604482015290519081900360640190fd5b610c3d81611831565b50565b600e5460ff1690565b6000818152600260205260408120546001600160a01b031680610c9d5760405162461bcd60e51b815260040180806020018281038252602981526020018061276d6029913960400191505060405180910390fd5b92915050565b600c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b60006001600160a01b038216610d4b5760405162461bcd60e51b815260040180806020018281038252602a815260200180612743602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600460205260409020610c9d90611848565b610d74611683565b6000546001600160a01b03908116911614610dc4576040805162461bcd60e51b815260206004820181905260248201526000805160206127ee833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610e16611683565b6000546001600160a01b03908116911614610e66576040805162461bcd60e51b815260206004820181905260248201526000805160206127ee833981519152604482015290519081900360640190fd5b610a3d61184c565b6000546001600160a01b031690565b600b8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107675780601f1061073c57610100808354040283529160200191610767565b600e5460ff1615610f29576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000610f33611683565b6001600160a01b038082166000908152600f6020908152604080832054600e54825163a9059cbb60e01b81526101009091048616600482015260248101899052915195965090931693849363a9059cbb9360448083019493928390030190829087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050506040513d6020811015610fcc57600080fd5b505161101f576040805162461bcd60e51b815260206004820152601a60248201527f50756e6b577261707065723a207472616e73666572206661696c000000000000604482015290519081900360640190fd5b61095982846118cd565b6000611033611683565b9050806001600160a01b0316836001600160a01b0316141561109c576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b6001600160a01b03818116600081815260056020908152604080832094881680845294825291829020805460ff1916871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b6001600160a01b039081166000908152600f60205260409020541690565b611139611133611683565b83611687565b6111745760405162461bcd60e51b81526004018080602001828103825260318152602001806128876031913960400191505060405180910390fd5b611180848484846118ea565b50505050565b606061119182611666565b6111cc5760405162461bcd60e51b815260040180806020018281038252602f815260200180612837602f913960400191505060405180910390fd5b6000828152600d602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156112615780601f1061123657610100808354040283529160200191611261565b820191906000526020600020905b81548152906001019060200180831161124457829003601f168201915b5050600c549394505050506002600019610100600184161502019091160461128a5790506106d6565b80511561135b57600c8160405160200180838054600181600116156101000203166002900480156112f25780601f106112d05761010080835404028352918201916112f2565b820191906000526020600020905b8154815290600101906020018083116112de575b5050825160208401908083835b6020831061131e5780518252601f1990920191602091820191016112ff565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506106d6565b600c6113668461193c565b60405160200180838054600181600116156101000203166002900480156113c45780601f106113a25761010080835404028352918201916113c4565b820191906000526020600020905b8154815290600101906020018083116113b0575b5050825160208401908083835b602083106113f05780518252601f1990920191602091820191016113d1565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6000611437611683565b6001600160a01b038082166000908152600f602052604090205491925016156114915760405162461bcd60e51b815260040180806020018281038252602c815260200180612796602c913960400191505060405180910390fd5b600060405161149f9061231e565b604051809103906000f0801580156114bb573d6000803e3d6000fd5b506001600160a01b038381166000818152600f602090815260409182902080546001600160a01b0319169486169485179055815192835282019290925281519293507f3623f8bd4da9524cfaa08c81b8194f759ca625e8d761f4cc2cea23e63d3f4b12929081900390910190a15050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b611562611683565b6000546001600160a01b039081169116146115b2576040805162461bcd60e51b815260206004820181905260248201526000805160206127ee833981519152604482015290519081900360640190fd5b6001600160a01b0381166115f75760405162461bcd60e51b81526004018080602001828103825260268152602001806126956026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600e5461010090046001600160a01b031690565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600061169282611666565b6116cd5760405162461bcd60e51b815260040180806020018281038252602c8152602001806126df602c913960400191505060405180910390fd5b60006116d883610c49565b9050806001600160a01b0316846001600160a01b031614806117135750836001600160a01b031661170884610772565b6001600160a01b0316145b806117235750611723818561152c565b949350505050565b600e5460ff1615611776576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610959838383611a00565b600e5460ff166117cf576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b600e805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611802611683565b604080516001600160a01b039092168252519081900360200190a1565b610c3d61182b82610c49565b82611a1f565b805161184490600c90602084019061232b565b5050565b5490565b600e5460ff1615611897576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b600e805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611802611683565b6118d78282611a67565b6118e18282611b98565b61184481611bd6565b6118f584848461172b565b61190184848484611c1a565b6111805760405162461bcd60e51b81526004018080602001828103825260328152602001806126636032913960400191505060405180910390fd5b60608161196157506040805180820190915260018152600360fc1b60208201526106d6565b8160005b811561197957600101600a82049150611965565b6060816040519080825280601f01601f1916602001820160405280156119a6576020820181803883390190505b50859350905060001982015b83156119f757600a840660300160f81b828280600190039350815181106119d557fe5b60200101906001600160f81b031916908160001a905350600a840493506119b2565b50949350505050565b611a0b838383611e55565b611a158382611f99565b6109598282611b98565b611a29828261208e565b6000818152600d60205260409020546002600019610100600184161502019091160415611844576000818152600d60205260408120611844916123a9565b6001600160a01b038216611ac2576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b611acb81611666565b15611b1d576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260049091529020611b5c906120ba565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0390911660009081526006602081815260408084208054868652600784529185208290559282526001810183559183529091200155565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6000611c2e846001600160a01b03166120c3565b611c3a57506001611723565b600060606001600160a01b038616630a85bd0160e11b611c58611683565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611cd1578181015183820152602001611cb9565b50505050905090810190601f168015611cfe5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b60208310611d665780518252601f199092019160209182019101611d47565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611dc8576040519150601f19603f3d011682016040523d82523d6000602084013e611dcd565b606091505b509150915081611e1e57805115611de75780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806126636032913960400191505060405180910390fd5b6000818060200190516020811015611e3557600080fd5b50516001600160e01b031916630a85bd0160e11b14935061172392505050565b826001600160a01b0316611e6882610c49565b6001600160a01b031614611ead5760405162461bcd60e51b815260040180806020018281038252602981526020018061280e6029913960400191505060405180910390fd5b6001600160a01b038216611ef25760405162461bcd60e51b81526004018080602001828103825260248152602001806126bb6024913960400191505060405180910390fd5b611efb816120fc565b6001600160a01b0383166000908152600460205260409020611f1c90612137565b6001600160a01b0382166000908152600460205260409020611f3d906120ba565b60008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260066020526040812054611fc390600163ffffffff61214e16565b60008381526007602052604090205490915080821461205e576001600160a01b038416600090815260066020526040812080548490811061200057fe5b906000526020600020015490508060066000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061203e57fe5b600091825260208083209091019290925591825260079052604090208190555b6001600160a01b03841660009081526006602052604090208054906120879060001983016123ed565b5050505050565b61209882826121ab565b6120a28282611f99565b60008181526007602052604081205561184481612282565b80546001019055565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611723575050151592915050565b6000818152600360205260409020546001600160a01b031615610c3d57600090815260036020526040902080546001600160a01b0319169055565b805461214a90600163ffffffff61214e16565b9055565b6000828211156121a5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b816001600160a01b03166121be82610c49565b6001600160a01b0316146122035760405162461bcd60e51b81526004018080602001828103825260258152602001806128e46025913960400191505060405180910390fd5b61220c816120fc565b6001600160a01b038216600090815260046020526040902061222d90612137565b60008181526002602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60085460009061229990600163ffffffff61214e16565b600083815260096020526040812054600880549394509092849081106122bb57fe5b9060005260206000200154905080600883815481106122d657fe5b600091825260208083209091019290925582815260099091526040902082905560088054906123099060001983016123ed565b50505060009182525060096020526040812055565b6101e38061242883390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061236c57805160ff1916838001178555612399565b82800160010185558215612399579182015b8281111561239957825182559160200191906001019061237e565b506123a592915061240d565b5090565b50805460018160011615610100020316600290046000825580601f106123cf5750610c3d565b601f016020900490600052602060002090810190610c3d919061240d565b815481835581811115610959576000838152602090206109599181019083015b61076f91905b808211156123a5576000815560010161241356fe608060405234801561001057600080fd5b50600080546001600160a01b031916331790556101b1806100326000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a9059cbb14610030575b600080fd5b61005c6004803603604081101561004657600080fd5b506001600160a01b038135169060200135610070565b604080519115158252519081900360200190f35b600080546001600160a01b0316331461008b57506000610176565b60008054604080516001600160a01b039283166024820152604480820187905282518083039091018152606490910182526020810180516001600160e01b03166322dca8bb60e21b1781529151815193881693919290918291908083835b602083106101085780518252601f1990920191602091820191016100e9565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461016a576040519150601f19603f3d011682016040523d82523d6000602084013e61016f565b606091505b5090925050505b9291505056fea265627a7a7231582022f3b6f583718aee370361e2607ba8f308f635e33804c07a891add313c83a65464736f6c6343000511003250756e6b577261707065723a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e50756e6b577261707065723a2063616c6c6572206861732072656769737465726564207468652070726f78794552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776ea265627a7a72315820cdb6b5dc0a7e8c6b0906b8e607a84f2752140c1a0197cfb3d84ba511635323ba64736f6c63430005110032", "deployedSourceMap": "54940:2831:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;54940:2831:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20903:131;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20903:131:0;-1:-1:-1;;;;;;20903:131:0;;:::i;:::-;;;;;;;;;;;;;;;;;;49399:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;49399:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25794:234;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25794:234:0;;:::i;:::-;;;;-1:-1:-1;;;;;25794:234:0;;;;;;;;;;;;;;25079:430;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;25079:430:0;;;;;;;;:::i;:::-;;39987:94;;;:::i;:::-;;;;;;;;;;;;;;;;27537:352;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;27537:352:0;;;;;;;;;;;;;;;;;:::i;39542:292::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;39542:292:0;;;;;;;;:::i;56014:63::-;;;:::i;28538:162::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;28538:162:0;;;;;;;;;;;;;;;;;:::i;57066:410::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;57066:410:0;;:::i;40419:231::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;40419:231:0;;:::i;55710:97::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;55710:97:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;55710:97:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;55710:97:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;55710:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;55710:97:0;;-1:-1:-1;55710:97:0;;-1:-1:-1;;;;;55710:97:0:i;4620:76::-;;;:::i;24400:258::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24400:258:0;;:::i;52389:87::-;;;:::i;23940:241::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23940:241:0;-1:-1:-1;;;;;23940:241:0;;:::i;3046:138::-;;;:::i;55882:59::-;;;:::i;2423:77::-;;;:::i;49589:85::-;;;:::i;56678:324::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;56678:324:0;;:::i;26321:284::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;26321:284:0;;;;;;;;;;:::i;56522:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;56522:101:0;-1:-1:-1;;;;;56522:101:0;;:::i;29423:342::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;29423:342:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;29423:342:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;29423:342:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;29423:342:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;29423:342:0;;-1:-1:-1;29423:342:0;;-1:-1:-1;;;;;29423:342:0:i;50517:770::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;50517:770:0;;:::i;56127:342::-;;;:::i;26927:173::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;26927:173:0;;;;;;;;;;:::i;3333:268::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3333:268:0;-1:-1:-1;;;;;3333:268:0;;:::i;55544:100::-;;;:::i;20903:131::-;-1:-1:-1;;;;;;20994:33:0;;20971:4;20994:33;;;:20;:33;;;;;;;;20903:131;;;;:::o;49399:81::-;49468:5;49461:12;;;;;;;;-1:-1:-1;;49461:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49436:13;;49461:12;;49468:5;;49461:12;;49468:5;49461:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49399:81;;:::o;25794:234::-;25853:7;25893:16;25901:7;25893;:16::i;:::-;25872:107;;;;-1:-1:-1;;;25872:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25997:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;25997:24:0;;25794:234::o;25079:430::-;25142:13;25158:16;25166:7;25158;:16::i;:::-;25142:32;;25199:5;-1:-1:-1;;;;;25193:11:0;:2;-1:-1:-1;;;;;25193:11:0;;;25185:57;;;;-1:-1:-1;;;25185:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25290:5;-1:-1:-1;;;;;25274:21:0;:12;:10;:12::i;:::-;-1:-1:-1;;;;;25274:21:0;;:62;;;;25299:37;25316:5;25323:12;:10;:12::i;:::-;25299:16;:37::i;:::-;25253:165;;;;-1:-1:-1;;;25253:165:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25429:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;25429:29:0;-1:-1:-1;;;;;25429:29:0;;;;;;;;;25474:28;;25429:24;;25474:28;;;;;;;25079:430;;;:::o;39987:94::-;40057:10;:17;39987:94;:::o;27537:352::-;27723:41;27742:12;:10;:12::i;:::-;27756:7;27723:18;:41::i;:::-;27702:137;;;;-1:-1:-1;;;27702:137:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27850:32;27864:4;27870:2;27874:7;27850:13;:32::i;:::-;27537:352;;;:::o;39542:292::-;39646:7;39698:16;39708:5;39698:9;:16::i;:::-;39690:5;:24;39669:114;;;;-1:-1:-1;;;39669:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;39801:19:0;;;;;;:12;:19;;;;;:26;;39821:5;;39801:26;;;;;;;;;;;;;;39794:33;;39542:292;;;;:::o;56014:63::-;2637:12;:10;:12::i;:::-;2627:6;;-1:-1:-1;;;;;2627:6:0;;;:22;;;2619:67;;;;;-1:-1:-1;;;2619:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2619:67:0;;;;;;;;;;;;;;;56060:10;:8;:10::i;:::-;56014:63::o;28538:162::-;28654:39;28671:4;28677:2;28681:7;28654:39;;;;;;;;;;;;:16;:39::i;57066:410::-;4926:7;;;;4925:8;4917:37;;;;;-1:-1:-1;;;4917:37:0;;;;;;;;;;;;-1:-1:-1;;;4917:37:0;;;;;;;;;;;;;;;57130:14;57147:12;:10;:12::i;:::-;57130:29;;57191:37;57210:6;57218:9;57191:18;:37::i;:::-;57170:129;;;;-1:-1:-1;;;57170:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57310:16;57316:9;57310:5;:16::i;:::-;57424:13;;:45;;;-1:-1:-1;;;57424:45:0;;-1:-1:-1;;;;;57424:45:0;;;;;;;;;;;;;;;:13;;;;;;;;:26;;:45;;;;;-1:-1:-1;;57424:45:0;;;;;;;;-1:-1:-1;57424:13:0;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;57424:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;57424:45:0;;;;4964:1;57066:410;:::o;40419:231::-;40477:7;40525:13;:11;:13::i;:::-;40517:5;:21;40496:112;;;;-1:-1:-1;;;40496:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40626:10;40637:5;40626:17;;;;;;;;;;;;;;;;40619:24;;40419:231;;;:::o;55710:97::-;2637:12;:10;:12::i;:::-;2627:6;;-1:-1:-1;;;;;2627:6:0;;;:22;;;2619:67;;;;;-1:-1:-1;;;2619:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2619:67:0;;;;;;;;;;;;;;;55780:20;55792:7;55780:11;:20::i;:::-;55710:97;:::o;4620:76::-;4682:7;;;;4620:76;:::o;24400:258::-;24455:7;24490:20;;;:11;:20;;;;;;-1:-1:-1;;;;;24490:20:0;24542:19;24521:107;;;;-1:-1:-1;;;24521:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24646:5;24400:258;-1:-1:-1;;24400:258:0:o;52389:87::-;52461:8;52454:15;;;;;;;;-1:-1:-1;;52454:15:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52429:13;;52454:15;;52461:8;;52454:15;;52461:8;52454:15;;;;;;;;;;;;;;;;;;;;;;;;23940:241;23995:7;-1:-1:-1;;;;;24035:19:0;;24014:108;;;;-1:-1:-1;;;24014:108:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24140:24:0;;;;;;:17;:24;;;;;:34;;:32;:34::i;3046:138::-;2637:12;:10;:12::i;:::-;2627:6;;-1:-1:-1;;;;;2627:6:0;;;:22;;;2619:67;;;;;-1:-1:-1;;;2619:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2619:67:0;;;;;;;;;;;;;;;3144:1;3128:6;;3107:40;;-1:-1:-1;;;;;3128:6:0;;;;3107:40;;3144:1;;3107:40;3175:1;3158:19;;-1:-1:-1;;;;;;3158:19:0;;;3046:138::o;55882:59::-;2637:12;:10;:12::i;:::-;2627:6;;-1:-1:-1;;;;;2627:6:0;;;:22;;;2619:67;;;;;-1:-1:-1;;;2619:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2619:67:0;;;;;;;;;;;;;;;55926:8;:6;:8::i;2423:77::-;2461:7;2487:6;-1:-1:-1;;;;;2487:6:0;2423:77;:::o;49589:85::-;49660:7;49653:14;;;;;;;;-1:-1:-1;;49653:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49628:13;;49653:14;;49660:7;;49653:14;;49660:7;49653:14;;;;;;;;;;;;;;;;;;;;;;;;56678:324;4926:7;;;;4925:8;4917:37;;;;;-1:-1:-1;;;4917:37:0;;;;;;;;;;;;-1:-1:-1;;;4917:37:0;;;;;;;;;;;;;;;56742:14;56759:12;:10;:12::i;:::-;-1:-1:-1;;;;;56810:16:0;;;56782:15;56810:16;;;:8;:16;;;;;;;;;56882:13;;56859:49;;-1:-1:-1;;;56859:49:0;;56810:16;56882:13;;;;;56859:49;;;;;;;;;;;;56742:29;;-1:-1:-1;56810:16:0;;;;;;56859:14;;:49;;;;;56810:16;56859:49;;;;;;;;56810:16;56859:49;;;5:2:-1;;;;30:1;27;20:12;5:2;56859:49:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;56859:49:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;56859:49:0;56838:122;;;;;-1:-1:-1;;;56838:122:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;56971:24;56977:6;56985:9;56971:5;:24::i;26321:284::-;26392:17;26412:12;:10;:12::i;:::-;26392:32;;26449:9;-1:-1:-1;;;;;26443:15:0;:2;-1:-1:-1;;;;;26443:15:0;;;26435:53;;;;;-1:-1:-1;;;26435:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26499:29:0;;;;;;;:18;:29;;;;;;;;:33;;;;;;;;;;;;;:44;;-1:-1:-1;;26499:44:0;;;;;;;;;;26559:39;;;;;;;;;;;;;;;;;26321:284;;;:::o;56522:101::-;-1:-1:-1;;;;;56602:14:0;;;56576:7;56602:14;;;:8;:14;;;;;;;;56522:101::o;29423:342::-;29588:41;29607:12;:10;:12::i;:::-;29621:7;29588:18;:41::i;:::-;29567:137;;;;-1:-1:-1;;;29567:137:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29715:43;29733:4;29739:2;29743:7;29752:5;29715:17;:43::i;:::-;29423:342;;;;:::o;50517:770::-;50573:13;50619:16;50627:7;50619;:16::i;:::-;50598:110;;;;-1:-1:-1;;;50598:110:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50745:19;;;;:10;:19;;;;;;;;;50719:45;;;;;;-1:-1:-1;;50719:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;50745:19;50719:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;50843:8:0;50837:22;50719:45;;-1:-1:-1;;;;50837:22:0;-1:-1:-1;;50837:22:0;;;;;;;;;;;50833:74;;50887:9;-1:-1:-1;50880:16:0;;50833:74;51010:23;;:27;51006:110;;51084:8;51094:9;51067:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;51067:37:0;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;51067:37:0;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;51067:37:0;;;51053:52;;;;;51006:110;51247:8;51257:21;:7;:19;:21::i;:::-;51230:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;51230:49:0;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;51230:49:0;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;51230::0;;;51216:64;;;50517:770;;;:::o;56127:342::-;56169:14;56186:12;:10;:12::i;:::-;-1:-1:-1;;;;;56230:16:0;;;56258:1;56230:16;;;:8;:16;;;;;;56169:29;;-1:-1:-1;56230:16:0;:30;56209:121;;;;-1:-1:-1;;;56209:121:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56341:13;56365:15;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;;;;56392:16:0;;;;;;;:8;:16;;;;;;;;;:24;;-1:-1:-1;;;;;;56392:24:0;;;;;;;;;56432:30;;;;;;;;;;;;;56392:24;;-1:-1:-1;56432:30:0;;;;;;;;;;;56127:342;;:::o;26927:173::-;-1:-1:-1;;;;;27058:25:0;;;27031:4;27058:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;26927:173::o;3333:268::-;2637:12;:10;:12::i;:::-;2627:6;;-1:-1:-1;;;;;2627:6:0;;;:22;;;2619:67;;;;;-1:-1:-1;;;2619:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2619:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;3426:22:0;;3405:107;;;;-1:-1:-1;;;3405:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3549:6;;;3528:38;;-1:-1:-1;;;;;3528:38:0;;;;3549:6;;;3528:38;;;3577:6;:17;;-1:-1:-1;;;;;;3577:17:0;-1:-1:-1;;;;;3577:17:0;;;;;;;;;;3333:268::o;55544:100::-;55623:13;;;;;-1:-1:-1;;;;;55623:13:0;;55544:100::o;31007:121::-;31064:4;31087:20;;;:11;:20;;;;;;-1:-1:-1;;;;;31087:20:0;:34;;;31007:121::o;1029:96::-;1108:10;1029:96;:::o;31489:417::-;31598:4;31639:16;31647:7;31639;:16::i;:::-;31618:107;;;;-1:-1:-1;;;31618:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31736:13;31752:16;31760:7;31752;:16::i;:::-;31736:32;;31798:5;-1:-1:-1;;;;;31787:16:0;:7;-1:-1:-1;;;;;31787:16:0;;:63;;;;31843:7;-1:-1:-1;;;;;31819:31:0;:20;31831:7;31819:11;:20::i;:::-;-1:-1:-1;;;;;31819:31:0;;31787:63;:111;;;;31866:32;31883:5;31890:7;31866:16;:32::i;:::-;31779:120;31489:417;-1:-1:-1;;;;31489:417:0:o;57591:178::-;4926:7;;;;4925:8;4917:37;;;;;-1:-1:-1;;;4917:37:0;;;;;;;;;;;;-1:-1:-1;;;4917:37:0;;;;;;;;;;;;;;;57722:40;57742:4;57748:2;57752:9;57722:19;:40::i;5615:110::-;5190:7;;;;5182:40;;;;;-1:-1:-1;;;5182:40:0;;;;;;;;;;;;-1:-1:-1;;;5182:40:0;;;;;;;;;;;;;;;5665:7;:15;;-1:-1:-1;;5665:15:0;;;5696:22;5705:12;:10;:12::i;:::-;5696:22;;;-1:-1:-1;;;;;5696:22:0;;;;;;;;;;;;;;5615:110::o;34819:90::-;34870:32;34876:16;34884:7;34876;:16::i;:::-;34894:7;34870:5;:32::i;52063:88::-;52126:18;;;;:8;;:18;;;;;:::i;:::-;;52063:88;:::o;11118:112::-;11209:14;;11118:112::o;5375:108::-;4926:7;;;;4925:8;4917:37;;;;;-1:-1:-1;;;4917:37:0;;;;;;;;;;;;-1:-1:-1;;;4917:37:0;;;;;;;;;;;;;;;5426:7;:14;;-1:-1:-1;;5426:14:0;5436:4;5426:14;;;5456:20;5463:12;:10;:12::i;41551:196::-;41614:24;41626:2;41630:7;41614:11;:24::i;:::-;41649:40;41677:2;41681:7;41649:27;:40::i;:::-;41700;41732:7;41700:31;:40::i;30470:342::-;30617:32;30631:4;30637:2;30641:7;30617:13;:32::i;:::-;30681:48;30704:4;30710:2;30714:7;30723:5;30681:22;:48::i;:::-;30660:145;;;;-1:-1:-1;;;30660:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47045:548;47104:13;47133:10;47129:51;;-1:-1:-1;47159:10:0;;;;;;;;;;;;-1:-1:-1;;;47159:10:0;;;;;;47129:51;47205:5;47190:12;47245:75;47252:9;;47245:75;;47277:8;;47307:2;47299:10;;;;47245:75;;;47330:19;47362:6;47352:17;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;47352:17:0;87:34:-1;135:17;;-1:-1;47352:17:0;-1:-1:-1;47423:5:0;;-1:-1:-1;47330:39:0;-1:-1:-1;;;47395:10:0;;47439:116;47446:9;;47439:116;;47515:2;47508:4;:9;47502:2;:16;47489:31;;47471:6;47478:7;;;;;;;47471:15;;;;;;;;;;;:49;-1:-1:-1;;;;;47471:49:0;;;;;;;;-1:-1:-1;47542:2:0;47534:10;;;;47439:116;;;-1:-1:-1;47579:6:0;47045:548;-1:-1:-1;;;;47045:548:0:o;41025:269::-;41140:38;41160:4;41166:2;41170:7;41140:19;:38::i;:::-;41189:47;41222:4;41228:7;41189:32;:47::i;:::-;41247:40;41275:2;41279:7;41247:27;:40::i;52769:241::-;52835:27;52847:5;52854:7;52835:11;:27::i;:::-;52919:19;;;;:10;:19;;;;;52913:33;;-1:-1:-1;;52913:33:0;;;;;;;;;;;:38;52909:95;;52974:19;;;;:10;:19;;;;;52967:26;;;:::i;33685:327::-;-1:-1:-1;;;;;33756:16:0;;33748:61;;;;;-1:-1:-1;;;33748:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33828:16;33836:7;33828;:16::i;:::-;33827:17;33819:58;;;;;-1:-1:-1;;;33819:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;33888:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;33888:25:0;-1:-1:-1;;;;;33888:25:0;;;;;;;;33923:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;33972;;33997:7;;-1:-1:-1;;;;;33972:33:0;;;33989:1;;33972:33;;33989:1;;33972:33;33685:327;;:::o;43038:183::-;-1:-1:-1;;;;;43151:16:0;;;;;;;:12;:16;;;;;;;;:23;;43122:26;;;:17;:26;;;;;:52;;;43184:16;;;39:1:-1;23:18;;45:23;;43184:30:0;;;;;;;;43038:183::o;43416:161::-;43519:10;:17;;43492:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;43546:24:0;;;;;;;43416:161::o;36436:1125::-;36587:4;36608:15;:2;-1:-1:-1;;;;;36608:13:0;;:15::i;:::-;36603:58;;-1:-1:-1;36646:4:0;36639:11;;36603:58;36731:12;36745:23;-1:-1:-1;;;;;36772:7:0;;-1:-1:-1;;;36896:12:0;:10;:12::i;:::-;36926:4;36948:7;36973:5;36793:199;;;;;;-1:-1:-1;;;;;36793:199:0;-1:-1:-1;;;;;36793:199:0;;;;;;-1:-1:-1;;;;;36793:199:0;-1:-1:-1;;;;;36793:199:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;36793:199:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36793:199:0;;;-1:-1:-1;;26:21;;;22:32;6:49;;36793:199:0;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;36793:199:0;;;179:29:-1;;;;160:49;;36772:230:0;;;36793:199;;36772:230;;-1:-1:-1;36772:230:0;;-1:-1:-1;25:18;-1:-1;36772:230:0;-1:-1:-1;36772:230:0;;-1:-1:-1;36772:230:0;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;36772:230:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;36730:272:0;;;;37018:7;37013:542;;37045:17;;:21;37041:376;;37210:10;37204:17;37270:15;37257:10;37253:2;37249:19;37242:44;37159:145;37342:60;;-1:-1:-1;;;37342:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37013:542;37447:13;37474:10;37463:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;37463:32:0;-1:-1:-1;;;;;;37517:26:0;-1:-1:-1;;;37517:26:0;;-1:-1:-1;37509:35:0;;-1:-1:-1;;;37509:35:0;35286:511;35442:4;-1:-1:-1;;;;;35422:24:0;:16;35430:7;35422;:16::i;:::-;-1:-1:-1;;;;;35422:24:0;;35401:112;;;;-1:-1:-1;;;35401:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35531:16:0;;35523:65;;;;-1:-1:-1;;;35523:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35599:23;35614:7;35599:14;:23::i;:::-;-1:-1:-1;;;;;35633:23:0;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;35678:21:0;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;35722:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;35722:25:0;-1:-1:-1;;;;;35722:25:0;;;;;;;;;35763:27;;35722:20;;35763:27;;;;;;;35286:511;;;:::o;44194:1140::-;-1:-1:-1;;;;;44493:18:0;;44468:22;44493:18;;;:12;:18;;;;;:25;:32;;44523:1;44493:32;:29;:32;:::i;:::-;44535:18;44556:26;;;:17;:26;;;;;;44468:57;;-1:-1:-1;44686:28:0;;;44682:323;;-1:-1:-1;;;;;44752:18:0;;44730:19;44752:18;;;:12;:18;;;;;:34;;44771:14;;44752:34;;;;;;;;;;;;;;44730:56;;44834:11;44801:12;:18;44814:4;-1:-1:-1;;;;;44801:18:0;-1:-1:-1;;;;;44801:18:0;;;;;;;;;;;;44820:10;44801:30;;;;;;;;;;;;;;;;;;;:44;;;;44917:30;;;:17;:30;;;;;:43;;;44682:323;-1:-1:-1;;;;;45091:18:0;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;45091:27:0;;;:::i;:::-;;44194:1140;;;;:::o;42022:365::-;42088:27;42100:5;42107:7;42088:11;:27::i;:::-;42126:48;42159:5;42166:7;42126:32;:48::i;:::-;42323:1;42294:26;;;:17;:26;;;;;:30;42335:45;42312:7;42335:36;:45::i;11236:178::-;11388:19;;11406:1;11388:19;;;11236:178::o;12254:632::-;12314:4;12788:20;;12620:66;12836:23;;;;;;:42;;-1:-1:-1;;12863:15:0;;;12828:51;-1:-1:-1;;12254:632:0:o;37723:171::-;37822:1;37786:24;;;:15;:24;;;;;;-1:-1:-1;;;;;37786:24:0;:38;37782:106;;37875:1;37840:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;37840:37:0;;;37723:171::o;11420:108::-;11500:14;;:21;;11519:1;11500:21;:18;:21;:::i;:::-;11483:38;;11420:108::o;7988:156::-;8046:7;8078:1;8073;:6;;8065:49;;;;;-1:-1:-1;;;8065:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8132:5:0;;;7988:156::o;34280:358::-;34387:5;-1:-1:-1;;;;;34367:25:0;:16;34375:7;34367;:16::i;:::-;-1:-1:-1;;;;;34367:25:0;;34346:109;;;;-1:-1:-1;;;34346:109:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34466:23;34481:7;34466:14;:23::i;:::-;-1:-1:-1;;;;;34500:24:0;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;34577:1;34546:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;34546:33:0;;;34595:36;34558:7;;34577:1;-1:-1:-1;;;;;34595:36:0;;;;;34577:1;;34595:36;34280:358;;:::o;45622:1064::-;45896:10;:17;45871:22;;45896:24;;45918:1;45896:24;:21;:24;:::i;:::-;45930:18;45951:24;;;:15;:24;;;;;;46319:10;:26;;45871:49;;-1:-1:-1;45951:24:0;;45871:49;;46319:26;;;;;;;;;;;;;;46297:48;;46381:11;46356:10;46367;46356:22;;;;;;;;;;;;;;;;;;;:36;;;;46460:28;;;:15;:28;;;;;;:41;;;46622:10;:19;;;;;-1:-1:-1;;46622:19:0;;;:::i;:::-;-1:-1:-1;;;46678:1:0;46651:24;;;-1:-1:-1;46651:15:0;:24;;;;;:28;45622:1064::o;54940:2831::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;54940:2831:0;;;-1:-1:-1;54940:2831:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "language": "Solidity", "natspec": {"methods": {"approve(address,uint256)": {"details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.", "params": {"to": "address to be approved for the given token ID", "tokenId": "uint256 ID of the token to be approved"}}, "balanceOf(address)": {"details": "Gets the balance of the specified address.", "params": {"owner": "address to query the balance of"}, "return": "uint256 representing the amount owned by the passed address"}, "baseURI()": {"details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.     * _Available since v2.5.0._"}, "burn(uint256)": {"details": "Burns a specific wrapped punk"}, "constructor": {"details": "Initializes the contract settings"}, "getApproved(uint256)": {"details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.", "params": {"tokenId": "uint256 ID of the token to query the approval of"}, "return": "address currently approved for the given token ID"}, "isApprovedForAll(address,address)": {"details": "Tells whether an operator is approved by a given owner.", "params": {"operator": "operator address which you want to query the approval of", "owner": "owner address which you want to query the approval of"}, "return": "bool whether the given operator is approved by the given owner"}, "mint(uint256)": {"details": "Mints a wrapped punk"}, "name()": {"details": "Gets the token name.", "return": "string representing the token name"}, "owner()": {"details": "Returns the address of the current owner."}, "ownerOf(uint256)": {"details": "Gets the owner of the specified token ID.", "params": {"tokenId": "uint256 ID of the token to query the owner of"}, "return": "address currently marked as the owner of the given token ID"}, "pause()": {"details": "Triggers smart contract to stopped state"}, "paused()": {"details": "Returns true if the contract is paused, and false otherwise."}, "proxyInfo(address)": {"details": "Gets proxy address"}, "punkContract()": {"details": "Gets address of cryptopunk smart contract"}, "registerProxy()": {"details": "Registers proxy"}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "safeTransferFrom(address,address,uint256)": {"details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator", "params": {"from": "current owner of the token", "to": "address to receive the ownership of the given token ID", "tokenId": "uint256 ID of the token to be transferred"}}, "safeTransferFrom(address,address,uint256,bytes)": {"details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator", "params": {"_data": "bytes data to send along with a safe transfer check", "from": "current owner of the token", "to": "address to receive the ownership of the given token ID", "tokenId": "uint256 ID of the token to be transferred"}}, "setApprovalForAll(address,bool)": {"details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.", "params": {"approved": "representing the status of the approval to be set", "to": "operator address to set the approval"}}, "setBaseURI(string)": {"details": "Sets the base URI for all token"}, "supportsInterface(bytes4)": {"details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."}, "symbol()": {"details": "Gets the token symbol.", "return": "string representing the token symbol"}, "tokenByIndex(uint256)": {"details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.", "params": {"index": "uint256 representing the index to be accessed of the tokens list"}, "return": "uint256 token ID at the given index of the tokens list"}, "tokenOfOwnerByIndex(address,uint256)": {"details": "Gets the token ID at a given index of the tokens list of the requested owner.", "params": {"index": "uint256 representing the index to be accessed of the requested tokens list", "owner": "address owning the tokens list to be accessed"}, "return": "uint256 token ID at the given index of the tokens list owned by the requested address"}, "tokenURI(uint256)": {"details": "Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |===     * Requirements:     * - `tokenId` must exist."}, "totalSupply()": {"details": "Gets the total amount of tokens stored by the contract.", "return": "uint256 representing the total amount of tokens"}, "transferFrom(address,address,uint256)": {"details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.", "params": {"from": "current owner of the token", "to": "address to receive the ownership of the given token ID", "tokenId": "uint256 ID of the token to be transferred"}}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}, "unpause()": {"details": "Returns smart contract to normal state"}}}, "offset": [54940, 57771], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C0360EB GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDDD81F82 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDDD81F82 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0xF97E48EE EQ PUSH2 0x6B0 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xA9C7B2C8 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x637 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x500 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E0 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x495 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3AD JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x343 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x28C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x251 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x239 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x27E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x902 JUMP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x95E JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xA3F JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xBDC SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FB PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x217 PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x217 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xEDE JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x110A JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1128 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x2F1 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x152C JUMP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x155A JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x767 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x767 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP3 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27C2 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DF DUP3 PUSH2 0xC49 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2866 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x844 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x865 JUMPI POP PUSH2 0x865 DUP2 PUSH2 0x860 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x270B PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x913 PUSH2 0x90D PUSH2 0x1683 JUMP JUMPDEST DUP3 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2887 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x959 DUP4 DUP4 DUP4 PUSH2 0x172B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 DUP4 PUSH2 0xD04 JUMP JUMPDEST DUP3 LT PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2638 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x9CA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9E5 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA35 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xA3D PUSH2 0x1781 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x959 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1128 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAAF PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP PUSH2 0xABB DUP2 DUP4 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x260B PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAFF DUP3 PUSH2 0x181F JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x22DCA8BB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD PUSH2 0x100 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH4 0x8B72A2EC SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB80 PUSH2 0x8FC JUMP JUMPDEST DUP3 LT PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x28B8 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBCA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xC34 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC3D DUP2 PUSH2 0x1831 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x276D PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x767 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2743 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xC9D SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0xD74 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xDC4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE16 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE66 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xA3D PUSH2 0x184C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x767 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x767 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF29 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF33 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xE SLOAD DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP6 SWAP7 POP SWAP1 SWAP4 AND SWAP4 DUP5 SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP4 ADD SWAP5 SWAP4 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x101F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50756E6B577261707065723A207472616E73666572206661696C000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x959 DUP3 DUP5 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1033 PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x109C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP8 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x1139 PUSH2 0x1133 PUSH2 0x1683 JUMP JUMPDEST DUP4 PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x1174 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2887 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1180 DUP5 DUP5 DUP5 DUP5 PUSH2 0x18EA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1191 DUP3 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2837 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1261 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1236 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1261 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1244 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP PUSH1 0xC SLOAD SWAP4 SWAP5 POP POP POP POP PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0x128A JUMPI SWAP1 POP PUSH2 0x6D6 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x135B JUMPI PUSH1 0xC DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x12F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x12F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12DE JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x131E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1366 DUP5 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x13C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x13C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13B0 JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x13F0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1437 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP AND ISZERO PUSH2 0x1491 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2796 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x149F SWAP1 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x14BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP3 SWAP4 POP PUSH32 0x3623F8BD4DA9524CFAA08C81B8194F759CA625E8D761F4CC2CEA23E63D3F4B12 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1562 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2695 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1692 DUP3 PUSH2 0x1666 JUMP JUMPDEST PUSH2 0x16CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26DF PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16D8 DUP4 PUSH2 0xC49 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1713 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1708 DUP5 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1723 JUMPI POP PUSH2 0x1723 DUP2 DUP6 PUSH2 0x152C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1776 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x959 DUP4 DUP4 DUP4 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND PUSH2 0x17CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1802 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xC3D PUSH2 0x182B DUP3 PUSH2 0xC49 JUMP JUMPDEST DUP3 PUSH2 0x1A1F JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1844 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x232B JUMP JUMPDEST POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1897 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1802 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x18D7 DUP3 DUP3 PUSH2 0x1A67 JUMP JUMPDEST PUSH2 0x18E1 DUP3 DUP3 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0x1844 DUP2 PUSH2 0x1BD6 JUMP JUMPDEST PUSH2 0x18F5 DUP5 DUP5 DUP5 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x1901 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x1180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2663 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1961 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x6D6 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1979 JUMPI PUSH1 0x1 ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19A6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP DUP6 SWAP4 POP SWAP1 POP PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP4 ISZERO PUSH2 0x19F7 JUMPI PUSH1 0xA DUP5 MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x19D5 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP5 DIV SWAP4 POP PUSH2 0x19B2 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0B DUP4 DUP4 DUP4 PUSH2 0x1E55 JUMP JUMPDEST PUSH2 0x1A15 DUP4 DUP3 PUSH2 0x1F99 JUMP JUMPDEST PUSH2 0x959 DUP3 DUP3 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0x1A29 DUP3 DUP3 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV ISZERO PUSH2 0x1844 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1844 SWAP2 PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1AC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1ACB DUP2 PUSH2 0x1666 JUMP JUMPDEST ISZERO PUSH2 0x1B1D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x1B5C SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP7 DUP7 MSTORE PUSH1 0x7 DUP5 MSTORE SWAP2 DUP6 KECCAK256 DUP3 SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP1 SWAP2 KECCAK256 ADD SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x1C3A JUMPI POP PUSH1 0x1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL PUSH2 0x1C58 PUSH2 0x1683 JUMP JUMPDEST DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CD1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CB9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1CFE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP11 AND SWAP10 SWAP1 SWAP10 OR DUP10 MSTORE MLOAD DUP2 MLOAD SWAP2 SWAP9 SWAP1 SWAP8 POP DUP8 SWAP7 POP SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 SWAP1 POP DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1D66 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1D47 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DC8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1E1E JUMPI DUP1 MLOAD ISZERO PUSH2 0x1DE7 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2663 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP4 POP PUSH2 0x1723 SWAP3 POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E68 DUP3 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1EAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x280E PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26BB PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFB DUP2 PUSH2 0x20FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1F1C SWAP1 PUSH2 0x2137 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1F3D SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1FC3 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x214E AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x205E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x2000 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x203E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x2087 SWAP1 PUSH1 0x0 NOT DUP4 ADD PUSH2 0x23ED JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2098 DUP3 DUP3 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x20A2 DUP3 DUP3 PUSH2 0x1F99 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1844 DUP2 PUSH2 0x2282 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x1723 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC3D JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH2 0x214A SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x214E AND JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21BE DUP3 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2203 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x28E4 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x220C DUP2 PUSH2 0x20FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x222D SWAP1 PUSH2 0x2137 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2299 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x214E AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x22BB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x22D6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH2 0x2309 SWAP1 PUSH1 0x0 NOT DUP4 ADD PUSH2 0x23ED JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE POP PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x1E3 DUP1 PUSH2 0x2428 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x236C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2399 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2399 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2399 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x237E JUMP JUMPDEST POP PUSH2 0x23A5 SWAP3 SWAP2 POP PUSH2 0x240D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x23CF JUMPI POP PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x959 SWAP2 DUP2 ADD SWAP1 DUP4 ADD JUMPDEST PUSH2 0x76F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23A5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2413 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1B1 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x70 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B JUMPI POP PUSH1 0x0 PUSH2 0x176 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x22DCA8BB PUSH1 0xE2 SHL OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD SWAP4 DUP9 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x108 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x22 RETURN 0xB6 CREATE2 DUP4 PUSH18 0x8AEE370361E2607BA8F308F635E33804C07A DUP10 BYTE 0xDD BALANCE EXTCODECOPY DUP4 0xA6 SLOAD PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN POP PUSH22 0x6E6B577261707065723A2063616C6C6572206973206E PUSH16 0x74206F776E6572206E6F722061707072 PUSH16 0x766564455243373231456E756D657261 PUSH3 0x6C653A KECCAK256 PUSH16 0x776E657220696E646578206F7574206F PUSH7 0x20626F756E6473 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243373231 MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734552433732313A207472616E73666572 KECCAK256 PUSH21 0x6F20746865207A65726F2061646472657373455243 CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH16 0x70657261746F7220717565727920666F PUSH19 0x206E6F6E6578697374656E7420746F6B656E45 MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652063616C6C6572206973206E6F74206F PUSH24 0x6E6572206E6F7220617070726F76656420666F7220616C6C GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x6573734552433732313A206F776E6572207175 PUSH6 0x727920666F72 KECCAK256 PUSH15 0x6F6E6578697374656E7420746F6B65 PUSH15 0x50756E6B577261707065723A206361 PUSH13 0x6C657220686173207265676973 PUSH21 0x65726564207468652070726F78794552433732313A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76656420717565727920666F72206E6F6E65 PUSH25 0x697374656E7420746F6B656E4F776E61626C653A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E65724552433732 BALANCE GASPRICE KECCAK256 PUSH21 0x72616E73666572206F6620746F6B656E2074686174 KECCAK256 PUSH10 0x73206E6F74206F776E45 MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE 0x4D PUSH6 0x746164617461 GASPRICE KECCAK256 SSTORE MSTORE 0x49 KECCAK256 PUSH18 0x7565727920666F72206E6F6E657869737465 PUSH15 0x7420746F6B656E4552433732313A20 PUSH2 0x7070 PUSH19 0x6F76616C20746F2063757272656E74206F776E PUSH6 0x724552433732 BALANCE GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433732 BALANCE GASLIMIT PUSH15 0x756D657261626C653A20676C6F6261 PUSH13 0x20696E646578206F7574206F66 KECCAK256 PUSH3 0x6F756E PUSH5 0x7345524337 ORIGIN BALANCE GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH16 0x6620746F6B656E207468617420697320 PUSH15 0x6F74206F776EA265627A7A72315820 0xCD 0xB6 0xB5 0xDC EXP PUSH31 0x8C6B0906B8E607A84F2752140C1A0197CFB3D84BA511635323BA64736F6C63 NUMBER STOP SDIV GT STOP ORIGIN ", "pcMap": {"0": {"offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x80"}, "2": {"fn": null, "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x40"}, "4": {"fn": null, "offset": [54940, 57771], "op": "MSTORE", "path": "0"}, "5": {"fn": null, "offset": [54940, 57771], "op": "CALLVALUE", "path": "0"}, "6": {"op": "DUP1"}, "7": {"op": "ISZERO"}, "8": {"op": "PUSH2", "value": "0x10"}, "11": {"op": "JUMPI"}, "12": {"op": "PUSH1", "value": "0x0"}, "14": {"op": "DUP1"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [54940, 57771], "op": "REVERT", "path": "0"}, "16": {"op": "JUMPDEST"}, "17": {"offset": [54940, 57771], "op": "POP", "path": "0"}, "18": {"fn": null, "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x4"}, "20": {"fn": null, "offset": [54940, 57771], "op": "CALLDATASIZE", "path": "0"}, "21": {"fn": null, "offset": [54940, 57771], "op": "LT", "path": "0"}, "22": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1CF"}, "25": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "26": {"fn": null, "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "28": {"fn": null, "offset": [54940, 57771], "op": "CALLDATALOAD", "path": "0"}, "29": {"fn": null, "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0xE0"}, "31": {"fn": null, "offset": [54940, 57771], "op": "SHR", "path": "0"}, "32": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "33": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x6C0360EB"}, "38": {"fn": null, "offset": [54940, 57771], "op": "GT", "path": "0"}, "39": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x104"}, "42": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "43": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "44": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xA22CB465"}, "49": {"fn": null, "offset": [54940, 57771], "op": "GT", "path": "0"}, "50": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0xA2"}, "53": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "54": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "55": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xDDD81F82"}, "60": {"fn": null, "offset": [54940, 57771], "op": "GT", "path": "0"}, "61": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x71"}, "64": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "65": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "66": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xDDD81F82"}, "71": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "72": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x654"}, "75": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "76": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "77": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xE985E9C5"}, "82": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "83": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x65C"}, "86": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "87": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "88": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xF2FDE38B"}, "93": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "94": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x68A"}, "97": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "98": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "99": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xF97E48EE"}, "104": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "105": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x6B0"}, "108": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "109": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1CF"}, "112": {"fn": null, "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "113": {"fn": null, "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "114": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "115": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xA22CB465"}, "120": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "121": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x51D"}, "124": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "125": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "126": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xA9C7B2C8"}, "131": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "132": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x54B"}, "135": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "136": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "137": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xB88D4FDE"}, "142": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "143": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x571"}, "146": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "147": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "148": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xC87B56DD"}, "153": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "154": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x637"}, "157": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "158": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1CF"}, "161": {"fn": null, "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "162": {"fn": null, "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "163": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "164": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x8456CB59"}, "169": {"fn": null, "offset": [54940, 57771], "op": "GT", "path": "0"}, "170": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0xDE"}, "173": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "174": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "175": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x8456CB59"}, "180": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "181": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x4E8"}, "184": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "185": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "186": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x8DA5CB5B"}, "191": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "192": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x4F0"}, "195": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "196": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "197": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x95D89B41"}, "202": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "203": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x4F8"}, "206": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "207": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "208": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0xA0712D68"}, "213": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "214": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x500"}, "217": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "218": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1CF"}, "221": {"fn": null, "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "222": {"fn": null, "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "223": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "224": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x6C0360EB"}, "229": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "230": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x4B2"}, "233": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "234": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "235": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x70A08231"}, "240": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "241": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x4BA"}, "244": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "245": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "246": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x715018A6"}, "251": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "252": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x4E0"}, "255": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "256": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1CF"}, "259": {"fn": null, "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "260": {"fn": null, "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "261": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "262": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x3F4BA83A"}, "267": {"fn": null, "offset": [54940, 57771], "op": "GT", "path": "0"}, "268": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x171"}, "271": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "272": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "273": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x4F6CCCE7"}, "278": {"fn": null, "offset": [54940, 57771], "op": "GT", "path": "0"}, "279": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x14B"}, "282": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "283": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "284": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x4F6CCCE7"}, "289": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "290": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x3CA"}, "293": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "294": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "295": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x55F804B3"}, "300": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "301": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x3E7"}, "304": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "305": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "306": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x5C975ABB"}, "311": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "312": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x48D"}, "315": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "316": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "317": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x6352211E"}, "322": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "323": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x495"}, "326": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "327": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1CF"}, "330": {"fn": null, "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "331": {"fn": null, "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "332": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "333": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x3F4BA83A"}, "338": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "339": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x36F"}, "342": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "343": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "344": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x42842E0E"}, "349": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "350": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x377"}, "353": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "354": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "355": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x42966C68"}, "360": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "361": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x3AD"}, "364": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "365": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1CF"}, "368": {"fn": null, "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "369": {"fn": null, "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "370": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "371": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x95EA7B3"}, "376": {"fn": null, "offset": [54940, 57771], "op": "GT", "path": "0"}, "377": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1AD"}, "380": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "381": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "382": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x95EA7B3"}, "387": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "388": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x2C5"}, "391": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "392": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "393": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x18160DDD"}, "398": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "399": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x2F3"}, "402": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "403": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "404": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x23B872DD"}, "409": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "410": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x30D"}, "413": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "414": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "415": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x2F745C59"}, "420": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "421": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x343"}, "424": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "425": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1CF"}, "428": {"fn": null, "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "429": {"fn": null, "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "430": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "431": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x1FFC9A7"}, "436": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "437": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1D4"}, "440": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "441": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "442": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x6FDDE03"}, "447": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "448": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x20F"}, "451": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "452": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "453": {"fn": null, "offset": [54940, 57771], "op": "PUSH4", "path": "0", "value": "0x81812FC"}, "458": {"fn": null, "offset": [54940, 57771], "op": "EQ", "path": "0"}, "459": {"fn": null, "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x28C"}, "462": {"fn": null, "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "463": {"fn": null, "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "464": {"fn": null, "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "466": {"fn": null, "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "467": {"first_revert": true, "fn": null, "offset": [54940, 57771], "op": "REVERT", "path": "0"}, "468": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "JUMPDEST", "path": "0"}, "469": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "PUSH2", "path": "0", "value": "0x1FB"}, "472": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "PUSH1", "path": "0", "value": "0x4"}, "474": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "DUP1", "path": "0"}, "475": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "CALLDATASIZE", "path": "0"}, "476": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "SUB", "path": "0"}, "477": {"op": "PUSH1", "value": "0x20"}, "479": {"op": "DUP2"}, "480": {"op": "LT"}, "481": {"op": "ISZERO"}, "482": {"op": "PUSH2", "value": "0x1EA"}, "485": {"op": "JUMPI"}, "486": {"op": "PUSH1", "value": "0x0"}, "488": {"op": "DUP1"}, "489": {"op": "REVERT"}, "490": {"op": "JUMPDEST"}, "491": {"op": "POP"}, "492": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "CALLDATALOAD", "path": "0"}, "493": {"op": "PUSH1", "value": "0x1"}, "495": {"op": "PUSH1", "value": "0x1"}, "497": {"op": "PUSH1", "value": "0xE0"}, "499": {"op": "SHL"}, "500": {"op": "SUB"}, "501": {"op": "NOT"}, "502": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "AND", "path": "0"}, "503": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "PUSH2", "path": "0", "value": "0x6B8"}, "506": {"fn": "ERC165.supportsInterface", "jump": "i", "offset": [20903, 21034], "op": "JUMP", "path": "0"}, "507": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "JUMPDEST", "path": "0"}, "508": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "PUSH1", "path": "0", "value": "0x40"}, "510": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "DUP1", "path": "0"}, "511": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "MLOAD", "path": "0"}, "512": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "SWAP2", "path": "0"}, "513": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "ISZERO", "path": "0"}, "514": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "ISZERO", "path": "0"}, "515": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "DUP3", "path": "0"}, "516": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "MSTORE", "path": "0"}, "517": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "MLOAD", "path": "0"}, "518": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "SWAP1", "path": "0"}, "519": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "DUP2", "path": "0"}, "520": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "SWAP1", "path": "0"}, "521": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "SUB", "path": "0"}, "522": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "PUSH1", "path": "0", "value": "0x20"}, "524": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "ADD", "path": "0"}, "525": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "SWAP1", "path": "0"}, "526": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "RETURN", "path": "0"}, "527": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "JUMPDEST", "path": "0"}, "528": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH2", "path": "0", "value": "0x217"}, "531": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH2", "path": "0", "value": "0x6DB"}, "534": {"fn": "ERC721Metadata.name", "jump": "i", "offset": [49399, 49480], "op": "JUMP", "path": "0"}, "535": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "JUMPDEST", "path": "0"}, "536": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH1", "path": "0", "value": "0x40"}, "538": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP1", "path": "0"}, "539": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "MLOAD", "path": "0"}, "540": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH1", "path": "0", "value": "0x20"}, "542": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP1", "path": "0"}, "543": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP3", "path": "0"}, "544": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "MSTORE", "path": "0"}, "545": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP4", "path": "0"}, "546": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "MLOAD", "path": "0"}, "547": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP2", "path": "0"}, "548": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP4", "path": "0"}, "549": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "ADD", "path": "0"}, "550": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "MSTORE", "path": "0"}, "551": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP4", "path": "0"}, "552": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "MLOAD", "path": "0"}, "553": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP2", "path": "0"}, "554": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP3", "path": "0"}, "555": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP4", "path": "0"}, "556": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP3", "path": "0"}, "557": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP1", "path": "0"}, "558": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP4", "path": "0"}, "559": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "ADD", "path": "0"}, "560": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP2", "path": "0"}, "561": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP6", "path": "0"}, "562": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "ADD", "path": "0"}, "563": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP1", "path": "0"}, "564": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP1", "path": "0"}, "565": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP4", "path": "0"}, "566": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP4", "path": "0"}, "567": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH1", "path": "0", "value": "0x0"}, "569": {"op": "JUMPDEST"}, "570": {"op": "DUP4"}, "571": {"op": "DUP2"}, "572": {"op": "LT"}, "573": {"op": "ISZERO"}, "574": {"op": "PUSH2", "value": "0x251"}, "577": {"op": "JUMPI"}, "578": {"op": "DUP2"}, "579": {"op": "DUP2"}, "580": {"op": "ADD"}, "581": {"op": "MLOAD"}, "582": {"op": "DUP4"}, "583": {"op": "DUP3"}, "584": {"op": "ADD"}, "585": {"op": "MSTORE"}, "586": {"op": "PUSH1", "value": "0x20"}, "588": {"op": "ADD"}, "589": {"op": "PUSH2", "value": "0x239"}, "592": {"op": "JUMP"}, "593": {"op": "JUMPDEST"}, "594": {"op": "POP"}, "595": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "596": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "597": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "598": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP1", "path": "0"}, "599": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "600": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP1", "path": "0"}, "601": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP2", "path": "0"}, "602": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "ADD", "path": "0"}, "603": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP1", "path": "0"}, "604": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH1", "path": "0", "value": "0x1F"}, "606": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "AND", "path": "0"}, "607": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP1", "path": "0"}, "608": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "ISZERO", "path": "0"}, "609": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH2", "path": "0", "value": "0x27E"}, "612": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "JUMPI", "path": "0"}, "613": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP1", "path": "0"}, "614": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP3", "path": "0"}, "615": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SUB", "path": "0"}, "616": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP1", "path": "0"}, "617": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "MLOAD", "path": "0"}, "618": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH1", "path": "0", "value": "0x1"}, "620": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP4", "path": "0"}, "621": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH1", "path": "0", "value": "0x20"}, "623": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SUB", "path": "0"}, "624": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH2", "path": "0", "value": "0x100"}, "627": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "EXP", "path": "0"}, "628": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SUB", "path": "0"}, "629": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "NOT", "path": "0"}, "630": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "AND", "path": "0"}, "631": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP2", "path": "0"}, "632": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "MSTORE", "path": "0"}, "633": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH1", "path": "0", "value": "0x20"}, "635": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "ADD", "path": "0"}, "636": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP2", "path": "0"}, "637": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "638": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "JUMPDEST", "path": "0"}, "639": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "640": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP3", "path": "0"}, "641": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "642": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "643": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "POP", "path": "0"}, "644": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "PUSH1", "path": "0", "value": "0x40"}, "646": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "MLOAD", "path": "0"}, "647": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "DUP1", "path": "0"}, "648": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP2", "path": "0"}, "649": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SUB", "path": "0"}, "650": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP1", "path": "0"}, "651": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "RETURN", "path": "0"}, "652": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "JUMPDEST", "path": "0"}, "653": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "656": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "PUSH1", "path": "0", "value": "0x4"}, "658": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "DUP1", "path": "0"}, "659": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "CALLDATASIZE", "path": "0"}, "660": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "SUB", "path": "0"}, "661": {"op": "PUSH1", "value": "0x20"}, "663": {"op": "DUP2"}, "664": {"op": "LT"}, "665": {"op": "ISZERO"}, "666": {"op": "PUSH2", "value": "0x2A2"}, "669": {"op": "JUMPI"}, "670": {"op": "PUSH1", "value": "0x0"}, "672": {"op": "DUP1"}, "673": {"op": "REVERT"}, "674": {"op": "JUMPDEST"}, "675": {"op": "POP"}, "676": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "CALLDATALOAD", "path": "0"}, "677": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "PUSH2", "path": "0", "value": "0x772"}, "680": {"fn": "ERC721.getApproved", "jump": "i", "offset": [25794, 26028], "op": "JUMP", "path": "0"}, "681": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "JUMPDEST", "path": "0"}, "682": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "PUSH1", "path": "0", "value": "0x40"}, "684": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "DUP1", "path": "0"}, "685": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "MLOAD", "path": "0"}, "686": {"op": "PUSH1", "value": "0x1"}, "688": {"op": "PUSH1", "value": "0x1"}, "690": {"op": "PUSH1", "value": "0xA0"}, "692": {"op": "SHL"}, "693": {"op": "SUB"}, "694": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "SWAP1", "path": "0"}, "695": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "SWAP3", "path": "0"}, "696": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "AND", "path": "0"}, "697": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "DUP3", "path": "0"}, "698": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "MSTORE", "path": "0"}, "699": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "MLOAD", "path": "0"}, "700": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "SWAP1", "path": "0"}, "701": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "DUP2", "path": "0"}, "702": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "SWAP1", "path": "0"}, "703": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "SUB", "path": "0"}, "704": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "PUSH1", "path": "0", "value": "0x20"}, "706": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "ADD", "path": "0"}, "707": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "SWAP1", "path": "0"}, "708": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "RETURN", "path": "0"}, "709": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "JUMPDEST", "path": "0"}, "710": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "713": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "PUSH1", "path": "0", "value": "0x4"}, "715": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "DUP1", "path": "0"}, "716": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "CALLDATASIZE", "path": "0"}, "717": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "SUB", "path": "0"}, "718": {"op": "PUSH1", "value": "0x40"}, "720": {"op": "DUP2"}, "721": {"op": "LT"}, "722": {"op": "ISZERO"}, "723": {"op": "PUSH2", "value": "0x2DB"}, "726": {"op": "JUMPI"}, "727": {"op": "PUSH1", "value": "0x0"}, "729": {"op": "DUP1"}, "730": {"op": "REVERT"}, "731": {"op": "JUMPDEST"}, "732": {"op": "POP"}, "733": {"op": "PUSH1", "value": "0x1"}, "735": {"op": "PUSH1", "value": "0x1"}, "737": {"op": "PUSH1", "value": "0xA0"}, "739": {"op": "SHL"}, "740": {"op": "SUB"}, "741": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "DUP2", "path": "0"}, "742": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "CALLDATALOAD", "path": "0"}, "743": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "AND", "path": "0"}, "744": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "SWAP1", "path": "0"}, "745": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "PUSH1", "path": "0", "value": "0x20"}, "747": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "ADD", "path": "0"}, "748": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "CALLDATALOAD", "path": "0"}, "749": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "PUSH2", "path": "0", "value": "0x7D4"}, "752": {"fn": "ERC721.approve", "jump": "i", "offset": [25079, 25509], "op": "JUMP", "path": "0"}, "753": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "JUMPDEST", "path": "0"}, "754": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "STOP", "path": "0"}, "755": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "JUMPDEST", "path": "0"}, "756": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "PUSH2", "path": "0", "value": "0x2FB"}, "759": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "PUSH2", "path": "0", "value": "0x8FC"}, "762": {"fn": "ERC721Enumerable.totalSupply", "jump": "i", "offset": [39987, 40081], "op": "JUMP", "path": "0"}, "763": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "JUMPDEST", "path": "0"}, "764": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "PUSH1", "path": "0", "value": "0x40"}, "766": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "DUP1", "path": "0"}, "767": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "MLOAD", "path": "0"}, "768": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "SWAP2", "path": "0"}, "769": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "DUP3", "path": "0"}, "770": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "MSTORE", "path": "0"}, "771": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "MLOAD", "path": "0"}, "772": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "SWAP1", "path": "0"}, "773": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "DUP2", "path": "0"}, "774": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "SWAP1", "path": "0"}, "775": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "SUB", "path": "0"}, "776": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "PUSH1", "path": "0", "value": "0x20"}, "778": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "ADD", "path": "0"}, "779": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "SWAP1", "path": "0"}, "780": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "RETURN", "path": "0"}, "781": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "JUMPDEST", "path": "0"}, "782": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "785": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "PUSH1", "path": "0", "value": "0x4"}, "787": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "DUP1", "path": "0"}, "788": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "CALLDATASIZE", "path": "0"}, "789": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "SUB", "path": "0"}, "790": {"op": "PUSH1", "value": "0x60"}, "792": {"op": "DUP2"}, "793": {"op": "LT"}, "794": {"op": "ISZERO"}, "795": {"op": "PUSH2", "value": "0x323"}, "798": {"op": "JUMPI"}, "799": {"op": "PUSH1", "value": "0x0"}, "801": {"op": "DUP1"}, "802": {"op": "REVERT"}, "803": {"op": "JUMPDEST"}, "804": {"op": "POP"}, "805": {"op": "PUSH1", "value": "0x1"}, "807": {"op": "PUSH1", "value": "0x1"}, "809": {"op": "PUSH1", "value": "0xA0"}, "811": {"op": "SHL"}, "812": {"op": "SUB"}, "813": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "DUP2", "path": "0"}, "814": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "CALLDATALOAD", "path": "0"}, "815": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "DUP2", "path": "0"}, "816": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "AND", "path": "0"}, "817": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "SWAP2", "path": "0"}, "818": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "PUSH1", "path": "0", "value": "0x20"}, "820": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "DUP2", "path": "0"}, "821": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "ADD", "path": "0"}, "822": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "CALLDATALOAD", "path": "0"}, "823": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "SWAP1", "path": "0"}, "824": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "SWAP2", "path": "0"}, "825": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "AND", "path": "0"}, "826": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "SWAP1", "path": "0"}, "827": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "PUSH1", "path": "0", "value": "0x40"}, "829": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "ADD", "path": "0"}, "830": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "CALLDATALOAD", "path": "0"}, "831": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "PUSH2", "path": "0", "value": "0x902"}, "834": {"fn": "ERC721.transferFrom", "jump": "i", "offset": [27537, 27889], "op": "JUMP", "path": "0"}, "835": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "JUMPDEST", "path": "0"}, "836": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "PUSH2", "path": "0", "value": "0x2FB"}, "839": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "PUSH1", "path": "0", "value": "0x4"}, "841": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "DUP1", "path": "0"}, "842": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "CALLDATASIZE", "path": "0"}, "843": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "SUB", "path": "0"}, "844": {"op": "PUSH1", "value": "0x40"}, "846": {"op": "DUP2"}, "847": {"op": "LT"}, "848": {"op": "ISZERO"}, "849": {"op": "PUSH2", "value": "0x359"}, "852": {"op": "JUMPI"}, "853": {"op": "PUSH1", "value": "0x0"}, "855": {"op": "DUP1"}, "856": {"op": "REVERT"}, "857": {"op": "JUMPDEST"}, "858": {"op": "POP"}, "859": {"op": "PUSH1", "value": "0x1"}, "861": {"op": "PUSH1", "value": "0x1"}, "863": {"op": "PUSH1", "value": "0xA0"}, "865": {"op": "SHL"}, "866": {"op": "SUB"}, "867": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "DUP2", "path": "0"}, "868": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "CALLDATALOAD", "path": "0"}, "869": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "AND", "path": "0"}, "870": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "SWAP1", "path": "0"}, "871": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "PUSH1", "path": "0", "value": "0x20"}, "873": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "ADD", "path": "0"}, "874": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "CALLDATALOAD", "path": "0"}, "875": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "PUSH2", "path": "0", "value": "0x95E"}, "878": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "jump": "i", "offset": [39542, 39834], "op": "JUMP", "path": "0"}, "879": {"fn": "WrappedPunk.unpause", "offset": [56014, 56077], "op": "JUMPDEST", "path": "0"}, "880": {"fn": "WrappedPunk.unpause", "offset": [56014, 56077], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "883": {"fn": "WrappedPunk.unpause", "offset": [56014, 56077], "op": "PUSH2", "path": "0", "value": "0x9DD"}, "886": {"fn": "WrappedPunk.unpause", "jump": "i", "offset": [56014, 56077], "op": "JUMP", "path": "0"}, "887": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "JUMPDEST", "path": "0"}, "888": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "891": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "PUSH1", "path": "0", "value": "0x4"}, "893": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "DUP1", "path": "0"}, "894": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "CALLDATASIZE", "path": "0"}, "895": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "SUB", "path": "0"}, "896": {"op": "PUSH1", "value": "0x60"}, "898": {"op": "DUP2"}, "899": {"op": "LT"}, "900": {"op": "ISZERO"}, "901": {"op": "PUSH2", "value": "0x38D"}, "904": {"op": "JUMPI"}, "905": {"op": "PUSH1", "value": "0x0"}, "907": {"op": "DUP1"}, "908": {"op": "REVERT"}, "909": {"op": "JUMPDEST"}, "910": {"op": "POP"}, "911": {"op": "PUSH1", "value": "0x1"}, "913": {"op": "PUSH1", "value": "0x1"}, "915": {"op": "PUSH1", "value": "0xA0"}, "917": {"op": "SHL"}, "918": {"op": "SUB"}, "919": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "DUP2", "path": "0"}, "920": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "CALLDATALOAD", "path": "0"}, "921": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "DUP2", "path": "0"}, "922": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "AND", "path": "0"}, "923": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "SWAP2", "path": "0"}, "924": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "PUSH1", "path": "0", "value": "0x20"}, "926": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "DUP2", "path": "0"}, "927": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "ADD", "path": "0"}, "928": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "CALLDATALOAD", "path": "0"}, "929": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "SWAP1", "path": "0"}, "930": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "SWAP2", "path": "0"}, "931": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "AND", "path": "0"}, "932": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "SWAP1", "path": "0"}, "933": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "PUSH1", "path": "0", "value": "0x40"}, "935": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "ADD", "path": "0"}, "936": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "CALLDATALOAD", "path": "0"}, "937": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "PUSH2", "path": "0", "value": "0xA3F"}, "940": {"fn": "ERC721.safeTransferFrom", "jump": "i", "offset": [28538, 28700], "op": "JUMP", "path": "0"}, "941": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "JUMPDEST", "path": "0"}, "942": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "945": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "PUSH1", "path": "0", "value": "0x4"}, "947": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "DUP1", "path": "0"}, "948": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "CALLDATASIZE", "path": "0"}, "949": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "SUB", "path": "0"}, "950": {"op": "PUSH1", "value": "0x20"}, "952": {"op": "DUP2"}, "953": {"op": "LT"}, "954": {"op": "ISZERO"}, "955": {"op": "PUSH2", "value": "0x3C3"}, "958": {"op": "JUMPI"}, "959": {"op": "PUSH1", "value": "0x0"}, "961": {"op": "DUP1"}, "962": {"op": "REVERT"}, "963": {"op": "JUMPDEST"}, "964": {"op": "POP"}, "965": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "CALLDATALOAD", "path": "0"}, "966": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "PUSH2", "path": "0", "value": "0xA5A"}, "969": {"fn": "WrappedPunk.burn", "jump": "i", "offset": [57066, 57476], "op": "JUMP", "path": "0"}, "970": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "JUMPDEST", "path": "0"}, "971": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "PUSH2", "path": "0", "value": "0x2FB"}, "974": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "PUSH1", "path": "0", "value": "0x4"}, "976": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "DUP1", "path": "0"}, "977": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "CALLDATASIZE", "path": "0"}, "978": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "SUB", "path": "0"}, "979": {"op": "PUSH1", "value": "0x20"}, "981": {"op": "DUP2"}, "982": {"op": "LT"}, "983": {"op": "ISZERO"}, "984": {"op": "PUSH2", "value": "0x3E0"}, "987": {"op": "JUMPI"}, "988": {"op": "PUSH1", "value": "0x0"}, "990": {"op": "DUP1"}, "991": {"op": "REVERT"}, "992": {"op": "JUMPDEST"}, "993": {"op": "POP"}, "994": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "CALLDATALOAD", "path": "0"}, "995": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "PUSH2", "path": "0", "value": "0xB76"}, "998": {"fn": "ERC721Enumerable.tokenByIndex", "jump": "i", "offset": [40419, 40650], "op": "JUMP", "path": "0"}, "999": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "JUMPDEST", "path": "0"}, "1000": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "1003": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x4"}, "1005": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP1", "path": "0"}, "1006": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "CALLDATASIZE", "path": "0"}, "1007": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SUB", "path": "0"}, "1008": {"op": "PUSH1", "value": "0x20"}, "1010": {"op": "DUP2"}, "1011": {"op": "LT"}, "1012": {"op": "ISZERO"}, "1013": {"op": "PUSH2", "value": "0x3FD"}, "1016": {"op": "JUMPI"}, "1017": {"op": "PUSH1", "value": "0x0"}, "1019": {"op": "DUP1"}, "1020": {"op": "REVERT"}, "1021": {"op": "JUMPDEST"}, "1022": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP2", "path": "0"}, "1023": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "ADD", "path": "0"}, "1024": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP1", "path": "0"}, "1025": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x20"}, "1027": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP2", "path": "0"}, "1028": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "ADD", "path": "0"}, "1029": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP2", "path": "0"}, "1030": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "CALLDATALOAD", "path": "0"}, "1031": {"op": "PUSH5", "value": "0x100000000"}, "1037": {"op": "DUP2"}, "1038": {"op": "GT"}, "1039": {"op": "ISZERO"}, "1040": {"op": "PUSH2", "value": "0x418"}, "1043": {"op": "JUMPI"}, "1044": {"op": "PUSH1", "value": "0x0"}, "1046": {"op": "DUP1"}, "1047": {"op": "REVERT"}, "1048": {"op": "JUMPDEST"}, "1049": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP3", "path": "0"}, "1050": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "ADD", "path": "0"}, "1051": {"op": "DUP4"}, "1052": {"op": "PUSH1", "value": "0x20"}, "1054": {"op": "DUP3"}, "1055": {"op": "ADD"}, "1056": {"op": "GT"}, "1057": {"op": "ISZERO"}, "1058": {"op": "PUSH2", "value": "0x42A"}, "1061": {"op": "JUMPI"}, "1062": {"op": "PUSH1", "value": "0x0"}, "1064": {"op": "DUP1"}, "1065": {"op": "REVERT"}, "1066": {"op": "JUMPDEST"}, "1067": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP1", "path": "0"}, "1068": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "CALLDATALOAD", "path": "0"}, "1069": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP1", "path": "0"}, "1070": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x20"}, "1072": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "ADD", "path": "0"}, "1073": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP2", "path": "0"}, "1074": {"op": "DUP5"}, "1075": {"op": "PUSH1", "value": "0x1"}, "1077": {"op": "DUP4"}, "1078": {"op": "MUL"}, "1079": {"op": "DUP5"}, "1080": {"op": "ADD"}, "1081": {"op": "GT"}, "1082": {"op": "PUSH5", "value": "0x100000000"}, "1088": {"op": "DUP4"}, "1089": {"op": "GT"}, "1090": {"op": "OR"}, "1091": {"op": "ISZERO"}, "1092": {"op": "PUSH2", "value": "0x44C"}, "1095": {"op": "JUMPI"}, "1096": {"op": "PUSH1", "value": "0x0"}, "1098": {"op": "DUP1"}, "1099": {"op": "REVERT"}, "1100": {"op": "JUMPDEST"}, "1101": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP2", "path": "0"}, "1102": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP1", "path": "0"}, "1103": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP1", "path": "0"}, "1104": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP1", "path": "0"}, "1105": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1107": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "ADD", "path": "0"}, "1108": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x20"}, "1110": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP1", "path": "0"}, "1111": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP2", "path": "0"}, "1112": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DIV", "path": "0"}, "1113": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "MUL", "path": "0"}, "1114": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x20"}, "1116": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "ADD", "path": "0"}, "1117": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x40"}, "1119": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "MLOAD", "path": "0"}, "1120": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP1", "path": "0"}, "1121": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP2", "path": "0"}, "1122": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "ADD", "path": "0"}, "1123": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x40"}, "1125": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "MSTORE", "path": "0"}, "1126": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP1", "path": "0"}, "1127": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP4", "path": "0"}, "1128": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP3", "path": "0"}, "1129": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP2", "path": "0"}, "1130": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP1", "path": "0"}, "1131": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP2", "path": "0"}, "1132": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP2", "path": "0"}, "1133": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "MSTORE", "path": "0"}, "1134": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH1", "path": "0", "value": "0x20"}, "1136": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "ADD", "path": "0"}, "1137": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP4", "path": "0"}, "1138": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "DUP4", "path": "0"}, "1139": {"op": "DUP1"}, "1140": {"op": "DUP3"}, "1141": {"op": "DUP5"}, "1142": {"op": "CALLDATACOPY"}, "1143": {"op": "PUSH1", "value": "0x0"}, "1145": {"op": "SWAP3"}, "1146": {"op": "ADD"}, "1147": {"op": "SWAP2"}, "1148": {"op": "SWAP1"}, "1149": {"op": "SWAP2"}, "1150": {"op": "MSTORE"}, "1151": {"op": "POP"}, "1152": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP3", "path": "0"}, "1153": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP6", "path": "0"}, "1154": {"op": "POP"}, "1155": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "PUSH2", "path": "0", "value": "0xBDC"}, "1158": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "SWAP5", "path": "0"}, "1159": {"op": "POP"}, "1160": {"op": "POP"}, "1161": {"op": "POP"}, "1162": {"op": "POP"}, "1163": {"op": "POP"}, "1164": {"fn": "WrappedPunk.setBaseURI", "jump": "i", "offset": [55710, 55807], "op": "JUMP", "path": "0"}, "1165": {"fn": "Pausable.paused", "offset": [4620, 4696], "op": "JUMPDEST", "path": "0"}, "1166": {"fn": "Pausable.paused", "offset": [4620, 4696], "op": "PUSH2", "path": "0", "value": "0x1FB"}, "1169": {"fn": "Pausable.paused", "offset": [4620, 4696], "op": "PUSH2", "path": "0", "value": "0xC40"}, "1172": {"fn": "Pausable.paused", "jump": "i", "offset": [4620, 4696], "op": "JUMP", "path": "0"}, "1173": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "JUMPDEST", "path": "0"}, "1174": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "1177": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "PUSH1", "path": "0", "value": "0x4"}, "1179": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "DUP1", "path": "0"}, "1180": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "CALLDATASIZE", "path": "0"}, "1181": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "SUB", "path": "0"}, "1182": {"op": "PUSH1", "value": "0x20"}, "1184": {"op": "DUP2"}, "1185": {"op": "LT"}, "1186": {"op": "ISZERO"}, "1187": {"op": "PUSH2", "value": "0x4AB"}, "1190": {"op": "JUMPI"}, "1191": {"op": "PUSH1", "value": "0x0"}, "1193": {"op": "DUP1"}, "1194": {"op": "REVERT"}, "1195": {"op": "JUMPDEST"}, "1196": {"op": "POP"}, "1197": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "CALLDATALOAD", "path": "0"}, "1198": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "PUSH2", "path": "0", "value": "0xC49"}, "1201": {"fn": "ERC721.ownerOf", "jump": "i", "offset": [24400, 24658], "op": "JUMP", "path": "0"}, "1202": {"fn": "ERC721Metadata.baseURI", "offset": [52389, 52476], "op": "JUMPDEST", "path": "0"}, "1203": {"fn": "ERC721Metadata.baseURI", "offset": [52389, 52476], "op": "PUSH2", "path": "0", "value": "0x217"}, "1206": {"fn": "ERC721Metadata.baseURI", "offset": [52389, 52476], "op": "PUSH2", "path": "0", "value": "0xCA3"}, "1209": {"fn": "ERC721Metadata.baseURI", "jump": "i", "offset": [52389, 52476], "op": "JUMP", "path": "0"}, "1210": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "JUMPDEST", "path": "0"}, "1211": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "PUSH2", "path": "0", "value": "0x2FB"}, "1214": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "PUSH1", "path": "0", "value": "0x4"}, "1216": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "DUP1", "path": "0"}, "1217": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "CALLDATASIZE", "path": "0"}, "1218": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "SUB", "path": "0"}, "1219": {"op": "PUSH1", "value": "0x20"}, "1221": {"op": "DUP2"}, "1222": {"op": "LT"}, "1223": {"op": "ISZERO"}, "1224": {"op": "PUSH2", "value": "0x4D0"}, "1227": {"op": "JUMPI"}, "1228": {"op": "PUSH1", "value": "0x0"}, "1230": {"op": "DUP1"}, "1231": {"op": "REVERT"}, "1232": {"op": "JUMPDEST"}, "1233": {"op": "POP"}, "1234": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "CALLDATALOAD", "path": "0"}, "1235": {"op": "PUSH1", "value": "0x1"}, "1237": {"op": "PUSH1", "value": "0x1"}, "1239": {"op": "PUSH1", "value": "0xA0"}, "1241": {"op": "SHL"}, "1242": {"op": "SUB"}, "1243": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "AND", "path": "0"}, "1244": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "PUSH2", "path": "0", "value": "0xD04"}, "1247": {"fn": "ERC721.balanceOf", "jump": "i", "offset": [23940, 24181], "op": "JUMP", "path": "0"}, "1248": {"fn": "Ownable.renounceOwnership", "offset": [3046, 3184], "op": "JUMPDEST", "path": "0"}, "1249": {"fn": "Ownable.renounceOwnership", "offset": [3046, 3184], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "1252": {"fn": "Ownable.renounceOwnership", "offset": [3046, 3184], "op": "PUSH2", "path": "0", "value": "0xD6C"}, "1255": {"fn": "Ownable.renounceOwnership", "jump": "i", "offset": [3046, 3184], "op": "JUMP", "path": "0"}, "1256": {"fn": "WrappedPunk.pause", "offset": [55882, 55941], "op": "JUMPDEST", "path": "0"}, "1257": {"fn": "WrappedPunk.pause", "offset": [55882, 55941], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "1260": {"fn": "WrappedPunk.pause", "offset": [55882, 55941], "op": "PUSH2", "path": "0", "value": "0xE0E"}, "1263": {"fn": "WrappedPunk.pause", "jump": "i", "offset": [55882, 55941], "op": "JUMP", "path": "0"}, "1264": {"fn": "Ownable.owner", "offset": [2423, 2500], "op": "JUMPDEST", "path": "0"}, "1265": {"fn": "Ownable.owner", "offset": [2423, 2500], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "1268": {"fn": "Ownable.owner", "offset": [2423, 2500], "op": "PUSH2", "path": "0", "value": "0xE6E"}, "1271": {"fn": "Ownable.owner", "jump": "i", "offset": [2423, 2500], "op": "JUMP", "path": "0"}, "1272": {"fn": "ERC721Metadata.symbol", "offset": [49589, 49674], "op": "JUMPDEST", "path": "0"}, "1273": {"fn": "ERC721Metadata.symbol", "offset": [49589, 49674], "op": "PUSH2", "path": "0", "value": "0x217"}, "1276": {"fn": "ERC721Metadata.symbol", "offset": [49589, 49674], "op": "PUSH2", "path": "0", "value": "0xE7D"}, "1279": {"fn": "ERC721Metadata.symbol", "jump": "i", "offset": [49589, 49674], "op": "JUMP", "path": "0"}, "1280": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "JUMPDEST", "path": "0"}, "1281": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "1284": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "PUSH1", "path": "0", "value": "0x4"}, "1286": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "DUP1", "path": "0"}, "1287": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "CALLDATASIZE", "path": "0"}, "1288": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "SUB", "path": "0"}, "1289": {"op": "PUSH1", "value": "0x20"}, "1291": {"op": "DUP2"}, "1292": {"op": "LT"}, "1293": {"op": "ISZERO"}, "1294": {"op": "PUSH2", "value": "0x516"}, "1297": {"op": "JUMPI"}, "1298": {"op": "PUSH1", "value": "0x0"}, "1300": {"op": "DUP1"}, "1301": {"op": "REVERT"}, "1302": {"op": "JUMPDEST"}, "1303": {"op": "POP"}, "1304": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "CALLDATALOAD", "path": "0"}, "1305": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "PUSH2", "path": "0", "value": "0xEDE"}, "1308": {"fn": "WrappedPunk.mint", "jump": "i", "offset": [56678, 57002], "op": "JUMP", "path": "0"}, "1309": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "JUMPDEST", "path": "0"}, "1310": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "1313": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "PUSH1", "path": "0", "value": "0x4"}, "1315": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "DUP1", "path": "0"}, "1316": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "CALLDATASIZE", "path": "0"}, "1317": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "SUB", "path": "0"}, "1318": {"op": "PUSH1", "value": "0x40"}, "1320": {"op": "DUP2"}, "1321": {"op": "LT"}, "1322": {"op": "ISZERO"}, "1323": {"op": "PUSH2", "value": "0x533"}, "1326": {"op": "JUMPI"}, "1327": {"op": "PUSH1", "value": "0x0"}, "1329": {"op": "DUP1"}, "1330": {"op": "REVERT"}, "1331": {"op": "JUMPDEST"}, "1332": {"op": "POP"}, "1333": {"op": "PUSH1", "value": "0x1"}, "1335": {"op": "PUSH1", "value": "0x1"}, "1337": {"op": "PUSH1", "value": "0xA0"}, "1339": {"op": "SHL"}, "1340": {"op": "SUB"}, "1341": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "DUP2", "path": "0"}, "1342": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "CALLDATALOAD", "path": "0"}, "1343": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "AND", "path": "0"}, "1344": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "SWAP1", "path": "0"}, "1345": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "PUSH1", "path": "0", "value": "0x20"}, "1347": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "ADD", "path": "0"}, "1348": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "CALLDATALOAD", "path": "0"}, "1349": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "ISZERO", "path": "0"}, "1350": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "ISZERO", "path": "0"}, "1351": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "PUSH2", "path": "0", "value": "0x1029"}, "1354": {"fn": "ERC721.setApprovalForAll", "jump": "i", "offset": [26321, 26605], "op": "JUMP", "path": "0"}, "1355": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "JUMPDEST", "path": "0"}, "1356": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "1359": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "PUSH1", "path": "0", "value": "0x4"}, "1361": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "DUP1", "path": "0"}, "1362": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "CALLDATASIZE", "path": "0"}, "1363": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "SUB", "path": "0"}, "1364": {"op": "PUSH1", "value": "0x20"}, "1366": {"op": "DUP2"}, "1367": {"op": "LT"}, "1368": {"op": "ISZERO"}, "1369": {"op": "PUSH2", "value": "0x561"}, "1372": {"op": "JUMPI"}, "1373": {"op": "PUSH1", "value": "0x0"}, "1375": {"op": "DUP1"}, "1376": {"op": "REVERT"}, "1377": {"op": "JUMPDEST"}, "1378": {"op": "POP"}, "1379": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "CALLDATALOAD", "path": "0"}, "1380": {"op": "PUSH1", "value": "0x1"}, "1382": {"op": "PUSH1", "value": "0x1"}, "1384": {"op": "PUSH1", "value": "0xA0"}, "1386": {"op": "SHL"}, "1387": {"op": "SUB"}, "1388": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "AND", "path": "0"}, "1389": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "PUSH2", "path": "0", "value": "0x110A"}, "1392": {"fn": "WrappedPunk.proxyInfo", "jump": "i", "offset": [56522, 56623], "op": "JUMP", "path": "0"}, "1393": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "JUMPDEST", "path": "0"}, "1394": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "1397": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x4"}, "1399": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP1", "path": "0"}, "1400": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "CALLDATASIZE", "path": "0"}, "1401": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SUB", "path": "0"}, "1402": {"op": "PUSH1", "value": "0x80"}, "1404": {"op": "DUP2"}, "1405": {"op": "LT"}, "1406": {"op": "ISZERO"}, "1407": {"op": "PUSH2", "value": "0x587"}, "1410": {"op": "JUMPI"}, "1411": {"op": "PUSH1", "value": "0x0"}, "1413": {"op": "DUP1"}, "1414": {"op": "REVERT"}, "1415": {"op": "JUMPDEST"}, "1416": {"op": "PUSH1", "value": "0x1"}, "1418": {"op": "PUSH1", "value": "0x1"}, "1420": {"op": "PUSH1", "value": "0xA0"}, "1422": {"op": "SHL"}, "1423": {"op": "SUB"}, "1424": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP3", "path": "0"}, "1425": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "CALLDATALOAD", "path": "0"}, "1426": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP2", "path": "0"}, "1427": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "AND", "path": "0"}, "1428": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP3", "path": "0"}, "1429": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x20"}, "1431": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP2", "path": "0"}, "1432": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1433": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "CALLDATALOAD", "path": "0"}, "1434": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP1", "path": "0"}, "1435": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP2", "path": "0"}, "1436": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "AND", "path": "0"}, "1437": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP2", "path": "0"}, "1438": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x40"}, "1440": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP3", "path": "0"}, "1441": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1442": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "CALLDATALOAD", "path": "0"}, "1443": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP2", "path": "0"}, "1444": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP1", "path": "0"}, "1445": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP2", "path": "0"}, "1446": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1447": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP1", "path": "0"}, "1448": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x80"}, "1450": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP2", "path": "0"}, "1451": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1452": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x60"}, "1454": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP3", "path": "0"}, "1455": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1456": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "CALLDATALOAD", "path": "0"}, "1457": {"op": "PUSH5", "value": "0x100000000"}, "1463": {"op": "DUP2"}, "1464": {"op": "GT"}, "1465": {"op": "ISZERO"}, "1466": {"op": "PUSH2", "value": "0x5C2"}, "1469": {"op": "JUMPI"}, "1470": {"op": "PUSH1", "value": "0x0"}, "1472": {"op": "DUP1"}, "1473": {"op": "REVERT"}, "1474": {"op": "JUMPDEST"}, "1475": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP3", "path": "0"}, "1476": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1477": {"op": "DUP4"}, "1478": {"op": "PUSH1", "value": "0x20"}, "1480": {"op": "DUP3"}, "1481": {"op": "ADD"}, "1482": {"op": "GT"}, "1483": {"op": "ISZERO"}, "1484": {"op": "PUSH2", "value": "0x5D4"}, "1487": {"op": "JUMPI"}, "1488": {"op": "PUSH1", "value": "0x0"}, "1490": {"op": "DUP1"}, "1491": {"op": "REVERT"}, "1492": {"op": "JUMPDEST"}, "1493": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP1", "path": "0"}, "1494": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "CALLDATALOAD", "path": "0"}, "1495": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP1", "path": "0"}, "1496": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x20"}, "1498": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1499": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP2", "path": "0"}, "1500": {"op": "DUP5"}, "1501": {"op": "PUSH1", "value": "0x1"}, "1503": {"op": "DUP4"}, "1504": {"op": "MUL"}, "1505": {"op": "DUP5"}, "1506": {"op": "ADD"}, "1507": {"op": "GT"}, "1508": {"op": "PUSH5", "value": "0x100000000"}, "1514": {"op": "DUP4"}, "1515": {"op": "GT"}, "1516": {"op": "OR"}, "1517": {"op": "ISZERO"}, "1518": {"op": "PUSH2", "value": "0x5F6"}, "1521": {"op": "JUMPI"}, "1522": {"op": "PUSH1", "value": "0x0"}, "1524": {"op": "DUP1"}, "1525": {"op": "REVERT"}, "1526": {"op": "JUMPDEST"}, "1527": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP2", "path": "0"}, "1528": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP1", "path": "0"}, "1529": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP1", "path": "0"}, "1530": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP1", "path": "0"}, "1531": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1533": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1534": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x20"}, "1536": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP1", "path": "0"}, "1537": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP2", "path": "0"}, "1538": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DIV", "path": "0"}, "1539": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "MUL", "path": "0"}, "1540": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x20"}, "1542": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1543": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x40"}, "1545": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "MLOAD", "path": "0"}, "1546": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP1", "path": "0"}, "1547": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP2", "path": "0"}, "1548": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1549": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x40"}, "1551": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "MSTORE", "path": "0"}, "1552": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP1", "path": "0"}, "1553": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP4", "path": "0"}, "1554": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP3", "path": "0"}, "1555": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP2", "path": "0"}, "1556": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP1", "path": "0"}, "1557": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP2", "path": "0"}, "1558": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP2", "path": "0"}, "1559": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "MSTORE", "path": "0"}, "1560": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH1", "path": "0", "value": "0x20"}, "1562": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "ADD", "path": "0"}, "1563": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP4", "path": "0"}, "1564": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "DUP4", "path": "0"}, "1565": {"op": "DUP1"}, "1566": {"op": "DUP3"}, "1567": {"op": "DUP5"}, "1568": {"op": "CALLDATACOPY"}, "1569": {"op": "PUSH1", "value": "0x0"}, "1571": {"op": "SWAP3"}, "1572": {"op": "ADD"}, "1573": {"op": "SWAP2"}, "1574": {"op": "SWAP1"}, "1575": {"op": "SWAP2"}, "1576": {"op": "MSTORE"}, "1577": {"op": "POP"}, "1578": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP3", "path": "0"}, "1579": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP6", "path": "0"}, "1580": {"op": "POP"}, "1581": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "PUSH2", "path": "0", "value": "0x1128"}, "1584": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "SWAP5", "path": "0"}, "1585": {"op": "POP"}, "1586": {"op": "POP"}, "1587": {"op": "POP"}, "1588": {"op": "POP"}, "1589": {"op": "POP"}, "1590": {"fn": "ERC721.safeTransferFrom", "jump": "i", "offset": [29423, 29765], "op": "JUMP", "path": "0"}, "1591": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "JUMPDEST", "path": "0"}, "1592": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "PUSH2", "path": "0", "value": "0x217"}, "1595": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "PUSH1", "path": "0", "value": "0x4"}, "1597": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "DUP1", "path": "0"}, "1598": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "CALLDATASIZE", "path": "0"}, "1599": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "SUB", "path": "0"}, "1600": {"op": "PUSH1", "value": "0x20"}, "1602": {"op": "DUP2"}, "1603": {"op": "LT"}, "1604": {"op": "ISZERO"}, "1605": {"op": "PUSH2", "value": "0x64D"}, "1608": {"op": "JUMPI"}, "1609": {"op": "PUSH1", "value": "0x0"}, "1611": {"op": "DUP1"}, "1612": {"op": "REVERT"}, "1613": {"op": "JUMPDEST"}, "1614": {"op": "POP"}, "1615": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "CALLDATALOAD", "path": "0"}, "1616": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "PUSH2", "path": "0", "value": "0x1186"}, "1619": {"fn": "ERC721Metadata.tokenURI", "jump": "i", "offset": [50517, 51287], "op": "JUMP", "path": "0"}, "1620": {"fn": "WrappedPunk.registerProxy", "offset": [56127, 56469], "op": "JUMPDEST", "path": "0"}, "1621": {"fn": "WrappedPunk.registerProxy", "offset": [56127, 56469], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "1624": {"fn": "WrappedPunk.registerProxy", "offset": [56127, 56469], "op": "PUSH2", "path": "0", "value": "0x142D"}, "1627": {"fn": "WrappedPunk.registerProxy", "jump": "i", "offset": [56127, 56469], "op": "JUMP", "path": "0"}, "1628": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "JUMPDEST", "path": "0"}, "1629": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "PUSH2", "path": "0", "value": "0x1FB"}, "1632": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "PUSH1", "path": "0", "value": "0x4"}, "1634": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "DUP1", "path": "0"}, "1635": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "CALLDATASIZE", "path": "0"}, "1636": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "SUB", "path": "0"}, "1637": {"op": "PUSH1", "value": "0x40"}, "1639": {"op": "DUP2"}, "1640": {"op": "LT"}, "1641": {"op": "ISZERO"}, "1642": {"op": "PUSH2", "value": "0x672"}, "1645": {"op": "JUMPI"}, "1646": {"op": "PUSH1", "value": "0x0"}, "1648": {"op": "DUP1"}, "1649": {"op": "REVERT"}, "1650": {"op": "JUMPDEST"}, "1651": {"op": "POP"}, "1652": {"op": "PUSH1", "value": "0x1"}, "1654": {"op": "PUSH1", "value": "0x1"}, "1656": {"op": "PUSH1", "value": "0xA0"}, "1658": {"op": "SHL"}, "1659": {"op": "SUB"}, "1660": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "DUP2", "path": "0"}, "1661": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "CALLDATALOAD", "path": "0"}, "1662": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "DUP2", "path": "0"}, "1663": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "AND", "path": "0"}, "1664": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "SWAP2", "path": "0"}, "1665": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "PUSH1", "path": "0", "value": "0x20"}, "1667": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "ADD", "path": "0"}, "1668": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "CALLDATALOAD", "path": "0"}, "1669": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "AND", "path": "0"}, "1670": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "PUSH2", "path": "0", "value": "0x152C"}, "1673": {"fn": "ERC721.isApprovedForAll", "jump": "i", "offset": [26927, 27100], "op": "JUMP", "path": "0"}, "1674": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "JUMPDEST", "path": "0"}, "1675": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "PUSH2", "path": "0", "value": "0x2F1"}, "1678": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "PUSH1", "path": "0", "value": "0x4"}, "1680": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "DUP1", "path": "0"}, "1681": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "CALLDATASIZE", "path": "0"}, "1682": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "SUB", "path": "0"}, "1683": {"op": "PUSH1", "value": "0x20"}, "1685": {"op": "DUP2"}, "1686": {"op": "LT"}, "1687": {"op": "ISZERO"}, "1688": {"op": "PUSH2", "value": "0x6A0"}, "1691": {"op": "JUMPI"}, "1692": {"op": "PUSH1", "value": "0x0"}, "1694": {"op": "DUP1"}, "1695": {"op": "REVERT"}, "1696": {"op": "JUMPDEST"}, "1697": {"op": "POP"}, "1698": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "CALLDATALOAD", "path": "0"}, "1699": {"op": "PUSH1", "value": "0x1"}, "1701": {"op": "PUSH1", "value": "0x1"}, "1703": {"op": "PUSH1", "value": "0xA0"}, "1705": {"op": "SHL"}, "1706": {"op": "SUB"}, "1707": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "AND", "path": "0"}, "1708": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "PUSH2", "path": "0", "value": "0x155A"}, "1711": {"fn": "Ownable.transferOwnership", "jump": "i", "offset": [3333, 3601], "op": "JUMP", "path": "0"}, "1712": {"fn": "WrappedPunk.punkContract", "offset": [55544, 55644], "op": "JUMPDEST", "path": "0"}, "1713": {"fn": "WrappedPunk.punkContract", "offset": [55544, 55644], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "1716": {"fn": "WrappedPunk.punkContract", "offset": [55544, 55644], "op": "PUSH2", "path": "0", "value": "0x1652"}, "1719": {"fn": "WrappedPunk.punkContract", "jump": "i", "offset": [55544, 55644], "op": "JUMP", "path": "0"}, "1720": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "JUMPDEST", "path": "0"}, "1721": {"op": "PUSH1", "value": "0x1"}, "1723": {"op": "PUSH1", "value": "0x1"}, "1725": {"op": "PUSH1", "value": "0xE0"}, "1727": {"op": "SHL"}, "1728": {"op": "SUB"}, "1729": {"op": "NOT"}, "1730": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "DUP2", "path": "0", "statement": 0}, "1731": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "AND", "path": "0"}, "1732": {"fn": "ERC165.supportsInterface", "offset": [20971, 20975], "op": "PUSH1", "path": "0", "value": "0x0"}, "1734": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "SWAP1", "path": "0"}, "1735": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "DUP2", "path": "0"}, "1736": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "MSTORE", "path": "0"}, "1737": {"fn": "ERC165.supportsInterface", "offset": [20994, 21014], "op": "PUSH1", "path": "0", "value": "0x1"}, "1739": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "PUSH1", "path": "0", "value": "0x20"}, "1741": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "MSTORE", "path": "0"}, "1742": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "PUSH1", "path": "0", "value": "0x40"}, "1744": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "SWAP1", "path": "0"}, "1745": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "KECCAK256", "path": "0"}, "1746": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "SLOAD", "path": "0"}, "1747": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "PUSH1", "path": "0", "value": "0xFF"}, "1749": {"fn": "ERC165.supportsInterface", "offset": [20994, 21027], "op": "AND", "path": "0"}, "1750": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "JUMPDEST", "path": "0"}, "1751": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "SWAP2", "path": "0"}, "1752": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "SWAP1", "path": "0"}, "1753": {"fn": "ERC165.supportsInterface", "offset": [20903, 21034], "op": "POP", "path": "0"}, "1754": {"fn": "ERC165.supportsInterface", "jump": "o", "offset": [20903, 21034], "op": "JUMP", "path": "0"}, "1755": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "JUMPDEST", "path": "0"}, "1756": {"fn": "ERC721Metadata.name", "offset": [49468, 49473], "op": "PUSH1", "path": "0", "statement": 1, "value": "0xA"}, "1758": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP1", "path": "0"}, "1759": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SLOAD", "path": "0"}, "1760": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x40"}, "1762": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP1", "path": "0"}, "1763": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MLOAD", "path": "0"}, "1764": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x20"}, "1766": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1768": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x2"}, "1770": {"op": "PUSH1", "value": "0x0"}, "1772": {"op": "NOT"}, "1773": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH2", "path": "0", "value": "0x100"}, "1776": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x1"}, "1778": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP9", "path": "0"}, "1779": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "AND", "path": "0"}, "1780": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ISZERO", "path": "0"}, "1781": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MUL", "path": "0"}, "1782": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1783": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1784": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP6", "path": "0"}, "1785": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "AND", "path": "0"}, "1786": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP5", "path": "0"}, "1787": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1788": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP5", "path": "0"}, "1789": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DIV", "path": "0"}, "1790": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP4", "path": "0"}, "1791": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP5", "path": "0"}, "1792": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1793": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP2", "path": "0"}, "1794": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1795": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DIV", "path": "0"}, "1796": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP2", "path": "0"}, "1797": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MUL", "path": "0"}, "1798": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP3", "path": "0"}, "1799": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1800": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP2", "path": "0"}, "1801": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1802": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1803": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP3", "path": "0"}, "1804": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MSTORE", "path": "0"}, "1805": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP3", "path": "0"}, "1806": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP2", "path": "0"}, "1807": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MSTORE", "path": "0"}, "1808": {"fn": "ERC721Metadata.name", "offset": [49436, 49449], "op": "PUSH1", "path": "0", "value": "0x60"}, "1810": {"fn": "ERC721Metadata.name", "offset": [49436, 49449], "op": "SWAP4", "path": "0"}, "1811": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1812": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP3", "path": "0"}, "1813": {"fn": "ERC721Metadata.name", "offset": [49468, 49473], "op": "SWAP1", "path": "0"}, "1814": {"fn": "ERC721Metadata.name", "offset": [49468, 49473], "op": "SWAP2", "path": "0"}, "1815": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP4", "path": "0"}, "1816": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1817": {"fn": "ERC721Metadata.name", "offset": [49468, 49473], "op": "DUP3", "path": "0"}, "1818": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP3", "path": "0"}, "1819": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP1", "path": "0"}, "1820": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ISZERO", "path": "0"}, "1821": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH2", "path": "0", "value": "0x767"}, "1824": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "JUMPI", "path": "0"}, "1825": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP1", "path": "0"}, "1826": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1828": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "LT", "path": "0"}, "1829": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH2", "path": "0", "value": "0x73C"}, "1832": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "JUMPI", "path": "0"}, "1833": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH2", "path": "0", "value": "0x100"}, "1836": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP1", "path": "0"}, "1837": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP4", "path": "0"}, "1838": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SLOAD", "path": "0"}, "1839": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DIV", "path": "0"}, "1840": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MUL", "path": "0"}, "1841": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP4", "path": "0"}, "1842": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MSTORE", "path": "0"}, "1843": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP2", "path": "0"}, "1844": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x20"}, "1846": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1847": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP2", "path": "0"}, "1848": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH2", "path": "0", "value": "0x767"}, "1851": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "JUMP", "path": "0"}, "1852": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "JUMPDEST", "path": "0"}, "1853": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP3", "path": "0"}, "1854": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1855": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP2", "path": "0"}, "1856": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1857": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x0"}, "1859": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MSTORE", "path": "0"}, "1860": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x20"}, "1862": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x0"}, "1864": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "KECCAK256", "path": "0"}, "1865": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1866": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "JUMPDEST", "path": "0"}, "1867": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP2", "path": "0"}, "1868": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SLOAD", "path": "0"}, "1869": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP2", "path": "0"}, "1870": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "MSTORE", "path": "0"}, "1871": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1872": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x1"}, "1874": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1875": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1876": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x20"}, "1878": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1879": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP1", "path": "0"}, "1880": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP4", "path": "0"}, "1881": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "GT", "path": "0"}, "1882": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH2", "path": "0", "value": "0x74A"}, "1885": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "JUMPI", "path": "0"}, "1886": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP3", "path": "0"}, "1887": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1888": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SUB", "path": "0"}, "1889": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1891": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "AND", "path": "0"}, "1892": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "DUP3", "path": "0"}, "1893": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "ADD", "path": "0"}, "1894": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP2", "path": "0"}, "1895": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "JUMPDEST", "path": "0"}, "1896": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "POP", "path": "0"}, "1897": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "POP", "path": "0"}, "1898": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "POP", "path": "0"}, "1899": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "POP", "path": "0"}, "1900": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "POP", "path": "0"}, "1901": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "SWAP1", "path": "0"}, "1902": {"fn": "ERC721Metadata.name", "offset": [49461, 49473], "op": "POP", "path": "0"}, "1903": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "JUMPDEST", "path": "0"}, "1904": {"fn": "ERC721Metadata.name", "offset": [49399, 49480], "op": "SWAP1", "path": "0"}, "1905": {"fn": "ERC721Metadata.name", "jump": "o", "offset": [49399, 49480], "op": "JUMP", "path": "0"}, "1906": {"fn": "ERC721.getApproved", "offset": [25794, 26028], "op": "JUMPDEST", "path": "0"}, "1907": {"fn": "ERC721.getApproved", "offset": [25853, 25860], "op": "PUSH1", "path": "0", "value": "0x0"}, "1909": {"fn": "ERC721.getApproved", "offset": [25893, 25909], "op": "PUSH2", "path": "0", "statement": 2, "value": "0x77D"}, "1912": {"fn": "ERC721.getApproved", "offset": [25901, 25908], "op": "DUP3", "path": "0"}, "1913": {"fn": "ERC721.getApproved", "offset": [25893, 25900], "op": "PUSH2", "path": "0", "value": "0x1666"}, "1916": {"fn": "ERC721.getApproved", "jump": "i", "offset": [25893, 25909], "op": "JUMP", "path": "0"}, "1917": {"branch": 122, "fn": "ERC721.getApproved", "offset": [25893, 25909], "op": "JUMPDEST", "path": "0"}, "1918": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH2", "path": "0", "value": "0x7B8"}, "1921": {"branch": 122, "fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "JUMPI", "path": "0"}, "1922": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH1", "path": "0", "value": "0x40"}, "1924": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "MLOAD", "path": "0"}, "1925": {"op": "PUSH3", "value": "0x461BCD"}, "1929": {"op": "PUSH1", "value": "0xE5"}, "1931": {"op": "SHL"}, "1932": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP2", "path": "0"}, "1933": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "MSTORE", "path": "0"}, "1934": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH1", "path": "0", "value": "0x4"}, "1936": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "ADD", "path": "0"}, "1937": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP1", "path": "0"}, "1938": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP1", "path": "0"}, "1939": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH1", "path": "0", "value": "0x20"}, "1941": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "ADD", "path": "0"}, "1942": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP3", "path": "0"}, "1943": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP2", "path": "0"}, "1944": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "SUB", "path": "0"}, "1945": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP3", "path": "0"}, "1946": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "MSTORE", "path": "0"}, "1947": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH1", "path": "0", "value": "0x2C"}, "1949": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP2", "path": "0"}, "1950": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "MSTORE", "path": "0"}, "1951": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH1", "path": "0", "value": "0x20"}, "1953": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "ADD", "path": "0"}, "1954": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP1", "path": "0"}, "1955": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH2", "path": "0", "value": "0x27C2"}, "1958": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH1", "path": "0", "value": "0x2C"}, "1960": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "SWAP2", "path": "0"}, "1961": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "CODECOPY", "path": "0"}, "1962": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH1", "path": "0", "value": "0x40"}, "1964": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "ADD", "path": "0"}, "1965": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "SWAP2", "path": "0"}, "1966": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "POP", "path": "0"}, "1967": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "POP", "path": "0"}, "1968": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "PUSH1", "path": "0", "value": "0x40"}, "1970": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "MLOAD", "path": "0"}, "1971": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "DUP1", "path": "0"}, "1972": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "SWAP2", "path": "0"}, "1973": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "SUB", "path": "0"}, "1974": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "SWAP1", "path": "0"}, "1975": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "REVERT", "path": "0"}, "1976": {"fn": "ERC721.getApproved", "offset": [25872, 25979], "op": "JUMPDEST", "path": "0"}, "1977": {"op": "POP"}, "1978": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "PUSH1", "path": "0", "statement": 3, "value": "0x0"}, "1980": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "SWAP1", "path": "0"}, "1981": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "DUP2", "path": "0"}, "1982": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "MSTORE", "path": "0"}, "1983": {"fn": "ERC721.getApproved", "offset": [25997, 26012], "op": "PUSH1", "path": "0", "value": "0x3"}, "1985": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "PUSH1", "path": "0", "value": "0x20"}, "1987": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "MSTORE", "path": "0"}, "1988": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "PUSH1", "path": "0", "value": "0x40"}, "1990": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "SWAP1", "path": "0"}, "1991": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "KECCAK256", "path": "0"}, "1992": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "SLOAD", "path": "0"}, "1993": {"op": "PUSH1", "value": "0x1"}, "1995": {"op": "PUSH1", "value": "0x1"}, "1997": {"op": "PUSH1", "value": "0xA0"}, "1999": {"op": "SHL"}, "2000": {"op": "SUB"}, "2001": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "AND", "path": "0"}, "2002": {"fn": "ERC721.getApproved", "offset": [25997, 26021], "op": "SWAP1", "path": "0"}, "2003": {"fn": "ERC721.getApproved", "jump": "o", "offset": [25794, 26028], "op": "JUMP", "path": "0"}, "2004": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "JUMPDEST", "path": "0"}, "2005": {"fn": "ERC721.approve", "offset": [25142, 25155], "op": "PUSH1", "path": "0", "value": "0x0"}, "2007": {"fn": "ERC721.approve", "offset": [25158, 25174], "op": "PUSH2", "path": "0", "value": "0x7DF"}, "2010": {"fn": "ERC721.approve", "offset": [25166, 25173], "op": "DUP3", "path": "0"}, "2011": {"fn": "ERC721.approve", "offset": [25158, 25165], "op": "PUSH2", "path": "0", "value": "0xC49"}, "2014": {"fn": "ERC721.approve", "jump": "i", "offset": [25158, 25174], "op": "JUMP", "path": "0"}, "2015": {"fn": "ERC721.approve", "offset": [25158, 25174], "op": "JUMPDEST", "path": "0"}, "2016": {"fn": "ERC721.approve", "offset": [25142, 25174], "op": "SWAP1", "path": "0"}, "2017": {"fn": "ERC721.approve", "offset": [25142, 25174], "op": "POP", "path": "0"}, "2018": {"fn": "ERC721.approve", "offset": [25199, 25204], "op": "DUP1", "path": "0", "statement": 4}, "2019": {"op": "PUSH1", "value": "0x1"}, "2021": {"op": "PUSH1", "value": "0x1"}, "2023": {"op": "PUSH1", "value": "0xA0"}, "2025": {"op": "SHL"}, "2026": {"op": "SUB"}, "2027": {"fn": "ERC721.approve", "offset": [25193, 25204], "op": "AND", "path": "0"}, "2028": {"fn": "ERC721.approve", "offset": [25193, 25195], "op": "DUP4", "path": "0"}, "2029": {"op": "PUSH1", "value": "0x1"}, "2031": {"op": "PUSH1", "value": "0x1"}, "2033": {"op": "PUSH1", "value": "0xA0"}, "2035": {"op": "SHL"}, "2036": {"op": "SUB"}, "2037": {"fn": "ERC721.approve", "offset": [25193, 25204], "op": "AND", "path": "0"}, "2038": {"fn": "ERC721.approve", "offset": [25193, 25204], "op": "EQ", "path": "0"}, "2039": {"branch": 123, "fn": "ERC721.approve", "offset": [25193, 25204], "op": "ISZERO", "path": "0"}, "2040": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH2", "path": "0", "value": "0x832"}, "2043": {"branch": 123, "fn": "ERC721.approve", "offset": [25185, 25242], "op": "JUMPI", "path": "0"}, "2044": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH1", "path": "0", "value": "0x40"}, "2046": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "MLOAD", "path": "0"}, "2047": {"op": "PUSH3", "value": "0x461BCD"}, "2051": {"op": "PUSH1", "value": "0xE5"}, "2053": {"op": "SHL"}, "2054": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP2", "path": "0"}, "2055": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "MSTORE", "path": "0"}, "2056": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH1", "path": "0", "value": "0x4"}, "2058": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "ADD", "path": "0"}, "2059": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP1", "path": "0"}, "2060": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP1", "path": "0"}, "2061": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH1", "path": "0", "value": "0x20"}, "2063": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "ADD", "path": "0"}, "2064": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP3", "path": "0"}, "2065": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP2", "path": "0"}, "2066": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "SUB", "path": "0"}, "2067": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP3", "path": "0"}, "2068": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "MSTORE", "path": "0"}, "2069": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH1", "path": "0", "value": "0x21"}, "2071": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP2", "path": "0"}, "2072": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "MSTORE", "path": "0"}, "2073": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH1", "path": "0", "value": "0x20"}, "2075": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "ADD", "path": "0"}, "2076": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP1", "path": "0"}, "2077": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH2", "path": "0", "value": "0x2866"}, "2080": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH1", "path": "0", "value": "0x21"}, "2082": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "SWAP2", "path": "0"}, "2083": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "CODECOPY", "path": "0"}, "2084": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH1", "path": "0", "value": "0x40"}, "2086": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "ADD", "path": "0"}, "2087": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "SWAP2", "path": "0"}, "2088": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "POP", "path": "0"}, "2089": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "POP", "path": "0"}, "2090": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "PUSH1", "path": "0", "value": "0x40"}, "2092": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "MLOAD", "path": "0"}, "2093": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "DUP1", "path": "0"}, "2094": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "SWAP2", "path": "0"}, "2095": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "SUB", "path": "0"}, "2096": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "SWAP1", "path": "0"}, "2097": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "REVERT", "path": "0"}, "2098": {"fn": "ERC721.approve", "offset": [25185, 25242], "op": "JUMPDEST", "path": "0"}, "2099": {"fn": "ERC721.approve", "offset": [25290, 25295], "op": "DUP1", "path": "0", "statement": 5}, "2100": {"op": "PUSH1", "value": "0x1"}, "2102": {"op": "PUSH1", "value": "0x1"}, "2104": {"op": "PUSH1", "value": "0xA0"}, "2106": {"op": "SHL"}, "2107": {"op": "SUB"}, "2108": {"fn": "ERC721.approve", "offset": [25274, 25295], "op": "AND", "path": "0"}, "2109": {"fn": "ERC721.approve", "offset": [25274, 25286], "op": "PUSH2", "path": "0", "value": "0x844"}, "2112": {"fn": "ERC721.approve", "offset": [25274, 25284], "op": "PUSH2", "path": "0", "value": "0x1683"}, "2115": {"fn": "ERC721.approve", "jump": "i", "offset": [25274, 25286], "op": "JUMP", "path": "0"}, "2116": {"fn": "ERC721.approve", "offset": [25274, 25286], "op": "JUMPDEST", "path": "0"}, "2117": {"op": "PUSH1", "value": "0x1"}, "2119": {"op": "PUSH1", "value": "0x1"}, "2121": {"op": "PUSH1", "value": "0xA0"}, "2123": {"op": "SHL"}, "2124": {"op": "SUB"}, "2125": {"fn": "ERC721.approve", "offset": [25274, 25295], "op": "AND", "path": "0"}, "2126": {"branch": 124, "fn": "ERC721.approve", "offset": [25274, 25295], "op": "EQ", "path": "0"}, "2127": {"fn": "ERC721.approve", "offset": [25274, 25336], "op": "DUP1", "path": "0"}, "2128": {"fn": "ERC721.approve", "offset": [25274, 25336], "op": "PUSH2", "path": "0", "value": "0x865"}, "2131": {"branch": 124, "fn": "ERC721.approve", "offset": [25274, 25336], "op": "JUMPI", "path": "0"}, "2132": {"fn": "ERC721.approve", "offset": [25274, 25336], "op": "POP", "path": "0"}, "2133": {"fn": "ERC721.approve", "offset": [25299, 25336], "op": "PUSH2", "path": "0", "value": "0x865"}, "2136": {"fn": "ERC721.approve", "offset": [25316, 25321], "op": "DUP2", "path": "0"}, "2137": {"fn": "ERC721.approve", "offset": [25323, 25335], "op": "PUSH2", "path": "0", "value": "0x860"}, "2140": {"fn": "ERC721.approve", "offset": [25323, 25333], "op": "PUSH2", "path": "0", "value": "0x1683"}, "2143": {"fn": "ERC721.approve", "jump": "i", "offset": [25323, 25335], "op": "JUMP", "path": "0"}, "2144": {"fn": "ERC721.approve", "offset": [25323, 25335], "op": "JUMPDEST", "path": "0"}, "2145": {"fn": "ERC721.approve", "offset": [25299, 25315], "op": "PUSH2", "path": "0", "value": "0x152C"}, "2148": {"fn": "ERC721.approve", "jump": "i", "offset": [25299, 25336], "op": "JUMP", "path": "0"}, "2149": {"branch": 125, "fn": "ERC721.approve", "offset": [25299, 25336], "op": "JUMPDEST", "path": "0"}, "2150": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH2", "path": "0", "value": "0x8A0"}, "2153": {"branch": 125, "fn": "ERC721.approve", "offset": [25253, 25418], "op": "JUMPI", "path": "0"}, "2154": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH1", "path": "0", "value": "0x40"}, "2156": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "MLOAD", "path": "0"}, "2157": {"op": "PUSH3", "value": "0x461BCD"}, "2161": {"op": "PUSH1", "value": "0xE5"}, "2163": {"op": "SHL"}, "2164": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP2", "path": "0"}, "2165": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "MSTORE", "path": "0"}, "2166": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH1", "path": "0", "value": "0x4"}, "2168": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "ADD", "path": "0"}, "2169": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP1", "path": "0"}, "2170": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP1", "path": "0"}, "2171": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH1", "path": "0", "value": "0x20"}, "2173": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "ADD", "path": "0"}, "2174": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP3", "path": "0"}, "2175": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP2", "path": "0"}, "2176": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "SUB", "path": "0"}, "2177": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP3", "path": "0"}, "2178": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "MSTORE", "path": "0"}, "2179": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH1", "path": "0", "value": "0x38"}, "2181": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP2", "path": "0"}, "2182": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "MSTORE", "path": "0"}, "2183": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH1", "path": "0", "value": "0x20"}, "2185": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "ADD", "path": "0"}, "2186": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP1", "path": "0"}, "2187": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH2", "path": "0", "value": "0x270B"}, "2190": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH1", "path": "0", "value": "0x38"}, "2192": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "SWAP2", "path": "0"}, "2193": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "CODECOPY", "path": "0"}, "2194": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH1", "path": "0", "value": "0x40"}, "2196": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "ADD", "path": "0"}, "2197": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "SWAP2", "path": "0"}, "2198": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "POP", "path": "0"}, "2199": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "POP", "path": "0"}, "2200": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "PUSH1", "path": "0", "value": "0x40"}, "2202": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "MLOAD", "path": "0"}, "2203": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "DUP1", "path": "0"}, "2204": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "SWAP2", "path": "0"}, "2205": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "SUB", "path": "0"}, "2206": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "SWAP1", "path": "0"}, "2207": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "REVERT", "path": "0"}, "2208": {"fn": "ERC721.approve", "offset": [25253, 25418], "op": "JUMPDEST", "path": "0"}, "2209": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "PUSH1", "path": "0", "statement": 6, "value": "0x0"}, "2211": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "DUP3", "path": "0"}, "2212": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "DUP2", "path": "0"}, "2213": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "MSTORE", "path": "0"}, "2214": {"fn": "ERC721.approve", "offset": [25429, 25444], "op": "PUSH1", "path": "0", "value": "0x3"}, "2216": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "PUSH1", "path": "0", "value": "0x20"}, "2218": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "MSTORE", "path": "0"}, "2219": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "PUSH1", "path": "0", "value": "0x40"}, "2221": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "DUP1", "path": "0"}, "2222": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "DUP3", "path": "0"}, "2223": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "KECCAK256", "path": "0"}, "2224": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "DUP1", "path": "0"}, "2225": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "SLOAD", "path": "0"}, "2226": {"op": "PUSH1", "value": "0x1"}, "2228": {"op": "PUSH1", "value": "0x1"}, "2230": {"op": "PUSH1", "value": "0xA0"}, "2232": {"op": "SHL"}, "2233": {"op": "SUB"}, "2234": {"op": "NOT"}, "2235": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "AND", "path": "0"}, "2236": {"op": "PUSH1", "value": "0x1"}, "2238": {"op": "PUSH1", "value": "0x1"}, "2240": {"op": "PUSH1", "value": "0xA0"}, "2242": {"op": "SHL"}, "2243": {"op": "SUB"}, "2244": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "DUP8", "path": "0"}, "2245": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "DUP2", "path": "0"}, "2246": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "AND", "path": "0"}, "2247": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "SWAP2", "path": "0"}, "2248": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "DUP3", "path": "0"}, "2249": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "OR", "path": "0"}, "2250": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "SWAP1", "path": "0"}, "2251": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "SWAP3", "path": "0"}, "2252": {"fn": "ERC721.approve", "offset": [25429, 25458], "op": "SSTORE", "path": "0"}, "2253": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "SWAP2", "path": "0", "statement": 7}, "2254": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "MLOAD", "path": "0"}, "2255": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "DUP6", "path": "0"}, "2256": {"fn": "ERC721.approve", "offset": [25429, 25453], "op": "SWAP4", "path": "0"}, "2257": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "SWAP2", "path": "0"}, "2258": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "DUP6", "path": "0"}, "2259": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "AND", "path": "0"}, "2260": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "SWAP2", "path": "0"}, "2261": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "PUSH32", "path": "0", "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"}, "2294": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "SWAP2", "path": "0"}, "2295": {"fn": "ERC721.approve", "offset": [25474, 25502], "op": "LOG4", "path": "0"}, "2296": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "POP", "path": "0"}, "2297": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "POP", "path": "0"}, "2298": {"fn": "ERC721.approve", "offset": [25079, 25509], "op": "POP", "path": "0"}, "2299": {"fn": "ERC721.approve", "jump": "o", "offset": [25079, 25509], "op": "JUMP", "path": "0"}, "2300": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "JUMPDEST", "path": "0"}, "2301": {"fn": "ERC721Enumerable.totalSupply", "offset": [40057, 40067], "op": "PUSH1", "path": "0", "statement": 8, "value": "0x8"}, "2303": {"fn": "ERC721Enumerable.totalSupply", "offset": [40057, 40074], "op": "SLOAD", "path": "0"}, "2304": {"fn": "ERC721Enumerable.totalSupply", "offset": [39987, 40081], "op": "SWAP1", "path": "0"}, "2305": {"fn": "ERC721Enumerable.totalSupply", "jump": "o", "offset": [39987, 40081], "op": "JUMP", "path": "0"}, "2306": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "JUMPDEST", "path": "0"}, "2307": {"fn": "ERC721.transferFrom", "offset": [27723, 27764], "op": "PUSH2", "path": "0", "statement": 9, "value": "0x913"}, "2310": {"fn": "ERC721.transferFrom", "offset": [27742, 27754], "op": "PUSH2", "path": "0", "value": "0x90D"}, "2313": {"fn": "ERC721.transferFrom", "offset": [27742, 27752], "op": "PUSH2", "path": "0", "value": "0x1683"}, "2316": {"fn": "ERC721.transferFrom", "jump": "i", "offset": [27742, 27754], "op": "JUMP", "path": "0"}, "2317": {"fn": "ERC721.transferFrom", "offset": [27742, 27754], "op": "JUMPDEST", "path": "0"}, "2318": {"fn": "ERC721.transferFrom", "offset": [27756, 27763], "op": "DUP3", "path": "0"}, "2319": {"fn": "ERC721.transferFrom", "offset": [27723, 27741], "op": "PUSH2", "path": "0", "value": "0x1687"}, "2322": {"fn": "ERC721.transferFrom", "jump": "i", "offset": [27723, 27764], "op": "JUMP", "path": "0"}, "2323": {"branch": 126, "fn": "ERC721.transferFrom", "offset": [27723, 27764], "op": "JUMPDEST", "path": "0"}, "2324": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH2", "path": "0", "value": "0x94E"}, "2327": {"branch": 126, "fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "JUMPI", "path": "0"}, "2328": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH1", "path": "0", "value": "0x40"}, "2330": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "MLOAD", "path": "0"}, "2331": {"op": "PUSH3", "value": "0x461BCD"}, "2335": {"op": "PUSH1", "value": "0xE5"}, "2337": {"op": "SHL"}, "2338": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP2", "path": "0"}, "2339": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "MSTORE", "path": "0"}, "2340": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH1", "path": "0", "value": "0x4"}, "2342": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "ADD", "path": "0"}, "2343": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP1", "path": "0"}, "2344": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP1", "path": "0"}, "2345": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH1", "path": "0", "value": "0x20"}, "2347": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "ADD", "path": "0"}, "2348": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP3", "path": "0"}, "2349": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP2", "path": "0"}, "2350": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "SUB", "path": "0"}, "2351": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP3", "path": "0"}, "2352": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "MSTORE", "path": "0"}, "2353": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH1", "path": "0", "value": "0x31"}, "2355": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP2", "path": "0"}, "2356": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "MSTORE", "path": "0"}, "2357": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH1", "path": "0", "value": "0x20"}, "2359": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "ADD", "path": "0"}, "2360": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP1", "path": "0"}, "2361": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH2", "path": "0", "value": "0x2887"}, "2364": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH1", "path": "0", "value": "0x31"}, "2366": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "SWAP2", "path": "0"}, "2367": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "CODECOPY", "path": "0"}, "2368": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH1", "path": "0", "value": "0x40"}, "2370": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "ADD", "path": "0"}, "2371": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "SWAP2", "path": "0"}, "2372": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "POP", "path": "0"}, "2373": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "POP", "path": "0"}, "2374": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "PUSH1", "path": "0", "value": "0x40"}, "2376": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "MLOAD", "path": "0"}, "2377": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "DUP1", "path": "0"}, "2378": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "SWAP2", "path": "0"}, "2379": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "SUB", "path": "0"}, "2380": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "SWAP1", "path": "0"}, "2381": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "REVERT", "path": "0"}, "2382": {"fn": "ERC721.transferFrom", "offset": [27702, 27839], "op": "JUMPDEST", "path": "0"}, "2383": {"fn": "ERC721.transferFrom", "offset": [27850, 27882], "op": "PUSH2", "path": "0", "statement": 10, "value": "0x959"}, "2386": {"fn": "ERC721.transferFrom", "offset": [27864, 27868], "op": "DUP4", "path": "0"}, "2387": {"fn": "ERC721.transferFrom", "offset": [27870, 27872], "op": "DUP4", "path": "0"}, "2388": {"fn": "ERC721.transferFrom", "offset": [27874, 27881], "op": "DUP4", "path": "0"}, "2389": {"fn": "ERC721.transferFrom", "offset": [27850, 27863], "op": "PUSH2", "path": "0", "value": "0x172B"}, "2392": {"fn": "ERC721.transferFrom", "jump": "i", "offset": [27850, 27882], "op": "JUMP", "path": "0"}, "2393": {"fn": "ERC721.transferFrom", "offset": [27850, 27882], "op": "JUMPDEST", "path": "0"}, "2394": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "POP", "path": "0"}, "2395": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "POP", "path": "0"}, "2396": {"fn": "ERC721.transferFrom", "offset": [27537, 27889], "op": "POP", "path": "0"}, "2397": {"fn": "ERC721.transferFrom", "jump": "o", "offset": [27537, 27889], "op": "JUMP", "path": "0"}, "2398": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "JUMPDEST", "path": "0"}, "2399": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39646, 39653], "op": "PUSH1", "path": "0", "value": "0x0"}, "2401": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39698, 39714], "op": "PUSH2", "path": "0", "statement": 11, "value": "0x969"}, "2404": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39708, 39713], "op": "DUP4", "path": "0"}, "2405": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39698, 39707], "op": "PUSH2", "path": "0", "value": "0xD04"}, "2408": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "jump": "i", "offset": [39698, 39714], "op": "JUMP", "path": "0"}, "2409": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39698, 39714], "op": "JUMPDEST", "path": "0"}, "2410": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39690, 39695], "op": "DUP3", "path": "0"}, "2411": {"branch": 127, "fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39690, 39714], "op": "LT", "path": "0"}, "2412": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH2", "path": "0", "value": "0x9A6"}, "2415": {"branch": 127, "fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "JUMPI", "path": "0"}, "2416": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH1", "path": "0", "value": "0x40"}, "2418": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "MLOAD", "path": "0"}, "2419": {"op": "PUSH3", "value": "0x461BCD"}, "2423": {"op": "PUSH1", "value": "0xE5"}, "2425": {"op": "SHL"}, "2426": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP2", "path": "0"}, "2427": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "MSTORE", "path": "0"}, "2428": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH1", "path": "0", "value": "0x4"}, "2430": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "ADD", "path": "0"}, "2431": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP1", "path": "0"}, "2432": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP1", "path": "0"}, "2433": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH1", "path": "0", "value": "0x20"}, "2435": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "ADD", "path": "0"}, "2436": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP3", "path": "0"}, "2437": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP2", "path": "0"}, "2438": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "SUB", "path": "0"}, "2439": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP3", "path": "0"}, "2440": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "MSTORE", "path": "0"}, "2441": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH1", "path": "0", "value": "0x2B"}, "2443": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP2", "path": "0"}, "2444": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "MSTORE", "path": "0"}, "2445": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH1", "path": "0", "value": "0x20"}, "2447": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "ADD", "path": "0"}, "2448": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP1", "path": "0"}, "2449": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH2", "path": "0", "value": "0x2638"}, "2452": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH1", "path": "0", "value": "0x2B"}, "2454": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "SWAP2", "path": "0"}, "2455": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "CODECOPY", "path": "0"}, "2456": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH1", "path": "0", "value": "0x40"}, "2458": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "ADD", "path": "0"}, "2459": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "SWAP2", "path": "0"}, "2460": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "POP", "path": "0"}, "2461": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "POP", "path": "0"}, "2462": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "PUSH1", "path": "0", "value": "0x40"}, "2464": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "MLOAD", "path": "0"}, "2465": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "DUP1", "path": "0"}, "2466": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "SWAP2", "path": "0"}, "2467": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "SUB", "path": "0"}, "2468": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "SWAP1", "path": "0"}, "2469": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "REVERT", "path": "0"}, "2470": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39669, 39783], "op": "JUMPDEST", "path": "0"}, "2471": {"op": "PUSH1", "value": "0x1"}, "2473": {"op": "PUSH1", "value": "0x1"}, "2475": {"op": "PUSH1", "value": "0xA0"}, "2477": {"op": "SHL"}, "2478": {"op": "SUB"}, "2479": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "DUP4", "path": "0", "statement": 12}, "2480": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "AND", "path": "0"}, "2481": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "PUSH1", "path": "0", "value": "0x0"}, "2483": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "SWAP1", "path": "0"}, "2484": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "DUP2", "path": "0"}, "2485": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "MSTORE", "path": "0"}, "2486": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39813], "op": "PUSH1", "path": "0", "value": "0x6"}, "2488": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "PUSH1", "path": "0", "value": "0x20"}, "2490": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "MSTORE", "path": "0"}, "2491": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "PUSH1", "path": "0", "value": "0x40"}, "2493": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "SWAP1", "path": "0"}, "2494": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39820], "op": "KECCAK256", "path": "0"}, "2495": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "DUP1", "path": "0"}, "2496": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "SLOAD", "path": "0"}, "2497": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39821, 39826], "op": "DUP4", "path": "0"}, "2498": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39821, 39826], "op": "SWAP1", "path": "0"}, "2499": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "DUP2", "path": "0"}, "2500": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "LT", "path": "0"}, "2501": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "PUSH2", "path": "0", "value": "0x9CA"}, "2504": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "JUMPI", "path": "0"}, "2505": {"dev": "Index out of range", "fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "INVALID", "path": "0"}, "2506": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "JUMPDEST", "path": "0"}, "2507": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "SWAP1", "path": "0"}, "2508": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "PUSH1", "path": "0", "value": "0x0"}, "2510": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "MSTORE", "path": "0"}, "2511": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "PUSH1", "path": "0", "value": "0x20"}, "2513": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "PUSH1", "path": "0", "value": "0x0"}, "2515": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "KECCAK256", "path": "0"}, "2516": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "ADD", "path": "0"}, "2517": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39801, 39827], "op": "SLOAD", "path": "0"}, "2518": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39794, 39827], "op": "SWAP1", "path": "0"}, "2519": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39794, 39827], "op": "POP", "path": "0"}, "2520": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "SWAP3", "path": "0"}, "2521": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "SWAP2", "path": "0"}, "2522": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "POP", "path": "0"}, "2523": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "offset": [39542, 39834], "op": "POP", "path": "0"}, "2524": {"fn": "ERC721Enumerable.tokenOfOwnerByIndex", "jump": "o", "offset": [39542, 39834], "op": "JUMP", "path": "0"}, "2525": {"fn": "WrappedPunk.unpause", "offset": [56014, 56077], "op": "JUMPDEST", "path": "0"}, "2526": {"offset": [2637, 2649], "op": "PUSH2", "path": "0", "value": "0x9E5"}, "2529": {"offset": [2637, 2647], "op": "PUSH2", "path": "0", "value": "0x1683"}, "2532": {"jump": "i", "offset": [2637, 2649], "op": "JUMP", "path": "0"}, "2533": {"fn": "WrappedPunk.unpause", "offset": [2637, 2649], "op": "JUMPDEST", "path": "0"}, "2534": {"offset": [2627, 2633], "op": "PUSH1", "path": "0", "value": "0x0"}, "2536": {"fn": "WrappedPunk.unpause", "offset": [2627, 2633], "op": "SLOAD", "path": "0"}, "2537": {"op": "PUSH1", "value": "0x1"}, "2539": {"op": "PUSH1", "value": "0x1"}, "2541": {"op": "PUSH1", "value": "0xA0"}, "2543": {"op": "SHL"}, "2544": {"op": "SUB"}, "2545": {"offset": [2627, 2633], "op": "SWAP1", "path": "0"}, "2546": {"fn": "WrappedPunk.unpause", "offset": [2627, 2633], "op": "DUP2", "path": "0"}, "2547": {"fn": "WrappedPunk.unpause", "offset": [2627, 2633], "op": "AND", "path": "0"}, "2548": {"offset": [2627, 2649], "op": "SWAP2", "path": "0"}, "2549": {"fn": "WrappedPunk.unpause", "offset": [2627, 2649], "op": "AND", "path": "0"}, "2550": {"fn": "WrappedPunk.unpause", "offset": [2627, 2649], "op": "EQ", "path": "0"}, "2551": {"offset": [2619, 2686], "op": "PUSH2", "path": "0", "value": "0xA35"}, "2554": {"offset": [2619, 2686], "op": "JUMPI", "path": "0"}, "2555": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x40"}, "2557": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "DUP1", "path": "0"}, "2558": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "2559": {"op": "PUSH3", "value": "0x461BCD"}, "2563": {"op": "PUSH1", "value": "0xE5"}, "2565": {"op": "SHL"}, "2566": {"offset": [2619, 2686], "op": "DUP2", "path": "0"}, "2567": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "2568": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x20"}, "2570": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x4"}, "2572": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "2573": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "2574": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "2575": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "2576": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "2577": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x24"}, "2579": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "2580": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "2581": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "2582": {"op": "PUSH1", "value": "0x0"}, "2584": {"op": "DUP1"}, "2585": {"op": "MLOAD"}, "2586": {"op": "PUSH1", "value": "0x20"}, "2588": {"op": "PUSH2", "value": "0x27EE"}, "2591": {"op": "DUP4"}, "2592": {"op": "CODECOPY"}, "2593": {"op": "DUP2"}, "2594": {"op": "MLOAD"}, "2595": {"op": "SWAP2"}, "2596": {"op": "MSTORE"}, "2597": {"offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x44"}, "2599": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "2600": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "2601": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "2602": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "2603": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "2604": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "2605": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "2606": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "2607": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "SUB", "path": "0"}, "2608": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x64"}, "2610": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "2611": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "2612": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "REVERT", "path": "0"}, "2613": {"fn": "WrappedPunk.unpause", "offset": [2619, 2686], "op": "JUMPDEST", "path": "0"}, "2614": {"fn": "WrappedPunk.unpause", "offset": [56060, 56070], "op": "PUSH2", "path": "0", "statement": 13, "value": "0xA3D"}, "2617": {"fn": "WrappedPunk.unpause", "offset": [56060, 56068], "op": "PUSH2", "path": "0", "value": "0x1781"}, "2620": {"fn": "WrappedPunk.unpause", "jump": "i", "offset": [56060, 56070], "op": "JUMP", "path": "0"}, "2621": {"fn": "WrappedPunk.unpause", "offset": [56060, 56070], "op": "JUMPDEST", "path": "0"}, "2622": {"fn": "WrappedPunk.unpause", "jump": "o", "offset": [56014, 56077], "op": "JUMP", "path": "0"}, "2623": {"fn": "ERC721.safeTransferFrom", "offset": [28538, 28700], "op": "JUMPDEST", "path": "0"}, "2624": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "PUSH2", "path": "0", "statement": 14, "value": "0x959"}, "2627": {"fn": "ERC721.safeTransferFrom", "offset": [28671, 28675], "op": "DUP4", "path": "0"}, "2628": {"fn": "ERC721.safeTransferFrom", "offset": [28677, 28679], "op": "DUP4", "path": "0"}, "2629": {"fn": "ERC721.safeTransferFrom", "offset": [28681, 28688], "op": "DUP4", "path": "0"}, "2630": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "PUSH1", "path": "0", "value": "0x40"}, "2632": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "MLOAD", "path": "0"}, "2633": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "DUP1", "path": "0"}, "2634": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "PUSH1", "path": "0", "value": "0x20"}, "2636": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "ADD", "path": "0"}, "2637": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "PUSH1", "path": "0", "value": "0x40"}, "2639": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "MSTORE", "path": "0"}, "2640": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "DUP1", "path": "0"}, "2641": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "PUSH1", "path": "0", "value": "0x0"}, "2643": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "DUP2", "path": "0"}, "2644": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "MSTORE", "path": "0"}, "2645": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28693], "op": "POP", "path": "0"}, "2646": {"fn": "ERC721.safeTransferFrom", "offset": [28654, 28670], "op": "PUSH2", "path": "0", "value": "0x1128"}, "2649": {"fn": "ERC721.safeTransferFrom", "jump": "i", "offset": [28654, 28693], "op": "JUMP", "path": "0"}, "2650": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "JUMPDEST", "path": "0"}, "2651": {"offset": [4926, 4933], "op": "PUSH1", "path": "0", "value": "0xE"}, "2653": {"fn": "WrappedPunk.burn", "offset": [4926, 4933], "op": "SLOAD", "path": "0"}, "2654": {"fn": "WrappedPunk.burn", "offset": [4926, 4933], "op": "PUSH1", "path": "0", "value": "0xFF"}, "2656": {"fn": "WrappedPunk.burn", "offset": [4926, 4933], "op": "AND", "path": "0"}, "2657": {"offset": [4925, 4933], "op": "ISZERO", "path": "0"}, "2658": {"offset": [4917, 4954], "op": "PUSH2", "path": "0", "value": "0xAA5"}, "2661": {"offset": [4917, 4954], "op": "JUMPI", "path": "0"}, "2662": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x40"}, "2664": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "DUP1", "path": "0"}, "2665": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "MLOAD", "path": "0"}, "2666": {"op": "PUSH3", "value": "0x461BCD"}, "2670": {"op": "PUSH1", "value": "0xE5"}, "2672": {"op": "SHL"}, "2673": {"offset": [4917, 4954], "op": "DUP2", "path": "0"}, "2674": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "2675": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x20"}, "2677": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x4"}, "2679": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "2680": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "2681": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "2682": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x10"}, "2684": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x24"}, "2686": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "2687": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "2688": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "2689": {"op": "PUSH16", "value": "0x14185D5CD8589B194E881C185D5CD959"}, "2706": {"op": "PUSH1", "value": "0x82"}, "2708": {"op": "SHL"}, "2709": {"offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x44"}, "2711": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "2712": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "2713": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "2714": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "2715": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "MLOAD", "path": "0"}, "2716": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "2717": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "DUP2", "path": "0"}, "2718": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "2719": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "SUB", "path": "0"}, "2720": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x64"}, "2722": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "2723": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "2724": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "REVERT", "path": "0"}, "2725": {"fn": "WrappedPunk.burn", "offset": [4917, 4954], "op": "JUMPDEST", "path": "0"}, "2726": {"fn": "WrappedPunk.burn", "offset": [57130, 57144], "op": "PUSH1", "path": "0", "value": "0x0"}, "2728": {"fn": "WrappedPunk.burn", "offset": [57147, 57159], "op": "PUSH2", "path": "0", "value": "0xAAF"}, "2731": {"fn": "WrappedPunk.burn", "offset": [57147, 57157], "op": "PUSH2", "path": "0", "value": "0x1683"}, "2734": {"fn": "WrappedPunk.burn", "jump": "i", "offset": [57147, 57159], "op": "JUMP", "path": "0"}, "2735": {"fn": "WrappedPunk.burn", "offset": [57147, 57159], "op": "JUMPDEST", "path": "0"}, "2736": {"fn": "WrappedPunk.burn", "offset": [57130, 57159], "op": "SWAP1", "path": "0"}, "2737": {"fn": "WrappedPunk.burn", "offset": [57130, 57159], "op": "POP", "path": "0"}, "2738": {"fn": "WrappedPunk.burn", "offset": [57191, 57228], "op": "PUSH2", "path": "0", "statement": 15, "value": "0xABB"}, "2741": {"fn": "WrappedPunk.burn", "offset": [57210, 57216], "op": "DUP2", "path": "0"}, "2742": {"fn": "WrappedPunk.burn", "offset": [57218, 57227], "op": "DUP4", "path": "0"}, "2743": {"fn": "WrappedPunk.burn", "offset": [57191, 57209], "op": "PUSH2", "path": "0", "value": "0x1687"}, "2746": {"fn": "WrappedPunk.burn", "jump": "i", "offset": [57191, 57228], "op": "JUMP", "path": "0"}, "2747": {"branch": 128, "fn": "WrappedPunk.burn", "offset": [57191, 57228], "op": "JUMPDEST", "path": "0"}, "2748": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH2", "path": "0", "value": "0xAF6"}, "2751": {"branch": 128, "fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "JUMPI", "path": "0"}, "2752": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH1", "path": "0", "value": "0x40"}, "2754": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "MLOAD", "path": "0"}, "2755": {"op": "PUSH3", "value": "0x461BCD"}, "2759": {"op": "PUSH1", "value": "0xE5"}, "2761": {"op": "SHL"}, "2762": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP2", "path": "0"}, "2763": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "MSTORE", "path": "0"}, "2764": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH1", "path": "0", "value": "0x4"}, "2766": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "ADD", "path": "0"}, "2767": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP1", "path": "0"}, "2768": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP1", "path": "0"}, "2769": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH1", "path": "0", "value": "0x20"}, "2771": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "ADD", "path": "0"}, "2772": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP3", "path": "0"}, "2773": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP2", "path": "0"}, "2774": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "SUB", "path": "0"}, "2775": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP3", "path": "0"}, "2776": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "MSTORE", "path": "0"}, "2777": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH1", "path": "0", "value": "0x2D"}, "2779": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP2", "path": "0"}, "2780": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "MSTORE", "path": "0"}, "2781": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH1", "path": "0", "value": "0x20"}, "2783": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "ADD", "path": "0"}, "2784": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP1", "path": "0"}, "2785": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH2", "path": "0", "value": "0x260B"}, "2788": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH1", "path": "0", "value": "0x2D"}, "2790": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "SWAP2", "path": "0"}, "2791": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "CODECOPY", "path": "0"}, "2792": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH1", "path": "0", "value": "0x40"}, "2794": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "ADD", "path": "0"}, "2795": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "SWAP2", "path": "0"}, "2796": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "POP", "path": "0"}, "2797": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "POP", "path": "0"}, "2798": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "PUSH1", "path": "0", "value": "0x40"}, "2800": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "MLOAD", "path": "0"}, "2801": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "DUP1", "path": "0"}, "2802": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "SWAP2", "path": "0"}, "2803": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "SUB", "path": "0"}, "2804": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "SWAP1", "path": "0"}, "2805": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "REVERT", "path": "0"}, "2806": {"fn": "WrappedPunk.burn", "offset": [57170, 57299], "op": "JUMPDEST", "path": "0"}, "2807": {"fn": "WrappedPunk.burn", "offset": [57310, 57326], "op": "PUSH2", "path": "0", "statement": 16, "value": "0xAFF"}, "2810": {"fn": "WrappedPunk.burn", "offset": [57316, 57325], "op": "DUP3", "path": "0"}, "2811": {"fn": "WrappedPunk.burn", "offset": [57310, 57315], "op": "PUSH2", "path": "0", "value": "0x181F"}, "2814": {"fn": "WrappedPunk.burn", "jump": "i", "offset": [57310, 57326], "op": "JUMP", "path": "0"}, "2815": {"fn": "WrappedPunk.burn", "offset": [57310, 57326], "op": "JUMPDEST", "path": "0"}, "2816": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "PUSH1", "path": "0", "statement": 17, "value": "0xE"}, "2818": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "SLOAD", "path": "0"}, "2819": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "PUSH1", "path": "0", "value": "0x40"}, "2821": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP1", "path": "0"}, "2822": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "MLOAD", "path": "0"}, "2823": {"op": "PUSH4", "value": "0x22DCA8BB"}, "2828": {"op": "PUSH1", "value": "0xE2"}, "2830": {"op": "SHL"}, "2831": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP2", "path": "0"}, "2832": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "MSTORE", "path": "0"}, "2833": {"op": "PUSH1", "value": "0x1"}, "2835": {"op": "PUSH1", "value": "0x1"}, "2837": {"op": "PUSH1", "value": "0xA0"}, "2839": {"op": "SHL"}, "2840": {"op": "SUB"}, "2841": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP5", "path": "0"}, "2842": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP2", "path": "0"}, "2843": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "AND", "path": "0"}, "2844": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "PUSH1", "path": "0", "value": "0x4"}, "2846": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP4", "path": "0"}, "2847": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "ADD", "path": "0"}, "2848": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "MSTORE", "path": "0"}, "2849": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "PUSH1", "path": "0", "value": "0x24"}, "2851": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP3", "path": "0"}, "2852": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "ADD", "path": "0"}, "2853": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP7", "path": "0"}, "2854": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "SWAP1", "path": "0"}, "2855": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "MSTORE", "path": "0"}, "2856": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "SWAP2", "path": "0"}, "2857": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "MLOAD", "path": "0"}, "2858": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "PUSH2", "path": "0", "value": "0x100"}, "2861": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "SWAP1", "path": "0"}, "2862": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "SWAP4", "path": "0"}, "2863": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "DIV", "path": "0"}, "2864": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "SWAP1", "path": "0"}, "2865": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "SWAP2", "path": "0"}, "2866": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "AND", "path": "0"}, "2867": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "SWAP2", "path": "0"}, "2868": {"fn": "WrappedPunk.burn", "offset": [57424, 57450], "op": "PUSH4", "path": "0", "value": "0x8B72A2EC"}, "2873": {"fn": "WrappedPunk.burn", "offset": [57424, 57450], "op": "SWAP2", "path": "0"}, "2874": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "PUSH1", "path": "0", "value": "0x44"}, "2876": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP1", "path": "0"}, "2877": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP3", "path": "0"}, "2878": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "ADD", "path": "0"}, "2879": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "SWAP3", "path": "0"}, "2880": {"op": "PUSH1", "value": "0x0"}, "2882": {"op": "SWAP3"}, "2883": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "SWAP1", "path": "0"}, "2884": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "SWAP2", "path": "0"}, "2885": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "SWAP1", "path": "0"}, "2886": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP3", "path": "0"}, "2887": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "SWAP1", "path": "0"}, "2888": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "SUB", "path": "0"}, "2889": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "ADD", "path": "0"}, "2890": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP2", "path": "0"}, "2891": {"op": "DUP4"}, "2892": {"fn": "WrappedPunk.burn", "offset": [57424, 57437], "op": "DUP8", "path": "0"}, "2893": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "DUP1", "path": "0"}, "2894": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "EXTCODESIZE", "path": "0"}, "2895": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "ISZERO", "path": "0"}, "2896": {"op": "DUP1"}, "2897": {"op": "ISZERO"}, "2898": {"op": "PUSH2", "value": "0xB5A"}, "2901": {"op": "JUMPI"}, "2902": {"op": "PUSH1", "value": "0x0"}, "2904": {"op": "DUP1"}, "2905": {"op": "REVERT"}, "2906": {"op": "JUMPDEST"}, "2907": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "POP", "path": "0"}, "2908": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "GAS", "path": "0"}, "2909": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "CALL", "path": "0"}, "2910": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "ISZERO", "path": "0"}, "2911": {"op": "DUP1"}, "2912": {"op": "ISZERO"}, "2913": {"op": "PUSH2", "value": "0xB6E"}, "2916": {"op": "JUMPI"}, "2917": {"op": "RETURNDATASIZE"}, "2918": {"op": "PUSH1", "value": "0x0"}, "2920": {"op": "DUP1"}, "2921": {"op": "RETURNDATACOPY"}, "2922": {"op": "RETURNDATASIZE"}, "2923": {"op": "PUSH1", "value": "0x0"}, "2925": {"op": "REVERT"}, "2926": {"op": "JUMPDEST"}, "2927": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "POP", "path": "0"}, "2928": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "POP", "path": "0"}, "2929": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "POP", "path": "0"}, "2930": {"fn": "WrappedPunk.burn", "offset": [57424, 57469], "op": "POP", "path": "0"}, "2931": {"offset": [4964, 4965], "op": "POP", "path": "0"}, "2932": {"fn": "WrappedPunk.burn", "offset": [57066, 57476], "op": "POP", "path": "0"}, "2933": {"fn": "WrappedPunk.burn", "jump": "o", "offset": [57066, 57476], "op": "JUMP", "path": "0"}, "2934": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "JUMPDEST", "path": "0"}, "2935": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40477, 40484], "op": "PUSH1", "path": "0", "value": "0x0"}, "2937": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40525, 40538], "op": "PUSH2", "path": "0", "statement": 18, "value": "0xB80"}, "2940": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40525, 40536], "op": "PUSH2", "path": "0", "value": "0x8FC"}, "2943": {"fn": "ERC721Enumerable.tokenByIndex", "jump": "i", "offset": [40525, 40538], "op": "JUMP", "path": "0"}, "2944": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40525, 40538], "op": "JUMPDEST", "path": "0"}, "2945": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40517, 40522], "op": "DUP3", "path": "0"}, "2946": {"branch": 129, "fn": "ERC721Enumerable.tokenByIndex", "offset": [40517, 40538], "op": "LT", "path": "0"}, "2947": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH2", "path": "0", "value": "0xBBD"}, "2950": {"branch": 129, "fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "JUMPI", "path": "0"}, "2951": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH1", "path": "0", "value": "0x40"}, "2953": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "MLOAD", "path": "0"}, "2954": {"op": "PUSH3", "value": "0x461BCD"}, "2958": {"op": "PUSH1", "value": "0xE5"}, "2960": {"op": "SHL"}, "2961": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP2", "path": "0"}, "2962": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "MSTORE", "path": "0"}, "2963": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH1", "path": "0", "value": "0x4"}, "2965": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "ADD", "path": "0"}, "2966": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP1", "path": "0"}, "2967": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP1", "path": "0"}, "2968": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH1", "path": "0", "value": "0x20"}, "2970": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "ADD", "path": "0"}, "2971": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP3", "path": "0"}, "2972": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP2", "path": "0"}, "2973": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "SUB", "path": "0"}, "2974": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP3", "path": "0"}, "2975": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "MSTORE", "path": "0"}, "2976": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH1", "path": "0", "value": "0x2C"}, "2978": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP2", "path": "0"}, "2979": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "MSTORE", "path": "0"}, "2980": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH1", "path": "0", "value": "0x20"}, "2982": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "ADD", "path": "0"}, "2983": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP1", "path": "0"}, "2984": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH2", "path": "0", "value": "0x28B8"}, "2987": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH1", "path": "0", "value": "0x2C"}, "2989": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "SWAP2", "path": "0"}, "2990": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "CODECOPY", "path": "0"}, "2991": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH1", "path": "0", "value": "0x40"}, "2993": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "ADD", "path": "0"}, "2994": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "SWAP2", "path": "0"}, "2995": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "POP", "path": "0"}, "2996": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "POP", "path": "0"}, "2997": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "PUSH1", "path": "0", "value": "0x40"}, "2999": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "MLOAD", "path": "0"}, "3000": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "DUP1", "path": "0"}, "3001": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "SWAP2", "path": "0"}, "3002": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "SUB", "path": "0"}, "3003": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "SWAP1", "path": "0"}, "3004": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "REVERT", "path": "0"}, "3005": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40496, 40608], "op": "JUMPDEST", "path": "0"}, "3006": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40636], "op": "PUSH1", "path": "0", "statement": 19, "value": "0x8"}, "3008": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40637, 40642], "op": "DUP3", "path": "0"}, "3009": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "DUP2", "path": "0"}, "3010": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "SLOAD", "path": "0"}, "3011": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "DUP2", "path": "0"}, "3012": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "LT", "path": "0"}, "3013": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "PUSH2", "path": "0", "value": "0xBCA"}, "3016": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "JUMPI", "path": "0"}, "3017": {"dev": "Index out of range", "fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "INVALID", "path": "0"}, "3018": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "JUMPDEST", "path": "0"}, "3019": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "SWAP1", "path": "0"}, "3020": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "PUSH1", "path": "0", "value": "0x0"}, "3022": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "MSTORE", "path": "0"}, "3023": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "PUSH1", "path": "0", "value": "0x20"}, "3025": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "PUSH1", "path": "0", "value": "0x0"}, "3027": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "KECCAK256", "path": "0"}, "3028": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "ADD", "path": "0"}, "3029": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40626, 40643], "op": "SLOAD", "path": "0"}, "3030": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40619, 40643], "op": "SWAP1", "path": "0"}, "3031": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40619, 40643], "op": "POP", "path": "0"}, "3032": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "SWAP2", "path": "0"}, "3033": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "SWAP1", "path": "0"}, "3034": {"fn": "ERC721Enumerable.tokenByIndex", "offset": [40419, 40650], "op": "POP", "path": "0"}, "3035": {"fn": "ERC721Enumerable.tokenByIndex", "jump": "o", "offset": [40419, 40650], "op": "JUMP", "path": "0"}, "3036": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "JUMPDEST", "path": "0"}, "3037": {"offset": [2637, 2649], "op": "PUSH2", "path": "0", "value": "0xBE4"}, "3040": {"offset": [2637, 2647], "op": "PUSH2", "path": "0", "value": "0x1683"}, "3043": {"jump": "i", "offset": [2637, 2649], "op": "JUMP", "path": "0"}, "3044": {"fn": "WrappedPunk.setBaseURI", "offset": [2637, 2649], "op": "JUMPDEST", "path": "0"}, "3045": {"offset": [2627, 2633], "op": "PUSH1", "path": "0", "value": "0x0"}, "3047": {"fn": "WrappedPunk.setBaseURI", "offset": [2627, 2633], "op": "SLOAD", "path": "0"}, "3048": {"op": "PUSH1", "value": "0x1"}, "3050": {"op": "PUSH1", "value": "0x1"}, "3052": {"op": "PUSH1", "value": "0xA0"}, "3054": {"op": "SHL"}, "3055": {"op": "SUB"}, "3056": {"offset": [2627, 2633], "op": "SWAP1", "path": "0"}, "3057": {"fn": "WrappedPunk.setBaseURI", "offset": [2627, 2633], "op": "DUP2", "path": "0"}, "3058": {"fn": "WrappedPunk.setBaseURI", "offset": [2627, 2633], "op": "AND", "path": "0"}, "3059": {"offset": [2627, 2649], "op": "SWAP2", "path": "0"}, "3060": {"fn": "WrappedPunk.setBaseURI", "offset": [2627, 2649], "op": "AND", "path": "0"}, "3061": {"fn": "WrappedPunk.setBaseURI", "offset": [2627, 2649], "op": "EQ", "path": "0"}, "3062": {"offset": [2619, 2686], "op": "PUSH2", "path": "0", "value": "0xC34"}, "3065": {"offset": [2619, 2686], "op": "JUMPI", "path": "0"}, "3066": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x40"}, "3068": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "DUP1", "path": "0"}, "3069": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "3070": {"op": "PUSH3", "value": "0x461BCD"}, "3074": {"op": "PUSH1", "value": "0xE5"}, "3076": {"op": "SHL"}, "3077": {"offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3078": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3079": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x20"}, "3081": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x4"}, "3083": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3084": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3085": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3086": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3087": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3088": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x24"}, "3090": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3091": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3092": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3093": {"op": "PUSH1", "value": "0x0"}, "3095": {"op": "DUP1"}, "3096": {"op": "MLOAD"}, "3097": {"op": "PUSH1", "value": "0x20"}, "3099": {"op": "PUSH2", "value": "0x27EE"}, "3102": {"op": "DUP4"}, "3103": {"op": "CODECOPY"}, "3104": {"op": "DUP2"}, "3105": {"op": "MLOAD"}, "3106": {"op": "SWAP2"}, "3107": {"op": "MSTORE"}, "3108": {"offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x44"}, "3110": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3111": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3112": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3113": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3114": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "3115": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3116": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3117": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3118": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "SUB", "path": "0"}, "3119": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x64"}, "3121": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3122": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3123": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "REVERT", "path": "0"}, "3124": {"fn": "WrappedPunk.setBaseURI", "offset": [2619, 2686], "op": "JUMPDEST", "path": "0"}, "3125": {"fn": "WrappedPunk.setBaseURI", "offset": [55780, 55800], "op": "PUSH2", "path": "0", "statement": 20, "value": "0xC3D"}, "3128": {"fn": "WrappedPunk.setBaseURI", "offset": [55792, 55799], "op": "DUP2", "path": "0"}, "3129": {"fn": "WrappedPunk.setBaseURI", "offset": [55780, 55791], "op": "PUSH2", "path": "0", "value": "0x1831"}, "3132": {"fn": "WrappedPunk.setBaseURI", "jump": "i", "offset": [55780, 55800], "op": "JUMP", "path": "0"}, "3133": {"fn": "WrappedPunk.setBaseURI", "offset": [55780, 55800], "op": "JUMPDEST", "path": "0"}, "3134": {"fn": "WrappedPunk.setBaseURI", "offset": [55710, 55807], "op": "POP", "path": "0"}, "3135": {"fn": "WrappedPunk.setBaseURI", "jump": "o", "offset": [55710, 55807], "op": "JUMP", "path": "0"}, "3136": {"fn": "Pausable.paused", "offset": [4620, 4696], "op": "JUMPDEST", "path": "0"}, "3137": {"fn": "Pausable.paused", "offset": [4682, 4689], "op": "PUSH1", "path": "0", "statement": 21, "value": "0xE"}, "3139": {"fn": "Pausable.paused", "offset": [4682, 4689], "op": "SLOAD", "path": "0"}, "3140": {"fn": "Pausable.paused", "offset": [4682, 4689], "op": "PUSH1", "path": "0", "value": "0xFF"}, "3142": {"fn": "Pausable.paused", "offset": [4682, 4689], "op": "AND", "path": "0"}, "3143": {"fn": "Pausable.paused", "offset": [4620, 4696], "op": "SWAP1", "path": "0"}, "3144": {"fn": "Pausable.paused", "jump": "o", "offset": [4620, 4696], "op": "JUMP", "path": "0"}, "3145": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "JUMPDEST", "path": "0"}, "3146": {"fn": "ERC721.ownerOf", "offset": [24455, 24462], "op": "PUSH1", "path": "0", "value": "0x0"}, "3148": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "DUP2", "path": "0"}, "3149": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "DUP2", "path": "0"}, "3150": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "MSTORE", "path": "0"}, "3151": {"fn": "ERC721.ownerOf", "offset": [24490, 24501], "op": "PUSH1", "path": "0", "value": "0x2"}, "3153": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "PUSH1", "path": "0", "value": "0x20"}, "3155": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "MSTORE", "path": "0"}, "3156": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "PUSH1", "path": "0", "value": "0x40"}, "3158": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "DUP2", "path": "0"}, "3159": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "KECCAK256", "path": "0"}, "3160": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "SLOAD", "path": "0"}, "3161": {"op": "PUSH1", "value": "0x1"}, "3163": {"op": "PUSH1", "value": "0x1"}, "3165": {"op": "PUSH1", "value": "0xA0"}, "3167": {"op": "SHL"}, "3168": {"op": "SUB"}, "3169": {"fn": "ERC721.ownerOf", "offset": [24490, 24510], "op": "AND", "path": "0"}, "3170": {"branch": 130, "fn": "ERC721.ownerOf", "offset": [24542, 24561], "op": "DUP1", "path": "0", "statement": 22}, "3171": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH2", "path": "0", "value": "0xC9D"}, "3174": {"branch": 130, "fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "JUMPI", "path": "0"}, "3175": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH1", "path": "0", "value": "0x40"}, "3177": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "MLOAD", "path": "0"}, "3178": {"op": "PUSH3", "value": "0x461BCD"}, "3182": {"op": "PUSH1", "value": "0xE5"}, "3184": {"op": "SHL"}, "3185": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP2", "path": "0"}, "3186": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "MSTORE", "path": "0"}, "3187": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH1", "path": "0", "value": "0x4"}, "3189": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "ADD", "path": "0"}, "3190": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP1", "path": "0"}, "3191": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP1", "path": "0"}, "3192": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH1", "path": "0", "value": "0x20"}, "3194": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "ADD", "path": "0"}, "3195": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP3", "path": "0"}, "3196": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP2", "path": "0"}, "3197": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "SUB", "path": "0"}, "3198": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP3", "path": "0"}, "3199": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "MSTORE", "path": "0"}, "3200": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH1", "path": "0", "value": "0x29"}, "3202": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP2", "path": "0"}, "3203": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "MSTORE", "path": "0"}, "3204": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH1", "path": "0", "value": "0x20"}, "3206": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "ADD", "path": "0"}, "3207": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP1", "path": "0"}, "3208": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH2", "path": "0", "value": "0x276D"}, "3211": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH1", "path": "0", "value": "0x29"}, "3213": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "SWAP2", "path": "0"}, "3214": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "CODECOPY", "path": "0"}, "3215": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH1", "path": "0", "value": "0x40"}, "3217": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "ADD", "path": "0"}, "3218": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "SWAP2", "path": "0"}, "3219": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "POP", "path": "0"}, "3220": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "POP", "path": "0"}, "3221": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "PUSH1", "path": "0", "value": "0x40"}, "3223": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "MLOAD", "path": "0"}, "3224": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "DUP1", "path": "0"}, "3225": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "SWAP2", "path": "0"}, "3226": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "SUB", "path": "0"}, "3227": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "SWAP1", "path": "0"}, "3228": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "REVERT", "path": "0"}, "3229": {"fn": "ERC721.ownerOf", "offset": [24521, 24628], "op": "JUMPDEST", "path": "0"}, "3230": {"fn": "ERC721.ownerOf", "offset": [24646, 24651], "op": "SWAP3", "path": "0", "statement": 23}, "3231": {"fn": "ERC721.ownerOf", "offset": [24400, 24658], "op": "SWAP2", "path": "0"}, "3232": {"op": "POP"}, "3233": {"op": "POP"}, "3234": {"fn": "ERC721.ownerOf", "jump": "o", "offset": [24400, 24658], "op": "JUMP", "path": "0"}, "3235": {"fn": "ERC721Metadata.baseURI", "offset": [52389, 52476], "op": "JUMPDEST", "path": "0"}, "3236": {"fn": "ERC721Metadata.baseURI", "offset": [52461, 52469], "op": "PUSH1", "path": "0", "statement": 24, "value": "0xC"}, "3238": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP1", "path": "0"}, "3239": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SLOAD", "path": "0"}, "3240": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH1", "path": "0", "value": "0x40"}, "3242": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP1", "path": "0"}, "3243": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "MLOAD", "path": "0"}, "3244": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH1", "path": "0", "value": "0x20"}, "3246": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH1", "path": "0", "value": "0x1F"}, "3248": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH1", "path": "0", "value": "0x2"}, "3250": {"op": "PUSH1", "value": "0x0"}, "3252": {"op": "NOT"}, "3253": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH2", "path": "0", "value": "0x100"}, "3256": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH1", "path": "0", "value": "0x1"}, "3258": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP9", "path": "0"}, "3259": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "AND", "path": "0"}, "3260": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "ISZERO", "path": "0"}, "3261": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "MUL", "path": "0"}, "3262": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "ADD", "path": "0"}, "3263": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP1", "path": "0"}, "3264": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP6", "path": "0"}, "3265": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "AND", "path": "0"}, "3266": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP5", "path": "0"}, "3267": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP1", "path": "0"}, "3268": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP5", "path": "0"}, "3269": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DIV", "path": "0"}, "3270": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP4", "path": "0"}, "3271": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP5", "path": "0"}, "3272": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "ADD", "path": "0"}, "3273": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP2", "path": "0"}, "3274": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP1", "path": "0"}, "3275": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DIV", "path": "0"}, "3276": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP2", "path": "0"}, "3277": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "MUL", "path": "0"}, "3278": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP3", "path": "0"}, "3279": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "ADD", "path": "0"}, "3280": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP2", "path": "0"}, "3281": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "ADD", "path": "0"}, "3282": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP1", "path": "0"}, "3283": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP3", "path": "0"}, "3284": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "MSTORE", "path": "0"}, "3285": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP3", "path": "0"}, "3286": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP2", "path": "0"}, "3287": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "MSTORE", "path": "0"}, "3288": {"fn": "ERC721Metadata.baseURI", "offset": [52429, 52442], "op": "PUSH1", "path": "0", "value": "0x60"}, "3290": {"fn": "ERC721Metadata.baseURI", "offset": [52429, 52442], "op": "SWAP4", "path": "0"}, "3291": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP1", "path": "0"}, "3292": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP3", "path": "0"}, "3293": {"fn": "ERC721Metadata.baseURI", "offset": [52461, 52469], "op": "SWAP1", "path": "0"}, "3294": {"fn": "ERC721Metadata.baseURI", "offset": [52461, 52469], "op": "SWAP2", "path": "0"}, "3295": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP4", "path": "0"}, "3296": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "ADD", "path": "0"}, "3297": {"fn": "ERC721Metadata.baseURI", "offset": [52461, 52469], "op": "DUP3", "path": "0"}, "3298": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP3", "path": "0"}, "3299": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP1", "path": "0"}, "3300": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "ISZERO", "path": "0"}, "3301": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH2", "path": "0", "value": "0x767"}, "3304": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "JUMPI", "path": "0"}, "3305": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP1", "path": "0"}, "3306": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH1", "path": "0", "value": "0x1F"}, "3308": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "LT", "path": "0"}, "3309": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH2", "path": "0", "value": "0x73C"}, "3312": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "JUMPI", "path": "0"}, "3313": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH2", "path": "0", "value": "0x100"}, "3316": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP1", "path": "0"}, "3317": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP4", "path": "0"}, "3318": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SLOAD", "path": "0"}, "3319": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DIV", "path": "0"}, "3320": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "MUL", "path": "0"}, "3321": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "DUP4", "path": "0"}, "3322": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "MSTORE", "path": "0"}, "3323": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP2", "path": "0"}, "3324": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH1", "path": "0", "value": "0x20"}, "3326": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "ADD", "path": "0"}, "3327": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "SWAP2", "path": "0"}, "3328": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "PUSH2", "path": "0", "value": "0x767"}, "3331": {"fn": "ERC721Metadata.baseURI", "offset": [52454, 52469], "op": "JUMP", "path": "0"}, "3332": {"fn": "ERC721.balanceOf", "offset": [23940, 24181], "op": "JUMPDEST", "path": "0"}, "3333": {"fn": "ERC721.balanceOf", "offset": [23995, 24002], "op": "PUSH1", "path": "0", "value": "0x0"}, "3335": {"op": "PUSH1", "value": "0x1"}, "3337": {"op": "PUSH1", "value": "0x1"}, "3339": {"op": "PUSH1", "value": "0xA0"}, "3341": {"op": "SHL"}, "3342": {"op": "SUB"}, "3343": {"fn": "ERC721.balanceOf", "offset": [24035, 24054], "op": "DUP3", "path": "0", "statement": 25}, "3344": {"branch": 131, "fn": "ERC721.balanceOf", "offset": [24035, 24054], "op": "AND", "path": "0"}, "3345": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH2", "path": "0", "value": "0xD4B"}, "3348": {"branch": 131, "fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "JUMPI", "path": "0"}, "3349": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH1", "path": "0", "value": "0x40"}, "3351": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "MLOAD", "path": "0"}, "3352": {"op": "PUSH3", "value": "0x461BCD"}, "3356": {"op": "PUSH1", "value": "0xE5"}, "3358": {"op": "SHL"}, "3359": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP2", "path": "0"}, "3360": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "MSTORE", "path": "0"}, "3361": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH1", "path": "0", "value": "0x4"}, "3363": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "ADD", "path": "0"}, "3364": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP1", "path": "0"}, "3365": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP1", "path": "0"}, "3366": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH1", "path": "0", "value": "0x20"}, "3368": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "ADD", "path": "0"}, "3369": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP3", "path": "0"}, "3370": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP2", "path": "0"}, "3371": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "SUB", "path": "0"}, "3372": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP3", "path": "0"}, "3373": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "MSTORE", "path": "0"}, "3374": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH1", "path": "0", "value": "0x2A"}, "3376": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP2", "path": "0"}, "3377": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "MSTORE", "path": "0"}, "3378": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH1", "path": "0", "value": "0x20"}, "3380": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "ADD", "path": "0"}, "3381": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP1", "path": "0"}, "3382": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH2", "path": "0", "value": "0x2743"}, "3385": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH1", "path": "0", "value": "0x2A"}, "3387": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "SWAP2", "path": "0"}, "3388": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "CODECOPY", "path": "0"}, "3389": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH1", "path": "0", "value": "0x40"}, "3391": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "ADD", "path": "0"}, "3392": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "SWAP2", "path": "0"}, "3393": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "POP", "path": "0"}, "3394": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "POP", "path": "0"}, "3395": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "PUSH1", "path": "0", "value": "0x40"}, "3397": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "MLOAD", "path": "0"}, "3398": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "DUP1", "path": "0"}, "3399": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "SWAP2", "path": "0"}, "3400": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "SUB", "path": "0"}, "3401": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "SWAP1", "path": "0"}, "3402": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "REVERT", "path": "0"}, "3403": {"fn": "ERC721.balanceOf", "offset": [24014, 24122], "op": "JUMPDEST", "path": "0"}, "3404": {"op": "PUSH1", "value": "0x1"}, "3406": {"op": "PUSH1", "value": "0x1"}, "3408": {"op": "PUSH1", "value": "0xA0"}, "3410": {"op": "SHL"}, "3411": {"op": "SUB"}, "3412": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "DUP3", "path": "0", "statement": 26}, "3413": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "AND", "path": "0"}, "3414": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "PUSH1", "path": "0", "value": "0x0"}, "3416": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "SWAP1", "path": "0"}, "3417": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "DUP2", "path": "0"}, "3418": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "MSTORE", "path": "0"}, "3419": {"fn": "ERC721.balanceOf", "offset": [24140, 24157], "op": "PUSH1", "path": "0", "value": "0x4"}, "3421": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "PUSH1", "path": "0", "value": "0x20"}, "3423": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "MSTORE", "path": "0"}, "3424": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "PUSH1", "path": "0", "value": "0x40"}, "3426": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "SWAP1", "path": "0"}, "3427": {"fn": "ERC721.balanceOf", "offset": [24140, 24164], "op": "KECCAK256", "path": "0"}, "3428": {"fn": "ERC721.balanceOf", "offset": [24140, 24174], "op": "PUSH2", "path": "0", "value": "0xC9D"}, "3431": {"fn": "ERC721.balanceOf", "offset": [24140, 24174], "op": "SWAP1", "path": "0"}, "3432": {"fn": "ERC721.balanceOf", "offset": [24140, 24172], "op": "PUSH2", "path": "0", "value": "0x1848"}, "3435": {"fn": "ERC721.balanceOf", "jump": "i", "offset": [24140, 24174], "op": "JUMP", "path": "0"}, "3436": {"fn": "Ownable.renounceOwnership", "offset": [3046, 3184], "op": "JUMPDEST", "path": "0"}, "3437": {"offset": [2637, 2649], "op": "PUSH2", "path": "0", "value": "0xD74"}, "3440": {"offset": [2637, 2647], "op": "PUSH2", "path": "0", "value": "0x1683"}, "3443": {"jump": "i", "offset": [2637, 2649], "op": "JUMP", "path": "0"}, "3444": {"fn": "Ownable.renounceOwnership", "offset": [2637, 2649], "op": "JUMPDEST", "path": "0"}, "3445": {"offset": [2627, 2633], "op": "PUSH1", "path": "0", "value": "0x0"}, "3447": {"fn": "Ownable.renounceOwnership", "offset": [2627, 2633], "op": "SLOAD", "path": "0"}, "3448": {"op": "PUSH1", "value": "0x1"}, "3450": {"op": "PUSH1", "value": "0x1"}, "3452": {"op": "PUSH1", "value": "0xA0"}, "3454": {"op": "SHL"}, "3455": {"op": "SUB"}, "3456": {"offset": [2627, 2633], "op": "SWAP1", "path": "0"}, "3457": {"fn": "Ownable.renounceOwnership", "offset": [2627, 2633], "op": "DUP2", "path": "0"}, "3458": {"fn": "Ownable.renounceOwnership", "offset": [2627, 2633], "op": "AND", "path": "0"}, "3459": {"offset": [2627, 2649], "op": "SWAP2", "path": "0"}, "3460": {"fn": "Ownable.renounceOwnership", "offset": [2627, 2649], "op": "AND", "path": "0"}, "3461": {"fn": "Ownable.renounceOwnership", "offset": [2627, 2649], "op": "EQ", "path": "0"}, "3462": {"offset": [2619, 2686], "op": "PUSH2", "path": "0", "value": "0xDC4"}, "3465": {"offset": [2619, 2686], "op": "JUMPI", "path": "0"}, "3466": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x40"}, "3468": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "DUP1", "path": "0"}, "3469": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "3470": {"op": "PUSH3", "value": "0x461BCD"}, "3474": {"op": "PUSH1", "value": "0xE5"}, "3476": {"op": "SHL"}, "3477": {"offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3478": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3479": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x20"}, "3481": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x4"}, "3483": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3484": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3485": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3486": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3487": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3488": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x24"}, "3490": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3491": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3492": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3493": {"op": "PUSH1", "value": "0x0"}, "3495": {"op": "DUP1"}, "3496": {"op": "MLOAD"}, "3497": {"op": "PUSH1", "value": "0x20"}, "3499": {"op": "PUSH2", "value": "0x27EE"}, "3502": {"op": "DUP4"}, "3503": {"op": "CODECOPY"}, "3504": {"op": "DUP2"}, "3505": {"op": "MLOAD"}, "3506": {"op": "SWAP2"}, "3507": {"op": "MSTORE"}, "3508": {"offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x44"}, "3510": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3511": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3512": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3513": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3514": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "3515": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3516": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3517": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3518": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "SUB", "path": "0"}, "3519": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x64"}, "3521": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3522": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3523": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "REVERT", "path": "0"}, "3524": {"fn": "Ownable.renounceOwnership", "offset": [2619, 2686], "op": "JUMPDEST", "path": "0"}, "3525": {"fn": "Ownable.renounceOwnership", "offset": [3144, 3145], "op": "PUSH1", "path": "0", "statement": 27, "value": "0x0"}, "3527": {"fn": "Ownable.renounceOwnership", "offset": [3128, 3134], "op": "DUP1", "path": "0"}, "3528": {"fn": "Ownable.renounceOwnership", "offset": [3128, 3134], "op": "SLOAD", "path": "0"}, "3529": {"fn": "Ownable.renounceOwnership", "offset": [3107, 3147], "op": "PUSH1", "path": "0", "value": "0x40"}, "3531": {"fn": "Ownable.renounceOwnership", "offset": [3107, 3147], "op": "MLOAD", "path": "0"}, "3532": {"op": "PUSH1", "value": "0x1"}, "3534": {"op": "PUSH1", "value": "0x1"}, "3536": {"op": "PUSH1", "value": "0xA0"}, "3538": {"op": "SHL"}, "3539": {"op": "SUB"}, "3540": {"fn": "Ownable.renounceOwnership", "offset": [3128, 3134], "op": "SWAP1", "path": "0"}, "3541": {"fn": "Ownable.renounceOwnership", "offset": [3128, 3134], "op": "SWAP2", "path": "0"}, "3542": {"fn": "Ownable.renounceOwnership", "offset": [3128, 3134], "op": "AND", "path": "0"}, "3543": {"fn": "Ownable.renounceOwnership", "offset": [3128, 3134], "op": "SWAP1", "path": "0"}, "3544": {"fn": "Ownable.renounceOwnership", "offset": [3107, 3147], "op": "PUSH32", "path": "0", "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"}, "3577": {"fn": "Ownable.renounceOwnership", "offset": [3107, 3147], "op": "SWAP1", "path": "0"}, "3578": {"fn": "Ownable.renounceOwnership", "offset": [3144, 3145], "op": "DUP4", "path": "0"}, "3579": {"fn": "Ownable.renounceOwnership", "offset": [3144, 3145], "op": "SWAP1", "path": "0"}, "3580": {"fn": "Ownable.renounceOwnership", "offset": [3107, 3147], "op": "LOG3", "path": "0"}, "3581": {"fn": "Ownable.renounceOwnership", "offset": [3175, 3176], "op": "PUSH1", "path": "0", "statement": 28, "value": "0x0"}, "3583": {"fn": "Ownable.renounceOwnership", "offset": [3158, 3177], "op": "DUP1", "path": "0"}, "3584": {"fn": "Ownable.renounceOwnership", "offset": [3158, 3177], "op": "SLOAD", "path": "0"}, "3585": {"op": "PUSH1", "value": "0x1"}, "3587": {"op": "PUSH1", "value": "0x1"}, "3589": {"op": "PUSH1", "value": "0xA0"}, "3591": {"op": "SHL"}, "3592": {"op": "SUB"}, "3593": {"op": "NOT"}, "3594": {"fn": "Ownable.renounceOwnership", "offset": [3158, 3177], "op": "AND", "path": "0"}, "3595": {"fn": "Ownable.renounceOwnership", "offset": [3158, 3177], "op": "SWAP1", "path": "0"}, "3596": {"fn": "Ownable.renounceOwnership", "offset": [3158, 3177], "op": "SSTORE", "path": "0"}, "3597": {"fn": "Ownable.renounceOwnership", "jump": "o", "offset": [3046, 3184], "op": "JUMP", "path": "0"}, "3598": {"fn": "WrappedPunk.pause", "offset": [55882, 55941], "op": "JUMPDEST", "path": "0"}, "3599": {"offset": [2637, 2649], "op": "PUSH2", "path": "0", "value": "0xE16"}, "3602": {"offset": [2637, 2647], "op": "PUSH2", "path": "0", "value": "0x1683"}, "3605": {"jump": "i", "offset": [2637, 2649], "op": "JUMP", "path": "0"}, "3606": {"fn": "WrappedPunk.pause", "offset": [2637, 2649], "op": "JUMPDEST", "path": "0"}, "3607": {"offset": [2627, 2633], "op": "PUSH1", "path": "0", "value": "0x0"}, "3609": {"fn": "WrappedPunk.pause", "offset": [2627, 2633], "op": "SLOAD", "path": "0"}, "3610": {"op": "PUSH1", "value": "0x1"}, "3612": {"op": "PUSH1", "value": "0x1"}, "3614": {"op": "PUSH1", "value": "0xA0"}, "3616": {"op": "SHL"}, "3617": {"op": "SUB"}, "3618": {"offset": [2627, 2633], "op": "SWAP1", "path": "0"}, "3619": {"fn": "WrappedPunk.pause", "offset": [2627, 2633], "op": "DUP2", "path": "0"}, "3620": {"fn": "WrappedPunk.pause", "offset": [2627, 2633], "op": "AND", "path": "0"}, "3621": {"offset": [2627, 2649], "op": "SWAP2", "path": "0"}, "3622": {"fn": "WrappedPunk.pause", "offset": [2627, 2649], "op": "AND", "path": "0"}, "3623": {"fn": "WrappedPunk.pause", "offset": [2627, 2649], "op": "EQ", "path": "0"}, "3624": {"offset": [2619, 2686], "op": "PUSH2", "path": "0", "value": "0xE66"}, "3627": {"offset": [2619, 2686], "op": "JUMPI", "path": "0"}, "3628": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x40"}, "3630": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "DUP1", "path": "0"}, "3631": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "3632": {"op": "PUSH3", "value": "0x461BCD"}, "3636": {"op": "PUSH1", "value": "0xE5"}, "3638": {"op": "SHL"}, "3639": {"offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3640": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3641": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x20"}, "3643": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x4"}, "3645": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3646": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3647": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3648": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3649": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3650": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x24"}, "3652": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3653": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3654": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3655": {"op": "PUSH1", "value": "0x0"}, "3657": {"op": "DUP1"}, "3658": {"op": "MLOAD"}, "3659": {"op": "PUSH1", "value": "0x20"}, "3661": {"op": "PUSH2", "value": "0x27EE"}, "3664": {"op": "DUP4"}, "3665": {"op": "CODECOPY"}, "3666": {"op": "DUP2"}, "3667": {"op": "MLOAD"}, "3668": {"op": "SWAP2"}, "3669": {"op": "MSTORE"}, "3670": {"offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x44"}, "3672": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "3673": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3674": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "3675": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3676": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "3677": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3678": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "3679": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3680": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "SUB", "path": "0"}, "3681": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x64"}, "3683": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "3684": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "3685": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "REVERT", "path": "0"}, "3686": {"fn": "WrappedPunk.pause", "offset": [2619, 2686], "op": "JUMPDEST", "path": "0"}, "3687": {"fn": "WrappedPunk.pause", "offset": [55926, 55934], "op": "PUSH2", "path": "0", "statement": 29, "value": "0xA3D"}, "3690": {"fn": "WrappedPunk.pause", "offset": [55926, 55932], "op": "PUSH2", "path": "0", "value": "0x184C"}, "3693": {"fn": "WrappedPunk.pause", "jump": "i", "offset": [55926, 55934], "op": "JUMP", "path": "0"}, "3694": {"fn": "Ownable.owner", "offset": [2423, 2500], "op": "JUMPDEST", "path": "0"}, "3695": {"fn": "Ownable.owner", "offset": [2461, 2468], "op": "PUSH1", "path": "0", "value": "0x0"}, "3697": {"fn": "Ownable.owner", "offset": [2487, 2493], "op": "SLOAD", "path": "0", "statement": 30}, "3698": {"op": "PUSH1", "value": "0x1"}, "3700": {"op": "PUSH1", "value": "0x1"}, "3702": {"op": "PUSH1", "value": "0xA0"}, "3704": {"op": "SHL"}, "3705": {"op": "SUB"}, "3706": {"fn": "Ownable.owner", "offset": [2487, 2493], "op": "AND", "path": "0"}, "3707": {"fn": "Ownable.owner", "offset": [2423, 2500], "op": "SWAP1", "path": "0"}, "3708": {"fn": "Ownable.owner", "jump": "o", "offset": [2423, 2500], "op": "JUMP", "path": "0"}, "3709": {"fn": "ERC721Metadata.symbol", "offset": [49589, 49674], "op": "JUMPDEST", "path": "0"}, "3710": {"fn": "ERC721Metadata.symbol", "offset": [49660, 49667], "op": "PUSH1", "path": "0", "statement": 31, "value": "0xB"}, "3712": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP1", "path": "0"}, "3713": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SLOAD", "path": "0"}, "3714": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH1", "path": "0", "value": "0x40"}, "3716": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP1", "path": "0"}, "3717": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "MLOAD", "path": "0"}, "3718": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH1", "path": "0", "value": "0x20"}, "3720": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH1", "path": "0", "value": "0x1F"}, "3722": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH1", "path": "0", "value": "0x2"}, "3724": {"op": "PUSH1", "value": "0x0"}, "3726": {"op": "NOT"}, "3727": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH2", "path": "0", "value": "0x100"}, "3730": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH1", "path": "0", "value": "0x1"}, "3732": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP9", "path": "0"}, "3733": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "AND", "path": "0"}, "3734": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "ISZERO", "path": "0"}, "3735": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "MUL", "path": "0"}, "3736": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "ADD", "path": "0"}, "3737": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP1", "path": "0"}, "3738": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP6", "path": "0"}, "3739": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "AND", "path": "0"}, "3740": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP5", "path": "0"}, "3741": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP1", "path": "0"}, "3742": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP5", "path": "0"}, "3743": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DIV", "path": "0"}, "3744": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP4", "path": "0"}, "3745": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP5", "path": "0"}, "3746": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "ADD", "path": "0"}, "3747": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP2", "path": "0"}, "3748": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP1", "path": "0"}, "3749": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DIV", "path": "0"}, "3750": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP2", "path": "0"}, "3751": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "MUL", "path": "0"}, "3752": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP3", "path": "0"}, "3753": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "ADD", "path": "0"}, "3754": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP2", "path": "0"}, "3755": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "ADD", "path": "0"}, "3756": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP1", "path": "0"}, "3757": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP3", "path": "0"}, "3758": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "MSTORE", "path": "0"}, "3759": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP3", "path": "0"}, "3760": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP2", "path": "0"}, "3761": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "MSTORE", "path": "0"}, "3762": {"fn": "ERC721Metadata.symbol", "offset": [49628, 49641], "op": "PUSH1", "path": "0", "value": "0x60"}, "3764": {"fn": "ERC721Metadata.symbol", "offset": [49628, 49641], "op": "SWAP4", "path": "0"}, "3765": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP1", "path": "0"}, "3766": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP3", "path": "0"}, "3767": {"fn": "ERC721Metadata.symbol", "offset": [49660, 49667], "op": "SWAP1", "path": "0"}, "3768": {"fn": "ERC721Metadata.symbol", "offset": [49660, 49667], "op": "SWAP2", "path": "0"}, "3769": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP4", "path": "0"}, "3770": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "ADD", "path": "0"}, "3771": {"fn": "ERC721Metadata.symbol", "offset": [49660, 49667], "op": "DUP3", "path": "0"}, "3772": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP3", "path": "0"}, "3773": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP1", "path": "0"}, "3774": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "ISZERO", "path": "0"}, "3775": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH2", "path": "0", "value": "0x767"}, "3778": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "JUMPI", "path": "0"}, "3779": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP1", "path": "0"}, "3780": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH1", "path": "0", "value": "0x1F"}, "3782": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "LT", "path": "0"}, "3783": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH2", "path": "0", "value": "0x73C"}, "3786": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "JUMPI", "path": "0"}, "3787": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH2", "path": "0", "value": "0x100"}, "3790": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP1", "path": "0"}, "3791": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP4", "path": "0"}, "3792": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SLOAD", "path": "0"}, "3793": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DIV", "path": "0"}, "3794": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "MUL", "path": "0"}, "3795": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "DUP4", "path": "0"}, "3796": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "MSTORE", "path": "0"}, "3797": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP2", "path": "0"}, "3798": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH1", "path": "0", "value": "0x20"}, "3800": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "ADD", "path": "0"}, "3801": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "SWAP2", "path": "0"}, "3802": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "PUSH2", "path": "0", "value": "0x767"}, "3805": {"fn": "ERC721Metadata.symbol", "offset": [49653, 49667], "op": "JUMP", "path": "0"}, "3806": {"fn": "WrappedPunk.mint", "offset": [56678, 57002], "op": "JUMPDEST", "path": "0"}, "3807": {"offset": [4926, 4933], "op": "PUSH1", "path": "0", "value": "0xE"}, "3809": {"fn": "WrappedPunk.mint", "offset": [4926, 4933], "op": "SLOAD", "path": "0"}, "3810": {"fn": "WrappedPunk.mint", "offset": [4926, 4933], "op": "PUSH1", "path": "0", "value": "0xFF"}, "3812": {"fn": "WrappedPunk.mint", "offset": [4926, 4933], "op": "AND", "path": "0"}, "3813": {"offset": [4925, 4933], "op": "ISZERO", "path": "0"}, "3814": {"offset": [4917, 4954], "op": "PUSH2", "path": "0", "value": "0xF29"}, "3817": {"offset": [4917, 4954], "op": "JUMPI", "path": "0"}, "3818": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x40"}, "3820": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "DUP1", "path": "0"}, "3821": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "MLOAD", "path": "0"}, "3822": {"op": "PUSH3", "value": "0x461BCD"}, "3826": {"op": "PUSH1", "value": "0xE5"}, "3828": {"op": "SHL"}, "3829": {"offset": [4917, 4954], "op": "DUP2", "path": "0"}, "3830": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "3831": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x20"}, "3833": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x4"}, "3835": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "3836": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "3837": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "3838": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x10"}, "3840": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x24"}, "3842": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "3843": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "3844": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "3845": {"op": "PUSH16", "value": "0x14185D5CD8589B194E881C185D5CD959"}, "3862": {"op": "PUSH1", "value": "0x82"}, "3864": {"op": "SHL"}, "3865": {"offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x44"}, "3867": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "3868": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "3869": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "3870": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "3871": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "MLOAD", "path": "0"}, "3872": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "3873": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "DUP2", "path": "0"}, "3874": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "3875": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "SUB", "path": "0"}, "3876": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x64"}, "3878": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "3879": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "3880": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "REVERT", "path": "0"}, "3881": {"fn": "WrappedPunk.mint", "offset": [4917, 4954], "op": "JUMPDEST", "path": "0"}, "3882": {"fn": "WrappedPunk.mint", "offset": [56742, 56756], "op": "PUSH1", "path": "0", "value": "0x0"}, "3884": {"fn": "WrappedPunk.mint", "offset": [56759, 56771], "op": "PUSH2", "path": "0", "value": "0xF33"}, "3887": {"fn": "WrappedPunk.mint", "offset": [56759, 56769], "op": "PUSH2", "path": "0", "value": "0x1683"}, "3890": {"fn": "WrappedPunk.mint", "jump": "i", "offset": [56759, 56771], "op": "JUMP", "path": "0"}, "3891": {"fn": "WrappedPunk.mint", "offset": [56759, 56771], "op": "JUMPDEST", "path": "0"}, "3892": {"op": "PUSH1", "value": "0x1"}, "3894": {"op": "PUSH1", "value": "0x1"}, "3896": {"op": "PUSH1", "value": "0xA0"}, "3898": {"op": "SHL"}, "3899": {"op": "SUB"}, "3900": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "DUP1", "path": "0"}, "3901": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "DUP3", "path": "0"}, "3902": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "AND", "path": "0"}, "3903": {"fn": "WrappedPunk.mint", "offset": [56782, 56797], "op": "PUSH1", "path": "0", "value": "0x0"}, "3905": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "SWAP1", "path": "0"}, "3906": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "DUP2", "path": "0"}, "3907": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "MSTORE", "path": "0"}, "3908": {"fn": "WrappedPunk.mint", "offset": [56810, 56818], "op": "PUSH1", "path": "0", "value": "0xF"}, "3910": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "PUSH1", "path": "0", "value": "0x20"}, "3912": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "SWAP1", "path": "0"}, "3913": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "DUP2", "path": "0"}, "3914": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "MSTORE", "path": "0"}, "3915": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "PUSH1", "path": "0", "value": "0x40"}, "3917": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "DUP1", "path": "0"}, "3918": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "DUP4", "path": "0"}, "3919": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "KECCAK256", "path": "0"}, "3920": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "SLOAD", "path": "0"}, "3921": {"fn": "WrappedPunk.mint", "offset": [56882, 56895], "op": "PUSH1", "path": "0", "statement": 32, "value": "0xE"}, "3923": {"fn": "WrappedPunk.mint", "offset": [56882, 56895], "op": "SLOAD", "path": "0"}, "3924": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP3", "path": "0"}, "3925": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "MLOAD", "path": "0"}, "3926": {"op": "PUSH4", "value": "0xA9059CBB"}, "3931": {"op": "PUSH1", "value": "0xE0"}, "3933": {"op": "SHL"}, "3934": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP2", "path": "0"}, "3935": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "MSTORE", "path": "0"}, "3936": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "PUSH2", "path": "0", "value": "0x100"}, "3939": {"fn": "WrappedPunk.mint", "offset": [56882, 56895], "op": "SWAP1", "path": "0"}, "3940": {"fn": "WrappedPunk.mint", "offset": [56882, 56895], "op": "SWAP2", "path": "0"}, "3941": {"fn": "WrappedPunk.mint", "offset": [56882, 56895], "op": "DIV", "path": "0"}, "3942": {"fn": "WrappedPunk.mint", "offset": [56882, 56895], "op": "DUP7", "path": "0"}, "3943": {"fn": "WrappedPunk.mint", "offset": [56882, 56895], "op": "AND", "path": "0"}, "3944": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "PUSH1", "path": "0", "value": "0x4"}, "3946": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP3", "path": "0"}, "3947": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "ADD", "path": "0"}, "3948": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "MSTORE", "path": "0"}, "3949": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "PUSH1", "path": "0", "value": "0x24"}, "3951": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP2", "path": "0"}, "3952": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "ADD", "path": "0"}, "3953": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP10", "path": "0"}, "3954": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "SWAP1", "path": "0"}, "3955": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "MSTORE", "path": "0"}, "3956": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "SWAP2", "path": "0"}, "3957": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "MLOAD", "path": "0"}, "3958": {"fn": "WrappedPunk.mint", "offset": [56742, 56771], "op": "SWAP6", "path": "0"}, "3959": {"fn": "WrappedPunk.mint", "offset": [56742, 56771], "op": "SWAP7", "path": "0"}, "3960": {"op": "POP"}, "3961": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "SWAP1", "path": "0"}, "3962": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "SWAP4", "path": "0"}, "3963": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "AND", "path": "0"}, "3964": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "SWAP4", "path": "0"}, "3965": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "DUP5", "path": "0"}, "3966": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "SWAP4", "path": "0"}, "3967": {"fn": "WrappedPunk.mint", "offset": [56859, 56873], "op": "PUSH4", "path": "0", "value": "0xA9059CBB"}, "3972": {"fn": "WrappedPunk.mint", "offset": [56859, 56873], "op": "SWAP4", "path": "0"}, "3973": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "PUSH1", "path": "0", "value": "0x44"}, "3975": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP1", "path": "0"}, "3976": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP4", "path": "0"}, "3977": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "ADD", "path": "0"}, "3978": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "SWAP5", "path": "0"}, "3979": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "SWAP4", "path": "0"}, "3980": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "SWAP3", "path": "0"}, "3981": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP4", "path": "0"}, "3982": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "SWAP1", "path": "0"}, "3983": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "SUB", "path": "0"}, "3984": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "ADD", "path": "0"}, "3985": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "SWAP1", "path": "0"}, "3986": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP3", "path": "0"}, "3987": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "SWAP1", "path": "0"}, "3988": {"fn": "WrappedPunk.mint", "offset": [56810, 56826], "op": "DUP8", "path": "0"}, "3989": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "DUP1", "path": "0"}, "3990": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "EXTCODESIZE", "path": "0"}, "3991": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "ISZERO", "path": "0"}, "3992": {"op": "DUP1"}, "3993": {"op": "ISZERO"}, "3994": {"op": "PUSH2", "value": "0xFA2"}, "3997": {"op": "JUMPI"}, "3998": {"op": "PUSH1", "value": "0x0"}, "4000": {"op": "DUP1"}, "4001": {"op": "REVERT"}, "4002": {"op": "JUMPDEST"}, "4003": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "POP", "path": "0"}, "4004": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "GAS", "path": "0"}, "4005": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "CALL", "path": "0"}, "4006": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "ISZERO", "path": "0"}, "4007": {"op": "DUP1"}, "4008": {"op": "ISZERO"}, "4009": {"op": "PUSH2", "value": "0xFB6"}, "4012": {"op": "JUMPI"}, "4013": {"op": "RETURNDATASIZE"}, "4014": {"op": "PUSH1", "value": "0x0"}, "4016": {"op": "DUP1"}, "4017": {"op": "RETURNDATACOPY"}, "4018": {"op": "RETURNDATASIZE"}, "4019": {"op": "PUSH1", "value": "0x0"}, "4021": {"op": "REVERT"}, "4022": {"op": "JUMPDEST"}, "4023": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "POP", "path": "0"}, "4024": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "POP", "path": "0"}, "4025": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "POP", "path": "0"}, "4026": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "POP", "path": "0"}, "4027": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "PUSH1", "path": "0", "value": "0x40"}, "4029": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "MLOAD", "path": "0"}, "4030": {"fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "RETURNDATASIZE", "path": "0"}, "4031": {"op": "PUSH1", "value": "0x20"}, "4033": {"op": "DUP2"}, "4034": {"op": "LT"}, "4035": {"op": "ISZERO"}, "4036": {"op": "PUSH2", "value": "0xFCC"}, "4039": {"op": "JUMPI"}, "4040": {"op": "PUSH1", "value": "0x0"}, "4042": {"op": "DUP1"}, "4043": {"op": "REVERT"}, "4044": {"op": "JUMPDEST"}, "4045": {"op": "POP"}, "4046": {"branch": 132, "fn": "WrappedPunk.mint", "offset": [56859, 56908], "op": "MLOAD", "path": "0"}, "4047": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH2", "path": "0", "value": "0x101F"}, "4050": {"branch": 132, "fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "JUMPI", "path": "0"}, "4051": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH1", "path": "0", "value": "0x40"}, "4053": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "DUP1", "path": "0"}, "4054": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "MLOAD", "path": "0"}, "4055": {"op": "PUSH3", "value": "0x461BCD"}, "4059": {"op": "PUSH1", "value": "0xE5"}, "4061": {"op": "SHL"}, "4062": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "DUP2", "path": "0"}, "4063": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "MSTORE", "path": "0"}, "4064": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH1", "path": "0", "value": "0x20"}, "4066": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH1", "path": "0", "value": "0x4"}, "4068": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "DUP3", "path": "0"}, "4069": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "ADD", "path": "0"}, "4070": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "MSTORE", "path": "0"}, "4071": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH1", "path": "0", "value": "0x1A"}, "4073": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH1", "path": "0", "value": "0x24"}, "4075": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "DUP3", "path": "0"}, "4076": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "ADD", "path": "0"}, "4077": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "MSTORE", "path": "0"}, "4078": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH32", "path": "0", "value": "0x50756E6B577261707065723A207472616E73666572206661696C000000000000"}, "4111": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH1", "path": "0", "value": "0x44"}, "4113": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "DUP3", "path": "0"}, "4114": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "ADD", "path": "0"}, "4115": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "MSTORE", "path": "0"}, "4116": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "SWAP1", "path": "0"}, "4117": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "MLOAD", "path": "0"}, "4118": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "SWAP1", "path": "0"}, "4119": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "DUP2", "path": "0"}, "4120": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "SWAP1", "path": "0"}, "4121": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "SUB", "path": "0"}, "4122": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "PUSH1", "path": "0", "value": "0x64"}, "4124": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "ADD", "path": "0"}, "4125": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "SWAP1", "path": "0"}, "4126": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "REVERT", "path": "0"}, "4127": {"fn": "WrappedPunk.mint", "offset": [56838, 56960], "op": "JUMPDEST", "path": "0"}, "4128": {"fn": "WrappedPunk.mint", "offset": [56971, 56995], "op": "PUSH2", "path": "0", "statement": 33, "value": "0x959"}, "4131": {"fn": "WrappedPunk.mint", "offset": [56977, 56983], "op": "DUP3", "path": "0"}, "4132": {"fn": "WrappedPunk.mint", "offset": [56985, 56994], "op": "DUP5", "path": "0"}, "4133": {"fn": "WrappedPunk.mint", "offset": [56971, 56976], "op": "PUSH2", "path": "0", "value": "0x18CD"}, "4136": {"fn": "WrappedPunk.mint", "jump": "i", "offset": [56971, 56995], "op": "JUMP", "path": "0"}, "4137": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "JUMPDEST", "path": "0"}, "4138": {"fn": "ERC721.setApprovalForAll", "offset": [26392, 26409], "op": "PUSH1", "path": "0", "value": "0x0"}, "4140": {"fn": "ERC721.setApprovalForAll", "offset": [26412, 26424], "op": "PUSH2", "path": "0", "value": "0x1033"}, "4143": {"fn": "ERC721.setApprovalForAll", "offset": [26412, 26422], "op": "PUSH2", "path": "0", "value": "0x1683"}, "4146": {"fn": "ERC721.setApprovalForAll", "jump": "i", "offset": [26412, 26424], "op": "JUMP", "path": "0"}, "4147": {"fn": "ERC721.setApprovalForAll", "offset": [26412, 26424], "op": "JUMPDEST", "path": "0"}, "4148": {"fn": "ERC721.setApprovalForAll", "offset": [26392, 26424], "op": "SWAP1", "path": "0"}, "4149": {"fn": "ERC721.setApprovalForAll", "offset": [26392, 26424], "op": "POP", "path": "0"}, "4150": {"fn": "ERC721.setApprovalForAll", "offset": [26449, 26458], "op": "DUP1", "path": "0", "statement": 34}, "4151": {"op": "PUSH1", "value": "0x1"}, "4153": {"op": "PUSH1", "value": "0x1"}, "4155": {"op": "PUSH1", "value": "0xA0"}, "4157": {"op": "SHL"}, "4158": {"op": "SUB"}, "4159": {"fn": "ERC721.setApprovalForAll", "offset": [26443, 26458], "op": "AND", "path": "0"}, "4160": {"fn": "ERC721.setApprovalForAll", "offset": [26443, 26445], "op": "DUP4", "path": "0"}, "4161": {"op": "PUSH1", "value": "0x1"}, "4163": {"op": "PUSH1", "value": "0x1"}, "4165": {"op": "PUSH1", "value": "0xA0"}, "4167": {"op": "SHL"}, "4168": {"op": "SUB"}, "4169": {"fn": "ERC721.setApprovalForAll", "offset": [26443, 26458], "op": "AND", "path": "0"}, "4170": {"fn": "ERC721.setApprovalForAll", "offset": [26443, 26458], "op": "EQ", "path": "0"}, "4171": {"branch": 133, "fn": "ERC721.setApprovalForAll", "offset": [26443, 26458], "op": "ISZERO", "path": "0"}, "4172": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH2", "path": "0", "value": "0x109C"}, "4175": {"branch": 133, "fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "JUMPI", "path": "0"}, "4176": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH1", "path": "0", "value": "0x40"}, "4178": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "DUP1", "path": "0"}, "4179": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "MLOAD", "path": "0"}, "4180": {"op": "PUSH3", "value": "0x461BCD"}, "4184": {"op": "PUSH1", "value": "0xE5"}, "4186": {"op": "SHL"}, "4187": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "DUP2", "path": "0"}, "4188": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "MSTORE", "path": "0"}, "4189": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH1", "path": "0", "value": "0x20"}, "4191": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH1", "path": "0", "value": "0x4"}, "4193": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "DUP3", "path": "0"}, "4194": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "ADD", "path": "0"}, "4195": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "MSTORE", "path": "0"}, "4196": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH1", "path": "0", "value": "0x19"}, "4198": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH1", "path": "0", "value": "0x24"}, "4200": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "DUP3", "path": "0"}, "4201": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "ADD", "path": "0"}, "4202": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "MSTORE", "path": "0"}, "4203": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH32", "path": "0", "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"}, "4236": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH1", "path": "0", "value": "0x44"}, "4238": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "DUP3", "path": "0"}, "4239": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "ADD", "path": "0"}, "4240": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "MSTORE", "path": "0"}, "4241": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "SWAP1", "path": "0"}, "4242": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "MLOAD", "path": "0"}, "4243": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "SWAP1", "path": "0"}, "4244": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "DUP2", "path": "0"}, "4245": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "SWAP1", "path": "0"}, "4246": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "SUB", "path": "0"}, "4247": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "PUSH1", "path": "0", "value": "0x64"}, "4249": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "ADD", "path": "0"}, "4250": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "SWAP1", "path": "0"}, "4251": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "REVERT", "path": "0"}, "4252": {"fn": "ERC721.setApprovalForAll", "offset": [26435, 26488], "op": "JUMPDEST", "path": "0"}, "4253": {"op": "PUSH1", "value": "0x1"}, "4255": {"op": "PUSH1", "value": "0x1"}, "4257": {"op": "PUSH1", "value": "0xA0"}, "4259": {"op": "SHL"}, "4260": {"op": "SUB"}, "4261": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "DUP2", "path": "0", "statement": 35}, "4262": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "DUP2", "path": "0"}, "4263": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "AND", "path": "0"}, "4264": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "PUSH1", "path": "0", "value": "0x0"}, "4266": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "DUP2", "path": "0"}, "4267": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "DUP2", "path": "0"}, "4268": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "MSTORE", "path": "0"}, "4269": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26517], "op": "PUSH1", "path": "0", "value": "0x5"}, "4271": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "PUSH1", "path": "0", "value": "0x20"}, "4273": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "SWAP1", "path": "0"}, "4274": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "DUP2", "path": "0"}, "4275": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "MSTORE", "path": "0"}, "4276": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "PUSH1", "path": "0", "value": "0x40"}, "4278": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "DUP1", "path": "0"}, "4279": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "DUP4", "path": "0"}, "4280": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26528], "op": "KECCAK256", "path": "0"}, "4281": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "SWAP5", "path": "0"}, "4282": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "DUP9", "path": "0"}, "4283": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "AND", "path": "0"}, "4284": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "DUP1", "path": "0"}, "4285": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "DUP5", "path": "0"}, "4286": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "MSTORE", "path": "0"}, "4287": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "SWAP5", "path": "0"}, "4288": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "DUP3", "path": "0"}, "4289": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "MSTORE", "path": "0"}, "4290": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "SWAP2", "path": "0"}, "4291": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "DUP3", "path": "0"}, "4292": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "SWAP1", "path": "0"}, "4293": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26532], "op": "KECCAK256", "path": "0"}, "4294": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "DUP1", "path": "0"}, "4295": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "SLOAD", "path": "0"}, "4296": {"op": "PUSH1", "value": "0xFF"}, "4298": {"op": "NOT"}, "4299": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "AND", "path": "0"}, "4300": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "DUP8", "path": "0"}, "4301": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "ISZERO", "path": "0"}, "4302": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "ISZERO", "path": "0"}, "4303": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "SWAP1", "path": "0"}, "4304": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "DUP2", "path": "0"}, "4305": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "OR", "path": "0"}, "4306": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "SWAP1", "path": "0"}, "4307": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "SWAP2", "path": "0"}, "4308": {"fn": "ERC721.setApprovalForAll", "offset": [26499, 26543], "op": "SSTORE", "path": "0"}, "4309": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "DUP3", "path": "0", "statement": 36}, "4310": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "MLOAD", "path": "0"}, "4311": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "SWAP1", "path": "0"}, "4312": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "DUP2", "path": "0"}, "4313": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "MSTORE", "path": "0"}, "4314": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "SWAP2", "path": "0"}, "4315": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "MLOAD", "path": "0"}, "4316": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "PUSH32", "path": "0", "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"}, "4349": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "SWAP3", "path": "0"}, "4350": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "DUP2", "path": "0"}, "4351": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "SWAP1", "path": "0"}, "4352": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "SUB", "path": "0"}, "4353": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "SWAP1", "path": "0"}, "4354": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "SWAP2", "path": "0"}, "4355": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "ADD", "path": "0"}, "4356": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "SWAP1", "path": "0"}, "4357": {"fn": "ERC721.setApprovalForAll", "offset": [26559, 26598], "op": "LOG3", "path": "0"}, "4358": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "POP", "path": "0"}, "4359": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "POP", "path": "0"}, "4360": {"fn": "ERC721.setApprovalForAll", "offset": [26321, 26605], "op": "POP", "path": "0"}, "4361": {"fn": "ERC721.setApprovalForAll", "jump": "o", "offset": [26321, 26605], "op": "JUMP", "path": "0"}, "4362": {"fn": "WrappedPunk.proxyInfo", "offset": [56522, 56623], "op": "JUMPDEST", "path": "0"}, "4363": {"op": "PUSH1", "value": "0x1"}, "4365": {"op": "PUSH1", "value": "0x1"}, "4367": {"op": "PUSH1", "value": "0xA0"}, "4369": {"op": "SHL"}, "4370": {"op": "SUB"}, "4371": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "SWAP1", "path": "0", "statement": 37}, "4372": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "DUP2", "path": "0"}, "4373": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "AND", "path": "0"}, "4374": {"fn": "WrappedPunk.proxyInfo", "offset": [56576, 56583], "op": "PUSH1", "path": "0", "value": "0x0"}, "4376": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "SWAP1", "path": "0"}, "4377": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "DUP2", "path": "0"}, "4378": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "MSTORE", "path": "0"}, "4379": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56610], "op": "PUSH1", "path": "0", "value": "0xF"}, "4381": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "PUSH1", "path": "0", "value": "0x20"}, "4383": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "MSTORE", "path": "0"}, "4384": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "PUSH1", "path": "0", "value": "0x40"}, "4386": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "SWAP1", "path": "0"}, "4387": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "KECCAK256", "path": "0"}, "4388": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "SLOAD", "path": "0"}, "4389": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "AND", "path": "0"}, "4390": {"fn": "WrappedPunk.proxyInfo", "offset": [56602, 56616], "op": "SWAP1", "path": "0"}, "4391": {"fn": "WrappedPunk.proxyInfo", "jump": "o", "offset": [56522, 56623], "op": "JUMP", "path": "0"}, "4392": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "JUMPDEST", "path": "0"}, "4393": {"fn": "ERC721.safeTransferFrom", "offset": [29588, 29629], "op": "PUSH2", "path": "0", "statement": 38, "value": "0x1139"}, "4396": {"fn": "ERC721.safeTransferFrom", "offset": [29607, 29619], "op": "PUSH2", "path": "0", "value": "0x1133"}, "4399": {"fn": "ERC721.safeTransferFrom", "offset": [29607, 29617], "op": "PUSH2", "path": "0", "value": "0x1683"}, "4402": {"fn": "ERC721.safeTransferFrom", "jump": "i", "offset": [29607, 29619], "op": "JUMP", "path": "0"}, "4403": {"fn": "ERC721.safeTransferFrom", "offset": [29607, 29619], "op": "JUMPDEST", "path": "0"}, "4404": {"fn": "ERC721.safeTransferFrom", "offset": [29621, 29628], "op": "DUP4", "path": "0"}, "4405": {"fn": "ERC721.safeTransferFrom", "offset": [29588, 29606], "op": "PUSH2", "path": "0", "value": "0x1687"}, "4408": {"fn": "ERC721.safeTransferFrom", "jump": "i", "offset": [29588, 29629], "op": "JUMP", "path": "0"}, "4409": {"branch": 134, "fn": "ERC721.safeTransferFrom", "offset": [29588, 29629], "op": "JUMPDEST", "path": "0"}, "4410": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH2", "path": "0", "value": "0x1174"}, "4413": {"branch": 134, "fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "JUMPI", "path": "0"}, "4414": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH1", "path": "0", "value": "0x40"}, "4416": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "MLOAD", "path": "0"}, "4417": {"op": "PUSH3", "value": "0x461BCD"}, "4421": {"op": "PUSH1", "value": "0xE5"}, "4423": {"op": "SHL"}, "4424": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP2", "path": "0"}, "4425": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "MSTORE", "path": "0"}, "4426": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH1", "path": "0", "value": "0x4"}, "4428": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "ADD", "path": "0"}, "4429": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP1", "path": "0"}, "4430": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP1", "path": "0"}, "4431": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH1", "path": "0", "value": "0x20"}, "4433": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "ADD", "path": "0"}, "4434": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP3", "path": "0"}, "4435": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP2", "path": "0"}, "4436": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "SUB", "path": "0"}, "4437": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP3", "path": "0"}, "4438": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "MSTORE", "path": "0"}, "4439": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH1", "path": "0", "value": "0x31"}, "4441": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP2", "path": "0"}, "4442": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "MSTORE", "path": "0"}, "4443": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH1", "path": "0", "value": "0x20"}, "4445": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "ADD", "path": "0"}, "4446": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP1", "path": "0"}, "4447": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH2", "path": "0", "value": "0x2887"}, "4450": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH1", "path": "0", "value": "0x31"}, "4452": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "SWAP2", "path": "0"}, "4453": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "CODECOPY", "path": "0"}, "4454": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH1", "path": "0", "value": "0x40"}, "4456": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "ADD", "path": "0"}, "4457": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "SWAP2", "path": "0"}, "4458": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "POP", "path": "0"}, "4459": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "POP", "path": "0"}, "4460": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "PUSH1", "path": "0", "value": "0x40"}, "4462": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "MLOAD", "path": "0"}, "4463": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "DUP1", "path": "0"}, "4464": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "SWAP2", "path": "0"}, "4465": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "SUB", "path": "0"}, "4466": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "SWAP1", "path": "0"}, "4467": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "REVERT", "path": "0"}, "4468": {"fn": "ERC721.safeTransferFrom", "offset": [29567, 29704], "op": "JUMPDEST", "path": "0"}, "4469": {"fn": "ERC721.safeTransferFrom", "offset": [29715, 29758], "op": "PUSH2", "path": "0", "statement": 39, "value": "0x1180"}, "4472": {"fn": "ERC721.safeTransferFrom", "offset": [29733, 29737], "op": "DUP5", "path": "0"}, "4473": {"fn": "ERC721.safeTransferFrom", "offset": [29739, 29741], "op": "DUP5", "path": "0"}, "4474": {"fn": "ERC721.safeTransferFrom", "offset": [29743, 29750], "op": "DUP5", "path": "0"}, "4475": {"fn": "ERC721.safeTransferFrom", "offset": [29752, 29757], "op": "DUP5", "path": "0"}, "4476": {"fn": "ERC721.safeTransferFrom", "offset": [29715, 29732], "op": "PUSH2", "path": "0", "value": "0x18EA"}, "4479": {"fn": "ERC721.safeTransferFrom", "jump": "i", "offset": [29715, 29758], "op": "JUMP", "path": "0"}, "4480": {"fn": "ERC721.safeTransferFrom", "offset": [29715, 29758], "op": "JUMPDEST", "path": "0"}, "4481": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "POP", "path": "0"}, "4482": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "POP", "path": "0"}, "4483": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "POP", "path": "0"}, "4484": {"fn": "ERC721.safeTransferFrom", "offset": [29423, 29765], "op": "POP", "path": "0"}, "4485": {"fn": "ERC721.safeTransferFrom", "jump": "o", "offset": [29423, 29765], "op": "JUMP", "path": "0"}, "4486": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "JUMPDEST", "path": "0"}, "4487": {"fn": "ERC721Metadata.tokenURI", "offset": [50573, 50586], "op": "PUSH1", "path": "0", "value": "0x60"}, "4489": {"fn": "ERC721Metadata.tokenURI", "offset": [50619, 50635], "op": "PUSH2", "path": "0", "statement": 40, "value": "0x1191"}, "4492": {"fn": "ERC721Metadata.tokenURI", "offset": [50627, 50634], "op": "DUP3", "path": "0"}, "4493": {"fn": "ERC721Metadata.tokenURI", "offset": [50619, 50626], "op": "PUSH2", "path": "0", "value": "0x1666"}, "4496": {"fn": "ERC721Metadata.tokenURI", "jump": "i", "offset": [50619, 50635], "op": "JUMP", "path": "0"}, "4497": {"branch": 135, "fn": "ERC721Metadata.tokenURI", "offset": [50619, 50635], "op": "JUMPDEST", "path": "0"}, "4498": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH2", "path": "0", "value": "0x11CC"}, "4501": {"branch": 135, "fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "JUMPI", "path": "0"}, "4502": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH1", "path": "0", "value": "0x40"}, "4504": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "MLOAD", "path": "0"}, "4505": {"op": "PUSH3", "value": "0x461BCD"}, "4509": {"op": "PUSH1", "value": "0xE5"}, "4511": {"op": "SHL"}, "4512": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP2", "path": "0"}, "4513": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "MSTORE", "path": "0"}, "4514": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH1", "path": "0", "value": "0x4"}, "4516": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "ADD", "path": "0"}, "4517": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP1", "path": "0"}, "4518": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP1", "path": "0"}, "4519": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH1", "path": "0", "value": "0x20"}, "4521": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "ADD", "path": "0"}, "4522": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP3", "path": "0"}, "4523": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP2", "path": "0"}, "4524": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "SUB", "path": "0"}, "4525": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP3", "path": "0"}, "4526": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "MSTORE", "path": "0"}, "4527": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH1", "path": "0", "value": "0x2F"}, "4529": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP2", "path": "0"}, "4530": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "MSTORE", "path": "0"}, "4531": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH1", "path": "0", "value": "0x20"}, "4533": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "ADD", "path": "0"}, "4534": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP1", "path": "0"}, "4535": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH2", "path": "0", "value": "0x2837"}, "4538": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH1", "path": "0", "value": "0x2F"}, "4540": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "SWAP2", "path": "0"}, "4541": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "CODECOPY", "path": "0"}, "4542": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH1", "path": "0", "value": "0x40"}, "4544": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "ADD", "path": "0"}, "4545": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "SWAP2", "path": "0"}, "4546": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "POP", "path": "0"}, "4547": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "POP", "path": "0"}, "4548": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "PUSH1", "path": "0", "value": "0x40"}, "4550": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "MLOAD", "path": "0"}, "4551": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "DUP1", "path": "0"}, "4552": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "SWAP2", "path": "0"}, "4553": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "SUB", "path": "0"}, "4554": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "SWAP1", "path": "0"}, "4555": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "REVERT", "path": "0"}, "4556": {"fn": "ERC721Metadata.tokenURI", "offset": [50598, 50708], "op": "JUMPDEST", "path": "0"}, "4557": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "PUSH1", "path": "0", "value": "0x0"}, "4559": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "DUP3", "path": "0"}, "4560": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "DUP2", "path": "0"}, "4561": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "MSTORE", "path": "0"}, "4562": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50755], "op": "PUSH1", "path": "0", "value": "0xD"}, "4564": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "PUSH1", "path": "0", "value": "0x20"}, "4566": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "SWAP1", "path": "0"}, "4567": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "DUP2", "path": "0"}, "4568": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "MSTORE", "path": "0"}, "4569": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "PUSH1", "path": "0", "value": "0x40"}, "4571": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "SWAP2", "path": "0"}, "4572": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "DUP3", "path": "0"}, "4573": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "SWAP1", "path": "0"}, "4574": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "KECCAK256", "path": "0"}, "4575": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP1", "path": "0"}, "4576": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SLOAD", "path": "0"}, "4577": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP4", "path": "0"}, "4578": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MLOAD", "path": "0"}, "4579": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x1F"}, "4581": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x2"}, "4583": {"op": "PUSH1", "value": "0x0"}, "4585": {"op": "NOT"}, "4586": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH2", "path": "0", "value": "0x100"}, "4589": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x1"}, "4591": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP7", "path": "0"}, "4592": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "AND", "path": "0"}, "4593": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ISZERO", "path": "0"}, "4594": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MUL", "path": "0"}, "4595": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4596": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4597": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP4", "path": "0"}, "4598": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "AND", "path": "0"}, "4599": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP3", "path": "0"}, "4600": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4601": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP3", "path": "0"}, "4602": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DIV", "path": "0"}, "4603": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP2", "path": "0"}, "4604": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP3", "path": "0"}, "4605": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4606": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP5", "path": "0"}, "4607": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4608": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DIV", "path": "0"}, "4609": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP5", "path": "0"}, "4610": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MUL", "path": "0"}, "4611": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP2", "path": "0"}, "4612": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4613": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP5", "path": "0"}, "4614": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4615": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4616": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP5", "path": "0"}, "4617": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MSTORE", "path": "0"}, "4618": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP1", "path": "0"}, "4619": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP5", "path": "0"}, "4620": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MSTORE", "path": "0"}, "4621": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50742], "op": "PUSH1", "path": "0", "value": "0x60"}, "4623": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50742], "op": "SWAP4", "path": "0"}, "4624": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP3", "path": "0"}, "4625": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP4", "path": "0"}, "4626": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4627": {"fn": "ERC721Metadata.tokenURI", "offset": [50745, 50764], "op": "DUP3", "path": "0"}, "4628": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP3", "path": "0"}, "4629": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP1", "path": "0"}, "4630": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ISZERO", "path": "0"}, "4631": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH2", "path": "0", "value": "0x1261"}, "4634": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "JUMPI", "path": "0"}, "4635": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP1", "path": "0"}, "4636": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x1F"}, "4638": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "LT", "path": "0"}, "4639": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH2", "path": "0", "value": "0x1236"}, "4642": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "JUMPI", "path": "0"}, "4643": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH2", "path": "0", "value": "0x100"}, "4646": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP1", "path": "0"}, "4647": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP4", "path": "0"}, "4648": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SLOAD", "path": "0"}, "4649": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DIV", "path": "0"}, "4650": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MUL", "path": "0"}, "4651": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP4", "path": "0"}, "4652": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MSTORE", "path": "0"}, "4653": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP2", "path": "0"}, "4654": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x20"}, "4656": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4657": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP2", "path": "0"}, "4658": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH2", "path": "0", "value": "0x1261"}, "4661": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "JUMP", "path": "0"}, "4662": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "JUMPDEST", "path": "0"}, "4663": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP3", "path": "0"}, "4664": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4665": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP2", "path": "0"}, "4666": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4667": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x0"}, "4669": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MSTORE", "path": "0"}, "4670": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x20"}, "4672": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x0"}, "4674": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "KECCAK256", "path": "0"}, "4675": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4676": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "JUMPDEST", "path": "0"}, "4677": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP2", "path": "0"}, "4678": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SLOAD", "path": "0"}, "4679": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP2", "path": "0"}, "4680": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "MSTORE", "path": "0"}, "4681": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4682": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x1"}, "4684": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4685": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4686": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x20"}, "4688": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4689": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP1", "path": "0"}, "4690": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP4", "path": "0"}, "4691": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "GT", "path": "0"}, "4692": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH2", "path": "0", "value": "0x1244"}, "4695": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "JUMPI", "path": "0"}, "4696": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP3", "path": "0"}, "4697": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP1", "path": "0"}, "4698": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SUB", "path": "0"}, "4699": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "PUSH1", "path": "0", "value": "0x1F"}, "4701": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "AND", "path": "0"}, "4702": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "DUP3", "path": "0"}, "4703": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "ADD", "path": "0"}, "4704": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP2", "path": "0"}, "4705": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "JUMPDEST", "path": "0"}, "4706": {"op": "POP"}, "4707": {"op": "POP"}, "4708": {"fn": "ERC721Metadata.tokenURI", "offset": [50843, 50851], "op": "PUSH1", "path": "0", "value": "0xC"}, "4710": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "SLOAD", "path": "0"}, "4711": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP4", "path": "0"}, "4712": {"fn": "ERC721Metadata.tokenURI", "offset": [50719, 50764], "op": "SWAP5", "path": "0"}, "4713": {"op": "POP"}, "4714": {"op": "POP"}, "4715": {"op": "POP"}, "4716": {"op": "POP"}, "4717": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "PUSH1", "path": "0", "value": "0x2"}, "4719": {"op": "PUSH1", "value": "0x0"}, "4721": {"op": "NOT"}, "4722": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "PUSH2", "path": "0", "value": "0x100"}, "4725": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "PUSH1", "path": "0", "value": "0x1"}, "4727": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "DUP5", "path": "0"}, "4728": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "AND", "path": "0"}, "4729": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "ISZERO", "path": "0"}, "4730": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "MUL", "path": "0"}, "4731": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "ADD", "path": "0"}, "4732": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "SWAP1", "path": "0"}, "4733": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "SWAP2", "path": "0"}, "4734": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "AND", "path": "0"}, "4735": {"fn": "ERC721Metadata.tokenURI", "offset": [50837, 50859], "op": "DIV", "path": "0"}, "4736": {"fn": "ERC721Metadata.tokenURI", "offset": [50833, 50907], "op": "PUSH2", "path": "0", "value": "0x128A"}, "4739": {"fn": "ERC721Metadata.tokenURI", "offset": [50833, 50907], "op": "JUMPI", "path": "0"}, "4740": {"fn": "ERC721Metadata.tokenURI", "offset": [50887, 50896], "op": "SWAP1", "path": "0", "statement": 41}, "4741": {"op": "POP"}, "4742": {"fn": "ERC721Metadata.tokenURI", "offset": [50880, 50896], "op": "PUSH2", "path": "0", "value": "0x6D6"}, "4745": {"fn": "ERC721Metadata.tokenURI", "offset": [50880, 50896], "op": "JUMP", "path": "0"}, "4746": {"fn": "ERC721Metadata.tokenURI", "offset": [50833, 50907], "op": "JUMPDEST", "path": "0"}, "4747": {"fn": "ERC721Metadata.tokenURI", "offset": [51010, 51033], "op": "DUP1", "path": "0"}, "4748": {"fn": "ERC721Metadata.tokenURI", "offset": [51010, 51033], "op": "MLOAD", "path": "0"}, "4749": {"branch": 136, "fn": "ERC721Metadata.tokenURI", "offset": [51010, 51037], "op": "ISZERO", "path": "0"}, "4750": {"fn": "ERC721Metadata.tokenURI", "offset": [51006, 51116], "op": "PUSH2", "path": "0", "value": "0x135B"}, "4753": {"branch": 136, "fn": "ERC721Metadata.tokenURI", "offset": [51006, 51116], "op": "JUMPI", "path": "0"}, "4754": {"fn": "ERC721Metadata.tokenURI", "offset": [51084, 51092], "op": "PUSH1", "path": "0", "statement": 42, "value": "0xC"}, "4756": {"fn": "ERC721Metadata.tokenURI", "offset": [51094, 51103], "op": "DUP2", "path": "0"}, "4757": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x40"}, "4759": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MLOAD", "path": "0"}, "4760": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x20"}, "4762": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ADD", "path": "0"}, "4763": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP1", "path": "0"}, "4764": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP4", "path": "0"}, "4765": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP1", "path": "0"}, "4766": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SLOAD", "path": "0"}, "4767": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x1"}, "4769": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP2", "path": "0"}, "4770": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x1"}, "4772": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "AND", "path": "0"}, "4773": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ISZERO", "path": "0"}, "4774": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH2", "path": "0", "value": "0x100"}, "4777": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MUL", "path": "0"}, "4778": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SUB", "path": "0"}, "4779": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "AND", "path": "0"}, "4780": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x2"}, "4782": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP1", "path": "0"}, "4783": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DIV", "path": "0"}, "4784": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP1", "path": "0"}, "4785": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ISZERO", "path": "0"}, "4786": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH2", "path": "0", "value": "0x12F2"}, "4789": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "JUMPI", "path": "0"}, "4790": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP1", "path": "0"}, "4791": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x1F"}, "4793": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "LT", "path": "0"}, "4794": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH2", "path": "0", "value": "0x12D0"}, "4797": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "JUMPI", "path": "0"}, "4798": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH2", "path": "0", "value": "0x100"}, "4801": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP1", "path": "0"}, "4802": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP4", "path": "0"}, "4803": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SLOAD", "path": "0"}, "4804": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DIV", "path": "0"}, "4805": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MUL", "path": "0"}, "4806": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP4", "path": "0"}, "4807": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MSTORE", "path": "0"}, "4808": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP2", "path": "0"}, "4809": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP3", "path": "0"}, "4810": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ADD", "path": "0"}, "4811": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP2", "path": "0"}, "4812": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH2", "path": "0", "value": "0x12F2"}, "4815": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "JUMP", "path": "0"}, "4816": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "JUMPDEST", "path": "0"}, "4817": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP3", "path": "0"}, "4818": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ADD", "path": "0"}, "4819": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP2", "path": "0"}, "4820": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP1", "path": "0"}, "4821": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x0"}, "4823": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MSTORE", "path": "0"}, "4824": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x20"}, "4826": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x0"}, "4828": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "KECCAK256", "path": "0"}, "4829": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP1", "path": "0"}, "4830": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "JUMPDEST", "path": "0"}, "4831": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP2", "path": "0"}, "4832": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SLOAD", "path": "0"}, "4833": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP2", "path": "0"}, "4834": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MSTORE", "path": "0"}, "4835": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP1", "path": "0"}, "4836": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x1"}, "4838": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ADD", "path": "0"}, "4839": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP1", "path": "0"}, "4840": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x20"}, "4842": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ADD", "path": "0"}, "4843": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP1", "path": "0"}, "4844": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP4", "path": "0"}, "4845": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "GT", "path": "0"}, "4846": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH2", "path": "0", "value": "0x12DE"}, "4849": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "JUMPI", "path": "0"}, "4850": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "JUMPDEST", "path": "0"}, "4851": {"op": "POP"}, "4852": {"op": "POP"}, "4853": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP3", "path": "0"}, "4854": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MLOAD", "path": "0"}, "4855": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x20"}, "4857": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP5", "path": "0"}, "4858": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ADD", "path": "0"}, "4859": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP1", "path": "0"}, "4860": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP1", "path": "0"}, "4861": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP4", "path": "0"}, "4862": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "DUP4", "path": "0"}, "4863": {"op": "JUMPDEST"}, "4864": {"op": "PUSH1", "value": "0x20"}, "4866": {"op": "DUP4"}, "4867": {"op": "LT"}, "4868": {"op": "PUSH2", "value": "0x131E"}, "4871": {"op": "JUMPI"}, "4872": {"op": "DUP1"}, "4873": {"op": "MLOAD"}, "4874": {"op": "DUP3"}, "4875": {"op": "MSTORE"}, "4876": {"op": "PUSH1", "value": "0x1F"}, "4878": {"op": "NOT"}, "4879": {"op": "SWAP1"}, "4880": {"op": "SWAP3"}, "4881": {"op": "ADD"}, "4882": {"op": "SWAP2"}, "4883": {"op": "PUSH1", "value": "0x20"}, "4885": {"op": "SWAP2"}, "4886": {"op": "DUP3"}, "4887": {"op": "ADD"}, "4888": {"op": "SWAP2"}, "4889": {"op": "ADD"}, "4890": {"op": "PUSH2", "value": "0x12FF"}, "4893": {"op": "JUMP"}, "4894": {"op": "JUMPDEST"}, "4895": {"op": "PUSH1", "value": "0x1"}, "4897": {"op": "DUP4"}, "4898": {"op": "PUSH1", "value": "0x20"}, "4900": {"op": "SUB"}, "4901": {"op": "PUSH2", "value": "0x100"}, "4904": {"op": "EXP"}, "4905": {"op": "SUB"}, "4906": {"op": "DUP1"}, "4907": {"op": "NOT"}, "4908": {"op": "DUP3"}, "4909": {"op": "MLOAD"}, "4910": {"op": "AND"}, "4911": {"op": "DUP2"}, "4912": {"op": "DUP5"}, "4913": {"op": "MLOAD"}, "4914": {"op": "AND"}, "4915": {"op": "DUP1"}, "4916": {"op": "DUP3"}, "4917": {"op": "OR"}, "4918": {"op": "DUP6"}, "4919": {"op": "MSTORE"}, "4920": {"op": "POP"}, "4921": {"op": "POP"}, "4922": {"op": "POP"}, "4923": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "POP", "path": "0"}, "4924": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "POP", "path": "0"}, "4925": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "POP", "path": "0"}, "4926": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP1", "path": "0"}, "4927": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "POP", "path": "0"}, "4928": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "ADD", "path": "0"}, "4929": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP3", "path": "0"}, "4930": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "POP", "path": "0"}, "4931": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "POP", "path": "0"}, "4932": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "POP", "path": "0"}, "4933": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x40"}, "4935": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MLOAD", "path": "0"}, "4936": {"op": "PUSH1", "value": "0x20"}, "4938": {"op": "DUP2"}, "4939": {"op": "DUP4"}, "4940": {"op": "SUB"}, "4941": {"op": "SUB"}, "4942": {"op": "DUP2"}, "4943": {"op": "MSTORE"}, "4944": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "SWAP1", "path": "0"}, "4945": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "PUSH1", "path": "0", "value": "0x40"}, "4947": {"fn": "ERC721Metadata.tokenURI", "offset": [51067, 51104], "op": "MSTORE", "path": "0"}, "4948": {"fn": "ERC721Metadata.tokenURI", "offset": [51053, 51105], "op": "SWAP2", "path": "0"}, "4949": {"fn": "ERC721Metadata.tokenURI", "offset": [51053, 51105], "op": "POP", "path": "0"}, "4950": {"fn": "ERC721Metadata.tokenURI", "offset": [51053, 51105], "op": "POP", "path": "0"}, "4951": {"fn": "ERC721Metadata.tokenURI", "offset": [51053, 51105], "op": "PUSH2", "path": "0", "value": "0x6D6"}, "4954": {"fn": "ERC721Metadata.tokenURI", "offset": [51053, 51105], "op": "JUMP", "path": "0"}, "4955": {"fn": "ERC721Metadata.tokenURI", "offset": [51006, 51116], "op": "JUMPDEST", "path": "0"}, "4956": {"fn": "ERC721Metadata.tokenURI", "offset": [51247, 51255], "op": "PUSH1", "path": "0", "statement": 43, "value": "0xC"}, "4958": {"fn": "ERC721Metadata.tokenURI", "offset": [51257, 51278], "op": "PUSH2", "path": "0", "value": "0x1366"}, "4961": {"fn": "ERC721Metadata.tokenURI", "offset": [51257, 51264], "op": "DUP5", "path": "0"}, "4962": {"fn": "ERC721Metadata.tokenURI", "offset": [51257, 51276], "op": "PUSH2", "path": "0", "value": "0x193C"}, "4965": {"fn": "ERC721Metadata.tokenURI", "jump": "i", "offset": [51257, 51278], "op": "JUMP", "path": "0"}, "4966": {"fn": "ERC721Metadata.tokenURI", "offset": [51257, 51278], "op": "JUMPDEST", "path": "0"}, "4967": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x40"}, "4969": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MLOAD", "path": "0"}, "4970": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x20"}, "4972": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ADD", "path": "0"}, "4973": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP1", "path": "0"}, "4974": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP4", "path": "0"}, "4975": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP1", "path": "0"}, "4976": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SLOAD", "path": "0"}, "4977": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x1"}, "4979": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP2", "path": "0"}, "4980": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x1"}, "4982": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "AND", "path": "0"}, "4983": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ISZERO", "path": "0"}, "4984": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH2", "path": "0", "value": "0x100"}, "4987": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MUL", "path": "0"}, "4988": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SUB", "path": "0"}, "4989": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "AND", "path": "0"}, "4990": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x2"}, "4992": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP1", "path": "0"}, "4993": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DIV", "path": "0"}, "4994": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP1", "path": "0"}, "4995": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ISZERO", "path": "0"}, "4996": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH2", "path": "0", "value": "0x13C4"}, "4999": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "JUMPI", "path": "0"}, "5000": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP1", "path": "0"}, "5001": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x1F"}, "5003": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "LT", "path": "0"}, "5004": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH2", "path": "0", "value": "0x13A2"}, "5007": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "JUMPI", "path": "0"}, "5008": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH2", "path": "0", "value": "0x100"}, "5011": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP1", "path": "0"}, "5012": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP4", "path": "0"}, "5013": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SLOAD", "path": "0"}, "5014": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DIV", "path": "0"}, "5015": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MUL", "path": "0"}, "5016": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP4", "path": "0"}, "5017": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MSTORE", "path": "0"}, "5018": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP2", "path": "0"}, "5019": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP3", "path": "0"}, "5020": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ADD", "path": "0"}, "5021": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP2", "path": "0"}, "5022": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH2", "path": "0", "value": "0x13C4"}, "5025": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "JUMP", "path": "0"}, "5026": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "JUMPDEST", "path": "0"}, "5027": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP3", "path": "0"}, "5028": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ADD", "path": "0"}, "5029": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP2", "path": "0"}, "5030": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP1", "path": "0"}, "5031": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x0"}, "5033": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MSTORE", "path": "0"}, "5034": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x20"}, "5036": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x0"}, "5038": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "KECCAK256", "path": "0"}, "5039": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP1", "path": "0"}, "5040": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "JUMPDEST", "path": "0"}, "5041": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP2", "path": "0"}, "5042": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SLOAD", "path": "0"}, "5043": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP2", "path": "0"}, "5044": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MSTORE", "path": "0"}, "5045": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP1", "path": "0"}, "5046": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x1"}, "5048": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ADD", "path": "0"}, "5049": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP1", "path": "0"}, "5050": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x20"}, "5052": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ADD", "path": "0"}, "5053": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP1", "path": "0"}, "5054": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP4", "path": "0"}, "5055": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "GT", "path": "0"}, "5056": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH2", "path": "0", "value": "0x13B0"}, "5059": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "JUMPI", "path": "0"}, "5060": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "JUMPDEST", "path": "0"}, "5061": {"op": "POP"}, "5062": {"op": "POP"}, "5063": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP3", "path": "0"}, "5064": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MLOAD", "path": "0"}, "5065": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x20"}, "5067": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP5", "path": "0"}, "5068": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ADD", "path": "0"}, "5069": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP1", "path": "0"}, "5070": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP1", "path": "0"}, "5071": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP4", "path": "0"}, "5072": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "DUP4", "path": "0"}, "5073": {"op": "JUMPDEST"}, "5074": {"op": "PUSH1", "value": "0x20"}, "5076": {"op": "DUP4"}, "5077": {"op": "LT"}, "5078": {"op": "PUSH2", "value": "0x13F0"}, "5081": {"op": "JUMPI"}, "5082": {"op": "DUP1"}, "5083": {"op": "MLOAD"}, "5084": {"op": "DUP3"}, "5085": {"op": "MSTORE"}, "5086": {"op": "PUSH1", "value": "0x1F"}, "5088": {"op": "NOT"}, "5089": {"op": "SWAP1"}, "5090": {"op": "SWAP3"}, "5091": {"op": "ADD"}, "5092": {"op": "SWAP2"}, "5093": {"op": "PUSH1", "value": "0x20"}, "5095": {"op": "SWAP2"}, "5096": {"op": "DUP3"}, "5097": {"op": "ADD"}, "5098": {"op": "SWAP2"}, "5099": {"op": "ADD"}, "5100": {"op": "PUSH2", "value": "0x13D1"}, "5103": {"op": "JUMP"}, "5104": {"op": "JUMPDEST"}, "5105": {"op": "PUSH1", "value": "0x1"}, "5107": {"op": "DUP4"}, "5108": {"op": "PUSH1", "value": "0x20"}, "5110": {"op": "SUB"}, "5111": {"op": "PUSH2", "value": "0x100"}, "5114": {"op": "EXP"}, "5115": {"op": "SUB"}, "5116": {"op": "DUP1"}, "5117": {"op": "NOT"}, "5118": {"op": "DUP3"}, "5119": {"op": "MLOAD"}, "5120": {"op": "AND"}, "5121": {"op": "DUP2"}, "5122": {"op": "DUP5"}, "5123": {"op": "MLOAD"}, "5124": {"op": "AND"}, "5125": {"op": "DUP1"}, "5126": {"op": "DUP3"}, "5127": {"op": "OR"}, "5128": {"op": "DUP6"}, "5129": {"op": "MSTORE"}, "5130": {"op": "POP"}, "5131": {"op": "POP"}, "5132": {"op": "POP"}, "5133": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "POP", "path": "0"}, "5134": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "POP", "path": "0"}, "5135": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "POP", "path": "0"}, "5136": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP1", "path": "0"}, "5137": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "POP", "path": "0"}, "5138": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "ADD", "path": "0"}, "5139": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP3", "path": "0"}, "5140": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "POP", "path": "0"}, "5141": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "POP", "path": "0"}, "5142": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "POP", "path": "0"}, "5143": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x40"}, "5145": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MLOAD", "path": "0"}, "5146": {"op": "PUSH1", "value": "0x20"}, "5148": {"op": "DUP2"}, "5149": {"op": "DUP4"}, "5150": {"op": "SUB"}, "5151": {"op": "SUB"}, "5152": {"op": "DUP2"}, "5153": {"op": "MSTORE"}, "5154": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "SWAP1", "path": "0"}, "5155": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "PUSH1", "path": "0", "value": "0x40"}, "5157": {"fn": "ERC721Metadata.tokenURI", "offset": [51230, 51279], "op": "MSTORE", "path": "0"}, "5158": {"fn": "ERC721Metadata.tokenURI", "offset": [51216, 51280], "op": "SWAP2", "path": "0"}, "5159": {"fn": "ERC721Metadata.tokenURI", "offset": [51216, 51280], "op": "POP", "path": "0"}, "5160": {"fn": "ERC721Metadata.tokenURI", "offset": [51216, 51280], "op": "POP", "path": "0"}, "5161": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "SWAP2", "path": "0"}, "5162": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "SWAP1", "path": "0"}, "5163": {"fn": "ERC721Metadata.tokenURI", "offset": [50517, 51287], "op": "POP", "path": "0"}, "5164": {"fn": "ERC721Metadata.tokenURI", "jump": "o", "offset": [50517, 51287], "op": "JUMP", "path": "0"}, "5165": {"fn": "WrappedPunk.registerProxy", "offset": [56127, 56469], "op": "JUMPDEST", "path": "0"}, "5166": {"fn": "WrappedPunk.registerProxy", "offset": [56169, 56183], "op": "PUSH1", "path": "0", "value": "0x0"}, "5168": {"fn": "WrappedPunk.registerProxy", "offset": [56186, 56198], "op": "PUSH2", "path": "0", "value": "0x1437"}, "5171": {"fn": "WrappedPunk.registerProxy", "offset": [56186, 56196], "op": "PUSH2", "path": "0", "value": "0x1683"}, "5174": {"fn": "WrappedPunk.registerProxy", "jump": "i", "offset": [56186, 56198], "op": "JUMP", "path": "0"}, "5175": {"fn": "WrappedPunk.registerProxy", "offset": [56186, 56198], "op": "JUMPDEST", "path": "0"}, "5176": {"op": "PUSH1", "value": "0x1"}, "5178": {"op": "PUSH1", "value": "0x1"}, "5180": {"op": "PUSH1", "value": "0xA0"}, "5182": {"op": "SHL"}, "5183": {"op": "SUB"}, "5184": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "DUP1", "path": "0", "statement": 44}, "5185": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "DUP3", "path": "0"}, "5186": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "AND", "path": "0"}, "5187": {"fn": "WrappedPunk.registerProxy", "offset": [56258, 56259], "op": "PUSH1", "path": "0", "value": "0x0"}, "5189": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "SWAP1", "path": "0"}, "5190": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "DUP2", "path": "0"}, "5191": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "MSTORE", "path": "0"}, "5192": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56238], "op": "PUSH1", "path": "0", "value": "0xF"}, "5194": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "PUSH1", "path": "0", "value": "0x20"}, "5196": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "MSTORE", "path": "0"}, "5197": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "PUSH1", "path": "0", "value": "0x40"}, "5199": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "SWAP1", "path": "0"}, "5200": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "KECCAK256", "path": "0"}, "5201": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "SLOAD", "path": "0"}, "5202": {"fn": "WrappedPunk.registerProxy", "offset": [56169, 56198], "op": "SWAP2", "path": "0"}, "5203": {"fn": "WrappedPunk.registerProxy", "offset": [56169, 56198], "op": "SWAP3", "path": "0"}, "5204": {"op": "POP"}, "5205": {"fn": "WrappedPunk.registerProxy", "offset": [56230, 56246], "op": "AND", "path": "0"}, "5206": {"branch": 137, "fn": "WrappedPunk.registerProxy", "offset": [56230, 56260], "op": "ISZERO", "path": "0"}, "5207": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH2", "path": "0", "value": "0x1491"}, "5210": {"branch": 137, "fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "JUMPI", "path": "0"}, "5211": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH1", "path": "0", "value": "0x40"}, "5213": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "MLOAD", "path": "0"}, "5214": {"op": "PUSH3", "value": "0x461BCD"}, "5218": {"op": "PUSH1", "value": "0xE5"}, "5220": {"op": "SHL"}, "5221": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP2", "path": "0"}, "5222": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "MSTORE", "path": "0"}, "5223": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH1", "path": "0", "value": "0x4"}, "5225": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "ADD", "path": "0"}, "5226": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP1", "path": "0"}, "5227": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP1", "path": "0"}, "5228": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH1", "path": "0", "value": "0x20"}, "5230": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "ADD", "path": "0"}, "5231": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP3", "path": "0"}, "5232": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP2", "path": "0"}, "5233": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "SUB", "path": "0"}, "5234": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP3", "path": "0"}, "5235": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "MSTORE", "path": "0"}, "5236": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH1", "path": "0", "value": "0x2C"}, "5238": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP2", "path": "0"}, "5239": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "MSTORE", "path": "0"}, "5240": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH1", "path": "0", "value": "0x20"}, "5242": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "ADD", "path": "0"}, "5243": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP1", "path": "0"}, "5244": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH2", "path": "0", "value": "0x2796"}, "5247": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH1", "path": "0", "value": "0x2C"}, "5249": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "SWAP2", "path": "0"}, "5250": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "CODECOPY", "path": "0"}, "5251": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH1", "path": "0", "value": "0x40"}, "5253": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "ADD", "path": "0"}, "5254": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "SWAP2", "path": "0"}, "5255": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "POP", "path": "0"}, "5256": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "POP", "path": "0"}, "5257": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "PUSH1", "path": "0", "value": "0x40"}, "5259": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "MLOAD", "path": "0"}, "5260": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "DUP1", "path": "0"}, "5261": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "SWAP2", "path": "0"}, "5262": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "SUB", "path": "0"}, "5263": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "SWAP1", "path": "0"}, "5264": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "REVERT", "path": "0"}, "5265": {"fn": "WrappedPunk.registerProxy", "offset": [56209, 56330], "op": "JUMPDEST", "path": "0"}, "5266": {"fn": "WrappedPunk.registerProxy", "offset": [56341, 56354], "op": "PUSH1", "path": "0", "value": "0x0"}, "5268": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "PUSH1", "path": "0", "value": "0x40"}, "5270": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "MLOAD", "path": "0"}, "5271": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "PUSH2", "path": "0", "value": "0x149F"}, "5274": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "SWAP1", "path": "0"}, "5275": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "PUSH2", "path": "0", "value": "0x231E"}, "5278": {"fn": "WrappedPunk.registerProxy", "jump": "i", "offset": [56365, 56380], "op": "JUMP", "path": "0"}, "5279": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "JUMPDEST", "path": "0"}, "5280": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "PUSH1", "path": "0", "value": "0x40"}, "5282": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "MLOAD", "path": "0"}, "5283": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "DUP1", "path": "0"}, "5284": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "SWAP2", "path": "0"}, "5285": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "SUB", "path": "0"}, "5286": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "SWAP1", "path": "0"}, "5287": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "PUSH1", "path": "0", "value": "0x0"}, "5289": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "CREATE", "path": "0"}, "5290": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "DUP1", "path": "0"}, "5291": {"fn": "WrappedPunk.registerProxy", "offset": [56365, 56380], "op": "ISZERO", "path": "0"}, "5292": {"op": "DUP1"}, "5293": {"op": "ISZERO"}, "5294": {"op": "PUSH2", "value": "0x14BB"}, "5297": {"op": "JUMPI"}, "5298": {"op": "RETURNDATASIZE"}, "5299": {"op": "PUSH1", "value": "0x0"}, "5301": {"op": "DUP1"}, "5302": {"op": "RETURNDATACOPY"}, "5303": {"op": "RETURNDATASIZE"}, "5304": {"op": "PUSH1", "value": "0x0"}, "5306": {"op": "REVERT"}, "5307": {"op": "JUMPDEST"}, "5308": {"op": "POP"}, "5309": {"op": "PUSH1", "value": "0x1"}, "5311": {"op": "PUSH1", "value": "0x1"}, "5313": {"op": "PUSH1", "value": "0xA0"}, "5315": {"op": "SHL"}, "5316": {"op": "SUB"}, "5317": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "DUP4", "path": "0", "statement": 45}, "5318": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "DUP2", "path": "0"}, "5319": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "AND", "path": "0"}, "5320": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "PUSH1", "path": "0", "value": "0x0"}, "5322": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "DUP2", "path": "0"}, "5323": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "DUP2", "path": "0"}, "5324": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "MSTORE", "path": "0"}, "5325": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56400], "op": "PUSH1", "path": "0", "value": "0xF"}, "5327": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "PUSH1", "path": "0", "value": "0x20"}, "5329": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "SWAP1", "path": "0"}, "5330": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "DUP2", "path": "0"}, "5331": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "MSTORE", "path": "0"}, "5332": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "PUSH1", "path": "0", "value": "0x40"}, "5334": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "SWAP2", "path": "0"}, "5335": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "DUP3", "path": "0"}, "5336": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "SWAP1", "path": "0"}, "5337": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56408], "op": "KECCAK256", "path": "0"}, "5338": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "DUP1", "path": "0"}, "5339": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "SLOAD", "path": "0"}, "5340": {"op": "PUSH1", "value": "0x1"}, "5342": {"op": "PUSH1", "value": "0x1"}, "5344": {"op": "PUSH1", "value": "0xA0"}, "5346": {"op": "SHL"}, "5347": {"op": "SUB"}, "5348": {"op": "NOT"}, "5349": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "AND", "path": "0"}, "5350": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "SWAP5", "path": "0"}, "5351": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "DUP7", "path": "0"}, "5352": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "AND", "path": "0"}, "5353": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "SWAP5", "path": "0"}, "5354": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "DUP6", "path": "0"}, "5355": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "OR", "path": "0"}, "5356": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "SWAP1", "path": "0"}, "5357": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "SSTORE", "path": "0"}, "5358": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "DUP2", "path": "0", "statement": 46}, "5359": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "MLOAD", "path": "0"}, "5360": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP3", "path": "0"}, "5361": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "DUP4", "path": "0"}, "5362": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "MSTORE", "path": "0"}, "5363": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "DUP3", "path": "0"}, "5364": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "ADD", "path": "0"}, "5365": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP3", "path": "0"}, "5366": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP1", "path": "0"}, "5367": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP3", "path": "0"}, "5368": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "MSTORE", "path": "0"}, "5369": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "DUP2", "path": "0"}, "5370": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "MLOAD", "path": "0"}, "5371": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "SWAP3", "path": "0"}, "5372": {"fn": "WrappedPunk.registerProxy", "offset": [56392, 56416], "op": "SWAP4", "path": "0"}, "5373": {"op": "POP"}, "5374": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "PUSH32", "path": "0", "value": "0x3623F8BD4DA9524CFAA08C81B8194F759CA625E8D761F4CC2CEA23E63D3F4B12"}, "5407": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP3", "path": "0"}, "5408": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP1", "path": "0"}, "5409": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "DUP2", "path": "0"}, "5410": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP1", "path": "0"}, "5411": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SUB", "path": "0"}, "5412": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP1", "path": "0"}, "5413": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP2", "path": "0"}, "5414": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "ADD", "path": "0"}, "5415": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "SWAP1", "path": "0"}, "5416": {"fn": "WrappedPunk.registerProxy", "offset": [56432, 56462], "op": "LOG1", "path": "0"}, "5417": {"fn": "WrappedPunk.registerProxy", "offset": [56127, 56469], "op": "POP", "path": "0"}, "5418": {"fn": "WrappedPunk.registerProxy", "offset": [56127, 56469], "op": "POP", "path": "0"}, "5419": {"fn": "WrappedPunk.registerProxy", "jump": "o", "offset": [56127, 56469], "op": "JUMP", "path": "0"}, "5420": {"fn": "ERC721.isApprovedForAll", "offset": [26927, 27100], "op": "JUMPDEST", "path": "0"}, "5421": {"op": "PUSH1", "value": "0x1"}, "5423": {"op": "PUSH1", "value": "0x1"}, "5425": {"op": "PUSH1", "value": "0xA0"}, "5427": {"op": "SHL"}, "5428": {"op": "SUB"}, "5429": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "SWAP2", "path": "0", "statement": 47}, "5430": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "DUP3", "path": "0"}, "5431": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "AND", "path": "0"}, "5432": {"fn": "ERC721.isApprovedForAll", "offset": [27031, 27035], "op": "PUSH1", "path": "0", "value": "0x0"}, "5434": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "SWAP1", "path": "0"}, "5435": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "DUP2", "path": "0"}, "5436": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "MSTORE", "path": "0"}, "5437": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27076], "op": "PUSH1", "path": "0", "value": "0x5"}, "5439": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "PUSH1", "path": "0", "value": "0x20"}, "5441": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "SWAP1", "path": "0"}, "5442": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "DUP2", "path": "0"}, "5443": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "MSTORE", "path": "0"}, "5444": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "PUSH1", "path": "0", "value": "0x40"}, "5446": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "DUP1", "path": "0"}, "5447": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "DUP4", "path": "0"}, "5448": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27083], "op": "KECCAK256", "path": "0"}, "5449": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "SWAP4", "path": "0"}, "5450": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "SWAP1", "path": "0"}, "5451": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "SWAP5", "path": "0"}, "5452": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "AND", "path": "0"}, "5453": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "DUP3", "path": "0"}, "5454": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "MSTORE", "path": "0"}, "5455": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "SWAP2", "path": "0"}, "5456": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "SWAP1", "path": "0"}, "5457": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "SWAP2", "path": "0"}, "5458": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "MSTORE", "path": "0"}, "5459": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "KECCAK256", "path": "0"}, "5460": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "SLOAD", "path": "0"}, "5461": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "PUSH1", "path": "0", "value": "0xFF"}, "5463": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "AND", "path": "0"}, "5464": {"fn": "ERC721.isApprovedForAll", "offset": [27058, 27093], "op": "SWAP1", "path": "0"}, "5465": {"fn": "ERC721.isApprovedForAll", "jump": "o", "offset": [26927, 27100], "op": "JUMP", "path": "0"}, "5466": {"fn": "Ownable.transferOwnership", "offset": [3333, 3601], "op": "JUMPDEST", "path": "0"}, "5467": {"offset": [2637, 2649], "op": "PUSH2", "path": "0", "value": "0x1562"}, "5470": {"offset": [2637, 2647], "op": "PUSH2", "path": "0", "value": "0x1683"}, "5473": {"jump": "i", "offset": [2637, 2649], "op": "JUMP", "path": "0"}, "5474": {"fn": "Ownable.transferOwnership", "offset": [2637, 2649], "op": "JUMPDEST", "path": "0"}, "5475": {"offset": [2627, 2633], "op": "PUSH1", "path": "0", "value": "0x0"}, "5477": {"fn": "Ownable.transferOwnership", "offset": [2627, 2633], "op": "SLOAD", "path": "0"}, "5478": {"op": "PUSH1", "value": "0x1"}, "5480": {"op": "PUSH1", "value": "0x1"}, "5482": {"op": "PUSH1", "value": "0xA0"}, "5484": {"op": "SHL"}, "5485": {"op": "SUB"}, "5486": {"offset": [2627, 2633], "op": "SWAP1", "path": "0"}, "5487": {"fn": "Ownable.transferOwnership", "offset": [2627, 2633], "op": "DUP2", "path": "0"}, "5488": {"fn": "Ownable.transferOwnership", "offset": [2627, 2633], "op": "AND", "path": "0"}, "5489": {"offset": [2627, 2649], "op": "SWAP2", "path": "0"}, "5490": {"fn": "Ownable.transferOwnership", "offset": [2627, 2649], "op": "AND", "path": "0"}, "5491": {"branch": 138, "fn": "Ownable.transferOwnership", "offset": [2627, 2649], "op": "EQ", "path": "0"}, "5492": {"offset": [2619, 2686], "op": "PUSH2", "path": "0", "value": "0x15B2"}, "5495": {"branch": 138, "offset": [2619, 2686], "op": "JUMPI", "path": "0"}, "5496": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x40"}, "5498": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "DUP1", "path": "0"}, "5499": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "5500": {"op": "PUSH3", "value": "0x461BCD"}, "5504": {"op": "PUSH1", "value": "0xE5"}, "5506": {"op": "SHL"}, "5507": {"offset": [2619, 2686], "op": "DUP2", "path": "0"}, "5508": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "5509": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x20"}, "5511": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x4"}, "5513": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "5514": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "5515": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "5516": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "5517": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "5518": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x24"}, "5520": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "5521": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "5522": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "5523": {"op": "PUSH1", "value": "0x0"}, "5525": {"op": "DUP1"}, "5526": {"op": "MLOAD"}, "5527": {"op": "PUSH1", "value": "0x20"}, "5529": {"op": "PUSH2", "value": "0x27EE"}, "5532": {"op": "DUP4"}, "5533": {"op": "CODECOPY"}, "5534": {"op": "DUP2"}, "5535": {"op": "MLOAD"}, "5536": {"op": "SWAP2"}, "5537": {"op": "MSTORE"}, "5538": {"offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x44"}, "5540": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "DUP3", "path": "0"}, "5541": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "5542": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "MSTORE", "path": "0"}, "5543": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "5544": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "MLOAD", "path": "0"}, "5545": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "5546": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "DUP2", "path": "0"}, "5547": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "5548": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "SUB", "path": "0"}, "5549": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "PUSH1", "path": "0", "value": "0x64"}, "5551": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "ADD", "path": "0"}, "5552": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "SWAP1", "path": "0"}, "5553": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "REVERT", "path": "0"}, "5554": {"fn": "Ownable.transferOwnership", "offset": [2619, 2686], "op": "JUMPDEST", "path": "0"}, "5555": {"op": "PUSH1", "value": "0x1"}, "5557": {"op": "PUSH1", "value": "0x1"}, "5559": {"op": "PUSH1", "value": "0xA0"}, "5561": {"op": "SHL"}, "5562": {"op": "SUB"}, "5563": {"fn": "Ownable.transferOwnership", "offset": [3426, 3448], "op": "DUP2", "path": "0", "statement": 48}, "5564": {"branch": 139, "fn": "Ownable.transferOwnership", "offset": [3426, 3448], "op": "AND", "path": "0"}, "5565": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH2", "path": "0", "value": "0x15F7"}, "5568": {"branch": 139, "fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "JUMPI", "path": "0"}, "5569": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH1", "path": "0", "value": "0x40"}, "5571": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "MLOAD", "path": "0"}, "5572": {"op": "PUSH3", "value": "0x461BCD"}, "5576": {"op": "PUSH1", "value": "0xE5"}, "5578": {"op": "SHL"}, "5579": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP2", "path": "0"}, "5580": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "MSTORE", "path": "0"}, "5581": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH1", "path": "0", "value": "0x4"}, "5583": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "ADD", "path": "0"}, "5584": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP1", "path": "0"}, "5585": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP1", "path": "0"}, "5586": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH1", "path": "0", "value": "0x20"}, "5588": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "ADD", "path": "0"}, "5589": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP3", "path": "0"}, "5590": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP2", "path": "0"}, "5591": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "SUB", "path": "0"}, "5592": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP3", "path": "0"}, "5593": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "MSTORE", "path": "0"}, "5594": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH1", "path": "0", "value": "0x26"}, "5596": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP2", "path": "0"}, "5597": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "MSTORE", "path": "0"}, "5598": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH1", "path": "0", "value": "0x20"}, "5600": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "ADD", "path": "0"}, "5601": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP1", "path": "0"}, "5602": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH2", "path": "0", "value": "0x2695"}, "5605": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH1", "path": "0", "value": "0x26"}, "5607": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "SWAP2", "path": "0"}, "5608": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "CODECOPY", "path": "0"}, "5609": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH1", "path": "0", "value": "0x40"}, "5611": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "ADD", "path": "0"}, "5612": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "SWAP2", "path": "0"}, "5613": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "POP", "path": "0"}, "5614": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "POP", "path": "0"}, "5615": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "PUSH1", "path": "0", "value": "0x40"}, "5617": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "MLOAD", "path": "0"}, "5618": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "DUP1", "path": "0"}, "5619": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "SWAP2", "path": "0"}, "5620": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "SUB", "path": "0"}, "5621": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "SWAP1", "path": "0"}, "5622": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "REVERT", "path": "0"}, "5623": {"fn": "Ownable.transferOwnership", "offset": [3405, 3512], "op": "JUMPDEST", "path": "0"}, "5624": {"fn": "Ownable.transferOwnership", "offset": [3549, 3555], "op": "PUSH1", "path": "0", "statement": 49, "value": "0x0"}, "5626": {"fn": "Ownable.transferOwnership", "offset": [3549, 3555], "op": "DUP1", "path": "0"}, "5627": {"fn": "Ownable.transferOwnership", "offset": [3549, 3555], "op": "SLOAD", "path": "0"}, "5628": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "PUSH1", "path": "0", "value": "0x40"}, "5630": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "MLOAD", "path": "0"}, "5631": {"op": "PUSH1", "value": "0x1"}, "5633": {"op": "PUSH1", "value": "0x1"}, "5635": {"op": "PUSH1", "value": "0xA0"}, "5637": {"op": "SHL"}, "5638": {"op": "SUB"}, "5639": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "DUP1", "path": "0"}, "5640": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "DUP6", "path": "0"}, "5641": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "AND", "path": "0"}, "5642": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "SWAP4", "path": "0"}, "5643": {"fn": "Ownable.transferOwnership", "offset": [3549, 3555], "op": "SWAP3", "path": "0"}, "5644": {"fn": "Ownable.transferOwnership", "offset": [3549, 3555], "op": "AND", "path": "0"}, "5645": {"fn": "Ownable.transferOwnership", "offset": [3549, 3555], "op": "SWAP2", "path": "0"}, "5646": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "PUSH32", "path": "0", "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"}, "5679": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "SWAP2", "path": "0"}, "5680": {"fn": "Ownable.transferOwnership", "offset": [3528, 3566], "op": "LOG3", "path": "0"}, "5681": {"fn": "Ownable.transferOwnership", "offset": [3577, 3583], "op": "PUSH1", "path": "0", "statement": 50, "value": "0x0"}, "5683": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "DUP1", "path": "0"}, "5684": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SLOAD", "path": "0"}, "5685": {"op": "PUSH1", "value": "0x1"}, "5687": {"op": "PUSH1", "value": "0x1"}, "5689": {"op": "PUSH1", "value": "0xA0"}, "5691": {"op": "SHL"}, "5692": {"op": "SUB"}, "5693": {"op": "NOT"}, "5694": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "AND", "path": "0"}, "5695": {"op": "PUSH1", "value": "0x1"}, "5697": {"op": "PUSH1", "value": "0x1"}, "5699": {"op": "PUSH1", "value": "0xA0"}, "5701": {"op": "SHL"}, "5702": {"op": "SUB"}, "5703": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SWAP3", "path": "0"}, "5704": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SWAP1", "path": "0"}, "5705": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SWAP3", "path": "0"}, "5706": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "AND", "path": "0"}, "5707": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SWAP2", "path": "0"}, "5708": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SWAP1", "path": "0"}, "5709": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SWAP2", "path": "0"}, "5710": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "OR", "path": "0"}, "5711": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SWAP1", "path": "0"}, "5712": {"fn": "Ownable.transferOwnership", "offset": [3577, 3594], "op": "SSTORE", "path": "0"}, "5713": {"fn": "Ownable.transferOwnership", "jump": "o", "offset": [3333, 3601], "op": "JUMP", "path": "0"}, "5714": {"fn": "WrappedPunk.punkContract", "offset": [55544, 55644], "op": "JUMPDEST", "path": "0"}, "5715": {"fn": "WrappedPunk.punkContract", "offset": [55623, 55636], "op": "PUSH1", "path": "0", "statement": 51, "value": "0xE"}, "5717": {"fn": "WrappedPunk.punkContract", "offset": [55623, 55636], "op": "SLOAD", "path": "0"}, "5718": {"fn": "WrappedPunk.punkContract", "offset": [55623, 55636], "op": "PUSH2", "path": "0", "value": "0x100"}, "5721": {"fn": "WrappedPunk.punkContract", "offset": [55623, 55636], "op": "SWAP1", "path": "0"}, "5722": {"fn": "WrappedPunk.punkContract", "offset": [55623, 55636], "op": "DIV", "path": "0"}, "5723": {"op": "PUSH1", "value": "0x1"}, "5725": {"op": "PUSH1", "value": "0x1"}, "5727": {"op": "PUSH1", "value": "0xA0"}, "5729": {"op": "SHL"}, "5730": {"op": "SUB"}, "5731": {"fn": "WrappedPunk.punkContract", "offset": [55623, 55636], "op": "AND", "path": "0"}, "5732": {"fn": "WrappedPunk.punkContract", "offset": [55623, 55636], "op": "SWAP1", "path": "0"}, "5733": {"fn": "WrappedPunk.punkContract", "jump": "o", "offset": [55544, 55644], "op": "JUMP", "path": "0"}, "5734": {"fn": "ERC721._exists", "offset": [31007, 31128], "op": "JUMPDEST", "path": "0"}, "5735": {"fn": "ERC721._exists", "offset": [31064, 31068], "op": "PUSH1", "path": "0", "value": "0x0"}, "5737": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "SWAP1", "path": "0", "statement": 52}, "5738": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "DUP2", "path": "0"}, "5739": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "MSTORE", "path": "0"}, "5740": {"fn": "ERC721._exists", "offset": [31087, 31098], "op": "PUSH1", "path": "0", "value": "0x2"}, "5742": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "PUSH1", "path": "0", "value": "0x20"}, "5744": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "MSTORE", "path": "0"}, "5745": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "PUSH1", "path": "0", "value": "0x40"}, "5747": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "SWAP1", "path": "0"}, "5748": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "KECCAK256", "path": "0"}, "5749": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "SLOAD", "path": "0"}, "5750": {"op": "PUSH1", "value": "0x1"}, "5752": {"op": "PUSH1", "value": "0x1"}, "5754": {"op": "PUSH1", "value": "0xA0"}, "5756": {"op": "SHL"}, "5757": {"op": "SUB"}, "5758": {"fn": "ERC721._exists", "offset": [31087, 31107], "op": "AND", "path": "0"}, "5759": {"fn": "ERC721._exists", "offset": [31087, 31121], "op": "ISZERO", "path": "0"}, "5760": {"fn": "ERC721._exists", "offset": [31087, 31121], "op": "ISZERO", "path": "0"}, "5761": {"fn": "ERC721._exists", "offset": [31087, 31121], "op": "SWAP1", "path": "0"}, "5762": {"fn": "ERC721._exists", "jump": "o", "offset": [31007, 31128], "op": "JUMP", "path": "0"}, "5763": {"fn": "Context._msgSender", "offset": [1029, 1125], "op": "JUMPDEST", "path": "0"}, "5764": {"fn": "Context._msgSender", "offset": [1108, 1118], "op": "CALLER", "path": "0", "statement": 53}, "5765": {"fn": "Context._msgSender", "offset": [1029, 1125], "op": "SWAP1", "path": "0"}, "5766": {"fn": "Context._msgSender", "jump": "o", "offset": [1029, 1125], "op": "JUMP", "path": "0"}, "5767": {"fn": "ERC721._isApprovedOrOwner", "offset": [31489, 31906], "op": "JUMPDEST", "path": "0"}, "5768": {"fn": "ERC721._isApprovedOrOwner", "offset": [31598, 31602], "op": "PUSH1", "path": "0", "value": "0x0"}, "5770": {"fn": "ERC721._isApprovedOrOwner", "offset": [31639, 31655], "op": "PUSH2", "path": "0", "statement": 54, "value": "0x1692"}, "5773": {"fn": "ERC721._isApprovedOrOwner", "offset": [31647, 31654], "op": "DUP3", "path": "0"}, "5774": {"fn": "ERC721._isApprovedOrOwner", "offset": [31639, 31646], "op": "PUSH2", "path": "0", "value": "0x1666"}, "5777": {"fn": "ERC721._isApprovedOrOwner", "jump": "i", "offset": [31639, 31655], "op": "JUMP", "path": "0"}, "5778": {"branch": 140, "fn": "ERC721._isApprovedOrOwner", "offset": [31639, 31655], "op": "JUMPDEST", "path": "0"}, "5779": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH2", "path": "0", "value": "0x16CD"}, "5782": {"branch": 140, "fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "JUMPI", "path": "0"}, "5783": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH1", "path": "0", "value": "0x40"}, "5785": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "MLOAD", "path": "0"}, "5786": {"op": "PUSH3", "value": "0x461BCD"}, "5790": {"op": "PUSH1", "value": "0xE5"}, "5792": {"op": "SHL"}, "5793": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP2", "path": "0"}, "5794": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "MSTORE", "path": "0"}, "5795": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH1", "path": "0", "value": "0x4"}, "5797": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "ADD", "path": "0"}, "5798": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP1", "path": "0"}, "5799": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP1", "path": "0"}, "5800": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH1", "path": "0", "value": "0x20"}, "5802": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "ADD", "path": "0"}, "5803": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP3", "path": "0"}, "5804": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP2", "path": "0"}, "5805": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "SUB", "path": "0"}, "5806": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP3", "path": "0"}, "5807": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "MSTORE", "path": "0"}, "5808": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH1", "path": "0", "value": "0x2C"}, "5810": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP2", "path": "0"}, "5811": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "MSTORE", "path": "0"}, "5812": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH1", "path": "0", "value": "0x20"}, "5814": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "ADD", "path": "0"}, "5815": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP1", "path": "0"}, "5816": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH2", "path": "0", "value": "0x26DF"}, "5819": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH1", "path": "0", "value": "0x2C"}, "5821": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "SWAP2", "path": "0"}, "5822": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "CODECOPY", "path": "0"}, "5823": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH1", "path": "0", "value": "0x40"}, "5825": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "ADD", "path": "0"}, "5826": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "SWAP2", "path": "0"}, "5827": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "POP", "path": "0"}, "5828": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "POP", "path": "0"}, "5829": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "PUSH1", "path": "0", "value": "0x40"}, "5831": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "MLOAD", "path": "0"}, "5832": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "DUP1", "path": "0"}, "5833": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "SWAP2", "path": "0"}, "5834": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "SUB", "path": "0"}, "5835": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "SWAP1", "path": "0"}, "5836": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "REVERT", "path": "0"}, "5837": {"fn": "ERC721._isApprovedOrOwner", "offset": [31618, 31725], "op": "JUMPDEST", "path": "0"}, "5838": {"fn": "ERC721._isApprovedOrOwner", "offset": [31736, 31749], "op": "PUSH1", "path": "0", "value": "0x0"}, "5840": {"fn": "ERC721._isApprovedOrOwner", "offset": [31752, 31768], "op": "PUSH2", "path": "0", "value": "0x16D8"}, "5843": {"fn": "ERC721._isApprovedOrOwner", "offset": [31760, 31767], "op": "DUP4", "path": "0"}, "5844": {"fn": "ERC721._isApprovedOrOwner", "offset": [31752, 31759], "op": "PUSH2", "path": "0", "value": "0xC49"}, "5847": {"fn": "ERC721._isApprovedOrOwner", "jump": "i", "offset": [31752, 31768], "op": "JUMP", "path": "0"}, "5848": {"fn": "ERC721._isApprovedOrOwner", "offset": [31752, 31768], "op": "JUMPDEST", "path": "0"}, "5849": {"fn": "ERC721._isApprovedOrOwner", "offset": [31736, 31768], "op": "SWAP1", "path": "0"}, "5850": {"fn": "ERC721._isApprovedOrOwner", "offset": [31736, 31768], "op": "POP", "path": "0"}, "5851": {"fn": "ERC721._isApprovedOrOwner", "offset": [31798, 31803], "op": "DUP1", "path": "0", "statement": 55}, "5852": {"op": "PUSH1", "value": "0x1"}, "5854": {"op": "PUSH1", "value": "0x1"}, "5856": {"op": "PUSH1", "value": "0xA0"}, "5858": {"op": "SHL"}, "5859": {"op": "SUB"}, "5860": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31803], "op": "AND", "path": "0"}, "5861": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31794], "op": "DUP5", "path": "0"}, "5862": {"op": "PUSH1", "value": "0x1"}, "5864": {"op": "PUSH1", "value": "0x1"}, "5866": {"op": "PUSH1", "value": "0xA0"}, "5868": {"op": "SHL"}, "5869": {"op": "SUB"}, "5870": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31803], "op": "AND", "path": "0"}, "5871": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31803], "op": "EQ", "path": "0"}, "5872": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31850], "op": "DUP1", "path": "0"}, "5873": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31850], "op": "PUSH2", "path": "0", "value": "0x1713"}, "5876": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31850], "op": "JUMPI", "path": "0"}, "5877": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31850], "op": "POP", "path": "0"}, "5878": {"fn": "ERC721._isApprovedOrOwner", "offset": [31843, 31850], "op": "DUP4", "path": "0"}, "5879": {"op": "PUSH1", "value": "0x1"}, "5881": {"op": "PUSH1", "value": "0x1"}, "5883": {"op": "PUSH1", "value": "0xA0"}, "5885": {"op": "SHL"}, "5886": {"op": "SUB"}, "5887": {"fn": "ERC721._isApprovedOrOwner", "offset": [31819, 31850], "op": "AND", "path": "0"}, "5888": {"fn": "ERC721._isApprovedOrOwner", "offset": [31819, 31839], "op": "PUSH2", "path": "0", "value": "0x1708"}, "5891": {"fn": "ERC721._isApprovedOrOwner", "offset": [31831, 31838], "op": "DUP5", "path": "0"}, "5892": {"fn": "ERC721._isApprovedOrOwner", "offset": [31819, 31830], "op": "PUSH2", "path": "0", "value": "0x772"}, "5895": {"fn": "ERC721._isApprovedOrOwner", "jump": "i", "offset": [31819, 31839], "op": "JUMP", "path": "0"}, "5896": {"fn": "ERC721._isApprovedOrOwner", "offset": [31819, 31839], "op": "JUMPDEST", "path": "0"}, "5897": {"op": "PUSH1", "value": "0x1"}, "5899": {"op": "PUSH1", "value": "0x1"}, "5901": {"op": "PUSH1", "value": "0xA0"}, "5903": {"op": "SHL"}, "5904": {"op": "SUB"}, "5905": {"fn": "ERC721._isApprovedOrOwner", "offset": [31819, 31850], "op": "AND", "path": "0"}, "5906": {"fn": "ERC721._isApprovedOrOwner", "offset": [31819, 31850], "op": "EQ", "path": "0"}, "5907": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31850], "op": "JUMPDEST", "path": "0"}, "5908": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31898], "op": "DUP1", "path": "0"}, "5909": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31898], "op": "PUSH2", "path": "0", "value": "0x1723"}, "5912": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31898], "op": "JUMPI", "path": "0"}, "5913": {"fn": "ERC721._isApprovedOrOwner", "offset": [31787, 31898], "op": "POP", "path": "0"}, "5914": {"fn": "ERC721._isApprovedOrOwner", "offset": [31866, 31898], "op": "PUSH2", "path": "0", "value": "0x1723"}, "5917": {"fn": "ERC721._isApprovedOrOwner", "offset": [31883, 31888], "op": "DUP2", "path": "0"}, "5918": {"fn": "ERC721._isApprovedOrOwner", "offset": [31890, 31897], "op": "DUP6", "path": "0"}, "5919": {"fn": "ERC721._isApprovedOrOwner", "offset": [31866, 31882], "op": "PUSH2", "path": "0", "value": "0x152C"}, "5922": {"fn": "ERC721._isApprovedOrOwner", "jump": "i", "offset": [31866, 31898], "op": "JUMP", "path": "0"}, "5923": {"fn": "ERC721._isApprovedOrOwner", "offset": [31866, 31898], "op": "JUMPDEST", "path": "0"}, "5924": {"fn": "ERC721._isApprovedOrOwner", "offset": [31779, 31899], "op": "SWAP5", "path": "0"}, "5925": {"fn": "ERC721._isApprovedOrOwner", "offset": [31489, 31906], "op": "SWAP4", "path": "0"}, "5926": {"op": "POP"}, "5927": {"op": "POP"}, "5928": {"op": "POP"}, "5929": {"op": "POP"}, "5930": {"fn": "ERC721._isApprovedOrOwner", "jump": "o", "offset": [31489, 31906], "op": "JUMP", "path": "0"}, "5931": {"fn": "WrappedPunk._transferFrom", "offset": [57591, 57769], "op": "JUMPDEST", "path": "0"}, "5932": {"offset": [4926, 4933], "op": "PUSH1", "path": "0", "value": "0xE"}, "5934": {"fn": "WrappedPunk._transferFrom", "offset": [4926, 4933], "op": "SLOAD", "path": "0"}, "5935": {"fn": "WrappedPunk._transferFrom", "offset": [4926, 4933], "op": "PUSH1", "path": "0", "value": "0xFF"}, "5937": {"fn": "WrappedPunk._transferFrom", "offset": [4926, 4933], "op": "AND", "path": "0"}, "5938": {"offset": [4925, 4933], "op": "ISZERO", "path": "0"}, "5939": {"offset": [4917, 4954], "op": "PUSH2", "path": "0", "value": "0x1776"}, "5942": {"offset": [4917, 4954], "op": "JUMPI", "path": "0"}, "5943": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x40"}, "5945": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "DUP1", "path": "0"}, "5946": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "MLOAD", "path": "0"}, "5947": {"op": "PUSH3", "value": "0x461BCD"}, "5951": {"op": "PUSH1", "value": "0xE5"}, "5953": {"op": "SHL"}, "5954": {"offset": [4917, 4954], "op": "DUP2", "path": "0"}, "5955": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "5956": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x20"}, "5958": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x4"}, "5960": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "5961": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "5962": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "5963": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x10"}, "5965": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x24"}, "5967": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "5968": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "5969": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "5970": {"op": "PUSH16", "value": "0x14185D5CD8589B194E881C185D5CD959"}, "5987": {"op": "PUSH1", "value": "0x82"}, "5989": {"op": "SHL"}, "5990": {"offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x44"}, "5992": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "5993": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "5994": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "5995": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "5996": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "MLOAD", "path": "0"}, "5997": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "5998": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "DUP2", "path": "0"}, "5999": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "6000": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "SUB", "path": "0"}, "6001": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x64"}, "6003": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "6004": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "6005": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "REVERT", "path": "0"}, "6006": {"fn": "WrappedPunk._transferFrom", "offset": [4917, 4954], "op": "JUMPDEST", "path": "0"}, "6007": {"fn": "WrappedPunk._transferFrom", "offset": [57722, 57762], "op": "PUSH2", "path": "0", "statement": 56, "value": "0x959"}, "6010": {"fn": "WrappedPunk._transferFrom", "offset": [57742, 57746], "op": "DUP4", "path": "0"}, "6011": {"fn": "WrappedPunk._transferFrom", "offset": [57748, 57750], "op": "DUP4", "path": "0"}, "6012": {"fn": "WrappedPunk._transferFrom", "offset": [57752, 57761], "op": "DUP4", "path": "0"}, "6013": {"fn": "WrappedPunk._transferFrom", "offset": [57722, 57741], "op": "PUSH2", "path": "0", "value": "0x1A00"}, "6016": {"fn": "WrappedPunk._transferFrom", "jump": "i", "offset": [57722, 57762], "op": "JUMP", "path": "0"}, "6017": {"fn": "Pausable._unpause", "offset": [5615, 5725], "op": "JUMPDEST", "path": "0"}, "6018": {"offset": [5190, 5197], "op": "PUSH1", "path": "0", "value": "0xE"}, "6020": {"fn": "Pausable._unpause", "offset": [5190, 5197], "op": "SLOAD", "path": "0"}, "6021": {"fn": "Pausable._unpause", "offset": [5190, 5197], "op": "PUSH1", "path": "0", "value": "0xFF"}, "6023": {"branch": 141, "fn": "Pausable._unpause", "offset": [5190, 5197], "op": "AND", "path": "0"}, "6024": {"offset": [5182, 5222], "op": "PUSH2", "path": "0", "value": "0x17CF"}, "6027": {"branch": 141, "offset": [5182, 5222], "op": "JUMPI", "path": "0"}, "6028": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "PUSH1", "path": "0", "value": "0x40"}, "6030": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "DUP1", "path": "0"}, "6031": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "MLOAD", "path": "0"}, "6032": {"op": "PUSH3", "value": "0x461BCD"}, "6036": {"op": "PUSH1", "value": "0xE5"}, "6038": {"op": "SHL"}, "6039": {"offset": [5182, 5222], "op": "DUP2", "path": "0"}, "6040": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "MSTORE", "path": "0"}, "6041": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "PUSH1", "path": "0", "value": "0x20"}, "6043": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "PUSH1", "path": "0", "value": "0x4"}, "6045": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "DUP3", "path": "0"}, "6046": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "ADD", "path": "0"}, "6047": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "MSTORE", "path": "0"}, "6048": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "PUSH1", "path": "0", "value": "0x14"}, "6050": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "PUSH1", "path": "0", "value": "0x24"}, "6052": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "DUP3", "path": "0"}, "6053": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "ADD", "path": "0"}, "6054": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "MSTORE", "path": "0"}, "6055": {"op": "PUSH20", "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"}, "6076": {"op": "PUSH1", "value": "0x62"}, "6078": {"op": "SHL"}, "6079": {"offset": [5182, 5222], "op": "PUSH1", "path": "0", "value": "0x44"}, "6081": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "DUP3", "path": "0"}, "6082": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "ADD", "path": "0"}, "6083": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "MSTORE", "path": "0"}, "6084": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "SWAP1", "path": "0"}, "6085": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "MLOAD", "path": "0"}, "6086": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "SWAP1", "path": "0"}, "6087": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "DUP2", "path": "0"}, "6088": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "SWAP1", "path": "0"}, "6089": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "SUB", "path": "0"}, "6090": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "PUSH1", "path": "0", "value": "0x64"}, "6092": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "ADD", "path": "0"}, "6093": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "SWAP1", "path": "0"}, "6094": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "REVERT", "path": "0"}, "6095": {"fn": "Pausable._unpause", "offset": [5182, 5222], "op": "JUMPDEST", "path": "0"}, "6096": {"fn": "Pausable._unpause", "offset": [5665, 5672], "op": "PUSH1", "path": "0", "statement": 57, "value": "0xE"}, "6098": {"fn": "Pausable._unpause", "offset": [5665, 5680], "op": "DUP1", "path": "0"}, "6099": {"fn": "Pausable._unpause", "offset": [5665, 5680], "op": "SLOAD", "path": "0"}, "6100": {"op": "PUSH1", "value": "0xFF"}, "6102": {"op": "NOT"}, "6103": {"fn": "Pausable._unpause", "offset": [5665, 5680], "op": "AND", "path": "0"}, "6104": {"fn": "Pausable._unpause", "offset": [5665, 5680], "op": "SWAP1", "path": "0"}, "6105": {"fn": "Pausable._unpause", "offset": [5665, 5680], "op": "SSTORE", "path": "0"}, "6106": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "PUSH32", "path": "0", "statement": 58, "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"}, "6139": {"fn": "Pausable._unpause", "offset": [5705, 5717], "op": "PUSH2", "path": "0", "value": "0x1802"}, "6142": {"fn": "Pausable._unpause", "offset": [5705, 5715], "op": "PUSH2", "path": "0", "value": "0x1683"}, "6145": {"fn": "Pausable._unpause", "jump": "i", "offset": [5705, 5717], "op": "JUMP", "path": "0"}, "6146": {"fn": "Pausable._unpause", "offset": [5705, 5717], "op": "JUMPDEST", "path": "0"}, "6147": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "PUSH1", "path": "0", "value": "0x40"}, "6149": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "DUP1", "path": "0"}, "6150": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "MLOAD", "path": "0"}, "6151": {"op": "PUSH1", "value": "0x1"}, "6153": {"op": "PUSH1", "value": "0x1"}, "6155": {"op": "PUSH1", "value": "0xA0"}, "6157": {"op": "SHL"}, "6158": {"op": "SUB"}, "6159": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "SWAP1", "path": "0"}, "6160": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "SWAP3", "path": "0"}, "6161": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "AND", "path": "0"}, "6162": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "DUP3", "path": "0"}, "6163": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "MSTORE", "path": "0"}, "6164": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "MLOAD", "path": "0"}, "6165": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "SWAP1", "path": "0"}, "6166": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "DUP2", "path": "0"}, "6167": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "SWAP1", "path": "0"}, "6168": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "SUB", "path": "0"}, "6169": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "PUSH1", "path": "0", "value": "0x20"}, "6171": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "ADD", "path": "0"}, "6172": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "SWAP1", "path": "0"}, "6173": {"fn": "Pausable._unpause", "offset": [5696, 5718], "op": "LOG1", "path": "0"}, "6174": {"fn": "Pausable._unpause", "jump": "o", "offset": [5615, 5725], "op": "JUMP", "path": "0"}, "6175": {"fn": "ERC721._burn", "offset": [34819, 34909], "op": "JUMPDEST", "path": "0"}, "6176": {"fn": "ERC721._burn", "offset": [34870, 34902], "op": "PUSH2", "path": "0", "statement": 59, "value": "0xC3D"}, "6179": {"fn": "ERC721._burn", "offset": [34876, 34892], "op": "PUSH2", "path": "0", "value": "0x182B"}, "6182": {"fn": "ERC721._burn", "offset": [34884, 34891], "op": "DUP3", "path": "0"}, "6183": {"fn": "ERC721._burn", "offset": [34876, 34883], "op": "PUSH2", "path": "0", "value": "0xC49"}, "6186": {"fn": "ERC721._burn", "jump": "i", "offset": [34876, 34892], "op": "JUMP", "path": "0"}, "6187": {"fn": "ERC721._burn", "offset": [34876, 34892], "op": "JUMPDEST", "path": "0"}, "6188": {"fn": "ERC721._burn", "offset": [34894, 34901], "op": "DUP3", "path": "0"}, "6189": {"fn": "ERC721._burn", "offset": [34870, 34875], "op": "PUSH2", "path": "0", "value": "0x1A1F"}, "6192": {"fn": "ERC721._burn", "jump": "i", "offset": [34870, 34902], "op": "JUMP", "path": "0"}, "6193": {"fn": "ERC721Metadata._setBaseURI", "offset": [52063, 52151], "op": "JUMPDEST", "path": "0"}, "6194": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "DUP1", "path": "0", "statement": 60}, "6195": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "MLOAD", "path": "0"}, "6196": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "PUSH2", "path": "0", "value": "0x1844"}, "6199": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "SWAP1", "path": "0"}, "6200": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52134], "op": "PUSH1", "path": "0", "value": "0xC"}, "6202": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52134], "op": "SWAP1", "path": "0"}, "6203": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "PUSH1", "path": "0", "value": "0x20"}, "6205": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "DUP5", "path": "0"}, "6206": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "ADD", "path": "0"}, "6207": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "SWAP1", "path": "0"}, "6208": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "PUSH2", "path": "0", "value": "0x232B"}, "6211": {"fn": "ERC721Metadata._setBaseURI", "jump": "i", "offset": [52126, 52144], "op": "JUMP", "path": "0"}, "6212": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "JUMPDEST", "path": "0"}, "6213": {"fn": "ERC721Metadata._setBaseURI", "offset": [52126, 52144], "op": "POP", "path": "0"}, "6214": {"fn": "ERC721Metadata._setBaseURI", "offset": [52063, 52151], "op": "POP", "path": "0"}, "6215": {"fn": "ERC721Metadata._setBaseURI", "jump": "o", "offset": [52063, 52151], "op": "JUMP", "path": "0"}, "6216": {"fn": "Counters.current", "offset": [11118, 11230], "op": "JUMPDEST", "path": "0"}, "6217": {"fn": "Counters.current", "offset": [11209, 11223], "op": "SLOAD", "path": "0", "statement": 61}, "6218": {"fn": "Counters.current", "offset": [11209, 11223], "op": "SWAP1", "path": "0"}, "6219": {"fn": "Counters.current", "jump": "o", "offset": [11118, 11230], "op": "JUMP", "path": "0"}, "6220": {"fn": "Pausable._pause", "offset": [5375, 5483], "op": "JUMPDEST", "path": "0"}, "6221": {"offset": [4926, 4933], "op": "PUSH1", "path": "0", "value": "0xE"}, "6223": {"fn": "Pausable._pause", "offset": [4926, 4933], "op": "SLOAD", "path": "0"}, "6224": {"fn": "Pausable._pause", "offset": [4926, 4933], "op": "PUSH1", "path": "0", "value": "0xFF"}, "6226": {"fn": "Pausable._pause", "offset": [4926, 4933], "op": "AND", "path": "0"}, "6227": {"offset": [4925, 4933], "op": "ISZERO", "path": "0"}, "6228": {"offset": [4917, 4954], "op": "PUSH2", "path": "0", "value": "0x1897"}, "6231": {"offset": [4917, 4954], "op": "JUMPI", "path": "0"}, "6232": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x40"}, "6234": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "DUP1", "path": "0"}, "6235": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "MLOAD", "path": "0"}, "6236": {"op": "PUSH3", "value": "0x461BCD"}, "6240": {"op": "PUSH1", "value": "0xE5"}, "6242": {"op": "SHL"}, "6243": {"offset": [4917, 4954], "op": "DUP2", "path": "0"}, "6244": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "6245": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x20"}, "6247": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x4"}, "6249": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "6250": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "6251": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "6252": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x10"}, "6254": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x24"}, "6256": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "6257": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "6258": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "6259": {"op": "PUSH16", "value": "0x14185D5CD8589B194E881C185D5CD959"}, "6276": {"op": "PUSH1", "value": "0x82"}, "6278": {"op": "SHL"}, "6279": {"offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x44"}, "6281": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "DUP3", "path": "0"}, "6282": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "6283": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "MSTORE", "path": "0"}, "6284": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "6285": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "MLOAD", "path": "0"}, "6286": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "6287": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "DUP2", "path": "0"}, "6288": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "6289": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "SUB", "path": "0"}, "6290": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "PUSH1", "path": "0", "value": "0x64"}, "6292": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "ADD", "path": "0"}, "6293": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "SWAP1", "path": "0"}, "6294": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "REVERT", "path": "0"}, "6295": {"fn": "Pausable._pause", "offset": [4917, 4954], "op": "JUMPDEST", "path": "0"}, "6296": {"fn": "Pausable._pause", "offset": [5426, 5433], "op": "PUSH1", "path": "0", "statement": 62, "value": "0xE"}, "6298": {"fn": "Pausable._pause", "offset": [5426, 5440], "op": "DUP1", "path": "0"}, "6299": {"fn": "Pausable._pause", "offset": [5426, 5440], "op": "SLOAD", "path": "0"}, "6300": {"op": "PUSH1", "value": "0xFF"}, "6302": {"op": "NOT"}, "6303": {"fn": "Pausable._pause", "offset": [5426, 5440], "op": "AND", "path": "0"}, "6304": {"fn": "Pausable._pause", "offset": [5436, 5440], "op": "PUSH1", "path": "0", "value": "0x1"}, "6306": {"fn": "Pausable._pause", "offset": [5426, 5440], "op": "OR", "path": "0"}, "6307": {"fn": "Pausable._pause", "offset": [5426, 5440], "op": "SWAP1", "path": "0"}, "6308": {"fn": "Pausable._pause", "offset": [5426, 5440], "op": "SSTORE", "path": "0"}, "6309": {"fn": "Pausable._pause", "offset": [5456, 5476], "op": "PUSH32", "path": "0", "statement": 63, "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"}, "6342": {"fn": "Pausable._pause", "offset": [5463, 5475], "op": "PUSH2", "path": "0", "value": "0x1802"}, "6345": {"fn": "Pausable._pause", "offset": [5463, 5473], "op": "PUSH2", "path": "0", "value": "0x1683"}, "6348": {"fn": "Pausable._pause", "jump": "i", "offset": [5463, 5475], "op": "JUMP", "path": "0"}, "6349": {"fn": "ERC721Enumerable._mint", "offset": [41551, 41747], "op": "JUMPDEST", "path": "0"}, "6350": {"fn": "ERC721Enumerable._mint", "offset": [41614, 41638], "op": "PUSH2", "path": "0", "statement": 64, "value": "0x18D7"}, "6353": {"fn": "ERC721Enumerable._mint", "offset": [41626, 41628], "op": "DUP3", "path": "0"}, "6354": {"fn": "ERC721Enumerable._mint", "offset": [41630, 41637], "op": "DUP3", "path": "0"}, "6355": {"fn": "ERC721Enumerable._mint", "offset": [41614, 41625], "op": "PUSH2", "path": "0", "value": "0x1A67"}, "6358": {"fn": "ERC721Enumerable._mint", "jump": "i", "offset": [41614, 41638], "op": "JUMP", "path": "0"}, "6359": {"fn": "ERC721Enumerable._mint", "offset": [41614, 41638], "op": "JUMPDEST", "path": "0"}, "6360": {"fn": "ERC721Enumerable._mint", "offset": [41649, 41689], "op": "PUSH2", "path": "0", "statement": 65, "value": "0x18E1"}, "6363": {"fn": "ERC721Enumerable._mint", "offset": [41677, 41679], "op": "DUP3", "path": "0"}, "6364": {"fn": "ERC721Enumerable._mint", "offset": [41681, 41688], "op": "DUP3", "path": "0"}, "6365": {"fn": "ERC721Enumerable._mint", "offset": [41649, 41676], "op": "PUSH2", "path": "0", "value": "0x1B98"}, "6368": {"fn": "ERC721Enumerable._mint", "jump": "i", "offset": [41649, 41689], "op": "JUMP", "path": "0"}, "6369": {"fn": "ERC721Enumerable._mint", "offset": [41649, 41689], "op": "JUMPDEST", "path": "0"}, "6370": {"fn": "ERC721Enumerable._mint", "offset": [41700, 41740], "op": "PUSH2", "path": "0", "statement": 66, "value": "0x1844"}, "6373": {"fn": "ERC721Enumerable._mint", "offset": [41732, 41739], "op": "DUP2", "path": "0"}, "6374": {"fn": "ERC721Enumerable._mint", "offset": [41700, 41731], "op": "PUSH2", "path": "0", "value": "0x1BD6"}, "6377": {"fn": "ERC721Enumerable._mint", "jump": "i", "offset": [41700, 41740], "op": "JUMP", "path": "0"}, "6378": {"fn": "ERC721._safeTransferFrom", "offset": [30470, 30812], "op": "JUMPDEST", "path": "0"}, "6379": {"fn": "ERC721._safeTransferFrom", "offset": [30617, 30649], "op": "PUSH2", "path": "0", "statement": 67, "value": "0x18F5"}, "6382": {"fn": "ERC721._safeTransferFrom", "offset": [30631, 30635], "op": "DUP5", "path": "0"}, "6383": {"fn": "ERC721._safeTransferFrom", "offset": [30637, 30639], "op": "DUP5", "path": "0"}, "6384": {"fn": "ERC721._safeTransferFrom", "offset": [30641, 30648], "op": "DUP5", "path": "0"}, "6385": {"fn": "ERC721._safeTransferFrom", "offset": [30617, 30630], "op": "PUSH2", "path": "0", "value": "0x172B"}, "6388": {"fn": "ERC721._safeTransferFrom", "jump": "i", "offset": [30617, 30649], "op": "JUMP", "path": "0"}, "6389": {"fn": "ERC721._safeTransferFrom", "offset": [30617, 30649], "op": "JUMPDEST", "path": "0"}, "6390": {"fn": "ERC721._safeTransferFrom", "offset": [30681, 30729], "op": "PUSH2", "path": "0", "statement": 68, "value": "0x1901"}, "6393": {"fn": "ERC721._safeTransferFrom", "offset": [30704, 30708], "op": "DUP5", "path": "0"}, "6394": {"fn": "ERC721._safeTransferFrom", "offset": [30710, 30712], "op": "DUP5", "path": "0"}, "6395": {"fn": "ERC721._safeTransferFrom", "offset": [30714, 30721], "op": "DUP5", "path": "0"}, "6396": {"fn": "ERC721._safeTransferFrom", "offset": [30723, 30728], "op": "DUP5", "path": "0"}, "6397": {"fn": "ERC721._safeTransferFrom", "offset": [30681, 30703], "op": "PUSH2", "path": "0", "value": "0x1C1A"}, "6400": {"fn": "ERC721._safeTransferFrom", "jump": "i", "offset": [30681, 30729], "op": "JUMP", "path": "0"}, "6401": {"branch": 142, "fn": "ERC721._safeTransferFrom", "offset": [30681, 30729], "op": "JUMPDEST", "path": "0"}, "6402": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH2", "path": "0", "value": "0x1180"}, "6405": {"branch": 142, "fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "JUMPI", "path": "0"}, "6406": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH1", "path": "0", "value": "0x40"}, "6408": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "MLOAD", "path": "0"}, "6409": {"op": "PUSH3", "value": "0x461BCD"}, "6413": {"op": "PUSH1", "value": "0xE5"}, "6415": {"op": "SHL"}, "6416": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP2", "path": "0"}, "6417": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "MSTORE", "path": "0"}, "6418": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH1", "path": "0", "value": "0x4"}, "6420": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "ADD", "path": "0"}, "6421": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP1", "path": "0"}, "6422": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP1", "path": "0"}, "6423": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH1", "path": "0", "value": "0x20"}, "6425": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "ADD", "path": "0"}, "6426": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP3", "path": "0"}, "6427": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP2", "path": "0"}, "6428": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "SUB", "path": "0"}, "6429": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP3", "path": "0"}, "6430": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "MSTORE", "path": "0"}, "6431": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH1", "path": "0", "value": "0x32"}, "6433": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP2", "path": "0"}, "6434": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "MSTORE", "path": "0"}, "6435": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH1", "path": "0", "value": "0x20"}, "6437": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "ADD", "path": "0"}, "6438": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP1", "path": "0"}, "6439": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH2", "path": "0", "value": "0x2663"}, "6442": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH1", "path": "0", "value": "0x32"}, "6444": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "SWAP2", "path": "0"}, "6445": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "CODECOPY", "path": "0"}, "6446": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH1", "path": "0", "value": "0x40"}, "6448": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "ADD", "path": "0"}, "6449": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "SWAP2", "path": "0"}, "6450": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "POP", "path": "0"}, "6451": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "POP", "path": "0"}, "6452": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "PUSH1", "path": "0", "value": "0x40"}, "6454": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "MLOAD", "path": "0"}, "6455": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "DUP1", "path": "0"}, "6456": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "SWAP2", "path": "0"}, "6457": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "SUB", "path": "0"}, "6458": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "SWAP1", "path": "0"}, "6459": {"fn": "ERC721._safeTransferFrom", "offset": [30660, 30805], "op": "REVERT", "path": "0"}, "6460": {"fn": "Strings.fromUint256", "offset": [47045, 47593], "op": "JUMPDEST", "path": "0"}, "6461": {"fn": "Strings.fromUint256", "offset": [47104, 47117], "op": "PUSH1", "path": "0", "value": "0x60"}, "6463": {"branch": 143, "fn": "Strings.fromUint256", "offset": [47133, 47143], "op": "DUP2", "path": "0"}, "6464": {"fn": "Strings.fromUint256", "offset": [47129, 47180], "op": "PUSH2", "path": "0", "value": "0x1961"}, "6467": {"branch": 143, "fn": "Strings.fromUint256", "offset": [47129, 47180], "op": "JUMPI", "path": "0"}, "6468": {"op": "POP"}, "6469": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "PUSH1", "path": "0", "statement": 69, "value": "0x40"}, "6471": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "DUP1", "path": "0"}, "6472": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "MLOAD", "path": "0"}, "6473": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "DUP1", "path": "0"}, "6474": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "DUP3", "path": "0"}, "6475": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "ADD", "path": "0"}, "6476": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "SWAP1", "path": "0"}, "6477": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "SWAP2", "path": "0"}, "6478": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "MSTORE", "path": "0"}, "6479": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "PUSH1", "path": "0", "value": "0x1"}, "6481": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "DUP2", "path": "0"}, "6482": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "MSTORE", "path": "0"}, "6483": {"op": "PUSH1", "value": "0x3"}, "6485": {"op": "PUSH1", "value": "0xFC"}, "6487": {"op": "SHL"}, "6488": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "PUSH1", "path": "0", "value": "0x20"}, "6490": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "DUP3", "path": "0"}, "6491": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "ADD", "path": "0"}, "6492": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "MSTORE", "path": "0"}, "6493": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "PUSH2", "path": "0", "value": "0x6D6"}, "6496": {"fn": "Strings.fromUint256", "offset": [47159, 47169], "op": "JUMP", "path": "0"}, "6497": {"fn": "Strings.fromUint256", "offset": [47129, 47180], "op": "JUMPDEST", "path": "0"}, "6498": {"fn": "Strings.fromUint256", "offset": [47205, 47210], "op": "DUP2", "path": "0"}, "6499": {"fn": "Strings.fromUint256", "offset": [47190, 47202], "op": "PUSH1", "path": "0", "value": "0x0"}, "6501": {"fn": "Strings.fromUint256", "offset": [47245, 47320], "op": "JUMPDEST", "path": "0"}, "6502": {"fn": "Strings.fromUint256", "offset": [47252, 47261], "op": "DUP2", "path": "0"}, "6503": {"fn": "Strings.fromUint256", "offset": [47252, 47261], "op": "ISZERO", "path": "0"}, "6504": {"fn": "Strings.fromUint256", "offset": [47245, 47320], "op": "PUSH2", "path": "0", "value": "0x1979"}, "6507": {"fn": "Strings.fromUint256", "offset": [47245, 47320], "op": "JUMPI", "path": "0"}, "6508": {"fn": "Strings.fromUint256", "offset": [47277, 47285], "op": "PUSH1", "path": "0", "statement": 70, "value": "0x1"}, "6510": {"fn": "Strings.fromUint256", "offset": [47277, 47285], "op": "ADD", "path": "0"}, "6511": {"fn": "Strings.fromUint256", "offset": [47307, 47309], "op": "PUSH1", "path": "0", "statement": 71, "value": "0xA"}, "6513": {"fn": "Strings.fromUint256", "offset": [47299, 47309], "op": "DUP3", "path": "0"}, "6514": {"fn": "Strings.fromUint256", "offset": [47299, 47309], "op": "DIV", "path": "0"}, "6515": {"fn": "Strings.fromUint256", "offset": [47299, 47309], "op": "SWAP2", "path": "0"}, "6516": {"fn": "Strings.fromUint256", "offset": [47299, 47309], "op": "POP", "path": "0"}, "6517": {"fn": "Strings.fromUint256", "offset": [47245, 47320], "op": "PUSH2", "path": "0", "value": "0x1965"}, "6520": {"fn": "Strings.fromUint256", "offset": [47245, 47320], "op": "JUMP", "path": "0"}, "6521": {"fn": "Strings.fromUint256", "offset": [47245, 47320], "op": "JUMPDEST", "path": "0"}, "6522": {"fn": "Strings.fromUint256", "offset": [47330, 47349], "op": "PUSH1", "path": "0", "value": "0x60"}, "6524": {"fn": "Strings.fromUint256", "offset": [47362, 47368], "op": "DUP2", "path": "0"}, "6525": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "PUSH1", "path": "0", "value": "0x40"}, "6527": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "MLOAD", "path": "0"}, "6528": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "SWAP1", "path": "0"}, "6529": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "DUP1", "path": "0"}, "6530": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "DUP3", "path": "0"}, "6531": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "MSTORE", "path": "0"}, "6532": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "DUP1", "path": "0"}, "6533": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "PUSH1", "path": "0", "value": "0x1F"}, "6535": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "ADD", "path": "0"}, "6536": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "PUSH1", "path": "0", "value": "0x1F"}, "6538": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "NOT", "path": "0"}, "6539": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "AND", "path": "0"}, "6540": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "PUSH1", "path": "0", "value": "0x20"}, "6542": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "ADD", "path": "0"}, "6543": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "DUP3", "path": "0"}, "6544": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "ADD", "path": "0"}, "6545": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "PUSH1", "path": "0", "value": "0x40"}, "6547": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "MSTORE", "path": "0"}, "6548": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "DUP1", "path": "0"}, "6549": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "ISZERO", "path": "0"}, "6550": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "PUSH2", "path": "0", "value": "0x19A6"}, "6553": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "JUMPI", "path": "0"}, "6554": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "PUSH1", "path": "0", "value": "0x20"}, "6556": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "DUP3", "path": "0"}, "6557": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "ADD", "path": "0"}, "6558": {"op": "DUP2"}, "6559": {"op": "DUP1"}, "6560": {"op": "CODESIZE"}, "6561": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "DUP4", "path": "0"}, "6562": {"op": "CODECOPY"}, "6563": {"op": "ADD"}, "6564": {"op": "SWAP1"}, "6565": {"op": "POP"}, "6566": {"fn": "Strings.fromUint256", "offset": [47352, 47369], "op": "JUMPDEST", "path": "0"}, "6567": {"op": "POP"}, "6568": {"fn": "Strings.fromUint256", "offset": [47423, 47428], "op": "DUP6", "path": "0", "statement": 72}, "6569": {"fn": "Strings.fromUint256", "offset": [47423, 47428], "op": "SWAP4", "path": "0"}, "6570": {"op": "POP"}, "6571": {"fn": "Strings.fromUint256", "offset": [47330, 47369], "op": "SWAP1", "path": "0"}, "6572": {"op": "POP"}, "6573": {"op": "PUSH1", "value": "0x0"}, "6575": {"op": "NOT"}, "6576": {"fn": "Strings.fromUint256", "offset": [47395, 47405], "op": "DUP3", "path": "0"}, "6577": {"fn": "Strings.fromUint256", "offset": [47395, 47405], "op": "ADD", "path": "0"}, "6578": {"fn": "Strings.fromUint256", "offset": [47439, 47555], "op": "JUMPDEST", "path": "0"}, "6579": {"fn": "Strings.fromUint256", "offset": [47446, 47455], "op": "DUP4", "path": "0"}, "6580": {"fn": "Strings.fromUint256", "offset": [47446, 47455], "op": "ISZERO", "path": "0"}, "6581": {"fn": "Strings.fromUint256", "offset": [47439, 47555], "op": "PUSH2", "path": "0", "value": "0x19F7"}, "6584": {"fn": "Strings.fromUint256", "offset": [47439, 47555], "op": "JUMPI", "path": "0"}, "6585": {"fn": "Strings.fromUint256", "offset": [47515, 47517], "op": "PUSH1", "path": "0", "statement": 73, "value": "0xA"}, "6587": {"fn": "Strings.fromUint256", "offset": [47508, 47512], "op": "DUP5", "path": "0"}, "6588": {"fn": "Strings.fromUint256", "offset": [47508, 47517], "op": "MOD", "path": "0"}, "6589": {"fn": "Strings.fromUint256", "offset": [47502, 47504], "op": "PUSH1", "path": "0", "value": "0x30"}, "6591": {"fn": "Strings.fromUint256", "offset": [47502, 47518], "op": "ADD", "path": "0"}, "6592": {"fn": "Strings.fromUint256", "offset": [47489, 47520], "op": "PUSH1", "path": "0", "value": "0xF8"}, "6594": {"fn": "Strings.fromUint256", "offset": [47489, 47520], "op": "SHL", "path": "0"}, "6595": {"fn": "Strings.fromUint256", "offset": [47471, 47477], "op": "DUP3", "path": "0"}, "6596": {"fn": "Strings.fromUint256", "offset": [47478, 47485], "op": "DUP3", "path": "0"}, "6597": {"fn": "Strings.fromUint256", "offset": [47478, 47485], "op": "DUP1", "path": "0"}, "6598": {"fn": "Strings.fromUint256", "offset": [47478, 47485], "op": "PUSH1", "path": "0", "value": "0x1"}, "6600": {"fn": "Strings.fromUint256", "offset": [47478, 47485], "op": "SWAP1", "path": "0"}, "6601": {"fn": "Strings.fromUint256", "offset": [47478, 47485], "op": "SUB", "path": "0"}, "6602": {"fn": "Strings.fromUint256", "offset": [47478, 47485], "op": "SWAP4", "path": "0"}, "6603": {"fn": "Strings.fromUint256", "offset": [47478, 47485], "op": "POP", "path": "0"}, "6604": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "DUP2", "path": "0"}, "6605": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "MLOAD", "path": "0"}, "6606": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "DUP2", "path": "0"}, "6607": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "LT", "path": "0"}, "6608": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "PUSH2", "path": "0", "value": "0x19D5"}, "6611": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "JUMPI", "path": "0"}, "6612": {"dev": "Index out of range", "fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "INVALID", "path": "0"}, "6613": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "JUMPDEST", "path": "0"}, "6614": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "PUSH1", "path": "0", "value": "0x20"}, "6616": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "ADD", "path": "0"}, "6617": {"fn": "Strings.fromUint256", "offset": [47471, 47486], "op": "ADD", "path": "0"}, "6618": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "SWAP1", "path": "0"}, "6619": {"op": "PUSH1", "value": "0x1"}, "6621": {"op": "PUSH1", "value": "0x1"}, "6623": {"op": "PUSH1", "value": "0xF8"}, "6625": {"op": "SHL"}, "6626": {"op": "SUB"}, "6627": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "NOT", "path": "0"}, "6628": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "AND", "path": "0"}, "6629": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "SWAP1", "path": "0"}, "6630": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "DUP2", "path": "0"}, "6631": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "PUSH1", "path": "0", "value": "0x0"}, "6633": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "BYTE", "path": "0"}, "6634": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "SWAP1", "path": "0"}, "6635": {"fn": "Strings.fromUint256", "offset": [47471, 47520], "op": "MSTORE8", "path": "0"}, "6636": {"op": "POP"}, "6637": {"fn": "Strings.fromUint256", "offset": [47542, 47544], "op": "PUSH1", "path": "0", "statement": 74, "value": "0xA"}, "6639": {"fn": "Strings.fromUint256", "offset": [47534, 47544], "op": "DUP5", "path": "0"}, "6640": {"fn": "Strings.fromUint256", "offset": [47534, 47544], "op": "DIV", "path": "0"}, "6641": {"fn": "Strings.fromUint256", "offset": [47534, 47544], "op": "SWAP4", "path": "0"}, "6642": {"fn": "Strings.fromUint256", "offset": [47534, 47544], "op": "POP", "path": "0"}, "6643": {"fn": "Strings.fromUint256", "offset": [47439, 47555], "op": "PUSH2", "path": "0", "value": "0x19B2"}, "6646": {"fn": "Strings.fromUint256", "offset": [47439, 47555], "op": "JUMP", "path": "0"}, "6647": {"fn": "Strings.fromUint256", "offset": [47439, 47555], "op": "JUMPDEST", "path": "0"}, "6648": {"op": "POP"}, "6649": {"fn": "Strings.fromUint256", "offset": [47579, 47585], "op": "SWAP5", "path": "0", "statement": 75}, "6650": {"fn": "Strings.fromUint256", "offset": [47045, 47593], "op": "SWAP4", "path": "0"}, "6651": {"op": "POP"}, "6652": {"op": "POP"}, "6653": {"op": "POP"}, "6654": {"op": "POP"}, "6655": {"fn": "Strings.fromUint256", "jump": "o", "offset": [47045, 47593], "op": "JUMP", "path": "0"}, "6656": {"fn": "ERC721Enumerable._transferFrom", "offset": [41025, 41294], "op": "JUMPDEST", "path": "0"}, "6657": {"fn": "ERC721Enumerable._transferFrom", "offset": [41140, 41178], "op": "PUSH2", "path": "0", "statement": 76, "value": "0x1A0B"}, "6660": {"fn": "ERC721Enumerable._transferFrom", "offset": [41160, 41164], "op": "DUP4", "path": "0"}, "6661": {"fn": "ERC721Enumerable._transferFrom", "offset": [41166, 41168], "op": "DUP4", "path": "0"}, "6662": {"fn": "ERC721Enumerable._transferFrom", "offset": [41170, 41177], "op": "DUP4", "path": "0"}, "6663": {"fn": "ERC721Enumerable._transferFrom", "offset": [41140, 41159], "op": "PUSH2", "path": "0", "value": "0x1E55"}, "6666": {"fn": "ERC721Enumerable._transferFrom", "jump": "i", "offset": [41140, 41178], "op": "JUMP", "path": "0"}, "6667": {"fn": "ERC721Enumerable._transferFrom", "offset": [41140, 41178], "op": "JUMPDEST", "path": "0"}, "6668": {"fn": "ERC721Enumerable._transferFrom", "offset": [41189, 41236], "op": "PUSH2", "path": "0", "statement": 77, "value": "0x1A15"}, "6671": {"fn": "ERC721Enumerable._transferFrom", "offset": [41222, 41226], "op": "DUP4", "path": "0"}, "6672": {"fn": "ERC721Enumerable._transferFrom", "offset": [41228, 41235], "op": "DUP3", "path": "0"}, "6673": {"fn": "ERC721Enumerable._transferFrom", "offset": [41189, 41221], "op": "PUSH2", "path": "0", "value": "0x1F99"}, "6676": {"fn": "ERC721Enumerable._transferFrom", "jump": "i", "offset": [41189, 41236], "op": "JUMP", "path": "0"}, "6677": {"fn": "ERC721Enumerable._transferFrom", "offset": [41189, 41236], "op": "JUMPDEST", "path": "0"}, "6678": {"fn": "ERC721Enumerable._transferFrom", "offset": [41247, 41287], "op": "PUSH2", "path": "0", "statement": 78, "value": "0x959"}, "6681": {"fn": "ERC721Enumerable._transferFrom", "offset": [41275, 41277], "op": "DUP3", "path": "0"}, "6682": {"fn": "ERC721Enumerable._transferFrom", "offset": [41279, 41286], "op": "DUP3", "path": "0"}, "6683": {"fn": "ERC721Enumerable._transferFrom", "offset": [41247, 41274], "op": "PUSH2", "path": "0", "value": "0x1B98"}, "6686": {"fn": "ERC721Enumerable._transferFrom", "jump": "i", "offset": [41247, 41287], "op": "JUMP", "path": "0"}, "6687": {"fn": "ERC721Metadata._burn", "offset": [52769, 53010], "op": "JUMPDEST", "path": "0"}, "6688": {"fn": "ERC721Metadata._burn", "offset": [52835, 52862], "op": "PUSH2", "path": "0", "statement": 79, "value": "0x1A29"}, "6691": {"fn": "ERC721Metadata._burn", "offset": [52847, 52852], "op": "DUP3", "path": "0"}, "6692": {"fn": "ERC721Metadata._burn", "offset": [52854, 52861], "op": "DUP3", "path": "0"}, "6693": {"fn": "ERC721Metadata._burn", "offset": [52835, 52846], "op": "PUSH2", "path": "0", "value": "0x208E"}, "6696": {"fn": "ERC721Metadata._burn", "jump": "i", "offset": [52835, 52862], "op": "JUMP", "path": "0"}, "6697": {"fn": "ERC721Metadata._burn", "offset": [52835, 52862], "op": "JUMPDEST", "path": "0"}, "6698": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "PUSH1", "path": "0", "value": "0x0"}, "6700": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "DUP2", "path": "0"}, "6701": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "DUP2", "path": "0"}, "6702": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "MSTORE", "path": "0"}, "6703": {"fn": "ERC721Metadata._burn", "offset": [52919, 52929], "op": "PUSH1", "path": "0", "value": "0xD"}, "6705": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "PUSH1", "path": "0", "value": "0x20"}, "6707": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "MSTORE", "path": "0"}, "6708": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "PUSH1", "path": "0", "value": "0x40"}, "6710": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "SWAP1", "path": "0"}, "6711": {"fn": "ERC721Metadata._burn", "offset": [52919, 52938], "op": "KECCAK256", "path": "0"}, "6712": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "SLOAD", "path": "0"}, "6713": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "PUSH1", "path": "0", "value": "0x2"}, "6715": {"op": "PUSH1", "value": "0x0"}, "6717": {"op": "NOT"}, "6718": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "PUSH2", "path": "0", "value": "0x100"}, "6721": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "PUSH1", "path": "0", "value": "0x1"}, "6723": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "DUP5", "path": "0"}, "6724": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "AND", "path": "0"}, "6725": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "ISZERO", "path": "0"}, "6726": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "MUL", "path": "0"}, "6727": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "ADD", "path": "0"}, "6728": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "SWAP1", "path": "0"}, "6729": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "SWAP2", "path": "0"}, "6730": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "AND", "path": "0"}, "6731": {"fn": "ERC721Metadata._burn", "offset": [52913, 52946], "op": "DIV", "path": "0"}, "6732": {"branch": 144, "fn": "ERC721Metadata._burn", "offset": [52913, 52951], "op": "ISZERO", "path": "0"}, "6733": {"fn": "ERC721Metadata._burn", "offset": [52909, 53004], "op": "PUSH2", "path": "0", "value": "0x1844"}, "6736": {"branch": 144, "fn": "ERC721Metadata._burn", "offset": [52909, 53004], "op": "JUMPI", "path": "0"}, "6737": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "PUSH1", "path": "0", "statement": 80, "value": "0x0"}, "6739": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "DUP2", "path": "0"}, "6740": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "DUP2", "path": "0"}, "6741": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "MSTORE", "path": "0"}, "6742": {"fn": "ERC721Metadata._burn", "offset": [52974, 52984], "op": "PUSH1", "path": "0", "value": "0xD"}, "6744": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "PUSH1", "path": "0", "value": "0x20"}, "6746": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "MSTORE", "path": "0"}, "6747": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "PUSH1", "path": "0", "value": "0x40"}, "6749": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "DUP2", "path": "0"}, "6750": {"fn": "ERC721Metadata._burn", "offset": [52974, 52993], "op": "KECCAK256", "path": "0"}, "6751": {"fn": "ERC721Metadata._burn", "offset": [52967, 52993], "op": "PUSH2", "path": "0", "value": "0x1844"}, "6754": {"fn": "ERC721Metadata._burn", "offset": [52967, 52993], "op": "SWAP2", "path": "0"}, "6755": {"fn": "ERC721Metadata._burn", "offset": [52967, 52993], "op": "PUSH2", "path": "0", "value": "0x23A9"}, "6758": {"fn": "ERC721Metadata._burn", "jump": "i", "offset": [52967, 52993], "op": "JUMP", "path": "0"}, "6759": {"fn": "ERC721._mint", "offset": [33685, 34012], "op": "JUMPDEST", "path": "0"}, "6760": {"op": "PUSH1", "value": "0x1"}, "6762": {"op": "PUSH1", "value": "0x1"}, "6764": {"op": "PUSH1", "value": "0xA0"}, "6766": {"op": "SHL"}, "6767": {"op": "SUB"}, "6768": {"fn": "ERC721._mint", "offset": [33756, 33772], "op": "DUP3", "path": "0", "statement": 81}, "6769": {"branch": 145, "fn": "ERC721._mint", "offset": [33756, 33772], "op": "AND", "path": "0"}, "6770": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "PUSH2", "path": "0", "value": "0x1AC2"}, "6773": {"branch": 145, "fn": "ERC721._mint", "offset": [33748, 33809], "op": "JUMPI", "path": "0"}, "6774": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "PUSH1", "path": "0", "value": "0x40"}, "6776": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "DUP1", "path": "0"}, "6777": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "MLOAD", "path": "0"}, "6778": {"op": "PUSH3", "value": "0x461BCD"}, "6782": {"op": "PUSH1", "value": "0xE5"}, "6784": {"op": "SHL"}, "6785": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "DUP2", "path": "0"}, "6786": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "MSTORE", "path": "0"}, "6787": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "PUSH1", "path": "0", "value": "0x20"}, "6789": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "PUSH1", "path": "0", "value": "0x4"}, "6791": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "DUP3", "path": "0"}, "6792": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "ADD", "path": "0"}, "6793": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "DUP2", "path": "0"}, "6794": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "SWAP1", "path": "0"}, "6795": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "MSTORE", "path": "0"}, "6796": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "PUSH1", "path": "0", "value": "0x24"}, "6798": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "DUP3", "path": "0"}, "6799": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "ADD", "path": "0"}, "6800": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "MSTORE", "path": "0"}, "6801": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "PUSH32", "path": "0", "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"}, "6834": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "PUSH1", "path": "0", "value": "0x44"}, "6836": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "DUP3", "path": "0"}, "6837": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "ADD", "path": "0"}, "6838": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "MSTORE", "path": "0"}, "6839": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "SWAP1", "path": "0"}, "6840": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "MLOAD", "path": "0"}, "6841": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "SWAP1", "path": "0"}, "6842": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "DUP2", "path": "0"}, "6843": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "SWAP1", "path": "0"}, "6844": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "SUB", "path": "0"}, "6845": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "PUSH1", "path": "0", "value": "0x64"}, "6847": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "ADD", "path": "0"}, "6848": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "SWAP1", "path": "0"}, "6849": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "REVERT", "path": "0"}, "6850": {"fn": "ERC721._mint", "offset": [33748, 33809], "op": "JUMPDEST", "path": "0"}, "6851": {"fn": "ERC721._mint", "offset": [33828, 33844], "op": "PUSH2", "path": "0", "statement": 82, "value": "0x1ACB"}, "6854": {"fn": "ERC721._mint", "offset": [33836, 33843], "op": "DUP2", "path": "0"}, "6855": {"fn": "ERC721._mint", "offset": [33828, 33835], "op": "PUSH2", "path": "0", "value": "0x1666"}, "6858": {"fn": "ERC721._mint", "jump": "i", "offset": [33828, 33844], "op": "JUMP", "path": "0"}, "6859": {"fn": "ERC721._mint", "offset": [33828, 33844], "op": "JUMPDEST", "path": "0"}, "6860": {"branch": 146, "fn": "ERC721._mint", "offset": [33827, 33844], "op": "ISZERO", "path": "0"}, "6861": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH2", "path": "0", "value": "0x1B1D"}, "6864": {"branch": 146, "fn": "ERC721._mint", "offset": [33819, 33877], "op": "JUMPI", "path": "0"}, "6865": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH1", "path": "0", "value": "0x40"}, "6867": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "DUP1", "path": "0"}, "6868": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "MLOAD", "path": "0"}, "6869": {"op": "PUSH3", "value": "0x461BCD"}, "6873": {"op": "PUSH1", "value": "0xE5"}, "6875": {"op": "SHL"}, "6876": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "DUP2", "path": "0"}, "6877": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "MSTORE", "path": "0"}, "6878": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH1", "path": "0", "value": "0x20"}, "6880": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH1", "path": "0", "value": "0x4"}, "6882": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "DUP3", "path": "0"}, "6883": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "ADD", "path": "0"}, "6884": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "MSTORE", "path": "0"}, "6885": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH1", "path": "0", "value": "0x1C"}, "6887": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH1", "path": "0", "value": "0x24"}, "6889": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "DUP3", "path": "0"}, "6890": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "ADD", "path": "0"}, "6891": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "MSTORE", "path": "0"}, "6892": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH32", "path": "0", "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"}, "6925": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH1", "path": "0", "value": "0x44"}, "6927": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "DUP3", "path": "0"}, "6928": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "ADD", "path": "0"}, "6929": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "MSTORE", "path": "0"}, "6930": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "SWAP1", "path": "0"}, "6931": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "MLOAD", "path": "0"}, "6932": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "SWAP1", "path": "0"}, "6933": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "DUP2", "path": "0"}, "6934": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "SWAP1", "path": "0"}, "6935": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "SUB", "path": "0"}, "6936": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "PUSH1", "path": "0", "value": "0x64"}, "6938": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "ADD", "path": "0"}, "6939": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "SWAP1", "path": "0"}, "6940": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "REVERT", "path": "0"}, "6941": {"fn": "ERC721._mint", "offset": [33819, 33877], "op": "JUMPDEST", "path": "0"}, "6942": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "PUSH1", "path": "0", "statement": 83, "value": "0x0"}, "6944": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "DUP2", "path": "0"}, "6945": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "DUP2", "path": "0"}, "6946": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "MSTORE", "path": "0"}, "6947": {"fn": "ERC721._mint", "offset": [33888, 33899], "op": "PUSH1", "path": "0", "value": "0x2"}, "6949": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "PUSH1", "path": "0", "value": "0x20"}, "6951": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "SWAP1", "path": "0"}, "6952": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "DUP2", "path": "0"}, "6953": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "MSTORE", "path": "0"}, "6954": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "PUSH1", "path": "0", "value": "0x40"}, "6956": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "DUP1", "path": "0"}, "6957": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "DUP4", "path": "0"}, "6958": {"fn": "ERC721._mint", "offset": [33888, 33908], "op": "KECCAK256", "path": "0"}, "6959": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "DUP1", "path": "0"}, "6960": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "SLOAD", "path": "0"}, "6961": {"op": "PUSH1", "value": "0x1"}, "6963": {"op": "PUSH1", "value": "0x1"}, "6965": {"op": "PUSH1", "value": "0xA0"}, "6967": {"op": "SHL"}, "6968": {"op": "SUB"}, "6969": {"op": "NOT"}, "6970": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "AND", "path": "0"}, "6971": {"op": "PUSH1", "value": "0x1"}, "6973": {"op": "PUSH1", "value": "0x1"}, "6975": {"op": "PUSH1", "value": "0xA0"}, "6977": {"op": "SHL"}, "6978": {"op": "SUB"}, "6979": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "DUP8", "path": "0"}, "6980": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "AND", "path": "0"}, "6981": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "SWAP1", "path": "0"}, "6982": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "DUP2", "path": "0"}, "6983": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "OR", "path": "0"}, "6984": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "SWAP1", "path": "0"}, "6985": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "SWAP2", "path": "0"}, "6986": {"fn": "ERC721._mint", "offset": [33888, 33913], "op": "SSTORE", "path": "0"}, "6987": {"fn": "ERC721._mint", "offset": [33923, 33944], "op": "DUP4", "path": "0", "statement": 84}, "6988": {"fn": "ERC721._mint", "offset": [33923, 33944], "op": "MSTORE", "path": "0"}, "6989": {"fn": "ERC721._mint", "offset": [33923, 33940], "op": "PUSH1", "path": "0", "value": "0x4"}, "6991": {"fn": "ERC721._mint", "offset": [33923, 33944], "op": "SWAP1", "path": "0"}, "6992": {"fn": "ERC721._mint", "offset": [33923, 33944], "op": "SWAP2", "path": "0"}, "6993": {"fn": "ERC721._mint", "offset": [33923, 33944], "op": "MSTORE", "path": "0"}, "6994": {"fn": "ERC721._mint", "offset": [33923, 33944], "op": "SWAP1", "path": "0"}, "6995": {"fn": "ERC721._mint", "offset": [33923, 33944], "op": "KECCAK256", "path": "0"}, "6996": {"fn": "ERC721._mint", "offset": [33923, 33956], "op": "PUSH2", "path": "0", "value": "0x1B5C"}, "6999": {"fn": "ERC721._mint", "offset": [33923, 33956], "op": "SWAP1", "path": "0"}, "7000": {"fn": "ERC721._mint", "offset": [33923, 33954], "op": "PUSH2", "path": "0", "value": "0x20BA"}, "7003": {"fn": "ERC721._mint", "jump": "i", "offset": [33923, 33956], "op": "JUMP", "path": "0"}, "7004": {"fn": "ERC721._mint", "offset": [33923, 33956], "op": "JUMPDEST", "path": "0"}, "7005": {"fn": "ERC721._mint", "offset": [33972, 34005], "op": "PUSH1", "path": "0", "statement": 85, "value": "0x40"}, "7007": {"fn": "ERC721._mint", "offset": [33972, 34005], "op": "MLOAD", "path": "0"}, "7008": {"fn": "ERC721._mint", "offset": [33997, 34004], "op": "DUP2", "path": "0"}, "7009": {"fn": "ERC721._mint", "offset": [33997, 34004], "op": "SWAP1", "path": "0"}, "7010": {"op": "PUSH1", "value": "0x1"}, "7012": {"op": "PUSH1", "value": "0x1"}, "7014": {"op": "PUSH1", "value": "0xA0"}, "7016": {"op": "SHL"}, "7017": {"op": "SUB"}, "7018": {"fn": "ERC721._mint", "offset": [33972, 34005], "op": "DUP5", "path": "0"}, "7019": {"fn": "ERC721._mint", "offset": [33972, 34005], "op": "AND", "path": "0"}, "7020": {"fn": "ERC721._mint", "offset": [33972, 34005], "op": "SWAP1", "path": "0"}, "7021": {"fn": "ERC721._mint", "offset": [33989, 33990], "op": "PUSH1", "path": "0", "value": "0x0"}, "7023": {"fn": "ERC721._mint", "offset": [33989, 33990], "op": "SWAP1", "path": "0"}, "7024": {"fn": "ERC721._mint", "offset": [33972, 34005], "op": "PUSH32", "path": "0", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "7057": {"fn": "ERC721._mint", "offset": [33972, 34005], "op": "SWAP1", "path": "0"}, "7058": {"fn": "ERC721._mint", "offset": [33989, 33990], "op": "DUP3", "path": "0"}, "7059": {"fn": "ERC721._mint", "offset": [33989, 33990], "op": "SWAP1", "path": "0"}, "7060": {"fn": "ERC721._mint", "offset": [33972, 34005], "op": "LOG4", "path": "0"}, "7061": {"fn": "ERC721._mint", "offset": [33685, 34012], "op": "POP", "path": "0"}, "7062": {"fn": "ERC721._mint", "offset": [33685, 34012], "op": "POP", "path": "0"}, "7063": {"fn": "ERC721._mint", "jump": "o", "offset": [33685, 34012], "op": "JUMP", "path": "0"}, "7064": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43038, 43221], "op": "JUMPDEST", "path": "0"}, "7065": {"op": "PUSH1", "value": "0x1"}, "7067": {"op": "PUSH1", "value": "0x1"}, "7069": {"op": "PUSH1", "value": "0xA0"}, "7071": {"op": "SHL"}, "7072": {"op": "SUB"}, "7073": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "SWAP1", "path": "0", "statement": 86}, "7074": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "SWAP2", "path": "0"}, "7075": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "AND", "path": "0"}, "7076": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "PUSH1", "path": "0", "value": "0x0"}, "7078": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "SWAP1", "path": "0"}, "7079": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "DUP2", "path": "0"}, "7080": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "MSTORE", "path": "0"}, "7081": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43163], "op": "PUSH1", "path": "0", "value": "0x6"}, "7083": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "PUSH1", "path": "0", "value": "0x20"}, "7085": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "DUP2", "path": "0"}, "7086": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "DUP2", "path": "0"}, "7087": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "MSTORE", "path": "0"}, "7088": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "PUSH1", "path": "0", "value": "0x40"}, "7090": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "DUP1", "path": "0"}, "7091": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "DUP5", "path": "0"}, "7092": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43167], "op": "KECCAK256", "path": "0"}, "7093": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43174], "op": "DUP1", "path": "0"}, "7094": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43151, 43174], "op": "SLOAD", "path": "0"}, "7095": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43148], "op": "DUP7", "path": "0"}, "7096": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43148], "op": "DUP7", "path": "0"}, "7097": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43148], "op": "MSTORE", "path": "0"}, "7098": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43139], "op": "PUSH1", "path": "0", "value": "0x7"}, "7100": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43148], "op": "DUP5", "path": "0"}, "7101": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43148], "op": "MSTORE", "path": "0"}, "7102": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43148], "op": "SWAP2", "path": "0"}, "7103": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43148], "op": "DUP6", "path": "0"}, "7104": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43148], "op": "KECCAK256", "path": "0"}, "7105": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43174], "op": "DUP3", "path": "0"}, "7106": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43174], "op": "SWAP1", "path": "0"}, "7107": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43122, 43174], "op": "SSTORE", "path": "0"}, "7108": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43200], "op": "SWAP3", "path": "0", "statement": 87}, "7109": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43200], "op": "DUP3", "path": "0"}, "7110": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43200], "op": "MSTORE", "path": "0"}, "7111": {"op": "PUSH1", "value": "0x1"}, "7113": {"op": "DUP2"}, "7114": {"op": "ADD"}, "7115": {"op": "DUP4"}, "7116": {"op": "SSTORE"}, "7117": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43214], "op": "SWAP2", "path": "0"}, "7118": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43214], "op": "DUP4", "path": "0"}, "7119": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43214], "op": "MSTORE", "path": "0"}, "7120": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43214], "op": "SWAP1", "path": "0"}, "7121": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43214], "op": "SWAP2", "path": "0"}, "7122": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43214], "op": "KECCAK256", "path": "0"}, "7123": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43214], "op": "ADD", "path": "0"}, "7124": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "offset": [43184, 43214], "op": "SSTORE", "path": "0"}, "7125": {"fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "jump": "o", "offset": [43038, 43221], "op": "JUMP", "path": "0"}, "7126": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43416, 43577], "op": "JUMPDEST", "path": "0"}, "7127": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43519, 43529], "op": "PUSH1", "path": "0", "statement": 88, "value": "0x8"}, "7129": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43519, 43536], "op": "DUP1", "path": "0"}, "7130": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43519, 43536], "op": "SLOAD", "path": "0"}, "7131": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "PUSH1", "path": "0", "value": "0x0"}, "7133": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "DUP4", "path": "0"}, "7134": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "DUP2", "path": "0"}, "7135": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "MSTORE", "path": "0"}, "7136": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43507], "op": "PUSH1", "path": "0", "value": "0x9"}, "7138": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "PUSH1", "path": "0", "value": "0x20"}, "7140": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "MSTORE", "path": "0"}, "7141": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "PUSH1", "path": "0", "value": "0x40"}, "7143": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "DUP2", "path": "0"}, "7144": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43516], "op": "KECCAK256", "path": "0"}, "7145": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43536], "op": "DUP3", "path": "0"}, "7146": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43536], "op": "SWAP1", "path": "0"}, "7147": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43492, 43536], "op": "SSTORE", "path": "0"}, "7148": {"op": "PUSH1", "value": "0x1"}, "7150": {"op": "DUP3"}, "7151": {"op": "ADD"}, "7152": {"op": "DUP4"}, "7153": {"op": "SSTORE"}, "7154": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43546, 43570], "op": "SWAP2", "path": "0", "statement": 89}, "7155": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43546, 43570], "op": "SWAP1", "path": "0"}, "7156": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43546, 43570], "op": "SWAP2", "path": "0"}, "7157": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43546, 43570], "op": "MSTORE", "path": "0"}, "7158": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43546, 43570], "op": "PUSH32", "path": "0", "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"}, "7191": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43546, 43570], "op": "ADD", "path": "0"}, "7192": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "offset": [43546, 43570], "op": "SSTORE", "path": "0"}, "7193": {"fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "jump": "o", "offset": [43416, 43577], "op": "JUMP", "path": "0"}, "7194": {"fn": "ERC721._checkOnERC721Received", "offset": [36436, 37561], "op": "JUMPDEST", "path": "0"}, "7195": {"fn": "ERC721._checkOnERC721Received", "offset": [36587, 36591], "op": "PUSH1", "path": "0", "value": "0x0"}, "7197": {"fn": "ERC721._checkOnERC721Received", "offset": [36608, 36623], "op": "PUSH2", "path": "0", "value": "0x1C2E"}, "7200": {"fn": "ERC721._checkOnERC721Received", "offset": [36608, 36610], "op": "DUP5", "path": "0"}, "7201": {"op": "PUSH1", "value": "0x1"}, "7203": {"op": "PUSH1", "value": "0x1"}, "7205": {"op": "PUSH1", "value": "0xA0"}, "7207": {"op": "SHL"}, "7208": {"op": "SUB"}, "7209": {"fn": "ERC721._checkOnERC721Received", "offset": [36608, 36621], "op": "AND", "path": "0"}, "7210": {"fn": "ERC721._checkOnERC721Received", "offset": [36608, 36621], "op": "PUSH2", "path": "0", "value": "0x20C3"}, "7213": {"fn": "ERC721._checkOnERC721Received", "jump": "i", "offset": [36608, 36623], "op": "JUMP", "path": "0"}, "7214": {"branch": 147, "fn": "ERC721._checkOnERC721Received", "offset": [36608, 36623], "op": "JUMPDEST", "path": "0"}, "7215": {"fn": "ERC721._checkOnERC721Received", "offset": [36603, 36661], "op": "PUSH2", "path": "0", "value": "0x1C3A"}, "7218": {"branch": 147, "fn": "ERC721._checkOnERC721Received", "offset": [36603, 36661], "op": "JUMPI", "path": "0"}, "7219": {"op": "POP"}, "7220": {"fn": "ERC721._checkOnERC721Received", "offset": [36646, 36650], "op": "PUSH1", "path": "0", "statement": 90, "value": "0x1"}, "7222": {"fn": "ERC721._checkOnERC721Received", "offset": [36639, 36650], "op": "PUSH2", "path": "0", "value": "0x1723"}, "7225": {"fn": "ERC721._checkOnERC721Received", "offset": [36639, 36650], "op": "JUMP", "path": "0"}, "7226": {"fn": "ERC721._checkOnERC721Received", "offset": [36603, 36661], "op": "JUMPDEST", "path": "0"}, "7227": {"fn": "ERC721._checkOnERC721Received", "offset": [36731, 36743], "op": "PUSH1", "path": "0", "value": "0x0"}, "7229": {"fn": "ERC721._checkOnERC721Received", "offset": [36745, 36768], "op": "PUSH1", "path": "0", "value": "0x60"}, "7231": {"op": "PUSH1", "value": "0x1"}, "7233": {"op": "PUSH1", "value": "0x1"}, "7235": {"op": "PUSH1", "value": "0xA0"}, "7237": {"op": "SHL"}, "7238": {"op": "SUB"}, "7239": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 36779], "op": "DUP7", "path": "0"}, "7240": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 36779], "op": "AND", "path": "0"}, "7241": {"op": "PUSH4", "value": "0xA85BD01"}, "7246": {"op": "PUSH1", "value": "0xE1"}, "7248": {"op": "SHL"}, "7249": {"fn": "ERC721._checkOnERC721Received", "offset": [36896, 36908], "op": "PUSH2", "path": "0", "value": "0x1C58"}, "7252": {"fn": "ERC721._checkOnERC721Received", "offset": [36896, 36906], "op": "PUSH2", "path": "0", "value": "0x1683"}, "7255": {"fn": "ERC721._checkOnERC721Received", "jump": "i", "offset": [36896, 36908], "op": "JUMP", "path": "0"}, "7256": {"fn": "ERC721._checkOnERC721Received", "offset": [36896, 36908], "op": "JUMPDEST", "path": "0"}, "7257": {"fn": "ERC721._checkOnERC721Received", "offset": [36926, 36930], "op": "DUP10", "path": "0"}, "7258": {"fn": "ERC721._checkOnERC721Received", "offset": [36948, 36955], "op": "DUP9", "path": "0"}, "7259": {"fn": "ERC721._checkOnERC721Received", "offset": [36973, 36978], "op": "DUP9", "path": "0"}, "7260": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x40"}, "7262": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MLOAD", "path": "0"}, "7263": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x24"}, "7265": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7266": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP1", "path": "0"}, "7267": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP6", "path": "0"}, "7268": {"op": "PUSH1", "value": "0x1"}, "7270": {"op": "PUSH1", "value": "0x1"}, "7272": {"op": "PUSH1", "value": "0xA0"}, "7274": {"op": "SHL"}, "7275": {"op": "SUB"}, "7276": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "AND", "path": "0"}, "7277": {"op": "PUSH1", "value": "0x1"}, "7279": {"op": "PUSH1", "value": "0x1"}, "7281": {"op": "PUSH1", "value": "0xA0"}, "7283": {"op": "SHL"}, "7284": {"op": "SUB"}, "7285": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "AND", "path": "0"}, "7286": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7287": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MSTORE", "path": "0"}, "7288": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x20"}, "7290": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7291": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP5", "path": "0"}, "7292": {"op": "PUSH1", "value": "0x1"}, "7294": {"op": "PUSH1", "value": "0x1"}, "7296": {"op": "PUSH1", "value": "0xA0"}, "7298": {"op": "SHL"}, "7299": {"op": "SUB"}, "7300": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "AND", "path": "0"}, "7301": {"op": "PUSH1", "value": "0x1"}, "7303": {"op": "PUSH1", "value": "0x1"}, "7305": {"op": "PUSH1", "value": "0xA0"}, "7307": {"op": "SHL"}, "7308": {"op": "SUB"}, "7309": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "AND", "path": "0"}, "7310": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7311": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MSTORE", "path": "0"}, "7312": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x20"}, "7314": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7315": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP4", "path": "0"}, "7316": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7317": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MSTORE", "path": "0"}, "7318": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x20"}, "7320": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7321": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP1", "path": "0"}, "7322": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x20"}, "7324": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7325": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP3", "path": "0"}, "7326": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7327": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SUB", "path": "0"}, "7328": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP3", "path": "0"}, "7329": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MSTORE", "path": "0"}, "7330": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP4", "path": "0"}, "7331": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7332": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7333": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MLOAD", "path": "0"}, "7334": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7335": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MSTORE", "path": "0"}, "7336": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x20"}, "7338": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7339": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP2", "path": "0"}, "7340": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "POP", "path": "0"}, "7341": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP1", "path": "0"}, "7342": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MLOAD", "path": "0"}, "7343": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP1", "path": "0"}, "7344": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x20"}, "7346": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7347": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP1", "path": "0"}, "7348": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP1", "path": "0"}, "7349": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP4", "path": "0"}, "7350": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP4", "path": "0"}, "7351": {"op": "PUSH1", "value": "0x0"}, "7353": {"op": "JUMPDEST"}, "7354": {"op": "DUP4"}, "7355": {"op": "DUP2"}, "7356": {"op": "LT"}, "7357": {"op": "ISZERO"}, "7358": {"op": "PUSH2", "value": "0x1CD1"}, "7361": {"op": "JUMPI"}, "7362": {"op": "DUP2"}, "7363": {"op": "DUP2"}, "7364": {"op": "ADD"}, "7365": {"op": "MLOAD"}, "7366": {"op": "DUP4"}, "7367": {"op": "DUP3"}, "7368": {"op": "ADD"}, "7369": {"op": "MSTORE"}, "7370": {"op": "PUSH1", "value": "0x20"}, "7372": {"op": "ADD"}, "7373": {"op": "PUSH2", "value": "0x1CB9"}, "7376": {"op": "JUMP"}, "7377": {"op": "JUMPDEST"}, "7378": {"op": "POP"}, "7379": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "POP", "path": "0"}, "7380": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "POP", "path": "0"}, "7381": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "POP", "path": "0"}, "7382": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP1", "path": "0"}, "7383": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "POP", "path": "0"}, "7384": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP1", "path": "0"}, "7385": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7386": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7387": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP1", "path": "0"}, "7388": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x1F"}, "7390": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "AND", "path": "0"}, "7391": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP1", "path": "0"}, "7392": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ISZERO", "path": "0"}, "7393": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH2", "path": "0", "value": "0x1CFE"}, "7396": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "JUMPI", "path": "0"}, "7397": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP1", "path": "0"}, "7398": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP3", "path": "0"}, "7399": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SUB", "path": "0"}, "7400": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP1", "path": "0"}, "7401": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MLOAD", "path": "0"}, "7402": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x1"}, "7404": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP4", "path": "0"}, "7405": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x20"}, "7407": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SUB", "path": "0"}, "7408": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH2", "path": "0", "value": "0x100"}, "7411": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "EXP", "path": "0"}, "7412": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SUB", "path": "0"}, "7413": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "NOT", "path": "0"}, "7414": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "AND", "path": "0"}, "7415": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7416": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MSTORE", "path": "0"}, "7417": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x20"}, "7419": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "ADD", "path": "0"}, "7420": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP2", "path": "0"}, "7421": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "POP", "path": "0"}, "7422": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "JUMPDEST", "path": "0"}, "7423": {"op": "POP"}, "7424": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "PUSH1", "path": "0", "value": "0x40"}, "7426": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP1", "path": "0"}, "7427": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MLOAD", "path": "0"}, "7428": {"op": "PUSH1", "value": "0x1F"}, "7430": {"op": "NOT"}, "7431": {"op": "DUP2"}, "7432": {"op": "DUP5"}, "7433": {"op": "SUB"}, "7434": {"op": "ADD"}, "7435": {"op": "DUP2"}, "7436": {"op": "MSTORE"}, "7437": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP2", "path": "0"}, "7438": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "DUP2", "path": "0"}, "7439": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "MSTORE", "path": "0"}, "7440": {"op": "PUSH1", "value": "0x20"}, "7442": {"op": "DUP3"}, "7443": {"op": "ADD"}, "7444": {"op": "DUP1"}, "7445": {"op": "MLOAD"}, "7446": {"op": "PUSH1", "value": "0x1"}, "7448": {"op": "PUSH1", "value": "0x1"}, "7450": {"op": "PUSH1", "value": "0xE0"}, "7452": {"op": "SHL"}, "7453": {"op": "SUB"}, "7454": {"op": "AND"}, "7455": {"op": "PUSH1", "value": "0x1"}, "7457": {"op": "PUSH1", "value": "0x1"}, "7459": {"op": "PUSH1", "value": "0xE0"}, "7461": {"op": "SHL"}, "7462": {"op": "SUB"}, "7463": {"op": "NOT"}, "7464": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP1", "path": "0"}, "7465": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP11", "path": "0"}, "7466": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "AND", "path": "0"}, "7467": {"op": "SWAP10"}, "7468": {"op": "SWAP1"}, "7469": {"op": "SWAP10"}, "7470": {"op": "OR"}, "7471": {"op": "DUP10"}, "7472": {"op": "MSTORE"}, "7473": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "MLOAD", "path": "0"}, "7474": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "DUP2", "path": "0"}, "7475": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "MLOAD", "path": "0"}, "7476": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP2", "path": "0"}, "7477": {"fn": "ERC721._checkOnERC721Received", "offset": [36793, 36992], "op": "SWAP9", "path": "0"}, "7478": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP1", "path": "0"}, "7479": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP8", "path": "0"}, "7480": {"op": "POP"}, "7481": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "DUP8", "path": "0"}, "7482": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP7", "path": "0"}, "7483": {"op": "POP"}, "7484": {"op": "SWAP5"}, "7485": {"op": "POP"}, "7486": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP3", "path": "0"}, "7487": {"op": "POP"}, "7488": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "DUP3", "path": "0"}, "7489": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP2", "path": "0"}, "7490": {"op": "POP"}, "7491": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "DUP5", "path": "0"}, "7492": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP1", "path": "0"}, "7493": {"op": "POP"}, "7494": {"op": "DUP4"}, "7495": {"op": "JUMPDEST"}, "7496": {"op": "PUSH1", "value": "0x20"}, "7498": {"op": "DUP4"}, "7499": {"op": "LT"}, "7500": {"op": "PUSH2", "value": "0x1D66"}, "7503": {"op": "JUMPI"}, "7504": {"op": "DUP1"}, "7505": {"op": "MLOAD"}, "7506": {"op": "DUP3"}, "7507": {"op": "MSTORE"}, "7508": {"op": "PUSH1", "value": "0x1F"}, "7510": {"op": "NOT"}, "7511": {"op": "SWAP1"}, "7512": {"op": "SWAP3"}, "7513": {"op": "ADD"}, "7514": {"op": "SWAP2"}, "7515": {"op": "PUSH1", "value": "0x20"}, "7517": {"op": "SWAP2"}, "7518": {"op": "DUP3"}, "7519": {"op": "ADD"}, "7520": {"op": "SWAP2"}, "7521": {"op": "ADD"}, "7522": {"op": "PUSH2", "value": "0x1D47"}, "7525": {"op": "JUMP"}, "7526": {"op": "JUMPDEST"}, "7527": {"op": "PUSH1", "value": "0x1"}, "7529": {"op": "DUP4"}, "7530": {"op": "PUSH1", "value": "0x20"}, "7532": {"op": "SUB"}, "7533": {"op": "PUSH2", "value": "0x100"}, "7536": {"op": "EXP"}, "7537": {"op": "SUB"}, "7538": {"op": "DUP1"}, "7539": {"op": "NOT"}, "7540": {"op": "DUP3"}, "7541": {"op": "MLOAD"}, "7542": {"op": "AND"}, "7543": {"op": "DUP2"}, "7544": {"op": "DUP5"}, "7545": {"op": "MLOAD"}, "7546": {"op": "AND"}, "7547": {"op": "DUP1"}, "7548": {"op": "DUP3"}, "7549": {"op": "OR"}, "7550": {"op": "DUP6"}, "7551": {"op": "MSTORE"}, "7552": {"op": "POP"}, "7553": {"op": "POP"}, "7554": {"op": "POP"}, "7555": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "POP", "path": "0"}, "7556": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "POP", "path": "0"}, "7557": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "POP", "path": "0"}, "7558": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP1", "path": "0"}, "7559": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "POP", "path": "0"}, "7560": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "ADD", "path": "0"}, "7561": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP2", "path": "0"}, "7562": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "POP", "path": "0"}, "7563": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "POP", "path": "0"}, "7564": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "PUSH1", "path": "0", "value": "0x0"}, "7566": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "PUSH1", "path": "0", "value": "0x40"}, "7568": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "MLOAD", "path": "0"}, "7569": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "DUP1", "path": "0"}, "7570": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "DUP4", "path": "0"}, "7571": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SUB", "path": "0"}, "7572": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "DUP2", "path": "0"}, "7573": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "PUSH1", "path": "0", "value": "0x0"}, "7575": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "DUP7", "path": "0"}, "7576": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "GAS", "path": "0"}, "7577": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "CALL", "path": "0"}, "7578": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "SWAP2", "path": "0"}, "7579": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "POP", "path": "0"}, "7580": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "POP", "path": "0"}, "7581": {"fn": "ERC721._checkOnERC721Received", "offset": [36772, 37002], "op": "RETURNDATASIZE", "path": "0"}, "7582": {"op": "DUP1"}, "7583": {"op": "PUSH1", "value": "0x0"}, "7585": {"op": "DUP2"}, "7586": {"op": "EQ"}, "7587": {"op": "PUSH2", "value": "0x1DC8"}, "7590": {"op": "JUMPI"}, "7591": {"op": "PUSH1", "value": "0x40"}, "7593": {"op": "MLOAD"}, "7594": {"op": "SWAP2"}, "7595": {"op": "POP"}, "7596": {"op": "PUSH1", "value": "0x1F"}, "7598": {"op": "NOT"}, "7599": {"op": "PUSH1", "value": "0x3F"}, "7601": {"op": "RETURNDATASIZE"}, "7602": {"op": "ADD"}, "7603": {"op": "AND"}, "7604": {"op": "DUP3"}, "7605": {"op": "ADD"}, "7606": {"op": "PUSH1", "value": "0x40"}, "7608": {"op": "MSTORE"}, "7609": {"op": "RETURNDATASIZE"}, "7610": {"op": "DUP3"}, "7611": {"op": "MSTORE"}, "7612": {"op": "RETURNDATASIZE"}, "7613": {"op": "PUSH1", "value": "0x0"}, "7615": {"op": "PUSH1", "value": "0x20"}, "7617": {"op": "DUP5"}, "7618": {"op": "ADD"}, "7619": {"op": "RETURNDATACOPY"}, "7620": {"op": "PUSH2", "value": "0x1DCD"}, "7623": {"op": "JUMP"}, "7624": {"op": "JUMPDEST"}, "7625": {"op": "PUSH1", "value": "0x60"}, "7627": {"op": "SWAP2"}, "7628": {"op": "POP"}, "7629": {"op": "JUMPDEST"}, "7630": {"op": "POP"}, "7631": {"fn": "ERC721._checkOnERC721Received", "offset": [36730, 37002], "op": "SWAP2", "path": "0"}, "7632": {"fn": "ERC721._checkOnERC721Received", "offset": [36730, 37002], "op": "POP", "path": "0"}, "7633": {"fn": "ERC721._checkOnERC721Received", "offset": [36730, 37002], "op": "SWAP2", "path": "0"}, "7634": {"fn": "ERC721._checkOnERC721Received", "offset": [36730, 37002], "op": "POP", "path": "0"}, "7635": {"branch": 148, "fn": "ERC721._checkOnERC721Received", "offset": [37018, 37025], "op": "DUP2", "path": "0"}, "7636": {"fn": "ERC721._checkOnERC721Received", "offset": [37013, 37555], "op": "PUSH2", "path": "0", "value": "0x1E1E"}, "7639": {"branch": 148, "fn": "ERC721._checkOnERC721Received", "offset": [37013, 37555], "op": "JUMPI", "path": "0"}, "7640": {"fn": "ERC721._checkOnERC721Received", "offset": [37045, 37062], "op": "DUP1", "path": "0"}, "7641": {"fn": "ERC721._checkOnERC721Received", "offset": [37045, 37062], "op": "MLOAD", "path": "0"}, "7642": {"branch": 149, "fn": "ERC721._checkOnERC721Received", "offset": [37045, 37066], "op": "ISZERO", "path": "0"}, "7643": {"fn": "ERC721._checkOnERC721Received", "offset": [37041, 37417], "op": "PUSH2", "path": "0", "value": "0x1DE7"}, "7646": {"branch": 149, "fn": "ERC721._checkOnERC721Received", "offset": [37041, 37417], "op": "JUMPI", "path": "0"}, "7647": {"fn": "ERC721._checkOnERC721Received", "offset": [37210, 37220], "op": "DUP1", "path": "0"}, "7648": {"fn": "ERC721._checkOnERC721Received", "offset": [37204, 37221], "op": "MLOAD", "path": "0"}, "7649": {"fn": "ERC721._checkOnERC721Received", "offset": [37270, 37285], "op": "DUP1", "path": "0"}, "7650": {"fn": "ERC721._checkOnERC721Received", "offset": [37257, 37267], "op": "DUP3", "path": "0"}, "7651": {"fn": "ERC721._checkOnERC721Received", "offset": [37253, 37255], "op": "PUSH1", "path": "0", "value": "0x20"}, "7653": {"fn": "ERC721._checkOnERC721Received", "offset": [37249, 37268], "op": "ADD", "path": "0"}, "7654": {"fn": "ERC721._checkOnERC721Received", "offset": [37242, 37286], "op": "REVERT", "path": "0"}, "7655": {"fn": "ERC721._checkOnERC721Received", "offset": [37159, 37304], "op": "JUMPDEST", "path": "0"}, "7656": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH1", "path": "0", "statement": 91, "value": "0x40"}, "7658": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "MLOAD", "path": "0"}, "7659": {"op": "PUSH3", "value": "0x461BCD"}, "7663": {"op": "PUSH1", "value": "0xE5"}, "7665": {"op": "SHL"}, "7666": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP2", "path": "0"}, "7667": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "MSTORE", "path": "0"}, "7668": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH1", "path": "0", "value": "0x4"}, "7670": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "ADD", "path": "0"}, "7671": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP1", "path": "0"}, "7672": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP1", "path": "0"}, "7673": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH1", "path": "0", "value": "0x20"}, "7675": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "ADD", "path": "0"}, "7676": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP3", "path": "0"}, "7677": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP2", "path": "0"}, "7678": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "SUB", "path": "0"}, "7679": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP3", "path": "0"}, "7680": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "MSTORE", "path": "0"}, "7681": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH1", "path": "0", "value": "0x32"}, "7683": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP2", "path": "0"}, "7684": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "MSTORE", "path": "0"}, "7685": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH1", "path": "0", "value": "0x20"}, "7687": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "ADD", "path": "0"}, "7688": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP1", "path": "0"}, "7689": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH2", "path": "0", "value": "0x2663"}, "7692": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH1", "path": "0", "value": "0x32"}, "7694": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "SWAP2", "path": "0"}, "7695": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "CODECOPY", "path": "0"}, "7696": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH1", "path": "0", "value": "0x40"}, "7698": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "ADD", "path": "0"}, "7699": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "SWAP2", "path": "0"}, "7700": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "POP", "path": "0"}, "7701": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "POP", "path": "0"}, "7702": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "PUSH1", "path": "0", "value": "0x40"}, "7704": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "MLOAD", "path": "0"}, "7705": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "DUP1", "path": "0"}, "7706": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "SWAP2", "path": "0"}, "7707": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "SUB", "path": "0"}, "7708": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "SWAP1", "path": "0"}, "7709": {"fn": "ERC721._checkOnERC721Received", "offset": [37342, 37402], "op": "REVERT", "path": "0"}, "7710": {"fn": "ERC721._checkOnERC721Received", "offset": [37013, 37555], "op": "JUMPDEST", "path": "0"}, "7711": {"fn": "ERC721._checkOnERC721Received", "offset": [37447, 37460], "op": "PUSH1", "path": "0", "value": "0x0"}, "7713": {"fn": "ERC721._checkOnERC721Received", "offset": [37474, 37484], "op": "DUP2", "path": "0"}, "7714": {"fn": "ERC721._checkOnERC721Received", "offset": [37463, 37495], "op": "DUP1", "path": "0"}, "7715": {"fn": "ERC721._checkOnERC721Received", "offset": [37463, 37495], "op": "PUSH1", "path": "0", "value": "0x20"}, "7717": {"fn": "ERC721._checkOnERC721Received", "offset": [37463, 37495], "op": "ADD", "path": "0"}, "7718": {"fn": "ERC721._checkOnERC721Received", "offset": [37463, 37495], "op": "SWAP1", "path": "0"}, "7719": {"fn": "ERC721._checkOnERC721Received", "offset": [37463, 37495], "op": "MLOAD", "path": "0"}, "7720": {"op": "PUSH1", "value": "0x20"}, "7722": {"op": "DUP2"}, "7723": {"op": "LT"}, "7724": {"op": "ISZERO"}, "7725": {"op": "PUSH2", "value": "0x1E35"}, "7728": {"op": "JUMPI"}, "7729": {"op": "PUSH1", "value": "0x0"}, "7731": {"op": "DUP1"}, "7732": {"op": "REVERT"}, "7733": {"op": "JUMPDEST"}, "7734": {"op": "POP"}, "7735": {"fn": "ERC721._checkOnERC721Received", "offset": [37463, 37495], "op": "MLOAD", "path": "0"}, "7736": {"op": "PUSH1", "value": "0x1"}, "7738": {"op": "PUSH1", "value": "0x1"}, "7740": {"op": "PUSH1", "value": "0xE0"}, "7742": {"op": "SHL"}, "7743": {"op": "SUB"}, "7744": {"op": "NOT"}, "7745": {"fn": "ERC721._checkOnERC721Received", "offset": [37517, 37543], "op": "AND", "path": "0", "statement": 92}, "7746": {"op": "PUSH4", "value": "0xA85BD01"}, "7751": {"op": "PUSH1", "value": "0xE1"}, "7753": {"op": "SHL"}, "7754": {"fn": "ERC721._checkOnERC721Received", "offset": [37517, 37543], "op": "EQ", "path": "0"}, "7755": {"fn": "ERC721._checkOnERC721Received", "offset": [37517, 37543], "op": "SWAP4", "path": "0"}, "7756": {"op": "POP"}, "7757": {"fn": "ERC721._checkOnERC721Received", "offset": [37509, 37544], "op": "PUSH2", "path": "0", "value": "0x1723"}, "7760": {"fn": "ERC721._checkOnERC721Received", "offset": [37509, 37544], "op": "SWAP3", "path": "0"}, "7761": {"op": "POP"}, "7762": {"op": "POP"}, "7763": {"op": "POP"}, "7764": {"fn": "ERC721._checkOnERC721Received", "offset": [37509, 37544], "op": "JUMP", "path": "0"}, "7765": {"fn": "ERC721._transferFrom", "offset": [35286, 35797], "op": "JUMPDEST", "path": "0"}, "7766": {"fn": "ERC721._transferFrom", "offset": [35442, 35446], "op": "DUP3", "path": "0", "statement": 93}, "7767": {"op": "PUSH1", "value": "0x1"}, "7769": {"op": "PUSH1", "value": "0x1"}, "7771": {"op": "PUSH1", "value": "0xA0"}, "7773": {"op": "SHL"}, "7774": {"op": "SUB"}, "7775": {"fn": "ERC721._transferFrom", "offset": [35422, 35446], "op": "AND", "path": "0"}, "7776": {"fn": "ERC721._transferFrom", "offset": [35422, 35438], "op": "PUSH2", "path": "0", "value": "0x1E68"}, "7779": {"fn": "ERC721._transferFrom", "offset": [35430, 35437], "op": "DUP3", "path": "0"}, "7780": {"fn": "ERC721._transferFrom", "offset": [35422, 35429], "op": "PUSH2", "path": "0", "value": "0xC49"}, "7783": {"fn": "ERC721._transferFrom", "jump": "i", "offset": [35422, 35438], "op": "JUMP", "path": "0"}, "7784": {"fn": "ERC721._transferFrom", "offset": [35422, 35438], "op": "JUMPDEST", "path": "0"}, "7785": {"op": "PUSH1", "value": "0x1"}, "7787": {"op": "PUSH1", "value": "0x1"}, "7789": {"op": "PUSH1", "value": "0xA0"}, "7791": {"op": "SHL"}, "7792": {"op": "SUB"}, "7793": {"fn": "ERC721._transferFrom", "offset": [35422, 35446], "op": "AND", "path": "0"}, "7794": {"branch": 150, "fn": "ERC721._transferFrom", "offset": [35422, 35446], "op": "EQ", "path": "0"}, "7795": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH2", "path": "0", "value": "0x1EAD"}, "7798": {"branch": 150, "fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "JUMPI", "path": "0"}, "7799": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH1", "path": "0", "value": "0x40"}, "7801": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "MLOAD", "path": "0"}, "7802": {"op": "PUSH3", "value": "0x461BCD"}, "7806": {"op": "PUSH1", "value": "0xE5"}, "7808": {"op": "SHL"}, "7809": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP2", "path": "0"}, "7810": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "MSTORE", "path": "0"}, "7811": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH1", "path": "0", "value": "0x4"}, "7813": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "ADD", "path": "0"}, "7814": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP1", "path": "0"}, "7815": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP1", "path": "0"}, "7816": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH1", "path": "0", "value": "0x20"}, "7818": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "ADD", "path": "0"}, "7819": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP3", "path": "0"}, "7820": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP2", "path": "0"}, "7821": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "SUB", "path": "0"}, "7822": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP3", "path": "0"}, "7823": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "MSTORE", "path": "0"}, "7824": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH1", "path": "0", "value": "0x29"}, "7826": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP2", "path": "0"}, "7827": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "MSTORE", "path": "0"}, "7828": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH1", "path": "0", "value": "0x20"}, "7830": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "ADD", "path": "0"}, "7831": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP1", "path": "0"}, "7832": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH2", "path": "0", "value": "0x280E"}, "7835": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH1", "path": "0", "value": "0x29"}, "7837": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "SWAP2", "path": "0"}, "7838": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "CODECOPY", "path": "0"}, "7839": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH1", "path": "0", "value": "0x40"}, "7841": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "ADD", "path": "0"}, "7842": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "SWAP2", "path": "0"}, "7843": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "POP", "path": "0"}, "7844": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "POP", "path": "0"}, "7845": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "PUSH1", "path": "0", "value": "0x40"}, "7847": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "MLOAD", "path": "0"}, "7848": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "DUP1", "path": "0"}, "7849": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "SWAP2", "path": "0"}, "7850": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "SUB", "path": "0"}, "7851": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "SWAP1", "path": "0"}, "7852": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "REVERT", "path": "0"}, "7853": {"fn": "ERC721._transferFrom", "offset": [35401, 35513], "op": "JUMPDEST", "path": "0"}, "7854": {"op": "PUSH1", "value": "0x1"}, "7856": {"op": "PUSH1", "value": "0x1"}, "7858": {"op": "PUSH1", "value": "0xA0"}, "7860": {"op": "SHL"}, "7861": {"op": "SUB"}, "7862": {"fn": "ERC721._transferFrom", "offset": [35531, 35547], "op": "DUP3", "path": "0", "statement": 94}, "7863": {"branch": 151, "fn": "ERC721._transferFrom", "offset": [35531, 35547], "op": "AND", "path": "0"}, "7864": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH2", "path": "0", "value": "0x1EF2"}, "7867": {"branch": 151, "fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "JUMPI", "path": "0"}, "7868": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH1", "path": "0", "value": "0x40"}, "7870": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "MLOAD", "path": "0"}, "7871": {"op": "PUSH3", "value": "0x461BCD"}, "7875": {"op": "PUSH1", "value": "0xE5"}, "7877": {"op": "SHL"}, "7878": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP2", "path": "0"}, "7879": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "MSTORE", "path": "0"}, "7880": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH1", "path": "0", "value": "0x4"}, "7882": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "ADD", "path": "0"}, "7883": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP1", "path": "0"}, "7884": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP1", "path": "0"}, "7885": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH1", "path": "0", "value": "0x20"}, "7887": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "ADD", "path": "0"}, "7888": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP3", "path": "0"}, "7889": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP2", "path": "0"}, "7890": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "SUB", "path": "0"}, "7891": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP3", "path": "0"}, "7892": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "MSTORE", "path": "0"}, "7893": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH1", "path": "0", "value": "0x24"}, "7895": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP2", "path": "0"}, "7896": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "MSTORE", "path": "0"}, "7897": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH1", "path": "0", "value": "0x20"}, "7899": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "ADD", "path": "0"}, "7900": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP1", "path": "0"}, "7901": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH2", "path": "0", "value": "0x26BB"}, "7904": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH1", "path": "0", "value": "0x24"}, "7906": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "SWAP2", "path": "0"}, "7907": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "CODECOPY", "path": "0"}, "7908": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH1", "path": "0", "value": "0x40"}, "7910": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "ADD", "path": "0"}, "7911": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "SWAP2", "path": "0"}, "7912": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "POP", "path": "0"}, "7913": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "POP", "path": "0"}, "7914": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "PUSH1", "path": "0", "value": "0x40"}, "7916": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "MLOAD", "path": "0"}, "7917": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "DUP1", "path": "0"}, "7918": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "SWAP2", "path": "0"}, "7919": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "SUB", "path": "0"}, "7920": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "SWAP1", "path": "0"}, "7921": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "REVERT", "path": "0"}, "7922": {"fn": "ERC721._transferFrom", "offset": [35523, 35588], "op": "JUMPDEST", "path": "0"}, "7923": {"fn": "ERC721._transferFrom", "offset": [35599, 35622], "op": "PUSH2", "path": "0", "statement": 95, "value": "0x1EFB"}, "7926": {"fn": "ERC721._transferFrom", "offset": [35614, 35621], "op": "DUP2", "path": "0"}, "7927": {"fn": "ERC721._transferFrom", "offset": [35599, 35613], "op": "PUSH2", "path": "0", "value": "0x20FC"}, "7930": {"fn": "ERC721._transferFrom", "jump": "i", "offset": [35599, 35622], "op": "JUMP", "path": "0"}, "7931": {"fn": "ERC721._transferFrom", "offset": [35599, 35622], "op": "JUMPDEST", "path": "0"}, "7932": {"op": "PUSH1", "value": "0x1"}, "7934": {"op": "PUSH1", "value": "0x1"}, "7936": {"op": "PUSH1", "value": "0xA0"}, "7938": {"op": "SHL"}, "7939": {"op": "SUB"}, "7940": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "DUP4", "path": "0", "statement": 96}, "7941": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "AND", "path": "0"}, "7942": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "PUSH1", "path": "0", "value": "0x0"}, "7944": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "SWAP1", "path": "0"}, "7945": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "DUP2", "path": "0"}, "7946": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "MSTORE", "path": "0"}, "7947": {"fn": "ERC721._transferFrom", "offset": [35633, 35650], "op": "PUSH1", "path": "0", "value": "0x4"}, "7949": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "PUSH1", "path": "0", "value": "0x20"}, "7951": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "MSTORE", "path": "0"}, "7952": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "PUSH1", "path": "0", "value": "0x40"}, "7954": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "SWAP1", "path": "0"}, "7955": {"fn": "ERC721._transferFrom", "offset": [35633, 35656], "op": "KECCAK256", "path": "0"}, "7956": {"fn": "ERC721._transferFrom", "offset": [35633, 35668], "op": "PUSH2", "path": "0", "value": "0x1F1C"}, "7959": {"fn": "ERC721._transferFrom", "offset": [35633, 35668], "op": "SWAP1", "path": "0"}, "7960": {"fn": "ERC721._transferFrom", "offset": [35633, 35666], "op": "PUSH2", "path": "0", "value": "0x2137"}, "7963": {"fn": "ERC721._transferFrom", "jump": "i", "offset": [35633, 35668], "op": "JUMP", "path": "0"}, "7964": {"fn": "ERC721._transferFrom", "offset": [35633, 35668], "op": "JUMPDEST", "path": "0"}, "7965": {"op": "PUSH1", "value": "0x1"}, "7967": {"op": "PUSH1", "value": "0x1"}, "7969": {"op": "PUSH1", "value": "0xA0"}, "7971": {"op": "SHL"}, "7972": {"op": "SUB"}, "7973": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "DUP3", "path": "0", "statement": 97}, "7974": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "AND", "path": "0"}, "7975": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "PUSH1", "path": "0", "value": "0x0"}, "7977": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "SWAP1", "path": "0"}, "7978": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "DUP2", "path": "0"}, "7979": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "MSTORE", "path": "0"}, "7980": {"fn": "ERC721._transferFrom", "offset": [35678, 35695], "op": "PUSH1", "path": "0", "value": "0x4"}, "7982": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "PUSH1", "path": "0", "value": "0x20"}, "7984": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "MSTORE", "path": "0"}, "7985": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "PUSH1", "path": "0", "value": "0x40"}, "7987": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "SWAP1", "path": "0"}, "7988": {"fn": "ERC721._transferFrom", "offset": [35678, 35699], "op": "KECCAK256", "path": "0"}, "7989": {"fn": "ERC721._transferFrom", "offset": [35678, 35711], "op": "PUSH2", "path": "0", "value": "0x1F3D"}, "7992": {"fn": "ERC721._transferFrom", "offset": [35678, 35711], "op": "SWAP1", "path": "0"}, "7993": {"fn": "ERC721._transferFrom", "offset": [35678, 35709], "op": "PUSH2", "path": "0", "value": "0x20BA"}, "7996": {"fn": "ERC721._transferFrom", "jump": "i", "offset": [35678, 35711], "op": "JUMP", "path": "0"}, "7997": {"fn": "ERC721._transferFrom", "offset": [35678, 35711], "op": "JUMPDEST", "path": "0"}, "7998": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "PUSH1", "path": "0", "statement": 98, "value": "0x0"}, "8000": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "DUP2", "path": "0"}, "8001": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "DUP2", "path": "0"}, "8002": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "MSTORE", "path": "0"}, "8003": {"fn": "ERC721._transferFrom", "offset": [35722, 35733], "op": "PUSH1", "path": "0", "value": "0x2"}, "8005": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "PUSH1", "path": "0", "value": "0x20"}, "8007": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "MSTORE", "path": "0"}, "8008": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "PUSH1", "path": "0", "value": "0x40"}, "8010": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "DUP1", "path": "0"}, "8011": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "DUP3", "path": "0"}, "8012": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "KECCAK256", "path": "0"}, "8013": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "DUP1", "path": "0"}, "8014": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "SLOAD", "path": "0"}, "8015": {"op": "PUSH1", "value": "0x1"}, "8017": {"op": "PUSH1", "value": "0x1"}, "8019": {"op": "PUSH1", "value": "0xA0"}, "8021": {"op": "SHL"}, "8022": {"op": "SUB"}, "8023": {"op": "NOT"}, "8024": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "AND", "path": "0"}, "8025": {"op": "PUSH1", "value": "0x1"}, "8027": {"op": "PUSH1", "value": "0x1"}, "8029": {"op": "PUSH1", "value": "0xA0"}, "8031": {"op": "SHL"}, "8032": {"op": "SUB"}, "8033": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "DUP7", "path": "0"}, "8034": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "DUP2", "path": "0"}, "8035": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "AND", "path": "0"}, "8036": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "SWAP2", "path": "0"}, "8037": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "DUP3", "path": "0"}, "8038": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "OR", "path": "0"}, "8039": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "SWAP1", "path": "0"}, "8040": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "SWAP3", "path": "0"}, "8041": {"fn": "ERC721._transferFrom", "offset": [35722, 35747], "op": "SSTORE", "path": "0"}, "8042": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "SWAP2", "path": "0", "statement": 99}, "8043": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "MLOAD", "path": "0"}, "8044": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "DUP5", "path": "0"}, "8045": {"fn": "ERC721._transferFrom", "offset": [35722, 35742], "op": "SWAP4", "path": "0"}, "8046": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "SWAP2", "path": "0"}, "8047": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "DUP8", "path": "0"}, "8048": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "AND", "path": "0"}, "8049": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "SWAP2", "path": "0"}, "8050": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "PUSH32", "path": "0", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "8083": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "SWAP2", "path": "0"}, "8084": {"fn": "ERC721._transferFrom", "offset": [35763, 35790], "op": "LOG4", "path": "0"}, "8085": {"fn": "ERC721._transferFrom", "offset": [35286, 35797], "op": "POP", "path": "0"}, "8086": {"fn": "ERC721._transferFrom", "offset": [35286, 35797], "op": "POP", "path": "0"}, "8087": {"fn": "ERC721._transferFrom", "offset": [35286, 35797], "op": "POP", "path": "0"}, "8088": {"fn": "ERC721._transferFrom", "jump": "o", "offset": [35286, 35797], "op": "JUMP", "path": "0"}, "8089": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44194, 45334], "op": "JUMPDEST", "path": "0"}, "8090": {"op": "PUSH1", "value": "0x1"}, "8092": {"op": "PUSH1", "value": "0x1"}, "8094": {"op": "PUSH1", "value": "0xA0"}, "8096": {"op": "SHL"}, "8097": {"op": "SUB"}, "8098": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "DUP3", "path": "0"}, "8099": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "AND", "path": "0"}, "8100": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44468, 44490], "op": "PUSH1", "path": "0", "value": "0x0"}, "8102": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "SWAP1", "path": "0"}, "8103": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "DUP2", "path": "0"}, "8104": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "MSTORE", "path": "0"}, "8105": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44505], "op": "PUSH1", "path": "0", "value": "0x6"}, "8107": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "PUSH1", "path": "0", "value": "0x20"}, "8109": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "MSTORE", "path": "0"}, "8110": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "PUSH1", "path": "0", "value": "0x40"}, "8112": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "DUP2", "path": "0"}, "8113": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44511], "op": "KECCAK256", "path": "0"}, "8114": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44518], "op": "SLOAD", "path": "0"}, "8115": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44525], "op": "PUSH2", "path": "0", "value": "0x1FC3"}, "8118": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44525], "op": "SWAP1", "path": "0"}, "8119": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44523, 44524], "op": "PUSH1", "path": "0", "value": "0x1"}, "8121": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44525], "op": "PUSH4", "path": "0", "value": "0xFFFFFFFF"}, "8126": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44522], "op": "PUSH2", "path": "0", "value": "0x214E"}, "8129": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44525], "op": "AND", "path": "0"}, "8130": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "jump": "i", "offset": [44493, 44525], "op": "JUMP", "path": "0"}, "8131": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44493, 44525], "op": "JUMPDEST", "path": "0"}, "8132": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44535, 44553], "op": "PUSH1", "path": "0", "value": "0x0"}, "8134": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "DUP4", "path": "0"}, "8135": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "DUP2", "path": "0"}, "8136": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "MSTORE", "path": "0"}, "8137": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44573], "op": "PUSH1", "path": "0", "value": "0x7"}, "8139": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "PUSH1", "path": "0", "value": "0x20"}, "8141": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "MSTORE", "path": "0"}, "8142": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "PUSH1", "path": "0", "value": "0x40"}, "8144": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "SWAP1", "path": "0"}, "8145": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "KECCAK256", "path": "0"}, "8146": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44556, 44582], "op": "SLOAD", "path": "0"}, "8147": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44468, 44525], "op": "SWAP1", "path": "0"}, "8148": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44468, 44525], "op": "SWAP2", "path": "0"}, "8149": {"op": "POP"}, "8150": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44686, 44714], "op": "DUP1", "path": "0"}, "8151": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44686, 44714], "op": "DUP3", "path": "0"}, "8152": {"branch": 152, "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44686, 44714], "op": "EQ", "path": "0"}, "8153": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44682, 45005], "op": "PUSH2", "path": "0", "value": "0x205E"}, "8156": {"branch": 152, "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44682, 45005], "op": "JUMPI", "path": "0"}, "8157": {"op": "PUSH1", "value": "0x1"}, "8159": {"op": "PUSH1", "value": "0x1"}, "8161": {"op": "PUSH1", "value": "0xA0"}, "8163": {"op": "SHL"}, "8164": {"op": "SUB"}, "8165": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "DUP5", "path": "0"}, "8166": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "AND", "path": "0"}, "8167": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44730, 44749], "op": "PUSH1", "path": "0", "value": "0x0"}, "8169": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "SWAP1", "path": "0"}, "8170": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "DUP2", "path": "0"}, "8171": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "MSTORE", "path": "0"}, "8172": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44764], "op": "PUSH1", "path": "0", "value": "0x6"}, "8174": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "PUSH1", "path": "0", "value": "0x20"}, "8176": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "MSTORE", "path": "0"}, "8177": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "PUSH1", "path": "0", "value": "0x40"}, "8179": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "DUP2", "path": "0"}, "8180": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44770], "op": "KECCAK256", "path": "0"}, "8181": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "DUP1", "path": "0"}, "8182": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "SLOAD", "path": "0"}, "8183": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44771, 44785], "op": "DUP5", "path": "0"}, "8184": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44771, 44785], "op": "SWAP1", "path": "0"}, "8185": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "DUP2", "path": "0"}, "8186": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "LT", "path": "0"}, "8187": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "PUSH2", "path": "0", "value": "0x2000"}, "8190": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "JUMPI", "path": "0"}, "8191": {"dev": "Index out of range", "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "INVALID", "path": "0"}, "8192": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "JUMPDEST", "path": "0"}, "8193": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "SWAP1", "path": "0"}, "8194": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "PUSH1", "path": "0", "value": "0x0"}, "8196": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "MSTORE", "path": "0"}, "8197": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "PUSH1", "path": "0", "value": "0x20"}, "8199": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "PUSH1", "path": "0", "value": "0x0"}, "8201": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "KECCAK256", "path": "0"}, "8202": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "ADD", "path": "0"}, "8203": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44752, 44786], "op": "SLOAD", "path": "0"}, "8204": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44730, 44786], "op": "SWAP1", "path": "0"}, "8205": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44730, 44786], "op": "POP", "path": "0"}, "8206": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44834, 44845], "op": "DUP1", "path": "0", "statement": 100}, "8207": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44813], "op": "PUSH1", "path": "0", "value": "0x6"}, "8209": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "PUSH1", "path": "0", "value": "0x0"}, "8211": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44814, 44818], "op": "DUP8", "path": "0"}, "8212": {"op": "PUSH1", "value": "0x1"}, "8214": {"op": "PUSH1", "value": "0x1"}, "8216": {"op": "PUSH1", "value": "0xA0"}, "8218": {"op": "SHL"}, "8219": {"op": "SUB"}, "8220": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "AND", "path": "0"}, "8221": {"op": "PUSH1", "value": "0x1"}, "8223": {"op": "PUSH1", "value": "0x1"}, "8225": {"op": "PUSH1", "value": "0xA0"}, "8227": {"op": "SHL"}, "8228": {"op": "SUB"}, "8229": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "AND", "path": "0"}, "8230": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "DUP2", "path": "0"}, "8231": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "MSTORE", "path": "0"}, "8232": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "PUSH1", "path": "0", "value": "0x20"}, "8234": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "ADD", "path": "0"}, "8235": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "SWAP1", "path": "0"}, "8236": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "DUP2", "path": "0"}, "8237": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "MSTORE", "path": "0"}, "8238": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "PUSH1", "path": "0", "value": "0x20"}, "8240": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "ADD", "path": "0"}, "8241": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "PUSH1", "path": "0", "value": "0x0"}, "8243": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44819], "op": "KECCAK256", "path": "0"}, "8244": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44820, 44830], "op": "DUP4", "path": "0"}, "8245": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "DUP2", "path": "0"}, "8246": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "SLOAD", "path": "0"}, "8247": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "DUP2", "path": "0"}, "8248": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "LT", "path": "0"}, "8249": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "PUSH2", "path": "0", "value": "0x203E"}, "8252": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "JUMPI", "path": "0"}, "8253": {"dev": "Index out of range", "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "INVALID", "path": "0"}, "8254": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "JUMPDEST", "path": "0"}, "8255": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "PUSH1", "path": "0", "value": "0x0"}, "8257": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "SWAP2", "path": "0"}, "8258": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "DUP3", "path": "0"}, "8259": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "MSTORE", "path": "0"}, "8260": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "PUSH1", "path": "0", "value": "0x20"}, "8262": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "DUP1", "path": "0"}, "8263": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "DUP4", "path": "0"}, "8264": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "KECCAK256", "path": "0"}, "8265": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "SWAP1", "path": "0"}, "8266": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "SWAP2", "path": "0"}, "8267": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44831], "op": "ADD", "path": "0"}, "8268": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44845], "op": "SWAP3", "path": "0"}, "8269": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44845], "op": "SWAP1", "path": "0"}, "8270": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44845], "op": "SWAP3", "path": "0"}, "8271": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44801, 44845], "op": "SSTORE", "path": "0"}, "8272": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44947], "op": "SWAP2", "path": "0", "statement": 101}, "8273": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44947], "op": "DUP3", "path": "0"}, "8274": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44947], "op": "MSTORE", "path": "0"}, "8275": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44934], "op": "PUSH1", "path": "0", "value": "0x7"}, "8277": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44947], "op": "SWAP1", "path": "0"}, "8278": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44947], "op": "MSTORE", "path": "0"}, "8279": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44947], "op": "PUSH1", "path": "0", "value": "0x40"}, "8281": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44947], "op": "SWAP1", "path": "0"}, "8282": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44947], "op": "KECCAK256", "path": "0"}, "8283": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44960], "op": "DUP2", "path": "0"}, "8284": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44960], "op": "SWAP1", "path": "0"}, "8285": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44917, 44960], "op": "SSTORE", "path": "0"}, "8286": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44682, 45005], "op": "JUMPDEST", "path": "0"}, "8287": {"op": "PUSH1", "value": "0x1"}, "8289": {"op": "PUSH1", "value": "0x1"}, "8291": {"op": "PUSH1", "value": "0xA0"}, "8293": {"op": "SHL"}, "8294": {"op": "SUB"}, "8295": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "DUP5", "path": "0", "statement": 102}, "8296": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "AND", "path": "0"}, "8297": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "PUSH1", "path": "0", "value": "0x0"}, "8299": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "SWAP1", "path": "0"}, "8300": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "DUP2", "path": "0"}, "8301": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "MSTORE", "path": "0"}, "8302": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45103], "op": "PUSH1", "path": "0", "value": "0x6"}, "8304": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "PUSH1", "path": "0", "value": "0x20"}, "8306": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "MSTORE", "path": "0"}, "8307": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "PUSH1", "path": "0", "value": "0x40"}, "8309": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "SWAP1", "path": "0"}, "8310": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45109], "op": "KECCAK256", "path": "0"}, "8311": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "DUP1", "path": "0"}, "8312": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "SLOAD", "path": "0"}, "8313": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "SWAP1", "path": "0"}, "8314": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "PUSH2", "path": "0", "value": "0x2087"}, "8317": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "SWAP1", "path": "0"}, "8318": {"op": "PUSH1", "value": "0x0"}, "8320": {"op": "NOT"}, "8321": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "DUP4", "path": "0"}, "8322": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "ADD", "path": "0"}, "8323": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "PUSH2", "path": "0", "value": "0x23ED"}, "8326": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "jump": "i", "offset": [45091, 45118], "op": "JUMP", "path": "0"}, "8327": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "JUMPDEST", "path": "0"}, "8328": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [45091, 45118], "op": "POP", "path": "0"}, "8329": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44194, 45334], "op": "POP", "path": "0"}, "8330": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44194, 45334], "op": "POP", "path": "0"}, "8331": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44194, 45334], "op": "POP", "path": "0"}, "8332": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "offset": [44194, 45334], "op": "POP", "path": "0"}, "8333": {"fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "jump": "o", "offset": [44194, 45334], "op": "JUMP", "path": "0"}, "8334": {"fn": "ERC721Enumerable._burn", "offset": [42022, 42387], "op": "JUMPDEST", "path": "0"}, "8335": {"fn": "ERC721Enumerable._burn", "offset": [42088, 42115], "op": "PUSH2", "path": "0", "statement": 103, "value": "0x2098"}, "8338": {"fn": "ERC721Enumerable._burn", "offset": [42100, 42105], "op": "DUP3", "path": "0"}, "8339": {"fn": "ERC721Enumerable._burn", "offset": [42107, 42114], "op": "DUP3", "path": "0"}, "8340": {"fn": "ERC721Enumerable._burn", "offset": [42088, 42099], "op": "PUSH2", "path": "0", "value": "0x21AB"}, "8343": {"fn": "ERC721Enumerable._burn", "jump": "i", "offset": [42088, 42115], "op": "JUMP", "path": "0"}, "8344": {"fn": "ERC721Enumerable._burn", "offset": [42088, 42115], "op": "JUMPDEST", "path": "0"}, "8345": {"fn": "ERC721Enumerable._burn", "offset": [42126, 42174], "op": "PUSH2", "path": "0", "statement": 104, "value": "0x20A2"}, "8348": {"fn": "ERC721Enumerable._burn", "offset": [42159, 42164], "op": "DUP3", "path": "0"}, "8349": {"fn": "ERC721Enumerable._burn", "offset": [42166, 42173], "op": "DUP3", "path": "0"}, "8350": {"fn": "ERC721Enumerable._burn", "offset": [42126, 42158], "op": "PUSH2", "path": "0", "value": "0x1F99"}, "8353": {"fn": "ERC721Enumerable._burn", "jump": "i", "offset": [42126, 42174], "op": "JUMP", "path": "0"}, "8354": {"fn": "ERC721Enumerable._burn", "offset": [42126, 42174], "op": "JUMPDEST", "path": "0"}, "8355": {"fn": "ERC721Enumerable._burn", "offset": [42323, 42324], "op": "PUSH1", "path": "0", "statement": 105, "value": "0x0"}, "8357": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42320], "op": "DUP2", "path": "0"}, "8358": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42320], "op": "DUP2", "path": "0"}, "8359": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42320], "op": "MSTORE", "path": "0"}, "8360": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42311], "op": "PUSH1", "path": "0", "value": "0x7"}, "8362": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42320], "op": "PUSH1", "path": "0", "value": "0x20"}, "8364": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42320], "op": "MSTORE", "path": "0"}, "8365": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42320], "op": "PUSH1", "path": "0", "value": "0x40"}, "8367": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42320], "op": "DUP2", "path": "0"}, "8368": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42320], "op": "KECCAK256", "path": "0"}, "8369": {"fn": "ERC721Enumerable._burn", "offset": [42294, 42324], "op": "SSTORE", "path": "0"}, "8370": {"fn": "ERC721Enumerable._burn", "offset": [42335, 42380], "op": "PUSH2", "path": "0", "statement": 106, "value": "0x1844"}, "8373": {"fn": "ERC721Enumerable._burn", "offset": [42312, 42319], "op": "DUP2", "path": "0"}, "8374": {"fn": "ERC721Enumerable._burn", "offset": [42335, 42371], "op": "PUSH2", "path": "0", "value": "0x2282"}, "8377": {"fn": "ERC721Enumerable._burn", "jump": "i", "offset": [42335, 42380], "op": "JUMP", "path": "0"}, "8378": {"fn": "Counters.increment", "offset": [11236, 11414], "op": "JUMPDEST", "path": "0"}, "8379": {"fn": "Counters.increment", "offset": [11388, 11407], "op": "DUP1", "path": "0", "statement": 107}, "8380": {"fn": "Counters.increment", "offset": [11388, 11407], "op": "SLOAD", "path": "0"}, "8381": {"fn": "Counters.increment", "offset": [11406, 11407], "op": "PUSH1", "path": "0", "value": "0x1"}, "8383": {"fn": "Counters.increment", "offset": [11388, 11407], "op": "ADD", "path": "0"}, "8384": {"fn": "Counters.increment", "offset": [11388, 11407], "op": "SWAP1", "path": "0"}, "8385": {"fn": "Counters.increment", "offset": [11388, 11407], "op": "SSTORE", "path": "0"}, "8386": {"fn": "Counters.increment", "jump": "o", "offset": [11236, 11414], "op": "JUMP", "path": "0"}, "8387": {"fn": "Address.isContract", "offset": [12254, 12886], "op": "JUMPDEST", "path": "0"}, "8388": {"fn": "Address.isContract", "offset": [12314, 12318], "op": "PUSH1", "path": "0", "value": "0x0"}, "8390": {"fn": "Address.isContract", "offset": [12788, 12808], "op": "DUP2", "path": "0"}, "8391": {"fn": "Address.isContract", "offset": [12788, 12808], "op": "EXTCODEHASH", "path": "0"}, "8392": {"fn": "Address.isContract", "offset": [12620, 12686], "op": "PUSH32", "path": "0", "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"}, "8425": {"fn": "Address.isContract", "offset": [12836, 12859], "op": "DUP2", "path": "0", "statement": 108}, "8426": {"fn": "Address.isContract", "offset": [12836, 12859], "op": "DUP2", "path": "0"}, "8427": {"fn": "Address.isContract", "offset": [12836, 12859], "op": "EQ", "path": "0"}, "8428": {"fn": "Address.isContract", "offset": [12836, 12859], "op": "DUP1", "path": "0"}, "8429": {"fn": "Address.isContract", "offset": [12836, 12859], "op": "ISZERO", "path": "0"}, "8430": {"fn": "Address.isContract", "offset": [12836, 12859], "op": "SWAP1", "path": "0"}, "8431": {"fn": "Address.isContract", "offset": [12836, 12878], "op": "PUSH2", "path": "0", "value": "0x1723"}, "8434": {"fn": "Address.isContract", "offset": [12836, 12878], "op": "JUMPI", "path": "0"}, "8435": {"op": "POP"}, "8436": {"op": "POP"}, "8437": {"fn": "Address.isContract", "offset": [12863, 12878], "op": "ISZERO", "path": "0"}, "8438": {"fn": "Address.isContract", "offset": [12863, 12878], "op": "ISZERO", "path": "0"}, "8439": {"fn": "Address.isContract", "offset": [12863, 12878], "op": "SWAP3", "path": "0"}, "8440": {"fn": "Address.isContract", "offset": [12828, 12879], "op": "SWAP2", "path": "0"}, "8441": {"op": "POP"}, "8442": {"op": "POP"}, "8443": {"fn": "Address.isContract", "jump": "o", "offset": [12254, 12886], "op": "JUMP", "path": "0"}, "8444": {"fn": "ERC721._clearApproval", "offset": [37723, 37894], "op": "JUMPDEST", "path": "0"}, "8445": {"fn": "ERC721._clearApproval", "offset": [37822, 37823], "op": "PUSH1", "path": "0", "value": "0x0"}, "8447": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "DUP2", "path": "0"}, "8448": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "DUP2", "path": "0"}, "8449": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "MSTORE", "path": "0"}, "8450": {"fn": "ERC721._clearApproval", "offset": [37786, 37801], "op": "PUSH1", "path": "0", "value": "0x3"}, "8452": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "PUSH1", "path": "0", "value": "0x20"}, "8454": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "MSTORE", "path": "0"}, "8455": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "PUSH1", "path": "0", "value": "0x40"}, "8457": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "SWAP1", "path": "0"}, "8458": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "KECCAK256", "path": "0"}, "8459": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "SLOAD", "path": "0"}, "8460": {"op": "PUSH1", "value": "0x1"}, "8462": {"op": "PUSH1", "value": "0x1"}, "8464": {"op": "PUSH1", "value": "0xA0"}, "8466": {"op": "SHL"}, "8467": {"op": "SUB"}, "8468": {"fn": "ERC721._clearApproval", "offset": [37786, 37810], "op": "AND", "path": "0"}, "8469": {"branch": 153, "fn": "ERC721._clearApproval", "offset": [37786, 37824], "op": "ISZERO", "path": "0"}, "8470": {"fn": "ERC721._clearApproval", "offset": [37782, 37888], "op": "PUSH2", "path": "0", "value": "0xC3D"}, "8473": {"branch": 153, "fn": "ERC721._clearApproval", "offset": [37782, 37888], "op": "JUMPI", "path": "0"}, "8474": {"fn": "ERC721._clearApproval", "offset": [37875, 37876], "op": "PUSH1", "path": "0", "statement": 109, "value": "0x0"}, "8476": {"fn": "ERC721._clearApproval", "offset": [37840, 37864], "op": "SWAP1", "path": "0"}, "8477": {"fn": "ERC721._clearApproval", "offset": [37840, 37864], "op": "DUP2", "path": "0"}, "8478": {"fn": "ERC721._clearApproval", "offset": [37840, 37864], "op": "MSTORE", "path": "0"}, "8479": {"fn": "ERC721._clearApproval", "offset": [37840, 37855], "op": "PUSH1", "path": "0", "value": "0x3"}, "8481": {"fn": "ERC721._clearApproval", "offset": [37840, 37864], "op": "PUSH1", "path": "0", "value": "0x20"}, "8483": {"fn": "ERC721._clearApproval", "offset": [37840, 37864], "op": "MSTORE", "path": "0"}, "8484": {"fn": "ERC721._clearApproval", "offset": [37840, 37864], "op": "PUSH1", "path": "0", "value": "0x40"}, "8486": {"fn": "ERC721._clearApproval", "offset": [37840, 37864], "op": "SWAP1", "path": "0"}, "8487": {"fn": "ERC721._clearApproval", "offset": [37840, 37864], "op": "KECCAK256", "path": "0"}, "8488": {"fn": "ERC721._clearApproval", "offset": [37840, 37877], "op": "DUP1", "path": "0"}, "8489": {"fn": "ERC721._clearApproval", "offset": [37840, 37877], "op": "SLOAD", "path": "0"}, "8490": {"op": "PUSH1", "value": "0x1"}, "8492": {"op": "PUSH1", "value": "0x1"}, "8494": {"op": "PUSH1", "value": "0xA0"}, "8496": {"op": "SHL"}, "8497": {"op": "SUB"}, "8498": {"op": "NOT"}, "8499": {"fn": "ERC721._clearApproval", "offset": [37840, 37877], "op": "AND", "path": "0"}, "8500": {"fn": "ERC721._clearApproval", "offset": [37840, 37877], "op": "SWAP1", "path": "0"}, "8501": {"fn": "ERC721._clearApproval", "offset": [37840, 37877], "op": "SSTORE", "path": "0"}, "8502": {"fn": "ERC721._clearApproval", "jump": "o", "offset": [37723, 37894], "op": "JUMP", "path": "0"}, "8503": {"fn": "Counters.decrement", "offset": [11420, 11528], "op": "JUMPDEST", "path": "0"}, "8504": {"fn": "Counters.decrement", "offset": [11500, 11514], "op": "DUP1", "path": "0", "statement": 110}, "8505": {"fn": "Counters.decrement", "offset": [11500, 11514], "op": "SLOAD", "path": "0"}, "8506": {"fn": "Counters.decrement", "offset": [11500, 11521], "op": "PUSH2", "path": "0", "value": "0x214A"}, "8509": {"fn": "Counters.decrement", "offset": [11500, 11521], "op": "SWAP1", "path": "0"}, "8510": {"fn": "Counters.decrement", "offset": [11519, 11520], "op": "PUSH1", "path": "0", "value": "0x1"}, "8512": {"fn": "Counters.decrement", "offset": [11500, 11521], "op": "PUSH4", "path": "0", "value": "0xFFFFFFFF"}, "8517": {"fn": "Counters.decrement", "offset": [11500, 11518], "op": "PUSH2", "path": "0", "value": "0x214E"}, "8520": {"fn": "Counters.decrement", "offset": [11500, 11521], "op": "AND", "path": "0"}, "8521": {"fn": "Counters.decrement", "jump": "i", "offset": [11500, 11521], "op": "JUMP", "path": "0"}, "8522": {"fn": "Counters.decrement", "offset": [11500, 11521], "op": "JUMPDEST", "path": "0"}, "8523": {"fn": "Counters.decrement", "offset": [11483, 11521], "op": "SWAP1", "path": "0"}, "8524": {"fn": "Counters.decrement", "offset": [11483, 11521], "op": "SSTORE", "path": "0"}, "8525": {"fn": "Counters.decrement", "jump": "o", "offset": [11420, 11528], "op": "JUMP", "path": "0"}, "8526": {"fn": "SafeMath.sub", "offset": [7988, 8144], "op": "JUMPDEST", "path": "0"}, "8527": {"fn": "SafeMath.sub", "offset": [8046, 8053], "op": "PUSH1", "path": "0", "value": "0x0"}, "8529": {"fn": "SafeMath.sub", "offset": [8078, 8079], "op": "DUP3", "path": "0", "statement": 111}, "8530": {"fn": "SafeMath.sub", "offset": [8073, 8074], "op": "DUP3", "path": "0"}, "8531": {"fn": "SafeMath.sub", "offset": [8073, 8079], "op": "GT", "path": "0"}, "8532": {"branch": 154, "fn": "SafeMath.sub", "offset": [8073, 8079], "op": "ISZERO", "path": "0"}, "8533": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH2", "path": "0", "value": "0x21A5"}, "8536": {"branch": 154, "fn": "SafeMath.sub", "offset": [8065, 8114], "op": "JUMPI", "path": "0"}, "8537": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH1", "path": "0", "value": "0x40"}, "8539": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "DUP1", "path": "0"}, "8540": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "MLOAD", "path": "0"}, "8541": {"op": "PUSH3", "value": "0x461BCD"}, "8545": {"op": "PUSH1", "value": "0xE5"}, "8547": {"op": "SHL"}, "8548": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "DUP2", "path": "0"}, "8549": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "MSTORE", "path": "0"}, "8550": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH1", "path": "0", "value": "0x20"}, "8552": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH1", "path": "0", "value": "0x4"}, "8554": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "DUP3", "path": "0"}, "8555": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "ADD", "path": "0"}, "8556": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "MSTORE", "path": "0"}, "8557": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH1", "path": "0", "value": "0x1E"}, "8559": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH1", "path": "0", "value": "0x24"}, "8561": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "DUP3", "path": "0"}, "8562": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "ADD", "path": "0"}, "8563": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "MSTORE", "path": "0"}, "8564": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH32", "path": "0", "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"}, "8597": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH1", "path": "0", "value": "0x44"}, "8599": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "DUP3", "path": "0"}, "8600": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "ADD", "path": "0"}, "8601": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "MSTORE", "path": "0"}, "8602": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "SWAP1", "path": "0"}, "8603": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "MLOAD", "path": "0"}, "8604": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "SWAP1", "path": "0"}, "8605": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "DUP2", "path": "0"}, "8606": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "SWAP1", "path": "0"}, "8607": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "SUB", "path": "0"}, "8608": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "PUSH1", "path": "0", "value": "0x64"}, "8610": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "ADD", "path": "0"}, "8611": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "SWAP1", "path": "0"}, "8612": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "REVERT", "path": "0"}, "8613": {"fn": "SafeMath.sub", "offset": [8065, 8114], "op": "JUMPDEST", "path": "0"}, "8614": {"op": "POP"}, "8615": {"fn": "SafeMath.sub", "offset": [8132, 8137], "op": "SWAP1", "path": "0", "statement": 112}, "8616": {"fn": "SafeMath.sub", "offset": [8132, 8137], "op": "SUB", "path": "0"}, "8617": {"fn": "SafeMath.sub", "offset": [8132, 8137], "op": "SWAP1", "path": "0"}, "8618": {"fn": "SafeMath.sub", "jump": "o", "offset": [7988, 8144], "op": "JUMP", "path": "0"}, "8619": {"fn": "ERC721._burn", "offset": [34280, 34638], "op": "JUMPDEST", "path": "0"}, "8620": {"fn": "ERC721._burn", "offset": [34387, 34392], "op": "DUP2", "path": "0", "statement": 113}, "8621": {"op": "PUSH1", "value": "0x1"}, "8623": {"op": "PUSH1", "value": "0x1"}, "8625": {"op": "PUSH1", "value": "0xA0"}, "8627": {"op": "SHL"}, "8628": {"op": "SUB"}, "8629": {"fn": "ERC721._burn", "offset": [34367, 34392], "op": "AND", "path": "0"}, "8630": {"fn": "ERC721._burn", "offset": [34367, 34383], "op": "PUSH2", "path": "0", "value": "0x21BE"}, "8633": {"fn": "ERC721._burn", "offset": [34375, 34382], "op": "DUP3", "path": "0"}, "8634": {"fn": "ERC721._burn", "offset": [34367, 34374], "op": "PUSH2", "path": "0", "value": "0xC49"}, "8637": {"fn": "ERC721._burn", "jump": "i", "offset": [34367, 34383], "op": "JUMP", "path": "0"}, "8638": {"fn": "ERC721._burn", "offset": [34367, 34383], "op": "JUMPDEST", "path": "0"}, "8639": {"op": "PUSH1", "value": "0x1"}, "8641": {"op": "PUSH1", "value": "0x1"}, "8643": {"op": "PUSH1", "value": "0xA0"}, "8645": {"op": "SHL"}, "8646": {"op": "SUB"}, "8647": {"fn": "ERC721._burn", "offset": [34367, 34392], "op": "AND", "path": "0"}, "8648": {"branch": 155, "fn": "ERC721._burn", "offset": [34367, 34392], "op": "EQ", "path": "0"}, "8649": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH2", "path": "0", "value": "0x2203"}, "8652": {"branch": 155, "fn": "ERC721._burn", "offset": [34346, 34455], "op": "JUMPI", "path": "0"}, "8653": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH1", "path": "0", "value": "0x40"}, "8655": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "MLOAD", "path": "0"}, "8656": {"op": "PUSH3", "value": "0x461BCD"}, "8660": {"op": "PUSH1", "value": "0xE5"}, "8662": {"op": "SHL"}, "8663": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP2", "path": "0"}, "8664": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "MSTORE", "path": "0"}, "8665": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH1", "path": "0", "value": "0x4"}, "8667": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "ADD", "path": "0"}, "8668": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP1", "path": "0"}, "8669": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP1", "path": "0"}, "8670": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH1", "path": "0", "value": "0x20"}, "8672": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "ADD", "path": "0"}, "8673": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP3", "path": "0"}, "8674": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP2", "path": "0"}, "8675": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "SUB", "path": "0"}, "8676": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP3", "path": "0"}, "8677": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "MSTORE", "path": "0"}, "8678": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH1", "path": "0", "value": "0x25"}, "8680": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP2", "path": "0"}, "8681": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "MSTORE", "path": "0"}, "8682": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH1", "path": "0", "value": "0x20"}, "8684": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "ADD", "path": "0"}, "8685": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP1", "path": "0"}, "8686": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH2", "path": "0", "value": "0x28E4"}, "8689": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH1", "path": "0", "value": "0x25"}, "8691": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "SWAP2", "path": "0"}, "8692": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "CODECOPY", "path": "0"}, "8693": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH1", "path": "0", "value": "0x40"}, "8695": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "ADD", "path": "0"}, "8696": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "SWAP2", "path": "0"}, "8697": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "POP", "path": "0"}, "8698": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "POP", "path": "0"}, "8699": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "PUSH1", "path": "0", "value": "0x40"}, "8701": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "MLOAD", "path": "0"}, "8702": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "DUP1", "path": "0"}, "8703": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "SWAP2", "path": "0"}, "8704": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "SUB", "path": "0"}, "8705": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "SWAP1", "path": "0"}, "8706": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "REVERT", "path": "0"}, "8707": {"fn": "ERC721._burn", "offset": [34346, 34455], "op": "JUMPDEST", "path": "0"}, "8708": {"fn": "ERC721._burn", "offset": [34466, 34489], "op": "PUSH2", "path": "0", "statement": 114, "value": "0x220C"}, "8711": {"fn": "ERC721._burn", "offset": [34481, 34488], "op": "DUP2", "path": "0"}, "8712": {"fn": "ERC721._burn", "offset": [34466, 34480], "op": "PUSH2", "path": "0", "value": "0x20FC"}, "8715": {"fn": "ERC721._burn", "jump": "i", "offset": [34466, 34489], "op": "JUMP", "path": "0"}, "8716": {"fn": "ERC721._burn", "offset": [34466, 34489], "op": "JUMPDEST", "path": "0"}, "8717": {"op": "PUSH1", "value": "0x1"}, "8719": {"op": "PUSH1", "value": "0x1"}, "8721": {"op": "PUSH1", "value": "0xA0"}, "8723": {"op": "SHL"}, "8724": {"op": "SUB"}, "8725": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "DUP3", "path": "0", "statement": 115}, "8726": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "AND", "path": "0"}, "8727": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "PUSH1", "path": "0", "value": "0x0"}, "8729": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "SWAP1", "path": "0"}, "8730": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "DUP2", "path": "0"}, "8731": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "MSTORE", "path": "0"}, "8732": {"fn": "ERC721._burn", "offset": [34500, 34517], "op": "PUSH1", "path": "0", "value": "0x4"}, "8734": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "PUSH1", "path": "0", "value": "0x20"}, "8736": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "MSTORE", "path": "0"}, "8737": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "PUSH1", "path": "0", "value": "0x40"}, "8739": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "SWAP1", "path": "0"}, "8740": {"fn": "ERC721._burn", "offset": [34500, 34524], "op": "KECCAK256", "path": "0"}, "8741": {"fn": "ERC721._burn", "offset": [34500, 34536], "op": "PUSH2", "path": "0", "value": "0x222D"}, "8744": {"fn": "ERC721._burn", "offset": [34500, 34536], "op": "SWAP1", "path": "0"}, "8745": {"fn": "ERC721._burn", "offset": [34500, 34534], "op": "PUSH2", "path": "0", "value": "0x2137"}, "8748": {"fn": "ERC721._burn", "jump": "i", "offset": [34500, 34536], "op": "JUMP", "path": "0"}, "8749": {"fn": "ERC721._burn", "offset": [34500, 34536], "op": "JUMPDEST", "path": "0"}, "8750": {"fn": "ERC721._burn", "offset": [34577, 34578], "op": "PUSH1", "path": "0", "statement": 116, "value": "0x0"}, "8752": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "DUP2", "path": "0"}, "8753": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "DUP2", "path": "0"}, "8754": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "MSTORE", "path": "0"}, "8755": {"fn": "ERC721._burn", "offset": [34546, 34557], "op": "PUSH1", "path": "0", "value": "0x2"}, "8757": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "PUSH1", "path": "0", "value": "0x20"}, "8759": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "MSTORE", "path": "0"}, "8760": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "PUSH1", "path": "0", "value": "0x40"}, "8762": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "DUP1", "path": "0"}, "8763": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "DUP3", "path": "0"}, "8764": {"fn": "ERC721._burn", "offset": [34546, 34566], "op": "KECCAK256", "path": "0"}, "8765": {"fn": "ERC721._burn", "offset": [34546, 34579], "op": "DUP1", "path": "0"}, "8766": {"fn": "ERC721._burn", "offset": [34546, 34579], "op": "SLOAD", "path": "0"}, "8767": {"op": "PUSH1", "value": "0x1"}, "8769": {"op": "PUSH1", "value": "0x1"}, "8771": {"op": "PUSH1", "value": "0xA0"}, "8773": {"op": "SHL"}, "8774": {"op": "SUB"}, "8775": {"op": "NOT"}, "8776": {"fn": "ERC721._burn", "offset": [34546, 34579], "op": "AND", "path": "0"}, "8777": {"fn": "ERC721._burn", "offset": [34546, 34579], "op": "SWAP1", "path": "0"}, "8778": {"fn": "ERC721._burn", "offset": [34546, 34579], "op": "SSTORE", "path": "0"}, "8779": {"fn": "ERC721._burn", "offset": [34595, 34631], "op": "MLOAD", "path": "0", "statement": 117}, "8780": {"fn": "ERC721._burn", "offset": [34558, 34565], "op": "DUP3", "path": "0"}, "8781": {"fn": "ERC721._burn", "offset": [34558, 34565], "op": "SWAP2", "path": "0"}, "8782": {"fn": "ERC721._burn", "offset": [34577, 34578], "op": "SWAP1", "path": "0"}, "8783": {"op": "PUSH1", "value": "0x1"}, "8785": {"op": "PUSH1", "value": "0x1"}, "8787": {"op": "PUSH1", "value": "0xA0"}, "8789": {"op": "SHL"}, "8790": {"op": "SUB"}, "8791": {"fn": "ERC721._burn", "offset": [34595, 34631], "op": "DUP6", "path": "0"}, "8792": {"fn": "ERC721._burn", "offset": [34595, 34631], "op": "AND", "path": "0"}, "8793": {"fn": "ERC721._burn", "offset": [34595, 34631], "op": "SWAP1", "path": "0"}, "8794": {"fn": "ERC721._burn", "offset": [34595, 34631], "op": "PUSH32", "path": "0", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"}, "8827": {"fn": "ERC721._burn", "offset": [34595, 34631], "op": "SWAP1", "path": "0"}, "8828": {"fn": "ERC721._burn", "offset": [34577, 34578], "op": "DUP4", "path": "0"}, "8829": {"fn": "ERC721._burn", "offset": [34577, 34578], "op": "SWAP1", "path": "0"}, "8830": {"fn": "ERC721._burn", "offset": [34595, 34631], "op": "LOG4", "path": "0"}, "8831": {"fn": "ERC721._burn", "offset": [34280, 34638], "op": "POP", "path": "0"}, "8832": {"fn": "ERC721._burn", "offset": [34280, 34638], "op": "POP", "path": "0"}, "8833": {"fn": "ERC721._burn", "jump": "o", "offset": [34280, 34638], "op": "JUMP", "path": "0"}, "8834": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45622, 46686], "op": "JUMPDEST", "path": "0"}, "8835": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45896, 45906], "op": "PUSH1", "path": "0", "value": "0x8"}, "8837": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45896, 45913], "op": "SLOAD", "path": "0"}, "8838": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45871, 45893], "op": "PUSH1", "path": "0", "value": "0x0"}, "8840": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45871, 45893], "op": "SWAP1", "path": "0"}, "8841": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45896, 45920], "op": "PUSH2", "path": "0", "value": "0x2299"}, "8844": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45896, 45920], "op": "SWAP1", "path": "0"}, "8845": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45918, 45919], "op": "PUSH1", "path": "0", "value": "0x1"}, "8847": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45896, 45920], "op": "PUSH4", "path": "0", "value": "0xFFFFFFFF"}, "8852": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45896, 45917], "op": "PUSH2", "path": "0", "value": "0x214E"}, "8855": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45896, 45920], "op": "AND", "path": "0"}, "8856": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "jump": "i", "offset": [45896, 45920], "op": "JUMP", "path": "0"}, "8857": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45896, 45920], "op": "JUMPDEST", "path": "0"}, "8858": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45930, 45948], "op": "PUSH1", "path": "0", "value": "0x0"}, "8860": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "DUP4", "path": "0"}, "8861": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "DUP2", "path": "0"}, "8862": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "MSTORE", "path": "0"}, "8863": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45966], "op": "PUSH1", "path": "0", "value": "0x9"}, "8865": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "PUSH1", "path": "0", "value": "0x20"}, "8867": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "MSTORE", "path": "0"}, "8868": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "PUSH1", "path": "0", "value": "0x40"}, "8870": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "DUP2", "path": "0"}, "8871": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "KECCAK256", "path": "0"}, "8872": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "SLOAD", "path": "0"}, "8873": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46329], "op": "PUSH1", "path": "0", "value": "0x8"}, "8875": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "DUP1", "path": "0"}, "8876": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "SLOAD", "path": "0"}, "8877": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45871, 45920], "op": "SWAP4", "path": "0"}, "8878": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45871, 45920], "op": "SWAP5", "path": "0"}, "8879": {"op": "POP"}, "8880": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "SWAP1", "path": "0"}, "8881": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45951, 45975], "op": "SWAP3", "path": "0"}, "8882": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45871, 45920], "op": "DUP5", "path": "0"}, "8883": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [45871, 45920], "op": "SWAP1", "path": "0"}, "8884": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "DUP2", "path": "0"}, "8885": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "LT", "path": "0"}, "8886": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "PUSH2", "path": "0", "value": "0x22BB"}, "8889": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "JUMPI", "path": "0"}, "8890": {"dev": "Index out of range", "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "INVALID", "path": "0"}, "8891": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "JUMPDEST", "path": "0"}, "8892": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "SWAP1", "path": "0"}, "8893": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "PUSH1", "path": "0", "value": "0x0"}, "8895": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "MSTORE", "path": "0"}, "8896": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "PUSH1", "path": "0", "value": "0x20"}, "8898": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "PUSH1", "path": "0", "value": "0x0"}, "8900": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "KECCAK256", "path": "0"}, "8901": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "ADD", "path": "0"}, "8902": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46319, 46345], "op": "SLOAD", "path": "0"}, "8903": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46297, 46345], "op": "SWAP1", "path": "0"}, "8904": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46297, 46345], "op": "POP", "path": "0"}, "8905": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46381, 46392], "op": "DUP1", "path": "0", "statement": 118}, "8906": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46366], "op": "PUSH1", "path": "0", "value": "0x8"}, "8908": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46367, 46377], "op": "DUP4", "path": "0"}, "8909": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "DUP2", "path": "0"}, "8910": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "SLOAD", "path": "0"}, "8911": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "DUP2", "path": "0"}, "8912": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "LT", "path": "0"}, "8913": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "PUSH2", "path": "0", "value": "0x22D6"}, "8916": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "JUMPI", "path": "0"}, "8917": {"dev": "Index out of range", "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "INVALID", "path": "0"}, "8918": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "JUMPDEST", "path": "0"}, "8919": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "PUSH1", "path": "0", "value": "0x0"}, "8921": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "SWAP2", "path": "0"}, "8922": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "DUP3", "path": "0"}, "8923": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "MSTORE", "path": "0"}, "8924": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "PUSH1", "path": "0", "value": "0x20"}, "8926": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "DUP1", "path": "0"}, "8927": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "DUP4", "path": "0"}, "8928": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "KECCAK256", "path": "0"}, "8929": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "SWAP1", "path": "0"}, "8930": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "SWAP2", "path": "0"}, "8931": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46378], "op": "ADD", "path": "0"}, "8932": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46392], "op": "SWAP3", "path": "0"}, "8933": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46392], "op": "SWAP1", "path": "0"}, "8934": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46392], "op": "SWAP3", "path": "0"}, "8935": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46356, 46392], "op": "SSTORE", "path": "0"}, "8936": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "DUP3", "path": "0", "statement": 119}, "8937": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "DUP2", "path": "0"}, "8938": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "MSTORE", "path": "0"}, "8939": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46475], "op": "PUSH1", "path": "0", "value": "0x9"}, "8941": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "SWAP1", "path": "0"}, "8942": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "SWAP2", "path": "0"}, "8943": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "MSTORE", "path": "0"}, "8944": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "PUSH1", "path": "0", "value": "0x40"}, "8946": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "SWAP1", "path": "0"}, "8947": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46488], "op": "KECCAK256", "path": "0"}, "8948": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46501], "op": "DUP3", "path": "0"}, "8949": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46501], "op": "SWAP1", "path": "0"}, "8950": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46460, 46501], "op": "SSTORE", "path": "0"}, "8951": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46632], "op": "PUSH1", "path": "0", "statement": 120, "value": "0x8"}, "8953": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "DUP1", "path": "0"}, "8954": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "SLOAD", "path": "0"}, "8955": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "SWAP1", "path": "0"}, "8956": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "PUSH2", "path": "0", "value": "0x2309"}, "8959": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "SWAP1", "path": "0"}, "8960": {"op": "PUSH1", "value": "0x0"}, "8962": {"op": "NOT"}, "8963": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "DUP4", "path": "0"}, "8964": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "ADD", "path": "0"}, "8965": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "PUSH2", "path": "0", "value": "0x23ED"}, "8968": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "jump": "i", "offset": [46622, 46641], "op": "JUMP", "path": "0"}, "8969": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46622, 46641], "op": "JUMPDEST", "path": "0"}, "8970": {"op": "POP"}, "8971": {"op": "POP"}, "8972": {"op": "POP"}, "8973": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46678, 46679], "op": "PUSH1", "path": "0", "statement": 121, "value": "0x0"}, "8975": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46675], "op": "SWAP2", "path": "0"}, "8976": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46675], "op": "DUP3", "path": "0"}, "8977": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46675], "op": "MSTORE", "path": "0"}, "8978": {"op": "POP"}, "8979": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46666], "op": "PUSH1", "path": "0", "value": "0x9"}, "8981": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46675], "op": "PUSH1", "path": "0", "value": "0x20"}, "8983": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46675], "op": "MSTORE", "path": "0"}, "8984": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46675], "op": "PUSH1", "path": "0", "value": "0x40"}, "8986": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46675], "op": "DUP2", "path": "0"}, "8987": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46675], "op": "KECCAK256", "path": "0"}, "8988": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [46651, 46679], "op": "SSTORE", "path": "0"}, "8989": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "jump": "o", "offset": [45622, 46686], "op": "JUMP", "path": "0"}, "8990": {"offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "8991": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x1E3"}, "8994": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "8995": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x2428"}, "8998": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP4", "path": "0"}, "8999": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "CODECOPY", "path": "0"}, "9000": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9001": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9002": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "jump": "o", "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "9003": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9004": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9005": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "9006": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SLOAD", "path": "0"}, "9007": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1"}, "9009": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9010": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1"}, "9012": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "AND", "path": "0"}, "9013": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ISZERO", "path": "0"}, "9014": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x100"}, "9017": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "MUL", "path": "0"}, "9018": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SUB", "path": "0"}, "9019": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "AND", "path": "0"}, "9020": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x2"}, "9022": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9023": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DIV", "path": "0"}, "9024": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9025": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "9027": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "MSTORE", "path": "0"}, "9028": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x20"}, "9030": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "9032": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "KECCAK256", "path": "0"}, "9033": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9034": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1F"}, "9036": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9037": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x20"}, "9039": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9040": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DIV", "path": "0"}, "9041": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9042": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9043": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP3", "path": "0"}, "9044": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9045": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1F"}, "9047": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "LT", "path": "0"}, "9048": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x236C"}, "9051": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "9052": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "9053": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "MLOAD", "path": "0"}, "9054": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0xFF"}, "9056": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "NOT", "path": "0"}, "9057": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "AND", "path": "0"}, "9058": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP4", "path": "0"}, "9059": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "9060": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9061": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "OR", "path": "0"}, "9062": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP6", "path": "0"}, "9063": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SSTORE", "path": "0"}, "9064": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x2399"}, "9067": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "9068": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9069": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9070": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "9071": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9072": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1"}, "9074": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9075": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP6", "path": "0"}, "9076": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SSTORE", "path": "0"}, "9077": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9078": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ISZERO", "path": "0"}, "9079": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x2399"}, "9082": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "9083": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP2", "path": "0"}, "9084": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9085": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9086": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9087": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9088": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9089": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "GT", "path": "0"}, "9090": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ISZERO", "path": "0"}, "9091": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x2399"}, "9094": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "9095": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9096": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "MLOAD", "path": "0"}, "9097": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9098": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SSTORE", "path": "0"}, "9099": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP2", "path": "0"}, "9100": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x20"}, "9102": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9103": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP2", "path": "0"}, "9104": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9105": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1"}, "9107": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9108": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9109": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x237E"}, "9112": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "9113": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9114": {"op": "POP"}, "9115": {"offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x23A5"}, "9118": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP3", "path": "0"}, "9119": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP2", "path": "0"}, "9120": {"op": "POP"}, "9121": {"offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x240D"}, "9124": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "jump": "i", "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "9125": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9126": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "POP", "path": "0"}, "9127": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9128": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "jump": "o", "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "9129": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9130": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "POP", "path": "0"}, "9131": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "9132": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SLOAD", "path": "0"}, "9133": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1"}, "9135": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9136": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1"}, "9138": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "AND", "path": "0"}, "9139": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ISZERO", "path": "0"}, "9140": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x100"}, "9143": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "MUL", "path": "0"}, "9144": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SUB", "path": "0"}, "9145": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "AND", "path": "0"}, "9146": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x2"}, "9148": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9149": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DIV", "path": "0"}, "9150": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "9152": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9153": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SSTORE", "path": "0"}, "9154": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "9155": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1F"}, "9157": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "LT", "path": "0"}, "9158": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x23CF"}, "9161": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "9162": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "POP", "path": "0"}, "9163": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0xC3D"}, "9166": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "9167": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9168": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1F"}, "9170": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9171": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x20"}, "9173": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9174": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DIV", "path": "0"}, "9175": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9176": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "9178": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "MSTORE", "path": "0"}, "9179": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x20"}, "9181": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "9183": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "KECCAK256", "path": "0"}, "9184": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9185": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9186": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9187": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9188": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0xC3D"}, "9191": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP2", "path": "0"}, "9192": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9193": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x240D"}, "9196": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "jump": "i", "offset": [54940, 57771], "op": "JUMP", "path": "0"}, "9197": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9198": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9199": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SLOAD", "path": "0"}, "9200": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9201": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP4", "path": "0"}, "9202": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SSTORE", "path": "0"}, "9203": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9204": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9205": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "GT", "path": "0"}, "9206": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ISZERO", "path": "0"}, "9207": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x959"}, "9210": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "9211": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "9213": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP4", "path": "0"}, "9214": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9215": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "MSTORE", "path": "0"}, "9216": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x20"}, "9218": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9219": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "KECCAK256", "path": "0"}, "9220": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x959"}, "9223": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP2", "path": "0"}, "9224": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9225": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9226": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9227": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP4", "path": "0"}, "9228": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9229": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9230": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x76F"}, "9233": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP2", "path": "0"}, "9234": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SWAP1", "path": "0"}, "9235": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPDEST", "path": "0"}, "9236": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP1", "path": "0"}, "9237": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP3", "path": "0"}, "9238": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "GT", "path": "0"}, "9239": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ISZERO", "path": "0"}, "9240": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x23A5"}, "9243": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMPI", "path": "0"}, "9244": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x0"}, "9246": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "DUP2", "path": "0"}, "9247": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "SSTORE", "path": "0"}, "9248": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH1", "path": "0", "value": "0x1"}, "9250": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "ADD", "path": "0"}, "9251": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "PUSH2", "path": "0", "value": "0x2413"}, "9254": {"fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "offset": [54940, 57771], "op": "JUMP", "path": "0"}}, "sha1": "ac55f2ec9b0135dfcaa73bd930eb5aab7802dc8f", "source": "/**\n * Note: For learning and education copied from\n *    https://etherscan.io/address/0xb7f7f6c52f2e2fdb1963eab30438024864c313f6#code\n *\n *\n * Submitted for verification at Etherscan.io on 2020-09-08\n */\n\n// File: contracts\\gsn\\Context.sol\n\npragma solidity ^0.5.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor() internal {}\n\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: contracts\\access\\Ownable.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() internal {\n        address msgSender = _msgSender();\n\n        _owner = msgSender;\n\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n\n        emit OwnershipTransferred(_owner, newOwner);\n\n        _owner = newOwner;\n    }\n}\n\n// File: contracts\\utils\\Pausable.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\ncontract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() internal {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!_paused, \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(_paused, \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal whenNotPaused {\n        _paused = true;\n\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal whenPaused {\n        _paused = false;\n\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: contracts\\token\\erc721\\IERC721Enumerable.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index)\n        external\n        view\n        returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n\n// File: contracts\\libs\\SafeMath.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n\n        return a % b;\n    }\n}\n\n// File: contracts\\libs\\Counters.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n\n// File: contracts\\libs\\Address.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codehash := extcodehash(account)\n        }\n\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account)\n        internal\n        pure\n        returns (address payable)\n    {\n        return address(uint160(account));\n    }\n}\n\n// File: contracts\\token\\erc721\\IERC721.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 {\n    /**\n     * @dev Emitted when `tokenId` token is transfered from `from` to `to`.\n     */\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed approved,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from`, `to` cannot be zero.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from`, `to` cannot be zero.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId)\n        external\n        view\n        returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from`, `to` cannot be zero.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n\n// File: contracts\\token\\erc721\\IERC721Receiver.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @notice Handle the receipt of an NFT\n     * @dev The ERC721 smart contract calls this function on the recipient\n     * after a {IERC721-safeTransferFrom}. This function MUST return the function selector,\n     * otherwise the caller will revert the transaction. The selector to be\n     * returned can be obtained as `this.onERC721Received.selector`. This\n     * function MAY throw to revert and reject the transfer.\n     * Note: the ERC721 contract address is always the message sender.\n     * @param operator The address which called `safeTransferFrom` function\n     * @param from The address which previously owned the token\n     * @param tokenId The NFT identifier which is being transferred\n     * @param data Additional data with no specified format\n     * @return bytes4 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: contracts\\token\\erc721\\IERC165.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: contracts\\token\\erc721\\ERC165.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\ncontract ERC165 is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Mapping of interface ids to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor() internal {\n        // Derived contracts need only register support for their own interfaces,\n        // we register support for ERC165 itself here\n        _registerInterface(_INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     *\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Registers the contract as an implementer of the interface defined by\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\n     * registering its interface id is not required.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * Requirements:\n     *\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n     */\n    function _registerInterface(bytes4 interfaceId) internal {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n\n// File: contracts\\token\\erc721\\ERC721.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic implementation\n * @dev see https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721 is Context, ERC165, IERC721 {\n    using SafeMath for uint256;\n    using Address for address;\n    using Counters for Counters.Counter;\n\n    // Equals to `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n    // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector`\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\n\n    // Mapping from token ID to owner\n    mapping(uint256 => address) private _tokenOwner;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to number of owned token\n    mapping(address => Counters.Counter) private _ownedTokensCount;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /*\n     *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231\n     *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e\n     *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3\n     *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\n     *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde\n     *\n     *     => 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^\n     *        0xa22cb465 ^ 0xe985e9c ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    constructor() public {\n        // Register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721);\n    }\n\n    /**\n     * @dev Gets the balance of the specified address.\n     * @param owner address to query the balance of\n     * @return uint256 representing the amount owned by the passed address\n     */\n    function balanceOf(address owner) public view returns (uint256) {\n        require(\n            owner != address(0),\n            \"ERC721: balance query for the zero address\"\n        );\n\n        return _ownedTokensCount[owner].current();\n    }\n\n    /**\n     * @dev Gets the owner of the specified token ID.\n     * @param tokenId uint256 ID of the token to query the owner of\n     * @return address currently marked as the owner of the given token ID\n     */\n    function ownerOf(uint256 tokenId) public view returns (address) {\n        address owner = _tokenOwner[tokenId];\n\n        require(\n            owner != address(0),\n            \"ERC721: owner query for nonexistent token\"\n        );\n\n        return owner;\n    }\n\n    /**\n     * @dev Approves another address to transfer the given token ID\n     * The zero address indicates there is no approved address.\n     * There can only be one approved address per token at a given time.\n     * Can only be called by the token owner or an approved operator.\n     * @param to address to be approved for the given token ID\n     * @param tokenId uint256 ID of the token to be approved\n     */\n    function approve(address to, uint256 tokenId) public {\n        address owner = ownerOf(tokenId);\n\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _tokenApprovals[tokenId] = to;\n\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Gets the approved address for a token ID, or zero if no address set\n     * Reverts if the token ID does not exist.\n     * @param tokenId uint256 ID of the token to query the approval of\n     * @return address currently approved for the given token ID\n     */\n    function getApproved(uint256 tokenId) public view returns (address) {\n        require(\n            _exists(tokenId),\n            \"ERC721: approved query for nonexistent token\"\n        );\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Sets or unsets the approval of a given operator\n     * An operator is allowed to transfer all tokens of the sender on their behalf.\n     * @param to operator address to set the approval\n     * @param approved representing the status of the approval to be set\n     */\n    function setApprovalForAll(address to, bool approved) public {\n        address msgSender = _msgSender();\n\n        require(to != msgSender, \"ERC721: approve to caller\");\n\n        _operatorApprovals[msgSender][to] = approved;\n\n        emit ApprovalForAll(msgSender, to, approved);\n    }\n\n    /**\n     * @dev Tells whether an operator is approved by a given owner.\n     * @param owner owner address which you want to query the approval of\n     * @param operator operator address which you want to query the approval of\n     * @return bool whether the given operator is approved by the given owner\n     */\n    function isApprovedForAll(address owner, address operator)\n        public\n        view\n        returns (bool)\n    {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Transfers the ownership of a given token ID to another address.\n     * Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     * Requires the msg.sender to be the owner, approved, or operator.\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public {\n        // solhint-disable-next-line max-line-length\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        _transferFrom(from, to, tokenId);\n    }\n\n    /**\n     * @dev Safely transfers the ownership of a given token ID to another address\n     * If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * Requires the msg.sender to be the owner, approved, or operator\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Safely transfers the ownership of a given token ID to another address\n     * If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * Requires the _msgSender() to be the owner, approved, or operator\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes data to send along with a safe transfer check\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        _safeTransferFrom(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers the ownership of a given token ID to another address\n     * If the target address is a contract, it must implement `onERC721Received`,\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * Requires the msg.sender to be the owner, approved, or operator\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes data to send along with a safe transfer check\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal {\n        _transferFrom(from, to, tokenId);\n\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Returns whether the specified token exists.\n     * @param tokenId uint256 ID of the token to query the existence of\n     * @return bool whether the token exists\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _tokenOwner[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether the given spender can transfer a given token ID.\n     * @param spender address of the spender to query\n     * @param tokenId uint256 ID of the token to be transferred\n     * @return bool whether the msg.sender is approved for the given token ID,\n     * is an operator of the owner, or is the owner of the token\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\n        internal\n        view\n        returns (bool)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: operator query for nonexistent token\"\n        );\n\n        address owner = ownerOf(tokenId);\n\n        return (spender == owner ||\n            getApproved(tokenId) == spender ||\n            isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Internal function to safely mint a new token.\n     * Reverts if the given token ID already exists.\n     * If the target address is a contract, it must implement `onERC721Received`,\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * @param to The address that will own the minted token\n     * @param tokenId uint256 ID of the token to be minted\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Internal function to safely mint a new token.\n     * Reverts if the given token ID already exists.\n     * If the target address is a contract, it must implement `onERC721Received`,\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * @param to The address that will own the minted token\n     * @param tokenId uint256 ID of the token to be minted\n     * @param _data bytes data to send along with a safe transfer check\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal {\n        _mint(to, tokenId);\n\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Internal function to mint a new token.\n     * Reverts if the given token ID already exists.\n     * @param to The address that will own the minted token\n     * @param tokenId uint256 ID of the token to be minted\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _tokenOwner[tokenId] = to;\n        _ownedTokensCount[to].increment();\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to burn a specific token.\n     * Reverts if the token does not exist.\n     * Deprecated, use {_burn} instead.\n     * @param owner owner of the token to burn\n     * @param tokenId uint256 ID of the token being burned\n     */\n    function _burn(address owner, uint256 tokenId) internal {\n        require(\n            ownerOf(tokenId) == owner,\n            \"ERC721: burn of token that is not own\"\n        );\n\n        _clearApproval(tokenId);\n\n        _ownedTokensCount[owner].decrement();\n        _tokenOwner[tokenId] = address(0);\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Internal function to burn a specific token.\n     * Reverts if the token does not exist.\n     * @param tokenId uint256 ID of the token being burned\n     */\n    function _burn(uint256 tokenId) internal {\n        _burn(ownerOf(tokenId), tokenId);\n    }\n\n    /**\n     * @dev Internal function to transfer ownership of a given token ID to another address.\n     * As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     */\n    function _transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal {\n        require(\n            ownerOf(tokenId) == from,\n            \"ERC721: transfer of token that is not own\"\n        );\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _clearApproval(tokenId);\n\n        _ownedTokensCount[from].decrement();\n        _ownedTokensCount[to].increment();\n\n        _tokenOwner[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * This is an internal detail of the `ERC721` contract and its use is deprecated.\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal returns (bool) {\n        if (!to.isContract()) {\n            return true;\n        }\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = to.call(\n            abi.encodeWithSelector(\n                IERC721Receiver(to).onERC721Received.selector,\n                _msgSender(),\n                from,\n                tokenId,\n                _data\n            )\n        );\n\n        if (!success) {\n            if (returndata.length > 0) {\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n            }\n        } else {\n            bytes4 retval = abi.decode(returndata, (bytes4));\n            return (retval == _ERC721_RECEIVED);\n        }\n    }\n\n    /**\n     * @dev Private function to clear current approval of a given token ID.\n     * @param tokenId uint256 ID of the token to be transferred\n     */\n    function _clearApproval(uint256 tokenId) private {\n        if (_tokenApprovals[tokenId] != address(0)) {\n            _tokenApprovals[tokenId] = address(0);\n        }\n    }\n}\n\n// File: contracts\\token\\erc721\\ERC721Enumerable.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title ERC-721 Non-Fungible Token with optional enumeration extension logic\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => uint256[]) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /*\n     *     bytes4(keccak256('totalSupply()')) == 0x18160ddd\n     *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) == 0x2f745c59\n     *     bytes4(keccak256('tokenByIndex(uint256)')) == 0x4f6ccce7\n     *\n     *     => 0x18160ddd ^ 0x2f745c59 ^ 0x4f6ccce7 == 0x780e9d63\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n\n    constructor() public {\n        // Register the supported interface to conform to ERC721Enumerable via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_ENUMERABLE);\n    }\n\n    /**\n     * @dev Gets the token ID at a given index of the tokens list of the requested owner.\n     * @param owner address owning the tokens list to be accessed\n     * @param index uint256 representing the index to be accessed of the requested tokens list\n     * @return uint256 token ID at the given index of the tokens list owned by the requested address\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index)\n        public\n        view\n        returns (uint256)\n    {\n        require(\n            index < balanceOf(owner),\n            \"ERC721Enumerable: owner index out of bounds\"\n        );\n\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev Gets the total amount of tokens stored by the contract.\n     * @return uint256 representing the total amount of tokens\n     */\n    function totalSupply() public view returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev Gets the token ID at a given index of all the tokens in this contract\n     * Reverts if the index is greater or equal to the total number of tokens.\n     * @param index uint256 representing the index to be accessed of the tokens list\n     * @return uint256 token ID at the given index of the tokens list\n     */\n    function tokenByIndex(uint256 index) public view returns (uint256) {\n        require(\n            index < totalSupply(),\n            \"ERC721Enumerable: global index out of bounds\"\n        );\n\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Internal function to transfer ownership of a given token ID to another address.\n     * As opposed to transferFrom, this imposes no restrictions on msg.sender.\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     */\n    function _transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal {\n        super._transferFrom(from, to, tokenId);\n\n        _removeTokenFromOwnerEnumeration(from, tokenId);\n\n        _addTokenToOwnerEnumeration(to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to mint a new token.\n     * Reverts if the given token ID already exists.\n     * @param to address the beneficiary that will own the minted token\n     * @param tokenId uint256 ID of the token to be minted\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        super._mint(to, tokenId);\n\n        _addTokenToOwnerEnumeration(to, tokenId);\n\n        _addTokenToAllTokensEnumeration(tokenId);\n    }\n\n    /**\n     * @dev Internal function to burn a specific token.\n     * Reverts if the token does not exist.\n     * Deprecated, use {ERC721-_burn} instead.\n     * @param owner owner of the token to burn\n     * @param tokenId uint256 ID of the token being burned\n     */\n    function _burn(address owner, uint256 tokenId) internal {\n        super._burn(owner, tokenId);\n\n        _removeTokenFromOwnerEnumeration(owner, tokenId);\n\n        // Since tokenId will be deleted, we can clear its slot in _ownedTokensIndex to trigger a gas refund\n        _ownedTokensIndex[tokenId] = 0;\n\n        _removeTokenFromAllTokensEnumeration(tokenId);\n    }\n\n    /**\n     * @dev Gets the list of token IDs of the requested owner.\n     * @param owner address owning the tokens\n     * @return uint256[] List of token IDs owned by the requested address\n     */\n    function _tokensOfOwner(address owner)\n        internal\n        view\n        returns (uint256[] storage)\n    {\n        return _ownedTokens[owner];\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        _ownedTokensIndex[tokenId] = _ownedTokens[to].length;\n        _ownedTokens[to].push(tokenId);\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId)\n        private\n    {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _ownedTokens[from].length.sub(1);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        _ownedTokens[from].length--;\n\n        // Note that _ownedTokensIndex[tokenId] hasn't been cleared: it still points to the old slot (now occupied by\n        // lastTokenId, or just over the end of the array if the token was the last one).\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length.sub(1);\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        _allTokens.length--;\n        _allTokensIndex[tokenId] = 0;\n    }\n}\n\n// File: contracts\\libs\\Strings.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title Strings\n * @dev String operations.\n */\nlibrary Strings {\n    /**\n     * @dev Converts a `uint256` to a `string`.\n     * via OraclizeAPI - MIT licence\n     * https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n     */\n    function fromUint256(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0\";\n        }\n\n        uint256 temp = value;\n        uint256 digits;\n\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n\n        bytes memory buffer = new bytes(digits);\n        uint256 index = digits - 1;\n\n        temp = value;\n\n        while (temp != 0) {\n            buffer[index--] = bytes1(uint8(48 + (temp % 10)));\n            temp /= 10;\n        }\n\n        return string(buffer);\n    }\n}\n\n// File: contracts\\token\\erc721\\IERC721Metadata.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: contracts\\token\\erc721\\ERC721Metadata.sol\n\npragma solidity ^0.5.0;\n\ncontract ERC721Metadata is ERC721, IERC721Metadata {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Base URI\n    string private _baseURI;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /**\n     * @dev Constructor function\n     */\n    constructor(string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n\n        // Register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the URI for a given token ID. May return an empty string.\n     *\n     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the\n     * token's own URI (via {_setTokenURI}).\n     *\n     * If there is a base URI but no token URI, the token's ID will be used as\n     * its URI when appending it to the base URI. This pattern for autogenerated\n     * token URIs can lead to large gas savings.\n     *\n     * .Examples\n     * |===\n     * |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()`\n     * | \"\"\n     * | \"\"\n     * | \"\"\n     * | \"\"\n     * | \"token.uri/123\"\n     * | \"token.uri/123\"\n     * | \"token.uri/\"\n     * | \"123\"\n     * | \"token.uri/123\"\n     * | \"token.uri/\"\n     * | \"\"\n     * | \"token.uri/<tokenId>\"\n     * |===\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function tokenURI(uint256 tokenId) public view returns (string memory) {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n\n        // If there is no base URI, return the token URI.\n        if (bytes(_baseURI).length == 0) {\n            return _tokenURI;\n        }\n\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(_baseURI, _tokenURI));\n        }\n\n        // If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI.\n        return string(abi.encodePacked(_baseURI, tokenId.fromUint256()));\n    }\n\n    /**\n     * @dev Internal function to set the token URI for a given token.\n     *\n     * Reverts if the token ID does not exist.\n     *\n     * TIP: if all token IDs share a prefix (e.g. if your URIs look like\n     * `http://api.myproject.com/token/<id>`), use {_setBaseURI} to store\n     * it and save gas.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI set of nonexistent token\"\n        );\n\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Internal function to set the base URI for all token IDs. It is\n     * automatically added as a prefix to the value returned in {tokenURI}.\n     *\n     * _Available since v2.5.0._\n     */\n    function _setBaseURI(string memory baseURI) internal {\n        _baseURI = baseURI;\n    }\n\n    /**\n     * @dev Returns the base URI set via {_setBaseURI}. This will be\n     * automatically added as a preffix in {tokenURI} to each token's URI, when\n     * they are non-empty.\n     *\n     * _Available since v2.5.0._\n     */\n    function baseURI() public view returns (string memory) {\n        return _baseURI;\n    }\n\n    /**\n     * @dev Internal function to burn a specific token.\n     * Reverts if the token does not exist.\n     * Deprecated, use _burn(uint256) instead.\n     * @param owner owner of the token to burn\n     * @param tokenId uint256 ID of the token being burned by the msg.sender\n     */\n    function _burn(address owner, uint256 tokenId) internal {\n        super._burn(owner, tokenId);\n\n        // Clears metadata (if any)\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n\n// File: contracts\\token\\erc721\\ERC721Full.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title Full ERC721 Token\n * @dev This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology.\n *\n * See https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721Full is ERC721Enumerable, ERC721Metadata {\n    constructor(string memory name, string memory symbol)\n        public\n        ERC721Metadata(name, symbol)\n    {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n\n// File: contracts\\cryptopunk\\ICryptoPunk.sol\n\npragma solidity ^0.5.0;\n\ninterface ICryptoPunk {\n    function punkIndexToAddress(uint256 punkIndex) external returns (address);\n\n    function punksOfferedForSale(uint256 punkIndex)\n        external\n        returns (\n            bool,\n            uint256,\n            address,\n            uint256,\n            address\n        );\n\n    function buyPunk(uint256 punkIndex) external payable;\n\n    function transferPunk(address to, uint256 punkIndex) external;\n}\n\n// File: contracts\\cryptopunk\\wrapped-punk\\UserProxy.sol\n\npragma solidity ^0.5.0;\n\ncontract UserProxy {\n    address private _owner;\n\n    /**\n     * @dev Initializes the contract settings\n     */\n    constructor() public {\n        _owner = msg.sender;\n    }\n\n    /**\n     * @dev Transfers punk to the smart contract owner\n     */\n    function transfer(address punkContract, uint256 punkIndex)\n        external\n        returns (bool)\n    {\n        if (_owner != msg.sender) {\n            return false;\n        }\n\n        (bool result, ) = punkContract.call(\n            abi.encodeWithSignature(\n                \"transferPunk(address,uint256)\",\n                _owner,\n                punkIndex\n            )\n        );\n\n        return result;\n    }\n}\n\n// File: contracts\\cryptopunk\\wrapped-punk\\WrappedPunk.sol\n\npragma solidity ^0.5.0;\n\ncontract WrappedPunk is Ownable, ERC721Full, Pausable {\n    event ProxyRegistered(address user, address proxy);\n\n    // Instance of cryptopunk smart contract\n    ICryptoPunk private _punkContract;\n\n    // Mapping from user address to proxy address\n    mapping(address => address) private _proxies;\n\n    /**\n     * @dev Initializes the contract settings\n     */\n    constructor(address punkContract)\n        public\n        ERC721Full(\"Wrapped Cryptopunks\", \"WPUNKS\")\n    {\n        _punkContract = ICryptoPunk(punkContract);\n    }\n\n    /**\n     * @dev Gets address of cryptopunk smart contract\n     */\n    function punkContract() public view returns (address) {\n        return address(_punkContract);\n    }\n\n    /**\n     * @dev Sets the base URI for all token\n     */\n    function setBaseURI(string memory baseUri) public onlyOwner {\n        _setBaseURI(baseUri);\n    }\n\n    /**\n     * @dev Triggers smart contract to stopped state\n     */\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @dev Returns smart contract to normal state\n     */\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @dev Registers proxy\n     */\n    function registerProxy() public {\n        address sender = _msgSender();\n\n        require(\n            _proxies[sender] == address(0),\n            \"PunkWrapper: caller has registered the proxy\"\n        );\n\n        address proxy = address(new UserProxy());\n\n        _proxies[sender] = proxy;\n\n        emit ProxyRegistered(sender, proxy);\n    }\n\n    /**\n     * @dev Gets proxy address\n     */\n    function proxyInfo(address user) public view returns (address) {\n        return _proxies[user];\n    }\n\n    /**\n     * @dev Mints a wrapped punk\n     */\n    function mint(uint256 punkIndex) public whenNotPaused {\n        address sender = _msgSender();\n\n        UserProxy proxy = UserProxy(_proxies[sender]);\n\n        require(\n            proxy.transfer(address(_punkContract), punkIndex),\n            \"PunkWrapper: transfer fail\"\n        );\n\n        _mint(sender, punkIndex);\n    }\n\n    /**\n     * @dev Burns a specific wrapped punk\n     */\n    function burn(uint256 punkIndex) public whenNotPaused {\n        address sender = _msgSender();\n\n        require(\n            _isApprovedOrOwner(sender, punkIndex),\n            \"PunkWrapper: caller is not owner nor approved\"\n        );\n\n        _burn(punkIndex);\n\n        // Transfers ownership of punk on original cryptopunk smart contract to caller\n        _punkContract.transferPunk(sender, punkIndex);\n    }\n\n    /**\n     * @dev Internal function to transfer ownership of a given punk index to another address\n     */\n    function _transferFrom(\n        address from,\n        address to,\n        uint256 punkIndex\n    ) internal whenNotPaused {\n        super._transferFrom(from, to, punkIndex);\n    }\n}\n", "sourceMap": "54940:2831:0:-;;;55305:163;8:9:-1;5:2;;;30:1;27;20:12;5:2;55305:163:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;55305:163:0;53422:174;;;;;;;;;;;;55305:163;53422:174;;;;;;;;;;;;;;;;;;-1:-1:-1;;;53422:174:0;;;;;;;-1:-1:-1;2240:12:0;-1:-1:-1;;;;;2240:10:0;:12;:::i;:::-;2263:6;:18;;-1:-1:-1;;;;;;2263:18:0;-1:-1:-1;;;;;2263:18:0;;;;;;;2297:43;;2263:18;;-1:-1:-1;2263:18:0;2297:43;;2263:6;;2297:43;-1:-1:-1;20706:40:0;-1:-1:-1;;;;;;;;20706:18:0;:40;:::i;:::-;23689;-1:-1:-1;;;;;;;;23689:18:0;:40;:::i;:::-;39110:51;-1:-1:-1;;;;;;;;39110:18:0;:51;:::i;:::-;49112:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;49134:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;49238:49:0;-1:-1:-1;;;;;;;;49238:18:0;:49;:::i;:::-;-1:-1:-1;;4503:7:0;:15;;-1:-1:-1;;;;;55420:41:0;;;4503:15;55420:41;-1:-1:-1;;;;;;55420:41:0;;;;;;;;;;-1:-1:-1;54940:2831:0;;-1:-1:-1;54940:2831:0;1029:96;1108:10;1029:96;;:::o;21428:191::-;-1:-1:-1;;;;;;21503:25:0;;;;;21495:66;;;;;-1:-1:-1;;;21495:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21572:33:0;;;;;21608:4;21572:33;;;;;;;;:40;;-1:-1:-1;;21572:40:0;;;;;;21428:191::o;54940:2831::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;54940:2831:0;;;-1:-1:-1;54940:2831:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/reference/WrappedPunk.sol", "type": "contract", "deployment": {"address": "0x1B5821Ba755992AB097F4b20E8cd08314502a22f", "chainid": "4", "blockHeight": 9259256}}