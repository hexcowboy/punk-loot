{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "uriSuffix",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mintBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "suffix",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155.sol",
    "1": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155Receiver.sol",
    "2": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "3": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Address.sol",
    "4": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/ERC165.sol",
    "5": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/IERC165.sol",
    "6": "contracts/Loot.sol",
    "7": "interfaces/IOracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/Loot.sol",
    "exportedSymbols": {
      "Address": [
        1543
      ],
      "ERC165": [
        1567
      ],
      "IERC1155": [
        1190
      ],
      "IERC1155MetadataURI": [
        1246
      ],
      "IERC1155Receiver": [
        1231
      ],
      "IERC165": [
        1587
      ],
      "IOracle": [
        1575
      ],
      "Loot": [
        1068
      ]
    },
    "id": 1069,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "interfaces/IOracle.sol",
        "file": "../interfaces/IOracle.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1069,
        "sourceUnit": 1576,
        "src": "58:35:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1069,
        "sourceUnit": 1191,
        "src": "94:60:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1069,
        "sourceUnit": 1232,
        "src": "155:68:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1069,
        "sourceUnit": 1247,
        "src": "224:82:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1069,
        "sourceUnit": 1544,
        "src": "307:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1069,
        "sourceUnit": 1568,
        "src": "359:64:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1567,
              "src": "677:6:6"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "677:6:6"
          },
          {
            "baseName": {
              "id": 11,
              "name": "IERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1190,
              "src": "685:8:6"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "685:8:6"
          },
          {
            "baseName": {
              "id": 13,
              "name": "IERC1155MetadataURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1246,
              "src": "695:19:6"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "695:19:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "425:234:6",
          "text": " @dev Implementation of the basic standard multi-token.\n Modified version of OpenZeppelin's ERC1155 implementation\n https://eips.ethereum.org/EIPS/eip-1155\n https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155"
        },
        "fullyImplemented": true,
        "id": 1068,
        "linearizedBaseContracts": [
          1068,
          1246,
          1190,
          1567,
          1587
        ],
        "name": "Loot",
        "nameLocation": "669:4:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 17,
            "libraryName": {
              "id": 15,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1543,
              "src": "727:7:6"
            },
            "nodeType": "UsingForDirective",
            "src": "721:26:6",
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "739:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "_balance",
            "nameLocation": "818:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 1068,
            "src": "782:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "790:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "782:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "801:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "938:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1068,
            "src": "882:65:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 22,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "882:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 25,
                "keyType": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "901:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1057:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 1068,
            "src": "1004:71:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1012:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1004:44:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 31,
                "keyType": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1031:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1023:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 30,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1042:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "1211:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 1068,
            "src": "1196:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 34,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1196:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "_uriSuffix",
            "nameLocation": "1236:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 1068,
            "src": "1221:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 36,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1221:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 39,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "1312:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 1068,
            "src": "1298:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 38,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1298:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 41,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "1384:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1068,
            "src": "1370:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 40,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1370:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 44,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "1439:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1068,
            "src": "1424:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOracle_$1575",
              "typeString": "contract IOracle"
            },
            "typeName": {
              "id": 43,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42,
                "name": "IOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1575,
                "src": "1424:7:6"
              },
              "referencedDeclaration": 1575,
              "src": "1424:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$1575",
                "typeString": "contract IOracle"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Loot.Item",
            "id": 136,
            "members": [
              {
                "id": 45,
                "name": "EARRING",
                "nameLocation": "1500:7:6",
                "nodeType": "EnumValue",
                "src": "1500:7:6"
              },
              {
                "id": 46,
                "name": "BIG_SHADES",
                "nameLocation": "1533:10:6",
                "nodeType": "EnumValue",
                "src": "1533:10:6"
              },
              {
                "id": 47,
                "name": "BLUE_EYE_SHADOW",
                "nameLocation": "1553:15:6",
                "nodeType": "EnumValue",
                "src": "1553:15:6"
              },
              {
                "id": 48,
                "name": "CLASSIC_SHADES",
                "nameLocation": "1578:14:6",
                "nodeType": "EnumValue",
                "src": "1578:14:6"
              },
              {
                "id": 49,
                "name": "CLOWN_EYES_BLUE",
                "nameLocation": "1602:15:6",
                "nodeType": "EnumValue",
                "src": "1602:15:6"
              },
              {
                "id": 50,
                "name": "CLOWN_EYES_GREEN",
                "nameLocation": "1627:16:6",
                "nodeType": "EnumValue",
                "src": "1627:16:6"
              },
              {
                "id": 51,
                "name": "EYE_MASK",
                "nameLocation": "1653:8:6",
                "nodeType": "EnumValue",
                "src": "1653:8:6"
              },
              {
                "id": 52,
                "name": "EYE_PATCH",
                "nameLocation": "1671:9:6",
                "nodeType": "EnumValue",
                "src": "1671:9:6"
              },
              {
                "id": 53,
                "name": "GREEN_EYE_SHADOW",
                "nameLocation": "1690:16:6",
                "nodeType": "EnumValue",
                "src": "1690:16:6"
              },
              {
                "id": 54,
                "name": "HORNED_RIM_GLASSES",
                "nameLocation": "1716:18:6",
                "nodeType": "EnumValue",
                "src": "1716:18:6"
              },
              {
                "id": 55,
                "name": "NERD_GLASSES",
                "nameLocation": "1744:12:6",
                "nodeType": "EnumValue",
                "src": "1744:12:6"
              },
              {
                "id": 56,
                "name": "PURPLE_EYE_SHADOW",
                "nameLocation": "1766:17:6",
                "nodeType": "EnumValue",
                "src": "1766:17:6"
              },
              {
                "id": 57,
                "name": "REGULAR_SHADES",
                "nameLocation": "1793:14:6",
                "nodeType": "EnumValue",
                "src": "1793:14:6"
              },
              {
                "id": 58,
                "name": "SMALL_SHADES",
                "nameLocation": "1817:12:6",
                "nodeType": "EnumValue",
                "src": "1817:12:6"
              },
              {
                "id": 59,
                "name": "THREE_D_GLASSES",
                "nameLocation": "1839:15:6",
                "nodeType": "EnumValue",
                "src": "1839:15:6"
              },
              {
                "id": 60,
                "name": "VR",
                "nameLocation": "1864:2:6",
                "nodeType": "EnumValue",
                "src": "1864:2:6"
              },
              {
                "id": 61,
                "name": "WELDING_GOGGLES",
                "nameLocation": "1876:15:6",
                "nodeType": "EnumValue",
                "src": "1876:15:6"
              },
              {
                "id": 62,
                "name": "MOLE",
                "nameLocation": "1917:4:6",
                "nodeType": "EnumValue",
                "src": "1917:4:6"
              },
              {
                "id": 63,
                "name": "ROSY_CHEEKS",
                "nameLocation": "1931:11:6",
                "nodeType": "EnumValue",
                "src": "1931:11:6"
              },
              {
                "id": 64,
                "name": "SPOTS",
                "nameLocation": "1952:5:6",
                "nodeType": "EnumValue",
                "src": "1952:5:6"
              },
              {
                "id": 65,
                "name": "VAMPIRE_HAIR",
                "nameLocation": "1967:12:6",
                "nodeType": "EnumValue",
                "src": "1967:12:6"
              },
              {
                "id": 66,
                "name": "BIG_BEARD",
                "nameLocation": "2012:9:6",
                "nodeType": "EnumValue",
                "src": "2012:9:6"
              },
              {
                "id": 67,
                "name": "CHINSTRAP",
                "nameLocation": "2031:9:6",
                "nodeType": "EnumValue",
                "src": "2031:9:6"
              },
              {
                "id": 68,
                "name": "FRONT_BEARD",
                "nameLocation": "2050:11:6",
                "nodeType": "EnumValue",
                "src": "2050:11:6"
              },
              {
                "id": 69,
                "name": "FRONT_BEARD_DARK",
                "nameLocation": "2071:16:6",
                "nodeType": "EnumValue",
                "src": "2071:16:6"
              },
              {
                "id": 70,
                "name": "GOAT",
                "nameLocation": "2097:4:6",
                "nodeType": "EnumValue",
                "src": "2097:4:6"
              },
              {
                "id": 71,
                "name": "HANDLEBARS",
                "nameLocation": "2111:10:6",
                "nodeType": "EnumValue",
                "src": "2111:10:6"
              },
              {
                "id": 72,
                "name": "LUXURIOUS_BEARD",
                "nameLocation": "2131:15:6",
                "nodeType": "EnumValue",
                "src": "2131:15:6"
              },
              {
                "id": 73,
                "name": "MUSTACHE",
                "nameLocation": "2156:8:6",
                "nodeType": "EnumValue",
                "src": "2156:8:6"
              },
              {
                "id": 74,
                "name": "MUTTONCHOPS",
                "nameLocation": "2174:11:6",
                "nodeType": "EnumValue",
                "src": "2174:11:6"
              },
              {
                "id": 75,
                "name": "NORMAL_BEARD",
                "nameLocation": "2195:12:6",
                "nodeType": "EnumValue",
                "src": "2195:12:6"
              },
              {
                "id": 76,
                "name": "NORMAL_BEARD_BLACK",
                "nameLocation": "2217:18:6",
                "nodeType": "EnumValue",
                "src": "2217:18:6"
              },
              {
                "id": 77,
                "name": "SHADOW_BEARD",
                "nameLocation": "2245:12:6",
                "nodeType": "EnumValue",
                "src": "2245:12:6"
              },
              {
                "id": 78,
                "name": "BANDANA",
                "nameLocation": "2283:7:6",
                "nodeType": "EnumValue",
                "src": "2283:7:6"
              },
              {
                "id": 79,
                "name": "BEANIE",
                "nameLocation": "2300:6:6",
                "nodeType": "EnumValue",
                "src": "2300:6:6"
              },
              {
                "id": 80,
                "name": "BLONDE_BOB",
                "nameLocation": "2316:10:6",
                "nodeType": "EnumValue",
                "src": "2316:10:6"
              },
              {
                "id": 81,
                "name": "BLONDE_SHORT",
                "nameLocation": "2336:12:6",
                "nodeType": "EnumValue",
                "src": "2336:12:6"
              },
              {
                "id": 82,
                "name": "CAP",
                "nameLocation": "2358:3:6",
                "nodeType": "EnumValue",
                "src": "2358:3:6"
              },
              {
                "id": 83,
                "name": "CAP_FORWARD",
                "nameLocation": "2371:11:6",
                "nodeType": "EnumValue",
                "src": "2371:11:6"
              },
              {
                "id": 84,
                "name": "CLOWN_HAIR_GREEN",
                "nameLocation": "2392:16:6",
                "nodeType": "EnumValue",
                "src": "2392:16:6"
              },
              {
                "id": 85,
                "name": "COWBOY_HAT",
                "nameLocation": "2418:10:6",
                "nodeType": "EnumValue",
                "src": "2418:10:6"
              },
              {
                "id": 86,
                "name": "CRAZY_HAIR",
                "nameLocation": "2438:10:6",
                "nodeType": "EnumValue",
                "src": "2438:10:6"
              },
              {
                "id": 87,
                "name": "DARK_HAIR",
                "nameLocation": "2458:9:6",
                "nodeType": "EnumValue",
                "src": "2458:9:6"
              },
              {
                "id": 88,
                "name": "DO_RAG",
                "nameLocation": "2477:6:6",
                "nodeType": "EnumValue",
                "src": "2477:6:6"
              },
              {
                "id": 89,
                "name": "FEDORA",
                "nameLocation": "2493:6:6",
                "nodeType": "EnumValue",
                "src": "2493:6:6"
              },
              {
                "id": 90,
                "name": "FRUMPY_HAIR",
                "nameLocation": "2509:11:6",
                "nodeType": "EnumValue",
                "src": "2509:11:6"
              },
              {
                "id": 91,
                "name": "HALF_SHAVED",
                "nameLocation": "2530:11:6",
                "nodeType": "EnumValue",
                "src": "2530:11:6"
              },
              {
                "id": 92,
                "name": "HEADBAND",
                "nameLocation": "2551:8:6",
                "nodeType": "EnumValue",
                "src": "2551:8:6"
              },
              {
                "id": 93,
                "name": "HOODIE",
                "nameLocation": "2569:6:6",
                "nodeType": "EnumValue",
                "src": "2569:6:6"
              },
              {
                "id": 94,
                "name": "KNITTED_CAP",
                "nameLocation": "2585:11:6",
                "nodeType": "EnumValue",
                "src": "2585:11:6"
              },
              {
                "id": 95,
                "name": "MESSY_HAIR",
                "nameLocation": "2606:10:6",
                "nodeType": "EnumValue",
                "src": "2606:10:6"
              },
              {
                "id": 96,
                "name": "MOHAWK",
                "nameLocation": "2626:6:6",
                "nodeType": "EnumValue",
                "src": "2626:6:6"
              },
              {
                "id": 97,
                "name": "MOHAWK_DARK",
                "nameLocation": "2642:11:6",
                "nodeType": "EnumValue",
                "src": "2642:11:6"
              },
              {
                "id": 98,
                "name": "MOHAWK_THIN",
                "nameLocation": "2663:11:6",
                "nodeType": "EnumValue",
                "src": "2663:11:6"
              },
              {
                "id": 99,
                "name": "ORANGE_SIDE",
                "nameLocation": "2684:11:6",
                "nodeType": "EnumValue",
                "src": "2684:11:6"
              },
              {
                "id": 100,
                "name": "PEAK_SPIKE",
                "nameLocation": "2705:10:6",
                "nodeType": "EnumValue",
                "src": "2705:10:6"
              },
              {
                "id": 101,
                "name": "PIGTAILS",
                "nameLocation": "2725:8:6",
                "nodeType": "EnumValue",
                "src": "2725:8:6"
              },
              {
                "id": 102,
                "name": "PILOT_HELMET",
                "nameLocation": "2743:12:6",
                "nodeType": "EnumValue",
                "src": "2743:12:6"
              },
              {
                "id": 103,
                "name": "PINK_WITH_HAT",
                "nameLocation": "2765:13:6",
                "nodeType": "EnumValue",
                "src": "2765:13:6"
              },
              {
                "id": 104,
                "name": "POLICE_CAP",
                "nameLocation": "2788:10:6",
                "nodeType": "EnumValue",
                "src": "2788:10:6"
              },
              {
                "id": 105,
                "name": "PURPLE_HAIR",
                "nameLocation": "2808:11:6",
                "nodeType": "EnumValue",
                "src": "2808:11:6"
              },
              {
                "id": 106,
                "name": "RED_MOHAWK",
                "nameLocation": "2829:10:6",
                "nodeType": "EnumValue",
                "src": "2829:10:6"
              },
              {
                "id": 107,
                "name": "SHAVED_HEAD",
                "nameLocation": "2849:11:6",
                "nodeType": "EnumValue",
                "src": "2849:11:6"
              },
              {
                "id": 108,
                "name": "STRAIGHT_HAIR",
                "nameLocation": "2870:13:6",
                "nodeType": "EnumValue",
                "src": "2870:13:6"
              },
              {
                "id": 109,
                "name": "STRAIGHT_HAIR_BLONDE",
                "nameLocation": "2893:20:6",
                "nodeType": "EnumValue",
                "src": "2893:20:6"
              },
              {
                "id": 110,
                "name": "STRAIGHT_HAIR_DARK",
                "nameLocation": "2923:18:6",
                "nodeType": "EnumValue",
                "src": "2923:18:6"
              },
              {
                "id": 111,
                "name": "STRINGY_HAIR",
                "nameLocation": "2951:12:6",
                "nodeType": "EnumValue",
                "src": "2951:12:6"
              },
              {
                "id": 112,
                "name": "TASSLE_HAT",
                "nameLocation": "2973:10:6",
                "nodeType": "EnumValue",
                "src": "2973:10:6"
              },
              {
                "id": 113,
                "name": "TIARA",
                "nameLocation": "2993:5:6",
                "nodeType": "EnumValue",
                "src": "2993:5:6"
              },
              {
                "id": 114,
                "name": "TOP_HAT",
                "nameLocation": "3008:7:6",
                "nodeType": "EnumValue",
                "src": "3008:7:6"
              },
              {
                "id": 115,
                "name": "WILD_BLONDE",
                "nameLocation": "3025:11:6",
                "nodeType": "EnumValue",
                "src": "3025:11:6"
              },
              {
                "id": 116,
                "name": "WILD_HAIR",
                "nameLocation": "3046:9:6",
                "nodeType": "EnumValue",
                "src": "3046:9:6"
              },
              {
                "id": 117,
                "name": "WILD_WHITE_HAIR",
                "nameLocation": "3065:15:6",
                "nodeType": "EnumValue",
                "src": "3065:15:6"
              },
              {
                "id": 118,
                "name": "BLACK_LIPSTICK",
                "nameLocation": "3107:14:6",
                "nodeType": "EnumValue",
                "src": "3107:14:6"
              },
              {
                "id": 119,
                "name": "BUCK_TEETH",
                "nameLocation": "3131:10:6",
                "nodeType": "EnumValue",
                "src": "3131:10:6"
              },
              {
                "id": 120,
                "name": "FROWN",
                "nameLocation": "3151:5:6",
                "nodeType": "EnumValue",
                "src": "3151:5:6"
              },
              {
                "id": 121,
                "name": "HOT_LIPSTICK",
                "nameLocation": "3166:12:6",
                "nodeType": "EnumValue",
                "src": "3166:12:6"
              },
              {
                "id": 122,
                "name": "MEDICAL_MASK",
                "nameLocation": "3188:12:6",
                "nodeType": "EnumValue",
                "src": "3188:12:6"
              },
              {
                "id": 123,
                "name": "PURPLE_LIPSTICK",
                "nameLocation": "3210:15:6",
                "nodeType": "EnumValue",
                "src": "3210:15:6"
              },
              {
                "id": 124,
                "name": "SMILE",
                "nameLocation": "3235:5:6",
                "nodeType": "EnumValue",
                "src": "3235:5:6"
              },
              {
                "id": 125,
                "name": "CHOKER",
                "nameLocation": "3266:6:6",
                "nodeType": "EnumValue",
                "src": "3266:6:6"
              },
              {
                "id": 126,
                "name": "GOLD_CHAIN",
                "nameLocation": "3282:10:6",
                "nodeType": "EnumValue",
                "src": "3282:10:6"
              },
              {
                "id": 127,
                "name": "SILVER_CHAIN",
                "nameLocation": "3302:12:6",
                "nodeType": "EnumValue",
                "src": "3302:12:6"
              },
              {
                "id": 128,
                "name": "CLOWN_NOSE",
                "nameLocation": "3340:10:6",
                "nodeType": "EnumValue",
                "src": "3340:10:6"
              },
              {
                "id": 129,
                "name": "CIGARETTE",
                "nameLocation": "3377:9:6",
                "nodeType": "EnumValue",
                "src": "3377:9:6"
              },
              {
                "id": 130,
                "name": "PIPE",
                "nameLocation": "3396:4:6",
                "nodeType": "EnumValue",
                "src": "3396:4:6"
              },
              {
                "id": 131,
                "name": "VAPE",
                "nameLocation": "3410:4:6",
                "nodeType": "EnumValue",
                "src": "3410:4:6"
              },
              {
                "id": 132,
                "name": "ALIEN",
                "nameLocation": "3443:5:6",
                "nodeType": "EnumValue",
                "src": "3443:5:6"
              },
              {
                "id": 133,
                "name": "APE",
                "nameLocation": "3458:3:6",
                "nodeType": "EnumValue",
                "src": "3458:3:6"
              },
              {
                "id": 134,
                "name": "HUMAN",
                "nameLocation": "3471:5:6",
                "nodeType": "EnumValue",
                "src": "3471:5:6"
              },
              {
                "id": 135,
                "name": "ZOMBIE",
                "nameLocation": "3486:6:6",
                "nodeType": "EnumValue",
                "src": "3486:6:6"
              }
            ],
            "name": "Item",
            "nameLocation": "1470:4:6",
            "nodeType": "EnumDefinition",
            "src": "1465:2033:6"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "3912:149:6",
              "statements": [
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 150,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "3922:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3929:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3922:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:12:6"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 154,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "3944:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 155,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "3953:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3944:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "3944:16:6"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3970:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 159,
                      "name": "uri_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "3977:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3970:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "3970:11:6"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 162,
                      "name": "_uriSuffix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "3991:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 163,
                      "name": "uriSuffix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4004:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3991:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "3991:22:6"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 166,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "4023:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1575",
                        "typeString": "contract IOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 168,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "4040:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 167,
                        "name": "IOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "4032:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOracle_$1575_$",
                          "typeString": "type(contract IOracle)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:22:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1575",
                        "typeString": "contract IOracle"
                      }
                    },
                    "src": "4023:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$1575",
                      "typeString": "contract IOracle"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "4023:31:6"
                }
              ]
            },
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "3504:233:6",
              "text": " @param name_         The name of the token\n @param symbol_       The symbol of the token\n @param uri_          The URI for token metadata\n @param oracleAddress The address where the Oracle resides"
            },
            "id": 173,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "3777:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3763:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3763:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "3806:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3792:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "3837:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3823:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "uriSuffix",
                  "nameLocation": "3865:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3851:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3851:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "oracleAddress",
                  "nameLocation": "3892:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "3884:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3884:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3753:158:6"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3912:0:6"
            },
            "scope": 1068,
            "src": "3742:319:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "4170:157:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 177,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4201:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4201:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 179,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "4215:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOracle_$1575",
                                "typeString": "contract IOracle"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1574,
                            "src": "4215:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4215:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4201:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865204f7261636c65206f70657261746f72206d617920706572666f726d207468697320616374696f6e",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4249:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_647c2a8014ac7adb9924f7e39e4fa6fbf81e9bbb92e620e777617fd300cd6378",
                          "typeString": "literal_string \"Only the Oracle operator may perform this action\""
                        },
                        "value": "Only the Oracle operator may perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_647c2a8014ac7adb9924f7e39e4fa6fbf81e9bbb92e620e777617fd300cd6378",
                          "typeString": "literal_string \"Only the Oracle operator may perform this action\""
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4180:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4180:129:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "4180:129:6"
                },
                {
                  "id": 186,
                  "nodeType": "PlaceholderStatement",
                  "src": "4319:1:6"
                }
              ]
            },
            "documentation": {
              "id": 174,
              "nodeType": "StructuredDocumentation",
              "src": "4067:68:6",
              "text": " @dev Modifier that only Oracle operators may call"
            },
            "id": 188,
            "name": "onlyOracleOperator",
            "nameLocation": "4149:18:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4167:2:6"
            },
            "src": "4140:187:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1566,
              1586
            ],
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "4530:197:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 199,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "4559:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 201,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1190,
                                "src": "4579:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$1190_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$1190_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 200,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4574:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4574:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1190",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4574:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4559:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 205,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "4616:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 207,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1246,
                                "src": "4636:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1246_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1246_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 206,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4631:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4631:25:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1246",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4631:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4616:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4559:109:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 214,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "4708:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 212,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4684:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Loot_$1068_$",
                            "typeString": "type(contract super Loot)"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1566,
                        "src": "4684:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4684:36:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4559:161:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 198,
                  "id": 217,
                  "nodeType": "Return",
                  "src": "4540:180:6"
                }
              ]
            },
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "4333:56:6",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4403:17:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 195,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 193,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1567,
                  "src": "4486:6:6"
                },
                {
                  "id": 194,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1587,
                  "src": "4494:7:6"
                }
              ],
              "src": "4477:25:6"
            },
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4428:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "4421:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4421:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4420:20:6"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "4520:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4519:6:6"
            },
            "scope": 1068,
            "src": "4394:333:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1245
            ],
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "4941:286:6",
              "statements": [
                {
                  "assignments": [
                    229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 229,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "4965:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "4951:21:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 228,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4951:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "id": 230,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "4975:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4951:28:6"
                },
                {
                  "assignments": [
                    233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 233,
                      "mutability": "mutable",
                      "name": "suffixURI",
                      "nameLocation": "5003:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "4989:23:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 232,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4989:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "id": 234,
                    "name": "_uriSuffix",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "5015:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4989:36:6"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 238,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "5060:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5054:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5054:5:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5054:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5054:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5078:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5054:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5218:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5054:166:6",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 247,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "5143:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 249,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 222,
                                  "src": "5161:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 248,
                                "name": "toString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1048,
                                "src": "5152:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5152:17:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 251,
                              "name": "suffixURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 233,
                              "src": "5171:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 245,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5126:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "5126:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5126:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5098:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5098:6:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5098:101:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 227,
                  "id": 256,
                  "nodeType": "Return",
                  "src": "5035:185:6"
                }
              ]
            },
            "documentation": {
              "id": 220,
              "nodeType": "StructuredDocumentation",
              "src": "4733:128:6",
              "text": " @dev Returns the URI for token type `id`.\n @notice OpenSea requires the contract to do the URL building"
            },
            "functionSelector": "0e89341c",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "4875:3:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 224,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4908:8:6"
            },
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4887:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "4879:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4879:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4878:17:6"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "4926:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4925:15:6"
            },
            "scope": 1068,
            "src": "4866:361:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "5412:162:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 267,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "5443:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5462:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5454:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 268,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5454:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5454:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5443:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5478:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5422:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5422:111:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "5422:111:6"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 276,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5550:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 278,
                    "indexExpression": {
                      "id": 277,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "5559:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5550:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 265,
                  "id": 279,
                  "nodeType": "Return",
                  "src": "5543:24:6"
                }
              ]
            },
            "documentation": {
              "id": 259,
              "nodeType": "StructuredDocumentation",
              "src": "5233:108:6",
              "text": " @dev Returns the total balance of `account`\n @notice May not query the zero address"
            },
            "functionSelector": "70a08231",
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5355:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5373:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "5365:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5365:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5364:17:6"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "5403:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5403:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5402:9:6"
            },
            "scope": 1068,
            "src": "5346:228:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1128
            ],
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "5845:167:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 293,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "5876:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5895:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5887:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 294,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5887:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5887:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5876:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5911:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5855:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:111:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "5855:111:6"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 302,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "5983:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 304,
                      "indexExpression": {
                        "id": 303,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "5993:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5983:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 306,
                    "indexExpression": {
                      "id": 305,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "5997:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5983:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 291,
                  "id": 307,
                  "nodeType": "Return",
                  "src": "5976:29:6"
                }
              ]
            },
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "5580:137:6",
              "text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n @notice May not query the zero address"
            },
            "functionSelector": "00fdd58e",
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5731:9:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5806:8:6"
            },
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5749:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5741:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5741:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5766:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5758:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5758:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5740:29:6"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5832:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5832:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5831:9:6"
            },
            "scope": 1068,
            "src": "5722:290:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1141
            ],
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "6279:369:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 324,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "6310:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6310:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 326,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "6329:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6329:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6310:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6353:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6289:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6289:117:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "6289:117:6"
                },
                {
                  "assignments": [
                    336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 336,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "6434:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "6417:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6417:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 335,
                        "nodeType": "ArrayTypeName",
                        "src": "6417:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 340,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "6464:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6464:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6450:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6454:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 338,
                        "nodeType": "ArrayTypeName",
                        "src": "6454:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6450:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6417:63:6"
                },
                {
                  "body": {
                    "id": 368,
                    "nodeType": "Block",
                    "src": "6537:74:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 355,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 336,
                              "src": "6551:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 357,
                            "indexExpression": {
                              "id": 356,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "6565:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6551:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 359,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 313,
                                  "src": "6580:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 361,
                                "indexExpression": {
                                  "id": 360,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "6589:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6580:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 362,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 316,
                                  "src": "6593:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 364,
                                "indexExpression": {
                                  "id": 363,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "6597:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6593:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 358,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                281,
                                309
                              ],
                              "referencedDeclaration": 309,
                              "src": "6570:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6570:30:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6551:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 367,
                        "nodeType": "ExpressionStatement",
                        "src": "6551:49:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 348,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "6511:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 349,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "6515:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6515:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6511:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 369,
                  "initializationExpression": {
                    "assignments": [
                      345
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6504:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "6496:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6496:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 347,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6508:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6496:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6532:3:6",
                      "subExpression": {
                        "id": 352,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "6534:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 354,
                    "nodeType": "ExpressionStatement",
                    "src": "6532:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "6491:120:6"
                },
                {
                  "expression": {
                    "id": 370,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 336,
                    "src": "6628:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 322,
                  "id": 371,
                  "nodeType": "Return",
                  "src": "6621:20:6"
                }
              ]
            },
            "documentation": {
              "id": 310,
              "nodeType": "StructuredDocumentation",
              "src": "6018:99:6",
              "text": " @dev Batched version of balanceOf.\n @notice May not query the zero address"
            },
            "functionSelector": "4e1273f4",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "6131:14:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 318,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6231:8:6"
            },
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "6163:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "6146:25:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 311,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6146:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 312,
                    "nodeType": "ArrayTypeName",
                    "src": "6146:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6190:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "6173:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 314,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6173:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 315,
                    "nodeType": "ArrayTypeName",
                    "src": "6173:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6145:49:6"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "6257:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 319,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6257:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 320,
                    "nodeType": "ArrayTypeName",
                    "src": "6257:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6256:18:6"
            },
            "scope": 1068,
            "src": "6122:526:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1149
            ],
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "6929:250:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 383,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6960:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6960:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 385,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 376,
                          "src": "6974:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6960:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6996:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6939:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6939:110:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "6939:110:6"
                },
                {
                  "expression": {
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 390,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "7060:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 394,
                        "indexExpression": {
                          "expression": {
                            "id": 391,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7079:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7079:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7060:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 395,
                      "indexExpression": {
                        "id": 393,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "7091:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7060:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 396,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "7103:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7060:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "7060:51:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7141:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7141:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 402,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "7153:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 403,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "7163:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 399,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "7126:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7126:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "EmitStatement",
                  "src": "7121:51:6"
                }
              ]
            },
            "documentation": {
              "id": 374,
              "nodeType": "StructuredDocumentation",
              "src": "6654:174:6",
              "text": " @dev Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.\n @notice `operator` cannot be the caller."
            },
            "functionSelector": "a22cb465",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "6842:17:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 380,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6916:8:6"
            },
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6868:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "6860:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6860:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "6883:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "6878:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6878:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6859:33:6"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6929:0:6"
            },
            "scope": 1068,
            "src": "6833:346:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1159
            ],
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "7417:61:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 418,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "7434:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 420,
                      "indexExpression": {
                        "id": 419,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "7453:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7434:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 422,
                    "indexExpression": {
                      "id": 421,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "7462:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7434:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 417,
                  "id": 423,
                  "nodeType": "Return",
                  "src": "7427:44:6"
                }
              ]
            },
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "7185:94:6",
              "text": " @dev Returns true if `operator` is approved to transfer `account`'s tokens."
            },
            "functionSelector": "e985e9c5",
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "7293:16:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 414,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7381:8:6"
            },
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7318:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "7310:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7310:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7335:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "7327:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7327:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7309:35:6"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "7407:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7407:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7406:6:6"
            },
            "scope": 1068,
            "src": "7284:194:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1173
            ],
            "body": {
              "id": 532,
              "nodeType": "Block",
              "src": "8135:783:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 441,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "8166:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 442,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8174:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8174:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8166:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 446,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "8205:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 447,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8211:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8211:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 445,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "8188:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8188:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8166:56:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8236:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8145:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8145:144:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "8145:144:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 455,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 430,
                          "src": "8307:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8321:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8313:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 456,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8313:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8313:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8307:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8325:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8299:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8299:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "8299:66:6"
                },
                {
                  "assignments": [
                    465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 465,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "8384:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 532,
                      "src": "8376:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 464,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8376:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 468,
                  "initialValue": {
                    "expression": {
                      "id": 466,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "8395:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "8395:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8376:29:6"
                },
                {
                  "assignments": [
                    470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 470,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "8424:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 532,
                      "src": "8416:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 469,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8416:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 471,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "8438:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 473,
                      "indexExpression": {
                        "id": 472,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "8448:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8438:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 475,
                    "indexExpression": {
                      "id": 474,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "8452:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8438:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8416:41:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 478,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "8488:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 479,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 434,
                          "src": "8503:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8488:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8523:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 477,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8467:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8467:110:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "8467:110:6"
                },
                {
                  "id": 500,
                  "nodeType": "UncheckedBlock",
                  "src": "8587:115:6",
                  "statements": [
                    {
                      "expression": {
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 484,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "8611:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 487,
                            "indexExpression": {
                              "id": 485,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 432,
                              "src": "8621:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8611:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 488,
                          "indexExpression": {
                            "id": 486,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "8625:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8611:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 489,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "8633:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 490,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "8647:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8633:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8611:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 493,
                      "nodeType": "ExpressionStatement",
                      "src": "8611:42:6"
                    },
                    {
                      "expression": {
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 494,
                            "name": "_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "8667:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 496,
                          "indexExpression": {
                            "id": 495,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "8676:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8667:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 497,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 434,
                          "src": "8685:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8667:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 499,
                      "nodeType": "ExpressionStatement",
                      "src": "8667:24:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 501,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "8711:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 504,
                        "indexExpression": {
                          "id": 502,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 432,
                          "src": "8721:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8711:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 505,
                      "indexExpression": {
                        "id": 503,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "8725:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8711:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 506,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "8732:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8711:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "8711:27:6"
                },
                {
                  "expression": {
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 509,
                        "name": "_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "8748:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "id": 510,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "8757:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8748:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 512,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "8764:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8748:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "8748:22:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 516,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8801:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 517,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "8811:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 518,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "8817:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 519,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "8821:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 520,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "8825:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 515,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "8786:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8786:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "EmitStatement",
                  "src": "8781:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 524,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 465,
                        "src": "8874:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 525,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "8884:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 526,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "8890:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 527,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "8894:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 528,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "8898:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 529,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "8906:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 523,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "8843:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8843:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "8843:68:6"
                }
              ]
            },
            "documentation": {
              "id": 426,
              "nodeType": "StructuredDocumentation",
              "src": "7484:485:6",
              "text": " @dev Transfers amount tokens of token type `id` from `from` to `to`.\n @notice May not query the zero address\n @notice If the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.\n @notice `from` must have a balance of tokens of type `id` of at least `amount`.\n @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value."
            },
            "functionSelector": "f242432a",
            "id": 533,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "7983:16:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8126:8:6"
            },
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8017:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "8009:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8009:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8039:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "8031:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8031:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8059:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "8051:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8051:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8079:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "8071:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8071:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8108:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "8095:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8095:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7999:119:6"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8135:0:6"
            },
            "scope": 1068,
            "src": "7974:944:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1189
            ],
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "9385:1189:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 551,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "9416:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 552,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9424:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9424:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9416:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 556,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "9455:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 557,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9461:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9461:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 555,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "9438:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9438:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9416:56:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9486:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9395:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9395:153:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "9395:153:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 565,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "9579:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9579:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 567,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "9593:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9593:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9579:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9621:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9558:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9558:115:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "9558:115:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 574,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "9691:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9705:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9697:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 575,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9697:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9697:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9691:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9709:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9683:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9683:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "9683:66:6"
                },
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9768:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "9760:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9760:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 587,
                  "initialValue": {
                    "expression": {
                      "id": 585,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "9779:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "9779:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9760:29:6"
                },
                {
                  "body": {
                    "id": 657,
                    "nodeType": "Block",
                    "src": "9841:496:6",
                    "statements": [
                      {
                        "assignments": [
                          600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 600,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9863:2:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 657,
                            "src": "9855:10:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 599,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9855:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 604,
                        "initialValue": {
                          "baseExpression": {
                            "id": 601,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "9868:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 603,
                          "indexExpression": {
                            "id": 602,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "9872:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9868:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9855:19:6"
                      },
                      {
                        "assignments": [
                          606
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 606,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "9896:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 657,
                            "src": "9888:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 605,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9888:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 610,
                        "initialValue": {
                          "baseExpression": {
                            "id": 607,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "9905:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 609,
                          "indexExpression": {
                            "id": 608,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "9913:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9905:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9888:27:6"
                      },
                      {
                        "assignments": [
                          612
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 612,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "9938:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 657,
                            "src": "9930:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 611,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9930:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 618,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 613,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "9952:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 615,
                            "indexExpression": {
                              "id": 614,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "9962:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9952:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 617,
                          "indexExpression": {
                            "id": 616,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "9966:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9952:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9930:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 620,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 612,
                                "src": "10010:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 621,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 606,
                                "src": "10025:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10010:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10049:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 619,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9985:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9985:122:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 625,
                        "nodeType": "ExpressionStatement",
                        "src": "9985:122:6"
                      },
                      {
                        "id": 642,
                        "nodeType": "UncheckedBlock",
                        "src": "10121:127:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 626,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "10149:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 629,
                                  "indexExpression": {
                                    "id": 627,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "10159:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10149:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 630,
                                "indexExpression": {
                                  "id": 628,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "10163:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "10149:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 631,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 612,
                                  "src": "10171:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 632,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 606,
                                  "src": "10185:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10171:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10149:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 635,
                            "nodeType": "ExpressionStatement",
                            "src": "10149:42:6"
                          },
                          {
                            "expression": {
                              "id": 640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 636,
                                  "name": "_balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "10209:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 638,
                                "indexExpression": {
                                  "id": 637,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "10218:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "10209:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "id": 639,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 606,
                                "src": "10227:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10209:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 641,
                            "nodeType": "ExpressionStatement",
                            "src": "10209:24:6"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 643,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "10261:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 646,
                              "indexExpression": {
                                "id": 644,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 600,
                                "src": "10271:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10261:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 647,
                            "indexExpression": {
                              "id": 645,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 538,
                              "src": "10275:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10261:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 648,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "10282:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10261:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 650,
                        "nodeType": "ExpressionStatement",
                        "src": "10261:27:6"
                      },
                      {
                        "expression": {
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 651,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "10302:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 653,
                            "indexExpression": {
                              "id": 652,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "10311:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10302:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 654,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "10320:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10302:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 656,
                        "nodeType": "ExpressionStatement",
                        "src": "10302:24:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 592,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "9820:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 593,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "9824:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9824:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9820:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 658,
                  "initializationExpression": {
                    "assignments": [
                      589
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9813:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 658,
                        "src": "9805:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9805:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 591,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9817:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9805:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "9836:3:6",
                      "subExpression": {
                        "id": 596,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "9838:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 598,
                    "nodeType": "ExpressionStatement",
                    "src": "9836:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "9800:537:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 660,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "10366:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 661,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "10376:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 662,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "10382:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 663,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "10386:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 664,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "10391:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 659,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "10352:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10352:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "EmitStatement",
                  "src": "10347:52:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 668,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "10459:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 669,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "10481:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 670,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "10499:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 671,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "10515:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 672,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "10532:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 673,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "10553:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 667,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "10410:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10410:157:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "10410:157:6"
                }
              ]
            },
            "documentation": {
              "id": 534,
              "nodeType": "StructuredDocumentation",
              "src": "8924:270:6",
              "text": " @dev Batched version of safeTransferFrom.\n @notice `ids` and `amounts` must have the same length.\n @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value."
            },
            "functionSelector": "2eb2c2d6",
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "9208:21:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 548,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9376:8:6"
            },
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9247:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "9239:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9239:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9269:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "9261:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9261:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "9298:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "9281:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 539,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9281:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 540,
                    "nodeType": "ArrayTypeName",
                    "src": "9281:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "9328:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "9311:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 542,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9311:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 543,
                    "nodeType": "ArrayTypeName",
                    "src": "9311:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9358:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "9345:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9345:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9229:139:6"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9385:0:6"
            },
            "scope": 1068,
            "src": "9199:1375:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 743,
              "nodeType": "Block",
              "src": "11035:448:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 692,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "11053:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11072:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11064:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11064:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11064:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11053:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11076:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11045:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11045:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "11045:67:6"
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11131:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 743,
                      "src": "11123:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11123:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 705,
                  "initialValue": {
                    "expression": {
                      "id": 703,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "11142:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "11142:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11123:29:6"
                },
                {
                  "expression": {
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 706,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "11163:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 709,
                        "indexExpression": {
                          "id": 707,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 682,
                          "src": "11173:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11163:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 710,
                      "indexExpression": {
                        "id": 708,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "11177:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11163:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 711,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "11189:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11163:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "11163:32:6"
                },
                {
                  "expression": {
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 714,
                        "name": "_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "11205:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 716,
                      "indexExpression": {
                        "id": 715,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "11214:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11205:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 717,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 684,
                      "src": "11226:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11205:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "11205:27:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 721,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "11262:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11280:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11272:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 722,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11272:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11272:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 726,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "11284:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 727,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "11293:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 728,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "11297:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 720,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "11247:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11247:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "EmitStatement",
                  "src": "11242:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 732,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "11359:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11389:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11381:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 733,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11381:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11381:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 737,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "11405:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 738,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "11426:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 739,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "11442:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 740,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "11462:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 731,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "11315:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11315:161:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "11315:161:6"
                }
              ]
            },
            "documentation": {
              "id": 678,
              "nodeType": "StructuredDocumentation",
              "src": "10580:308:6",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n @notice `account` cannot be the zero address.\n @notice If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "functionSelector": "731133e9",
            "id": 744,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 688,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 188,
                  "src": "11016:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "11016:18:6"
              }
            ],
            "name": "mint",
            "nameLocation": "10902:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10924:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "10916:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10916:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10949:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "10941:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10941:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10969:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "10961:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10961:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10998:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "10985:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10985:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10906:102:6"
            },
            "returnParameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11035:0:6"
            },
            "scope": 1068,
            "src": "10893:590:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "11926:638:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 761,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 747,
                          "src": "11944:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11958:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11950:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 762,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11950:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11950:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11944:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11962:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11936:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11936:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "11936:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 771,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "12029:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12029:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 773,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "12043:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12043:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12029:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12071:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12008:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12008:115:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "12008:115:6"
                },
                {
                  "assignments": [
                    780
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 780,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "12142:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 840,
                      "src": "12134:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 779,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12134:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 783,
                  "initialValue": {
                    "expression": {
                      "id": 781,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "12153:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "12153:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12134:29:6"
                },
                {
                  "body": {
                    "id": 815,
                    "nodeType": "Block",
                    "src": "12215:100:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 795,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "12229:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 800,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 796,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 750,
                                  "src": "12239:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 798,
                                "indexExpression": {
                                  "id": 797,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 785,
                                  "src": "12243:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12239:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12229:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 801,
                            "indexExpression": {
                              "id": 799,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 747,
                              "src": "12247:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12229:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 802,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "12254:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 804,
                            "indexExpression": {
                              "id": 803,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "12262:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12254:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12229:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 806,
                        "nodeType": "ExpressionStatement",
                        "src": "12229:35:6"
                      },
                      {
                        "expression": {
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 807,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "12278:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 809,
                            "indexExpression": {
                              "id": 808,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 747,
                              "src": "12287:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12278:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 810,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "12294:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 812,
                            "indexExpression": {
                              "id": 811,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "12302:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12294:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12278:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 814,
                        "nodeType": "ExpressionStatement",
                        "src": "12278:26:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 788,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "12194:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 789,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "12198:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12198:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12194:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 816,
                  "initializationExpression": {
                    "assignments": [
                      785
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 785,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12187:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 816,
                        "src": "12179:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 784,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12179:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 787,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12191:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12179:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12210:3:6",
                      "subExpression": {
                        "id": 792,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "12210:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 794,
                    "nodeType": "ExpressionStatement",
                    "src": "12210:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "12174:141:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 818,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "12344:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12362:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12354:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 819,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12354:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12354:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 823,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "12366:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 824,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "12370:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 825,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "12375:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 817,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "12330:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12330:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "EmitStatement",
                  "src": "12325:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 829,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "12443:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12473:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12465:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12465:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12465:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 834,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "12489:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 835,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "12505:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 836,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "12522:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 837,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "12543:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 828,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "12394:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12394:163:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "12394:163:6"
                }
              ]
            },
            "documentation": {
              "id": 745,
              "nodeType": "StructuredDocumentation",
              "src": "11489:270:6",
              "text": " @dev Batched version of _mint.\n @notice `ids` and `amounts` must have the same length.\n @notice - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "functionSelector": "1f7fdffa",
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 758,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 757,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 188,
                  "src": "11907:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "11907:18:6"
              }
            ],
            "name": "mintBatch",
            "nameLocation": "11773:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11800:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "11792:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11792:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11829:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "11812:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 748,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11812:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 749,
                    "nodeType": "ArrayTypeName",
                    "src": "11812:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11859:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "11842:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 751,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11842:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 752,
                    "nodeType": "ArrayTypeName",
                    "src": "11842:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11889:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "11876:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11876:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11782:117:6"
            },
            "returnParameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11926:0:6"
            },
            "scope": 1068,
            "src": "11764:800:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 903,
              "nodeType": "Block",
              "src": "12763:678:6",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 856,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "12777:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "12777:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12777:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 902,
                  "nodeType": "IfStatement",
                  "src": "12773:662:6",
                  "trueBody": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "12794:641:6",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 883,
                              "nodeType": "Block",
                              "src": "13057:184:6",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 876,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 872,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 870,
                                      "src": "13079:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 873,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1231,
                                          "src": "13091:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1231_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 874,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1212,
                                        "src": "13091:34:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 875,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13091:43:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13079:55:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 882,
                                  "nodeType": "IfStatement",
                                  "src": "13075:152:6",
                                  "trueBody": {
                                    "id": 881,
                                    "nodeType": "Block",
                                    "src": "13136:91:6",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 878,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13165:42:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 877,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13158:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 879,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13158:50:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 880,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13158:50:6"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 884,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 871,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 870,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13047:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 884,
                                  "src": "13040:15:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 869,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13040:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13039:17:6"
                            },
                            "src": "13031:210:6"
                          },
                          {
                            "block": {
                              "id": 892,
                              "nodeType": "Block",
                              "src": "13276:47:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 889,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 886,
                                        "src": "13301:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 888,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13294:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 890,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13294:14:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 891,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13294:14:6"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 893,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 887,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 886,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13268:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 893,
                                  "src": "13254:20:6",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 885,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13254:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13253:22:6"
                            },
                            "src": "13242:81:6"
                          },
                          {
                            "block": {
                              "id": 898,
                              "nodeType": "Block",
                              "src": "13330:95:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 895,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13355:54:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 894,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13348:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 896,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13348:62:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 897,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13348:62:6"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 899,
                            "nodeType": "TryCatchClause",
                            "src": "13324:101:6"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 863,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "12888:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 864,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "12918:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "12944:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 866,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "12968:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 867,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 853,
                              "src": "12996:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 860,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "12845:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 859,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1231,
                                "src": "12828:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1231_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12828:20:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$1231",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1212,
                            "src": "12828:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12828:190:6",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 900,
                        "nodeType": "TryStatement",
                        "src": "12808:617:6"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "12579:30:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12627:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "12619:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12619:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12653:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "12645:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12645:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12675:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "12667:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12667:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "12695:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "12687:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12687:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12715:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "12707:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12707:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12744:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "12731:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12731:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12609:145:6"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12763:0:6"
            },
            "scope": 1068,
            "src": "12570:871:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "13665:728:6",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 921,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "13679:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "13679:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13679:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 967,
                  "nodeType": "IfStatement",
                  "src": "13675:712:6",
                  "trueBody": {
                    "id": 966,
                    "nodeType": "Block",
                    "src": "13696:691:6",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 948,
                              "nodeType": "Block",
                              "src": "13966:227:6",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 941,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 937,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 935,
                                      "src": "14009:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 938,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1231,
                                          "src": "14021:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1231_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 939,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1230,
                                        "src": "14021:39:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14021:48:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14009:60:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 947,
                                  "nodeType": "IfStatement",
                                  "src": "13984:195:6",
                                  "trueBody": {
                                    "id": 946,
                                    "nodeType": "Block",
                                    "src": "14088:91:6",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 943,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14117:42:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 942,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14110:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 944,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14110:50:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 945,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14110:50:6"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 949,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 936,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 935,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13956:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 949,
                                  "src": "13949:15:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 934,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13949:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13948:17:6"
                            },
                            "src": "13940:253:6"
                          },
                          {
                            "block": {
                              "id": 957,
                              "nodeType": "Block",
                              "src": "14228:47:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 954,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 951,
                                        "src": "14253:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 953,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14246:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 955,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14246:14:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 956,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14246:14:6"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 958,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 952,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 951,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14220:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 958,
                                  "src": "14206:20:6",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 950,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14206:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14205:22:6"
                            },
                            "src": "14194:81:6"
                          },
                          {
                            "block": {
                              "id": 963,
                              "nodeType": "Block",
                              "src": "14282:95:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 960,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14307:54:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 959,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14300:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 961,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14300:62:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 962,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14300:62:6"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 964,
                            "nodeType": "TryCatchClause",
                            "src": "14276:101:6"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 928,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "13795:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 929,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "13825:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 930,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 913,
                              "src": "13851:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 931,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 916,
                              "src": "13876:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 932,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "13905:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 925,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 910,
                                  "src": "13747:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 924,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1231,
                                "src": "13730:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1231_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13730:20:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$1231",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1230,
                            "src": "13730:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13730:197:6",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 965,
                        "nodeType": "TryStatement",
                        "src": "13710:667:6"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "13456:35:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13509:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "13501:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13501:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13535:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "13527:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13527:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13557:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "13549:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13549:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13586:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "13569:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 911,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13569:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 912,
                    "nodeType": "ArrayTypeName",
                    "src": "13569:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13616:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "13599:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 914,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13599:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 915,
                    "nodeType": "ArrayTypeName",
                    "src": "13599:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13646:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "13633:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13633:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13491:165:6"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13665:0:6"
            },
            "scope": 1068,
            "src": "13447:946:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1047,
              "nodeType": "Block",
              "src": "14565:632:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 977,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "14767:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14776:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14767:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 983,
                  "nodeType": "IfStatement",
                  "src": "14763:51:6",
                  "trueBody": {
                    "id": 982,
                    "nodeType": "Block",
                    "src": "14779:35:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14800:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 976,
                        "id": 981,
                        "nodeType": "Return",
                        "src": "14793:10:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 985,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "14831:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1047,
                      "src": "14823:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14823:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 987,
                  "initialValue": {
                    "id": 986,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 972,
                    "src": "14838:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14823:20:6"
                },
                {
                  "assignments": [
                    989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 989,
                      "mutability": "mutable",
                      "name": "digits",
                      "nameLocation": "14861:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1047,
                      "src": "14853:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 988,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14853:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 990,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14853:14:6"
                },
                {
                  "body": {
                    "id": 1001,
                    "nodeType": "Block",
                    "src": "14895:57:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "14909:8:6",
                          "subExpression": {
                            "id": 994,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "14909:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "14909:8:6"
                      },
                      {
                        "expression": {
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 997,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "14931:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14939:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "14931:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1000,
                        "nodeType": "ExpressionStatement",
                        "src": "14931:10:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 991,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 985,
                      "src": "14884:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14892:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14884:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1002,
                  "nodeType": "WhileStatement",
                  "src": "14877:75:6"
                },
                {
                  "assignments": [
                    1004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1004,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "14974:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1047,
                      "src": "14961:19:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1003,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14961:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1009,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1007,
                        "name": "digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "14993:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14983:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 1005,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14987:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14983:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14961:39:6"
                },
                {
                  "body": {
                    "id": 1040,
                    "nodeType": "Block",
                    "src": "15029:131:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1013,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "15043:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15053:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "15043:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1016,
                        "nodeType": "ExpressionStatement",
                        "src": "15043:11:6"
                      },
                      {
                        "expression": {
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1017,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1004,
                              "src": "15068:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1019,
                            "indexExpression": {
                              "id": 1018,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "15075:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15068:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1031,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3438",
                                      "id": 1024,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15098:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1029,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1027,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 972,
                                            "src": "15111:5:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "3130",
                                            "id": 1028,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15119:2:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "src": "15111:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1026,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "15103:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 1025,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "15103:7:6",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1030,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15103:19:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15098:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1023,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15092:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 1022,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15092:5:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15092:31:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15085:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 1020,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "15085:6:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15085:39:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "15068:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1035,
                        "nodeType": "ExpressionStatement",
                        "src": "15068:56:6"
                      },
                      {
                        "expression": {
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1036,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "15138:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15147:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "15138:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1039,
                        "nodeType": "ExpressionStatement",
                        "src": "15138:11:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1010,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "15017:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15026:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15017:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1041,
                  "nodeType": "WhileStatement",
                  "src": "15010:150:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1044,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "15183:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15176:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1042,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "15176:6:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15176:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 976,
                  "id": 1046,
                  "nodeType": "Return",
                  "src": "15169:21:6"
                }
              ]
            },
            "documentation": {
              "id": 970,
              "nodeType": "StructuredDocumentation",
              "src": "14399:90:6",
              "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
            },
            "id": 1048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toString",
            "nameLocation": "14503:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14520:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "14512:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14512:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14511:15:6"
            },
            "returnParameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "14550:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14550:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14549:15:6"
            },
            "scope": 1068,
            "src": "14494:703:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "15481:57:6",
              "statements": [
                {
                  "expression": {
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1058,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "15491:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1059,
                      "name": "uri_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1051,
                      "src": "15498:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "15491:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "15491:11:6"
                },
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1062,
                      "name": "_uriSuffix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "15512:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1063,
                      "name": "suffix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1053,
                      "src": "15525:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "15512:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "15512:19:6"
                }
              ]
            },
            "documentation": {
              "id": 1049,
              "nodeType": "StructuredDocumentation",
              "src": "15203:169:6",
              "text": " @dev Allows the URI to be changed by the Oracle operator\n @param uri_      the base URI\n @param suffix    the end of the URI (eg, \".json\")"
            },
            "functionSelector": "bf2db4c8",
            "id": 1067,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1056,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1055,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 188,
                  "src": "15458:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "15458:18:6"
              }
            ],
            "name": "setURI",
            "nameLocation": "15386:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1051,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "15407:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "15393:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1050,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15393:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "suffix",
                  "nameLocation": "15427:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "15413:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15413:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15392:42:6"
            },
            "returnParameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15481:0:6"
            },
            "scope": 1068,
            "src": "15377:161:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1069,
        "src": "660:14880:6",
        "usedErrors": []
      }
    ],
    "src": "33:15508:6"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200232138038062002321833981016040819052620000349162000214565b845162000049906005906020880190620000b7565b5083516200005f906006906020870190620000b7565b50825162000075906003906020860190620000b7565b5081516200008b906004906020850190620000b7565b50600780546001600160a01b0319166001600160a01b0392909216919091179055506200034492505050565b828054620000c590620002f1565b90600052602060002090601f016020900481019282620000e9576000855562000134565b82601f106200010457805160ff191683800117855562000134565b8280016001018555821562000134579182015b828111156200013457825182559160200191906001019062000117565b506200014292915062000146565b5090565b5b8082111562000142576000815560010162000147565b600082601f8301126200016f57600080fd5b81516001600160401b03808211156200018c576200018c6200032e565b604051601f8301601f19908116603f01168101908282118183101715620001b757620001b76200032e565b81604052838152602092508683858801011115620001d457600080fd5b600091505b83821015620001f85785820183015181830184015290820190620001d9565b838211156200020a5760008385830101525b9695505050505050565b600080600080600060a086880312156200022d57600080fd5b85516001600160401b03808211156200024557600080fd5b6200025389838a016200015d565b965060208801519150808211156200026a57600080fd5b6200027889838a016200015d565b955060408801519150808211156200028f57600080fd5b6200029d89838a016200015d565b94506060880151915080821115620002b457600080fd5b50620002c3888289016200015d565b608088015190935090506001600160a01b0381168114620002e357600080fd5b809150509295509295909350565b600181811c908216806200030657607f821691505b602082108114156200032857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611fcd80620003546000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c806370a0823111610097578063a22cb46511610066578063a22cb4651461020b578063bf2db4c81461021e578063e985e9c514610231578063f242432a1461024457600080fd5b806370a08231146101b2578063731133e9146101c55780637dc0d1d0146101d857806395d89b411461020357600080fd5b80630e89341c116100d35780630e89341c146101575780631f7fdffa1461016a5780632eb2c2d61461017f5780634e1273f41461019257600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806306fdde0314610142575b600080fd5b61010c61010736600461179e565b610257565b6040519081526020015b60405180910390f35b61013261012d3660046118f4565b6102b0565b6040519015158152602001610116565b61014a610302565b6040516101169190611b2f565b61014a610165366004611988565b610390565b61017d6101783660046116d0565b610503565b005b61017d61018d3660046115b9565b610760565b6101a56101a0366004611821565b6109bf565b6040516101169190611aee565b61010c6101c036600461153f565b610ae9565b61017d6101d33660046117ca565b610b2d565b6007546101eb906001600160a01b031681565b6040516001600160a01b039091168152602001610116565b61014a610cca565b61017d61021936600461176b565b610cd7565b61017d61022c36600461192e565b610dae565b61013261023f366004611580565b610e90565b61017d610252366004611667565b610ebe565b60006001600160a01b0383166102885760405162461bcd60e51b815260040161027f90611b8a565b60405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102e157506001600160e01b031982166303a24d0760e21b145b806102fc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6005805461030f90611dd4565b80601f016020809104026020016040519081016040528092919081815260200182805461033b90611dd4565b80156103885780601f1061035d57610100808354040283529160200191610388565b820191906000526020600020905b81548152906001019060200180831161036b57829003601f168201915b505050505081565b60606000600380546103a190611dd4565b80601f01602080910402602001604051908101604052809291908181526020018280546103cd90611dd4565b801561041a5780601f106103ef5761010080835404028352916020019161041a565b820191906000526020600020905b8154815290600101906020018083116103fd57829003601f168201915b5050505050905060006004805461043090611dd4565b80601f016020809104026020016040519081016040528092919081815260200182805461045c90611dd4565b80156104a95780601f1061047e576101008083540402835291602001916104a9565b820191906000526020600020905b81548152906001019060200180831161048c57829003601f168201915b5050505050905060008251116104ce57604051806020016040528060008152506104fb565b816104d885611088565b826040516020016104eb93929190611a08565b6040516020818303038152906040525b949350505050565b600760009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561055157600080fd5b505afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190611563565b6001600160a01b0316336001600160a01b0316146105b95760405162461bcd60e51b815260040161027f90611bd5565b6001600160a01b0384166105df5760405162461bcd60e51b815260040161027f90611cfc565b81518351146106005760405162461bcd60e51b815260040161027f90611cb4565b3360005b84518110156106f15783818151811061061f5761061f611e97565b60200260200101516001600087848151811061063d5761063d611e97565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106859190611d61565b9250508190555083818151811061069e5761069e611e97565b6020026020010151600080886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106d99190611d61565b909155508190506106e981611e3c565b915050610604565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610742929190611b01565b60405180910390a461075981600087878787611186565b5050505050565b6001600160a01b03851633148061077c575061077c8533610e90565b6107e35760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161027f565b81518351146108045760405162461bcd60e51b815260040161027f90611cb4565b6001600160a01b03841661082a5760405162461bcd60e51b815260040161027f90611c25565b3360005b845181101561095157600085828151811061084b5761084b611e97565b60200260200101519050600085838151811061086957610869611e97565b60209081029190910181015160008481526001835260408082206001600160a01b038e1683529093529190912054909150818110156108ba5760405162461bcd60e51b815260040161027f90611c6a565b60008381526001602090815260408083206001600160a01b03808f1685528184528285208787039055848452828520805488900390558d16845290915281208054849290610909908490611d61565b90915550506001600160a01b038a1660009081526020819052604081208054849290610936908490611d61565b925050819055505050508061094a90611e3c565b905061082e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109a1929190611b01565b60405180910390a46109b7818787878787611186565b505050505050565b60608151835114610a245760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161027f565b6000835167ffffffffffffffff811115610a4057610a40611ead565b604051908082528060200260200182016040528015610a69578160200160208202803683370190505b50905060005b8451811015610ae157610ab4858281518110610a8d57610a8d611e97565b6020026020010151858381518110610aa757610aa7611e97565b6020026020010151610257565b828281518110610ac657610ac6611e97565b6020908102919091010152610ada81611e3c565b9050610a6f565b509392505050565b60006001600160a01b038216610b115760405162461bcd60e51b815260040161027f90611b8a565b506001600160a01b031660009081526020819052604090205490565b600760009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7b57600080fd5b505afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190611563565b6001600160a01b0316336001600160a01b031614610be35760405162461bcd60e51b815260040161027f90611bd5565b6001600160a01b038416610c095760405162461bcd60e51b815260040161027f90611cfc565b60008381526001602090815260408083206001600160a01b0388168452909152812080543392859291610c3d908490611d61565b90915550506001600160a01b03851660009081526020819052604081208054859290610c6a908490611d61565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610759816000878787876112f1565b6006805461030f90611dd4565b336001600160a01b0383161415610d425760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161027f565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600760009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b158015610dfc57600080fd5b505afa158015610e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e349190611563565b6001600160a01b0316336001600160a01b031614610e645760405162461bcd60e51b815260040161027f90611bd5565b8151610e779060039060208501906113bb565b508051610e8b9060049060208401906113bb565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038516331480610eda5750610eda8533610e90565b610f385760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161027f565b6001600160a01b038416610f5e5760405162461bcd60e51b815260040161027f90611c25565b60008381526001602090815260408083206001600160a01b0389168452909152902054339083811015610fa35760405162461bcd60e51b815260040161027f90611c6a565b60008581526001602090815260408083206001600160a01b03808c168552818452828520898703905584845282852080548a900390558a16845290915281208054869290610ff2908490611d61565b90915550506001600160a01b0386166000908152602081905260408120805486929061101f908490611d61565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461107f8288888888886112f1565b50505050505050565b6060816110ac5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110d657806110c081611e3c565b91506110cf9050600a83611d79565b91506110b0565b60008167ffffffffffffffff8111156110f1576110f1611ead565b6040519080825280601f01601f19166020018201604052801561111b576020820181803683370190505b5090505b84156104fb57611130600183611d8d565b915061113d600a86611e57565b611148906030611d61565b60f81b81838151811061115d5761115d611e97565b60200101906001600160f81b031916908160001a90535061117f600a86611d79565b945061111f565b6001600160a01b0384163b156109b75760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111ca9089908990889088908890600401611a4b565b602060405180830381600087803b1580156111e457600080fd5b505af1925050508015611214575060408051601f3d908101601f1916820190925261121191810190611911565b60015b6112c157611220611ec3565b806308c379a0141561125a5750611235611edf565b80611240575061125c565b8060405162461bcd60e51b815260040161027f9190611b2f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161027f565b6001600160e01b0319811663bc197c8160e01b1461107f5760405162461bcd60e51b815260040161027f90611b42565b6001600160a01b0384163b156109b75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113359089908990889088908890600401611aa9565b602060405180830381600087803b15801561134f57600080fd5b505af192505050801561137f575060408051601f3d908101601f1916820190925261137c91810190611911565b60015b61138b57611220611ec3565b6001600160e01b0319811663f23a6e6160e01b1461107f5760405162461bcd60e51b815260040161027f90611b42565b8280546113c790611dd4565b90600052602060002090601f0160209004810192826113e9576000855561142f565b82601f1061140257805160ff191683800117855561142f565b8280016001018555821561142f579182015b8281111561142f578251825591602001919060010190611414565b5061143b92915061143f565b5090565b5b8082111561143b5760008155600101611440565b600082601f83011261146557600080fd5b8135602061147282611d3d565b60405161147f8282611e0f565b8381528281019150858301600585901b8701840188101561149f57600080fd5b60005b858110156114be578135845292840192908401906001016114a2565b5090979650505050505050565b600082601f8301126114dc57600080fd5b813567ffffffffffffffff8111156114f6576114f6611ead565b60405161150d601f8301601f191660200182611e0f565b81815284602083860101111561152257600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561155157600080fd5b813561155c81611f69565b9392505050565b60006020828403121561157557600080fd5b815161155c81611f69565b6000806040838503121561159357600080fd5b823561159e81611f69565b915060208301356115ae81611f69565b809150509250929050565b600080600080600060a086880312156115d157600080fd5b85356115dc81611f69565b945060208601356115ec81611f69565b9350604086013567ffffffffffffffff8082111561160957600080fd5b61161589838a01611454565b9450606088013591508082111561162b57600080fd5b61163789838a01611454565b9350608088013591508082111561164d57600080fd5b5061165a888289016114cb565b9150509295509295909350565b600080600080600060a0868803121561167f57600080fd5b853561168a81611f69565b9450602086013561169a81611f69565b93506040860135925060608601359150608086013567ffffffffffffffff8111156116c457600080fd5b61165a888289016114cb565b600080600080608085870312156116e657600080fd5b84356116f181611f69565b9350602085013567ffffffffffffffff8082111561170e57600080fd5b61171a88838901611454565b9450604087013591508082111561173057600080fd5b61173c88838901611454565b9350606087013591508082111561175257600080fd5b5061175f878288016114cb565b91505092959194509250565b6000806040838503121561177e57600080fd5b823561178981611f69565b9150602083013580151581146115ae57600080fd5b600080604083850312156117b157600080fd5b82356117bc81611f69565b946020939093013593505050565b600080600080608085870312156117e057600080fd5b84356117eb81611f69565b93506020850135925060408501359150606085013567ffffffffffffffff81111561181557600080fd5b61175f878288016114cb565b6000806040838503121561183457600080fd5b823567ffffffffffffffff8082111561184c57600080fd5b818501915085601f83011261186057600080fd5b8135602061186d82611d3d565b60405161187a8282611e0f565b8381528281019150858301600585901b870184018b101561189a57600080fd5b600096505b848710156118c65780356118b281611f69565b83526001969096019591830191830161189f565b50965050860135925050808211156118dd57600080fd5b506118ea85828601611454565b9150509250929050565b60006020828403121561190657600080fd5b813561155c81611f81565b60006020828403121561192357600080fd5b815161155c81611f81565b6000806040838503121561194157600080fd5b823567ffffffffffffffff8082111561195957600080fd5b611965868387016114cb565b9350602085013591508082111561197b57600080fd5b506118ea858286016114cb565b60006020828403121561199a57600080fd5b5035919050565b600081518084526020808501945080840160005b838110156119d1578151875295820195908201906001016119b5565b509495945050505050565b600081518084526119f4816020860160208601611da4565b601f01601f19169290920160200192915050565b60008451611a1a818460208901611da4565b845190830190611a2e818360208901611da4565b8451910190611a41818360208801611da4565b0195945050505050565b6001600160a01b0386811682528516602082015260a060408201819052600090611a77908301866119a1565b8281036060840152611a8981866119a1565b90508281036080840152611a9d81856119dc565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611ae3908301846119dc565b979650505050505050565b60208152600061155c60208301846119a1565b604081526000611b1460408301856119a1565b8281036020840152611b2681856119a1565b95945050505050565b60208152600061155c60208301846119dc565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526030908201527f4f6e6c7920746865204f7261636c65206f70657261746f72206d61792070657260408201526f3337b936903a3434b99030b1ba34b7b760811b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b600067ffffffffffffffff821115611d5757611d57611ead565b5060051b60200190565b60008219821115611d7457611d74611e6b565b500190565b600082611d8857611d88611e81565b500490565b600082821015611d9f57611d9f611e6b565b500390565b60005b83811015611dbf578181015183820152602001611da7565b83811115611dce576000848401525b50505050565b600181811c90821680611de857607f821691505b60208210811415611e0957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611e3557611e35611ead565b6040525050565b6000600019821415611e5057611e50611e6b565b5060010190565b600082611e6657611e66611e81565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611edc5760046000803e5060005160e01c5b90565b600060443d1015611eed5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f1d57505050505090565b8285019150815181811115611f355750505050505090565b843d8701016020828501011115611f4f5750505050505090565b611f5e60208286010187611e0f565b509095945050505050565b6001600160a01b0381168114611f7e57600080fd5b50565b6001600160e01b031981168114611f7e57600080fdfea26469706673582212207fb67ddfc321ee7ca53f30c557141bba122346c5e613989ac4d1908d8b27568f64736f6c63430008060033",
  "bytecodeSha1": "0879689f7a354c047cb5c6d4b2ea331d3fcd4f31",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "Loot",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Loot._doSafeBatchTransferAcceptanceCheck": {
          "79": [
            14009,
            14069,
            false
          ]
        },
        "Loot._doSafeTransferAcceptanceCheck": {
          "80": [
            13079,
            13134,
            false
          ]
        },
        "Loot.balanceOf": {
          "60": [
            5876,
            5897,
            true
          ],
          "70": [
            5443,
            5464,
            true
          ]
        },
        "Loot.balanceOfBatch": {
          "69": [
            6310,
            6339,
            true
          ]
        },
        "Loot.mint": {
          "71": [
            11053,
            11074,
            true
          ]
        },
        "Loot.mintBatch": {
          "62": [
            11944,
            11960,
            true
          ],
          "63": [
            12029,
            12057,
            true
          ]
        },
        "Loot.safeBatchTransferFrom": {
          "64": [
            9416,
            9434,
            true
          ],
          "65": [
            9438,
            9472,
            true
          ],
          "66": [
            9579,
            9607,
            true
          ],
          "67": [
            9691,
            9707,
            true
          ],
          "68": [
            10010,
            10031,
            true
          ]
        },
        "Loot.safeTransferFrom": {
          "74": [
            8166,
            8184,
            true
          ],
          "75": [
            8188,
            8222,
            true
          ],
          "76": [
            8307,
            8323,
            true
          ],
          "77": [
            8488,
            8509,
            true
          ]
        },
        "Loot.setApprovalForAll": {
          "72": [
            6960,
            6982,
            true
          ]
        },
        "Loot.setURI": {
          "73": [
            4201,
            4235,
            true
          ]
        },
        "Loot.toString": {
          "78": [
            14767,
            14777,
            false
          ]
        },
        "Loot.uri": {
          "61": [
            5054,
            5079,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {
        "Address.isContract": {
          "55": [
            1073,
            1088
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "3": [
            864,
            911
          ]
        }
      },
      "5": {},
      "6": {
        "Loot._doSafeBatchTransferAcceptanceCheck": {
          "56": [
            14246,
            14260
          ],
          "57": [
            14300,
            14362
          ],
          "58": [
            14110,
            14160
          ]
        },
        "Loot._doSafeTransferAcceptanceCheck": {
          "59": [
            13158,
            13208
          ]
        },
        "Loot.balanceOf": {
          "0": [
            5855,
            5966
          ],
          "1": [
            5976,
            6005
          ],
          "27": [
            5422,
            5533
          ],
          "28": [
            5543,
            5567
          ]
        },
        "Loot.balanceOfBatch": {
          "23": [
            6289,
            6406
          ],
          "24": [
            6551,
            6600
          ],
          "25": [
            6532,
            6535
          ],
          "26": [
            6621,
            6641
          ]
        },
        "Loot.isApprovedForAll": {
          "39": [
            7427,
            7471
          ]
        },
        "Loot.mint": {
          "29": [
            11045,
            11112
          ],
          "30": [
            11163,
            11195
          ],
          "31": [
            11205,
            11232
          ],
          "32": [
            11242,
            11304
          ],
          "33": [
            11315,
            11476
          ]
        },
        "Loot.mintBatch": {
          "5": [
            11936,
            11998
          ],
          "6": [
            12008,
            12123
          ],
          "7": [
            12229,
            12264
          ],
          "8": [
            12278,
            12304
          ],
          "9": [
            12210,
            12213
          ],
          "10": [
            12325,
            12383
          ],
          "11": [
            12394,
            12557
          ]
        },
        "Loot.safeBatchTransferFrom": {
          "12": [
            9395,
            9548
          ],
          "13": [
            9558,
            9673
          ],
          "14": [
            9683,
            9749
          ],
          "15": [
            9985,
            10107
          ],
          "16": [
            10149,
            10191
          ],
          "17": [
            10209,
            10233
          ],
          "18": [
            10261,
            10288
          ],
          "19": [
            10302,
            10326
          ],
          "20": [
            9836,
            9839
          ],
          "21": [
            10347,
            10399
          ],
          "22": [
            10410,
            10567
          ]
        },
        "Loot.safeTransferFrom": {
          "40": [
            8145,
            8289
          ],
          "41": [
            8299,
            8365
          ],
          "42": [
            8467,
            8577
          ],
          "43": [
            8611,
            8653
          ],
          "44": [
            8667,
            8691
          ],
          "45": [
            8711,
            8738
          ],
          "46": [
            8748,
            8770
          ],
          "47": [
            8781,
            8832
          ],
          "48": [
            8843,
            8911
          ]
        },
        "Loot.setApprovalForAll": {
          "34": [
            6939,
            7049
          ],
          "35": [
            7060,
            7111
          ],
          "36": [
            7121,
            7172
          ]
        },
        "Loot.setURI": {
          "37": [
            15491,
            15502
          ],
          "38": [
            15512,
            15531
          ]
        },
        "Loot.supportsInterface": {
          "2": [
            4540,
            4720
          ]
        },
        "Loot.toString": {
          "49": [
            14793,
            14803
          ],
          "50": [
            14909,
            14917
          ],
          "51": [
            14931,
            14941
          ],
          "52": [
            15043,
            15054
          ],
          "53": [
            15068,
            15124
          ],
          "54": [
            15138,
            15149
          ]
        },
        "Loot.uri": {
          "4": [
            5035,
            5220
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.1/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC165",
    "IOracle"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f45760003560e01c806370a0823111610097578063a22cb46511610066578063a22cb4651461020b578063bf2db4c81461021e578063e985e9c514610231578063f242432a1461024457600080fd5b806370a08231146101b2578063731133e9146101c55780637dc0d1d0146101d857806395d89b411461020357600080fd5b80630e89341c116100d35780630e89341c146101575780631f7fdffa1461016a5780632eb2c2d61461017f5780634e1273f41461019257600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806306fdde0314610142575b600080fd5b61010c61010736600461179e565b610257565b6040519081526020015b60405180910390f35b61013261012d3660046118f4565b6102b0565b6040519015158152602001610116565b61014a610302565b6040516101169190611b2f565b61014a610165366004611988565b610390565b61017d6101783660046116d0565b610503565b005b61017d61018d3660046115b9565b610760565b6101a56101a0366004611821565b6109bf565b6040516101169190611aee565b61010c6101c036600461153f565b610ae9565b61017d6101d33660046117ca565b610b2d565b6007546101eb906001600160a01b031681565b6040516001600160a01b039091168152602001610116565b61014a610cca565b61017d61021936600461176b565b610cd7565b61017d61022c36600461192e565b610dae565b61013261023f366004611580565b610e90565b61017d610252366004611667565b610ebe565b60006001600160a01b0383166102885760405162461bcd60e51b815260040161027f90611b8a565b60405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102e157506001600160e01b031982166303a24d0760e21b145b806102fc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6005805461030f90611dd4565b80601f016020809104026020016040519081016040528092919081815260200182805461033b90611dd4565b80156103885780601f1061035d57610100808354040283529160200191610388565b820191906000526020600020905b81548152906001019060200180831161036b57829003601f168201915b505050505081565b60606000600380546103a190611dd4565b80601f01602080910402602001604051908101604052809291908181526020018280546103cd90611dd4565b801561041a5780601f106103ef5761010080835404028352916020019161041a565b820191906000526020600020905b8154815290600101906020018083116103fd57829003601f168201915b5050505050905060006004805461043090611dd4565b80601f016020809104026020016040519081016040528092919081815260200182805461045c90611dd4565b80156104a95780601f1061047e576101008083540402835291602001916104a9565b820191906000526020600020905b81548152906001019060200180831161048c57829003601f168201915b5050505050905060008251116104ce57604051806020016040528060008152506104fb565b816104d885611088565b826040516020016104eb93929190611a08565b6040516020818303038152906040525b949350505050565b600760009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561055157600080fd5b505afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190611563565b6001600160a01b0316336001600160a01b0316146105b95760405162461bcd60e51b815260040161027f90611bd5565b6001600160a01b0384166105df5760405162461bcd60e51b815260040161027f90611cfc565b81518351146106005760405162461bcd60e51b815260040161027f90611cb4565b3360005b84518110156106f15783818151811061061f5761061f611e97565b60200260200101516001600087848151811061063d5761063d611e97565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106859190611d61565b9250508190555083818151811061069e5761069e611e97565b6020026020010151600080886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106d99190611d61565b909155508190506106e981611e3c565b915050610604565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610742929190611b01565b60405180910390a461075981600087878787611186565b5050505050565b6001600160a01b03851633148061077c575061077c8533610e90565b6107e35760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161027f565b81518351146108045760405162461bcd60e51b815260040161027f90611cb4565b6001600160a01b03841661082a5760405162461bcd60e51b815260040161027f90611c25565b3360005b845181101561095157600085828151811061084b5761084b611e97565b60200260200101519050600085838151811061086957610869611e97565b60209081029190910181015160008481526001835260408082206001600160a01b038e1683529093529190912054909150818110156108ba5760405162461bcd60e51b815260040161027f90611c6a565b60008381526001602090815260408083206001600160a01b03808f1685528184528285208787039055848452828520805488900390558d16845290915281208054849290610909908490611d61565b90915550506001600160a01b038a1660009081526020819052604081208054849290610936908490611d61565b925050819055505050508061094a90611e3c565b905061082e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109a1929190611b01565b60405180910390a46109b7818787878787611186565b505050505050565b60608151835114610a245760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161027f565b6000835167ffffffffffffffff811115610a4057610a40611ead565b604051908082528060200260200182016040528015610a69578160200160208202803683370190505b50905060005b8451811015610ae157610ab4858281518110610a8d57610a8d611e97565b6020026020010151858381518110610aa757610aa7611e97565b6020026020010151610257565b828281518110610ac657610ac6611e97565b6020908102919091010152610ada81611e3c565b9050610a6f565b509392505050565b60006001600160a01b038216610b115760405162461bcd60e51b815260040161027f90611b8a565b506001600160a01b031660009081526020819052604090205490565b600760009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7b57600080fd5b505afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190611563565b6001600160a01b0316336001600160a01b031614610be35760405162461bcd60e51b815260040161027f90611bd5565b6001600160a01b038416610c095760405162461bcd60e51b815260040161027f90611cfc565b60008381526001602090815260408083206001600160a01b0388168452909152812080543392859291610c3d908490611d61565b90915550506001600160a01b03851660009081526020819052604081208054859290610c6a908490611d61565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610759816000878787876112f1565b6006805461030f90611dd4565b336001600160a01b0383161415610d425760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161027f565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600760009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b158015610dfc57600080fd5b505afa158015610e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e349190611563565b6001600160a01b0316336001600160a01b031614610e645760405162461bcd60e51b815260040161027f90611bd5565b8151610e779060039060208501906113bb565b508051610e8b9060049060208401906113bb565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038516331480610eda5750610eda8533610e90565b610f385760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161027f565b6001600160a01b038416610f5e5760405162461bcd60e51b815260040161027f90611c25565b60008381526001602090815260408083206001600160a01b0389168452909152902054339083811015610fa35760405162461bcd60e51b815260040161027f90611c6a565b60008581526001602090815260408083206001600160a01b03808c168552818452828520898703905584845282852080548a900390558a16845290915281208054869290610ff2908490611d61565b90915550506001600160a01b0386166000908152602081905260408120805486929061101f908490611d61565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461107f8288888888886112f1565b50505050505050565b6060816110ac5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110d657806110c081611e3c565b91506110cf9050600a83611d79565b91506110b0565b60008167ffffffffffffffff8111156110f1576110f1611ead565b6040519080825280601f01601f19166020018201604052801561111b576020820181803683370190505b5090505b84156104fb57611130600183611d8d565b915061113d600a86611e57565b611148906030611d61565b60f81b81838151811061115d5761115d611e97565b60200101906001600160f81b031916908160001a90535061117f600a86611d79565b945061111f565b6001600160a01b0384163b156109b75760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111ca9089908990889088908890600401611a4b565b602060405180830381600087803b1580156111e457600080fd5b505af1925050508015611214575060408051601f3d908101601f1916820190925261121191810190611911565b60015b6112c157611220611ec3565b806308c379a0141561125a5750611235611edf565b80611240575061125c565b8060405162461bcd60e51b815260040161027f9190611b2f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161027f565b6001600160e01b0319811663bc197c8160e01b1461107f5760405162461bcd60e51b815260040161027f90611b42565b6001600160a01b0384163b156109b75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113359089908990889088908890600401611aa9565b602060405180830381600087803b15801561134f57600080fd5b505af192505050801561137f575060408051601f3d908101601f1916820190925261137c91810190611911565b60015b61138b57611220611ec3565b6001600160e01b0319811663f23a6e6160e01b1461107f5760405162461bcd60e51b815260040161027f90611b42565b8280546113c790611dd4565b90600052602060002090601f0160209004810192826113e9576000855561142f565b82601f1061140257805160ff191683800117855561142f565b8280016001018555821561142f579182015b8281111561142f578251825591602001919060010190611414565b5061143b92915061143f565b5090565b5b8082111561143b5760008155600101611440565b600082601f83011261146557600080fd5b8135602061147282611d3d565b60405161147f8282611e0f565b8381528281019150858301600585901b8701840188101561149f57600080fd5b60005b858110156114be578135845292840192908401906001016114a2565b5090979650505050505050565b600082601f8301126114dc57600080fd5b813567ffffffffffffffff8111156114f6576114f6611ead565b60405161150d601f8301601f191660200182611e0f565b81815284602083860101111561152257600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561155157600080fd5b813561155c81611f69565b9392505050565b60006020828403121561157557600080fd5b815161155c81611f69565b6000806040838503121561159357600080fd5b823561159e81611f69565b915060208301356115ae81611f69565b809150509250929050565b600080600080600060a086880312156115d157600080fd5b85356115dc81611f69565b945060208601356115ec81611f69565b9350604086013567ffffffffffffffff8082111561160957600080fd5b61161589838a01611454565b9450606088013591508082111561162b57600080fd5b61163789838a01611454565b9350608088013591508082111561164d57600080fd5b5061165a888289016114cb565b9150509295509295909350565b600080600080600060a0868803121561167f57600080fd5b853561168a81611f69565b9450602086013561169a81611f69565b93506040860135925060608601359150608086013567ffffffffffffffff8111156116c457600080fd5b61165a888289016114cb565b600080600080608085870312156116e657600080fd5b84356116f181611f69565b9350602085013567ffffffffffffffff8082111561170e57600080fd5b61171a88838901611454565b9450604087013591508082111561173057600080fd5b61173c88838901611454565b9350606087013591508082111561175257600080fd5b5061175f878288016114cb565b91505092959194509250565b6000806040838503121561177e57600080fd5b823561178981611f69565b9150602083013580151581146115ae57600080fd5b600080604083850312156117b157600080fd5b82356117bc81611f69565b946020939093013593505050565b600080600080608085870312156117e057600080fd5b84356117eb81611f69565b93506020850135925060408501359150606085013567ffffffffffffffff81111561181557600080fd5b61175f878288016114cb565b6000806040838503121561183457600080fd5b823567ffffffffffffffff8082111561184c57600080fd5b818501915085601f83011261186057600080fd5b8135602061186d82611d3d565b60405161187a8282611e0f565b8381528281019150858301600585901b870184018b101561189a57600080fd5b600096505b848710156118c65780356118b281611f69565b83526001969096019591830191830161189f565b50965050860135925050808211156118dd57600080fd5b506118ea85828601611454565b9150509250929050565b60006020828403121561190657600080fd5b813561155c81611f81565b60006020828403121561192357600080fd5b815161155c81611f81565b6000806040838503121561194157600080fd5b823567ffffffffffffffff8082111561195957600080fd5b611965868387016114cb565b9350602085013591508082111561197b57600080fd5b506118ea858286016114cb565b60006020828403121561199a57600080fd5b5035919050565b600081518084526020808501945080840160005b838110156119d1578151875295820195908201906001016119b5565b509495945050505050565b600081518084526119f4816020860160208601611da4565b601f01601f19169290920160200192915050565b60008451611a1a818460208901611da4565b845190830190611a2e818360208901611da4565b8451910190611a41818360208801611da4565b0195945050505050565b6001600160a01b0386811682528516602082015260a060408201819052600090611a77908301866119a1565b8281036060840152611a8981866119a1565b90508281036080840152611a9d81856119dc565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611ae3908301846119dc565b979650505050505050565b60208152600061155c60208301846119a1565b604081526000611b1460408301856119a1565b8281036020840152611b2681856119a1565b95945050505050565b60208152600061155c60208301846119dc565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526030908201527f4f6e6c7920746865204f7261636c65206f70657261746f72206d61792070657260408201526f3337b936903a3434b99030b1ba34b7b760811b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b600067ffffffffffffffff821115611d5757611d57611ead565b5060051b60200190565b60008219821115611d7457611d74611e6b565b500190565b600082611d8857611d88611e81565b500490565b600082821015611d9f57611d9f611e6b565b500390565b60005b83811015611dbf578181015183820152602001611da7565b83811115611dce576000848401525b50505050565b600181811c90821680611de857607f821691505b60208210811415611e0957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611e3557611e35611ead565b6040525050565b6000600019821415611e5057611e50611e6b565b5060010190565b600082611e6657611e66611e81565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611edc5760046000803e5060005160e01c5b90565b600060443d1015611eed5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f1d57505050505090565b8285019150815181811115611f355750505050505090565b843d8701016020828501011115611f4f5750505050505090565b611f5e60208286010187611e0f565b509095945050505050565b6001600160a01b0381168114611f7e57600080fd5b50565b6001600160e01b031981168114611f7e57600080fdfea26469706673582212207fb67ddfc321ee7ca53f30c557141bba122346c5e613989ac4d1908d8b27568f64736f6c63430008060033",
  "deployedSourceMap": "660:14880:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5722:290;;;;;;:::i;:::-;;:::i;:::-;;;18055:25:8;;;18043:2;18028:18;5722:290:6;;;;;;;;4394:333;;;;;;:::i;:::-;;:::i;:::-;;;12498:14:8;;12491:22;12473:41;;12461:2;12446:18;4394:333:6;12428:92:8;1298:18:6;;;:::i;:::-;;;;;;;:::i;4866:361::-;;;;;;:::i;:::-;;:::i;11764:800::-;;;;;;:::i;:::-;;:::i;:::-;;9199:1375;;;;;;:::i;:::-;;:::i;6122:526::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5346:228::-;;;;;;:::i;:::-;;:::i;10893:590::-;;;;;;:::i;:::-;;:::i;1424:21::-;;;;;-1:-1:-1;;;;;1424:21:6;;;;;;-1:-1:-1;;;;;12705:32:8;;;12687:51;;12675:2;12660:18;1424:21:6;12642:102:8;1370:20:6;;;:::i;6833:346::-;;;;;;:::i;:::-;;:::i;15377:161::-;;;;;;:::i;:::-;;:::i;7284:194::-;;;;;;:::i;:::-;;:::i;7974:944::-;;;;;;:::i;:::-;;:::i;5722:290::-;5832:7;-1:-1:-1;;;;;5876:21:6;;5855:111;;;;-1:-1:-1;;;5855:111:6;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;5983:13:6;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5983:22:6;;;;;;;;;;;;5722:290::o;4394:333::-;4520:4;-1:-1:-1;;;;;;4559:41:6;;-1:-1:-1;;;4559:41:6;;:109;;-1:-1:-1;;;;;;;4616:52:6;;-1:-1:-1;;;4616:52:6;4559:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:4;;;4684:36:6;4540:180;4394:333;-1:-1:-1;;4394:333:6:o;1298:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4866:361::-;4926:13;4951:21;4975:4;4951:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4989:23;5015:10;4989:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5078:1;5060:7;5054:21;:25;:166;;;;;;;;;;;;;;;;;5143:7;5152:17;5161:7;5152:8;:17::i;:::-;5171:9;5126:55;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5054:166;5035:185;4866:361;-1:-1:-1;;;;4866:361:6:o;11764:800::-;4215:6;;;;;;;;;-1:-1:-1;;;;;4215:6:6;-1:-1:-1;;;;;4215:18:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4201:34:6;:10;-1:-1:-1;;;;;4201:34:6;;4180:129;;;;-1:-1:-1;;;4180:129:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;11944:16:6;::::1;11936:62;;;;-1:-1:-1::0;;;11936:62:6::1;;;;;;;:::i;:::-;12043:7;:14;12029:3;:10;:28;12008:115;;;;-1:-1:-1::0;;;12008:115:6::1;;;;;;;:::i;:::-;12153:10;12134:16;12174:141;12198:3;:10;12194:1;:14;12174:141;;;12254:7;12262:1;12254:10;;;;;;;;:::i;:::-;;;;;;;12229:9;:17;12239:3;12243:1;12239:6;;;;;;;;:::i;:::-;;;;;;;12229:17;;;;;;;;;;;:21;12247:2;-1:-1:-1::0;;;;;12229:21:6::1;-1:-1:-1::0;;;;;12229:21:6::1;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;12294:7;12302:1;12294:10;;;;;;;;:::i;:::-;;;;;;;12278:8;:12:::0;12287:2:::1;-1:-1:-1::0;;;;;12278:12:6::1;-1:-1:-1::0;;;;;12278:12:6::1;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;12210:3:6;;-1:-1:-1;12210:3:6::1;::::0;::::1;:::i;:::-;;;;12174:141;;;;12366:2;-1:-1:-1::0;;;;;12330:53:6::1;12362:1;-1:-1:-1::0;;;;;12330:53:6::1;12344:8;-1:-1:-1::0;;;;;12330:53:6::1;;12370:3;12375:7;12330:53;;;;;;;:::i;:::-;;;;;;;;12394:163;12443:8;12473:1;12489:2;12505:3;12522:7;12543:4;12394:35;:163::i;:::-;11926:638;11764:800:::0;;;;:::o;9199:1375::-;-1:-1:-1;;;;;9416:18:6;;9424:10;9416:18;;:56;;;9438:34;9455:4;9461:10;9438:16;:34::i;:::-;9395:153;;;;-1:-1:-1;;;9395:153:6;;15650:2:8;9395:153:6;;;15632:21:8;15689:2;15669:18;;;15662:30;15728:34;15708:18;;;15701:62;-1:-1:-1;;;15779:18:8;;;15772:48;15837:19;;9395:153:6;15622:240:8;9395:153:6;9593:7;:14;9579:3;:10;:28;9558:115;;;;-1:-1:-1;;;9558:115:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;9691:16:6;;9683:66;;;;-1:-1:-1;;;9683:66:6;;;;;;;:::i;:::-;9779:10;9760:16;9800:537;9824:3;:10;9820:1;:14;9800:537;;;9855:10;9868:3;9872:1;9868:6;;;;;;;;:::i;:::-;;;;;;;9855:19;;9888:14;9905:7;9913:1;9905:10;;;;;;;;:::i;:::-;;;;;;;;;;;;9930:19;9952:13;;;:9;:13;;;;;;-1:-1:-1;;;;;9952:19:6;;;;;;;;;;;;9905:10;;-1:-1:-1;10010:21:6;;;;9985:122;;;;-1:-1:-1;;;9985:122:6;;;;;;;:::i;:::-;10149:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10149:19:6;;;;;;;;;;;10171:20;;;10149:42;;10209:14;;;;;;:24;;;;;;;10261:17;;;;;;;;;:27;;10185:6;;10149:13;10261:27;;10185:6;;10261:27;:::i;:::-;;;;-1:-1:-1;;;;;;;10302:14:6;;:8;:14;;;;;;;;;;:24;;10320:6;;10302:8;:24;;10320:6;;10302:24;:::i;:::-;;;;;;;;9841:496;;;9836:3;;;;:::i;:::-;;;9800:537;;;;10382:2;-1:-1:-1;;;;;10352:47:6;10376:4;-1:-1:-1;;;;;10352:47:6;10366:8;-1:-1:-1;;;;;10352:47:6;;10386:3;10391:7;10352:47;;;;;;;:::i;:::-;;;;;;;;10410:157;10459:8;10481:4;10499:2;10515:3;10532:7;10553:4;10410:35;:157::i;:::-;9385:1189;9199:1375;;;;;:::o;6122:526::-;6257:16;6329:3;:10;6310:8;:15;:29;6289:117;;;;-1:-1:-1;;;6289:117:6;;16890:2:8;6289:117:6;;;16872:21:8;16929:2;16909:18;;;16902:30;16968:34;16948:18;;;16941:62;-1:-1:-1;;;17019:18:8;;;17012:39;17068:19;;6289:117:6;16862:231:8;6289:117:6;6417:30;6464:8;:15;6450:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6450:30:6;;6417:63;;6496:9;6491:120;6515:8;:15;6511:1;:19;6491:120;;;6570:30;6580:8;6589:1;6580:11;;;;;;;;:::i;:::-;;;;;;;6593:3;6597:1;6593:6;;;;;;;;:::i;:::-;;;;;;;6570:9;:30::i;:::-;6551:13;6565:1;6551:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;6532:3;;;:::i;:::-;;;6491:120;;;-1:-1:-1;6628:13:6;6122:526;-1:-1:-1;;;6122:526:6:o;5346:228::-;5403:7;-1:-1:-1;;;;;5443:21:6;;5422:111;;;;-1:-1:-1;;;5422:111:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5550:17:6;:8;:17;;;;;;;;;;;;5346:228::o;10893:590::-;4215:6;;;;;;;;;-1:-1:-1;;;;;4215:6:6;-1:-1:-1;;;;;4215:18:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4201:34:6;:10;-1:-1:-1;;;;;4201:34:6;;4180:129;;;;-1:-1:-1;;;4180:129:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;11053:21:6;::::1;11045:67;;;;-1:-1:-1::0;;;11045:67:6::1;;;;;;;:::i;:::-;11123:16;11163:13:::0;;;:9:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;11163:22:6;::::1;::::0;;;;;;;:32;;11142:10:::1;::::0;11189:6;;11163:22;:32:::1;::::0;11189:6;;11163:32:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;11205:17:6;::::1;:8;:17:::0;;;::::1;::::0;;;;;;:27;;11226:6;;11205:8;:27:::1;::::0;11226:6;;11205:27:::1;:::i;:::-;::::0;;;-1:-1:-1;;11247:57:6::1;::::0;;18265:25:8;;;18321:2;18306:18;;18299:34;;;-1:-1:-1;;;;;11247:57:6;;::::1;::::0;11280:1:::1;::::0;11247:57;;::::1;::::0;::::1;::::0;18238:18:8;11247:57:6::1;;;;;;;11315:161;11359:8;11389:1;11405:7;11426:2;11442:6;11462:4;11315:30;:161::i;1370:20::-:0;;;;;;;:::i;6833:346::-;6960:10;-1:-1:-1;;;;;6960:22:6;;;;6939:110;;;;-1:-1:-1;;;6939:110:6;;16480:2:8;6939:110:6;;;16462:21:8;16519:2;16499:18;;;16492:30;16558:34;16538:18;;;16531:62;-1:-1:-1;;;16609:18:8;;;16602:39;16658:19;;6939:110:6;16452:231:8;6939:110:6;7079:10;7060:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;7060:40:6;;;;;;;;;;;;:51;;-1:-1:-1;;7060:51:6;;;;;;;;;;7126:46;;12473:41:8;;;7060:40:6;;7079:10;7126:46;;12446:18:8;7126:46:6;;;;;;;6833:346;;:::o;15377:161::-;4215:6;;;;;;;;;-1:-1:-1;;;;;4215:6:6;-1:-1:-1;;;;;4215:18:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4201:34:6;:10;-1:-1:-1;;;;;4201:34:6;;4180:129;;;;-1:-1:-1;;;4180:129:6;;;;;;;:::i;:::-;15491:11;;::::1;::::0;:4:::1;::::0;:11:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;15512:19:6;;::::1;::::0;:10:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;;15377:161:::0;;:::o;7284:194::-;-1:-1:-1;;;;;7434:27:6;;;7407:4;7434:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;7284:194::o;7974:944::-;-1:-1:-1;;;;;8166:18:6;;8174:10;8166:18;;:56;;;8188:34;8205:4;8211:10;8188:16;:34::i;:::-;8145:144;;;;-1:-1:-1;;;8145:144:6;;14417:2:8;8145:144:6;;;14399:21:8;14456:2;14436:18;;;14429:30;14495:34;14475:18;;;14468:62;-1:-1:-1;;;14546:18:8;;;14539:39;14595:19;;8145:144:6;14389:231:8;8145:144:6;-1:-1:-1;;;;;8307:16:6;;8299:66;;;;-1:-1:-1;;;8299:66:6;;;;;;;:::i;:::-;8376:16;8438:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8438:19:6;;;;;;;;;;8395:10;;8488:21;;;;8467:110;;;;-1:-1:-1;;;8467:110:6;;;;;;;:::i;:::-;8611:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8611:19:6;;;;;;;;;;;8633:20;;;8611:42;;8667:14;;;;;;:24;;;;;;;8711:17;;;;;;;;;:27;;8647:6;;8611:13;8711:27;;8647:6;;8711:27;:::i;:::-;;;;-1:-1:-1;;;;;;;8748:12:6;;:8;:12;;;;;;;;;;:22;;8764:6;;8748:8;:22;;8764:6;;8748:22;:::i;:::-;;;;-1:-1:-1;;8786:46:6;;;18265:25:8;;;18321:2;18306:18;;18299:34;;;-1:-1:-1;;;;;8786:46:6;;;;;;;;;;;;;;18238:18:8;8786:46:6;;;;;;;8843:68;8874:8;8884:4;8890:2;8894;8898:6;8906:4;8843:30;:68::i;:::-;8135:783;;7974:944;;;;;:::o;14494:703::-;14550:13;14767:10;14763:51;;-1:-1:-1;;14793:10:6;;;;;;;;;;;;-1:-1:-1;;;14793:10:6;;;;;14494:703::o;14763:51::-;14838:5;14823:12;14877:75;14884:9;;14877:75;;14909:8;;;;:::i;:::-;;-1:-1:-1;14931:10:6;;-1:-1:-1;14939:2:6;14931:10;;:::i;:::-;;;14877:75;;;14961:19;14993:6;14983:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14983:17:6;;14961:39;;15010:150;15017:10;;15010:150;;15043:11;15053:1;15043:11;;:::i;:::-;;-1:-1:-1;15111:10:6;15119:2;15111:5;:10;:::i;:::-;15098:24;;:2;:24;:::i;:::-;15085:39;;15068:6;15075;15068:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;15068:56:6;;;;;;;;-1:-1:-1;15138:11:6;15147:2;15138:11;;:::i;:::-;;;15010:150;;13447:946;-1:-1:-1;;;;;13679:13:6;;1034:20:3;1080:8;13675:712:6;;13730:197;;-1:-1:-1;;;13730:197:6;;-1:-1:-1;;;;;13730:43:6;;;;;:197;;13795:8;;13825:4;;13851:3;;13876:7;;13905:4;;13730:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13730:197:6;;;;;;;;-1:-1:-1;;13730:197:6;;;;;;;;;;;;:::i;:::-;;;13710:667;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14253:6;14246:14;;-1:-1:-1;;;14246:14:6;;;;;;;;:::i;13710:667::-;;;14300:62;;-1:-1:-1;;;14300:62:6;;13175:2:8;14300:62:6;;;13157:21:8;13214:2;13194:18;;;13187:30;13253:34;13233:18;;;13226:62;-1:-1:-1;;;13304:18:8;;;13297:50;13364:19;;14300:62:6;13147:242:8;13710:667:6;-1:-1:-1;;;;;;14009:60:6;;-1:-1:-1;;;14009:60:6;13984:195;;14110:50;;-1:-1:-1;;;14110:50:6;;;;;;;:::i;12570:871::-;-1:-1:-1;;;;;12777:13:6;;1034:20:3;1080:8;12773:662:6;;12828:190;;-1:-1:-1;;;12828:190:6;;-1:-1:-1;;;;;12828:38:6;;;;;:190;;12888:8;;12918:4;;12944:2;;12968:6;;12996:4;;12828:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12828:190:6;;;;;;;;-1:-1:-1;;12828:190:6;;;;;;;;;;;;:::i;:::-;;;12808:617;;;;:::i;:::-;-1:-1:-1;;;;;;13079:55:6;;-1:-1:-1;;;13079:55:6;13075:152;;13158:50;;-1:-1:-1;;;13158:50:6;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:735:8;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;175:6;162:20;201:4;224:43;264:2;224:43;:::i;:::-;296:2;290:9;308:31;336:2;328:6;308:31;:::i;:::-;374:18;;;408:15;;;;-1:-1:-1;443:15:8;;;493:1;489:10;;;477:23;;473:32;;470:41;-1:-1:-1;467:2:8;;;524:1;521;514:12;467:2;546:1;556:163;570:2;567:1;564:9;556:163;;;627:17;;615:30;;665:12;;;;697;;;;588:1;581:9;556:163;;;-1:-1:-1;737:6:8;;78:671;-1:-1:-1;;;;;;;78:671:8:o;754:555::-;796:5;849:3;842:4;834:6;830:17;826:27;816:2;;867:1;864;857:12;816:2;903:6;890:20;929:18;925:2;922:26;919:2;;;951:18;;:::i;:::-;1000:2;994:9;1012:67;1067:2;1048:13;;-1:-1:-1;;1044:27:8;1073:4;1040:38;994:9;1012:67;:::i;:::-;1103:2;1095:6;1088:18;1149:3;1142:4;1137:2;1129:6;1125:15;1121:26;1118:35;1115:2;;;1166:1;1163;1156:12;1115:2;1230;1223:4;1215:6;1211:17;1204:4;1196:6;1192:17;1179:54;1277:1;1253:15;;;1270:4;1249:26;1242:37;;;;1257:6;806:503;-1:-1:-1;;;806:503:8:o;1314:247::-;1373:6;1426:2;1414:9;1405:7;1401:23;1397:32;1394:2;;;1442:1;1439;1432:12;1394:2;1481:9;1468:23;1500:31;1525:5;1500:31;:::i;:::-;1550:5;1384:177;-1:-1:-1;;;1384:177:8:o;1566:251::-;1636:6;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1705:1;1702;1695:12;1657:2;1737:9;1731:16;1756:31;1781:5;1756:31;:::i;1822:388::-;1890:6;1898;1951:2;1939:9;1930:7;1926:23;1922:32;1919:2;;;1967:1;1964;1957:12;1919:2;2006:9;1993:23;2025:31;2050:5;2025:31;:::i;:::-;2075:5;-1:-1:-1;2132:2:8;2117:18;;2104:32;2145:33;2104:32;2145:33;:::i;:::-;2197:7;2187:17;;;1909:301;;;;;:::o;2215:1071::-;2369:6;2377;2385;2393;2401;2454:3;2442:9;2433:7;2429:23;2425:33;2422:2;;;2471:1;2468;2461:12;2422:2;2510:9;2497:23;2529:31;2554:5;2529:31;:::i;:::-;2579:5;-1:-1:-1;2636:2:8;2621:18;;2608:32;2649:33;2608:32;2649:33;:::i;:::-;2701:7;-1:-1:-1;2759:2:8;2744:18;;2731:32;2782:18;2812:14;;;2809:2;;;2839:1;2836;2829:12;2809:2;2862:61;2915:7;2906:6;2895:9;2891:22;2862:61;:::i;:::-;2852:71;;2976:2;2965:9;2961:18;2948:32;2932:48;;3005:2;2995:8;2992:16;2989:2;;;3021:1;3018;3011:12;2989:2;3044:63;3099:7;3088:8;3077:9;3073:24;3044:63;:::i;:::-;3034:73;;3160:3;3149:9;3145:19;3132:33;3116:49;;3190:2;3180:8;3177:16;3174:2;;;3206:1;3203;3196:12;3174:2;;3229:51;3272:7;3261:8;3250:9;3246:24;3229:51;:::i;:::-;3219:61;;;2412:874;;;;;;;;:::o;3291:734::-;3395:6;3403;3411;3419;3427;3480:3;3468:9;3459:7;3455:23;3451:33;3448:2;;;3497:1;3494;3487:12;3448:2;3536:9;3523:23;3555:31;3580:5;3555:31;:::i;:::-;3605:5;-1:-1:-1;3662:2:8;3647:18;;3634:32;3675:33;3634:32;3675:33;:::i;:::-;3727:7;-1:-1:-1;3781:2:8;3766:18;;3753:32;;-1:-1:-1;3832:2:8;3817:18;;3804:32;;-1:-1:-1;3887:3:8;3872:19;;3859:33;3915:18;3904:30;;3901:2;;;3947:1;3944;3937:12;3901:2;3970:49;4011:7;4002:6;3991:9;3987:22;3970:49;:::i;4030:929::-;4175:6;4183;4191;4199;4252:3;4240:9;4231:7;4227:23;4223:33;4220:2;;;4269:1;4266;4259:12;4220:2;4308:9;4295:23;4327:31;4352:5;4327:31;:::i;:::-;4377:5;-1:-1:-1;4433:2:8;4418:18;;4405:32;4456:18;4486:14;;;4483:2;;;4513:1;4510;4503:12;4483:2;4536:61;4589:7;4580:6;4569:9;4565:22;4536:61;:::i;:::-;4526:71;;4650:2;4639:9;4635:18;4622:32;4606:48;;4679:2;4669:8;4666:16;4663:2;;;4695:1;4692;4685:12;4663:2;4718:63;4773:7;4762:8;4751:9;4747:24;4718:63;:::i;:::-;4708:73;;4834:2;4823:9;4819:18;4806:32;4790:48;;4863:2;4853:8;4850:16;4847:2;;;4879:1;4876;4869:12;4847:2;;4902:51;4945:7;4934:8;4923:9;4919:24;4902:51;:::i;:::-;4892:61;;;4210:749;;;;;;;:::o;4964:416::-;5029:6;5037;5090:2;5078:9;5069:7;5065:23;5061:32;5058:2;;;5106:1;5103;5096:12;5058:2;5145:9;5132:23;5164:31;5189:5;5164:31;:::i;:::-;5214:5;-1:-1:-1;5271:2:8;5256:18;;5243:32;5313:15;;5306:23;5294:36;;5284:2;;5344:1;5341;5334:12;5385:315;5453:6;5461;5514:2;5502:9;5493:7;5489:23;5485:32;5482:2;;;5530:1;5527;5520:12;5482:2;5569:9;5556:23;5588:31;5613:5;5588:31;:::i;:::-;5638:5;5690:2;5675:18;;;;5662:32;;-1:-1:-1;;;5472:228:8:o;5705:592::-;5800:6;5808;5816;5824;5877:3;5865:9;5856:7;5852:23;5848:33;5845:2;;;5894:1;5891;5884:12;5845:2;5933:9;5920:23;5952:31;5977:5;5952:31;:::i;:::-;6002:5;-1:-1:-1;6054:2:8;6039:18;;6026:32;;-1:-1:-1;6105:2:8;6090:18;;6077:32;;-1:-1:-1;6160:2:8;6145:18;;6132:32;6187:18;6176:30;;6173:2;;;6219:1;6216;6209:12;6173:2;6242:49;6283:7;6274:6;6263:9;6259:22;6242:49;:::i;6302:1288::-;6420:6;6428;6481:2;6469:9;6460:7;6456:23;6452:32;6449:2;;;6497:1;6494;6487:12;6449:2;6537:9;6524:23;6566:18;6607:2;6599:6;6596:14;6593:2;;;6623:1;6620;6613:12;6593:2;6661:6;6650:9;6646:22;6636:32;;6706:7;6699:4;6695:2;6691:13;6687:27;6677:2;;6728:1;6725;6718:12;6677:2;6764;6751:16;6786:4;6809:43;6849:2;6809:43;:::i;:::-;6881:2;6875:9;6893:31;6921:2;6913:6;6893:31;:::i;:::-;6959:18;;;6993:15;;;;-1:-1:-1;7028:11:8;;;7070:1;7066:10;;;7058:19;;7054:28;;7051:41;-1:-1:-1;7048:2:8;;;7105:1;7102;7095:12;7048:2;7127:1;7118:10;;7137:238;7151:2;7148:1;7145:9;7137:238;;;7222:3;7209:17;7239:31;7264:5;7239:31;:::i;:::-;7283:18;;7169:1;7162:9;;;;;7321:12;;;;7353;;7137:238;;;-1:-1:-1;7394:6:8;-1:-1:-1;;7438:18:8;;7425:32;;-1:-1:-1;;7469:16:8;;;7466:2;;;7498:1;7495;7488:12;7466:2;;7521:63;7576:7;7565:8;7554:9;7550:24;7521:63;:::i;:::-;7511:73;;;6439:1151;;;;;:::o;7595:245::-;7653:6;7706:2;7694:9;7685:7;7681:23;7677:32;7674:2;;;7722:1;7719;7712:12;7674:2;7761:9;7748:23;7780:30;7804:5;7780:30;:::i;7845:249::-;7914:6;7967:2;7955:9;7946:7;7942:23;7938:32;7935:2;;;7983:1;7980;7973:12;7935:2;8015:9;8009:16;8034:30;8058:5;8034:30;:::i;8099:541::-;8187:6;8195;8248:2;8236:9;8227:7;8223:23;8219:32;8216:2;;;8264:1;8261;8254:12;8216:2;8304:9;8291:23;8333:18;8374:2;8366:6;8363:14;8360:2;;;8390:1;8387;8380:12;8360:2;8413:49;8454:7;8445:6;8434:9;8430:22;8413:49;:::i;:::-;8403:59;;8515:2;8504:9;8500:18;8487:32;8471:48;;8544:2;8534:8;8531:16;8528:2;;;8560:1;8557;8550:12;8528:2;;8583:51;8626:7;8615:8;8604:9;8600:24;8583:51;:::i;8645:180::-;8704:6;8757:2;8745:9;8736:7;8732:23;8728:32;8725:2;;;8773:1;8770;8763:12;8725:2;-1:-1:-1;8796:23:8;;8715:110;-1:-1:-1;8715:110:8:o;8830:435::-;8883:3;8921:5;8915:12;8948:6;8943:3;8936:19;8974:4;9003:2;8998:3;8994:12;8987:19;;9040:2;9033:5;9029:14;9061:1;9071:169;9085:6;9082:1;9079:13;9071:169;;;9146:13;;9134:26;;9180:12;;;;9215:15;;;;9107:1;9100:9;9071:169;;;-1:-1:-1;9256:3:8;;8891:374;-1:-1:-1;;;;;8891:374:8:o;9270:257::-;9311:3;9349:5;9343:12;9376:6;9371:3;9364:19;9392:63;9448:6;9441:4;9436:3;9432:14;9425:4;9418:5;9414:16;9392:63;:::i;:::-;9509:2;9488:15;-1:-1:-1;;9484:29:8;9475:39;;;;9516:4;9471:50;;9319:208;-1:-1:-1;;9319:208:8:o;9532:664::-;9759:3;9797:6;9791:13;9813:53;9859:6;9854:3;9847:4;9839:6;9835:17;9813:53;:::i;:::-;9929:13;;9888:16;;;;9951:57;9929:13;9888:16;9985:4;9973:17;;9951:57;:::i;:::-;10075:13;;10030:20;;;10097:57;10075:13;10030:20;10131:4;10119:17;;10097:57;:::i;:::-;10170:20;;9767:429;-1:-1:-1;;;;;9767:429:8:o;10201:826::-;-1:-1:-1;;;;;10598:15:8;;;10580:34;;10650:15;;10645:2;10630:18;;10623:43;10560:3;10697:2;10682:18;;10675:31;;;10523:4;;10729:57;;10766:19;;10758:6;10729:57;:::i;:::-;10834:9;10826:6;10822:22;10817:2;10806:9;10802:18;10795:50;10868:44;10905:6;10897;10868:44;:::i;:::-;10854:58;;10961:9;10953:6;10949:22;10943:3;10932:9;10928:19;10921:51;10989:32;11014:6;11006;10989:32;:::i;:::-;10981:40;10532:495;-1:-1:-1;;;;;;;;10532:495:8:o;11032:560::-;-1:-1:-1;;;;;11329:15:8;;;11311:34;;11381:15;;11376:2;11361:18;;11354:43;11428:2;11413:18;;11406:34;;;11471:2;11456:18;;11449:34;;;11291:3;11514;11499:19;;11492:32;;;11254:4;;11541:45;;11566:19;;11558:6;11541:45;:::i;:::-;11533:53;11263:329;-1:-1:-1;;;;;;;11263:329:8:o;11597:261::-;11776:2;11765:9;11758:21;11739:4;11796:56;11848:2;11837:9;11833:18;11825:6;11796:56;:::i;11863:465::-;12120:2;12109:9;12102:21;12083:4;12146:56;12198:2;12187:9;12183:18;12175:6;12146:56;:::i;:::-;12250:9;12242:6;12238:22;12233:2;12222:9;12218:18;12211:50;12278:44;12315:6;12307;12278:44;:::i;:::-;12270:52;12092:236;-1:-1:-1;;;;;12092:236:8:o;12749:219::-;12898:2;12887:9;12880:21;12861:4;12918:44;12958:2;12947:9;12943:18;12935:6;12918:44;:::i;13394:404::-;13596:2;13578:21;;;13635:2;13615:18;;;13608:30;13674:34;13669:2;13654:18;;13647:62;-1:-1:-1;;;13740:2:8;13725:18;;13718:38;13788:3;13773:19;;13568:230::o;13803:407::-;14005:2;13987:21;;;14044:2;14024:18;;;14017:30;14083:34;14078:2;14063:18;;14056:62;-1:-1:-1;;;14149:2:8;14134:18;;14127:41;14200:3;14185:19;;13977:233::o;14625:412::-;14827:2;14809:21;;;14866:2;14846:18;;;14839:30;14905:34;14900:2;14885:18;;14878:62;-1:-1:-1;;;14971:2:8;14956:18;;14949:46;15027:3;15012:19;;14799:238::o;15042:401::-;15244:2;15226:21;;;15283:2;15263:18;;;15256:30;15322:34;15317:2;15302:18;;15295:62;-1:-1:-1;;;15388:2:8;15373:18;;15366:35;15433:3;15418:19;;15216:227::o;15867:406::-;16069:2;16051:21;;;16108:2;16088:18;;;16081:30;16147:34;16142:2;16127:18;;16120:62;-1:-1:-1;;;16213:2:8;16198:18;;16191:40;16263:3;16248:19;;16041:232::o;17098:404::-;17300:2;17282:21;;;17339:2;17319:18;;;17312:30;17378:34;17373:2;17358:18;;17351:62;-1:-1:-1;;;17444:2:8;17429:18;;17422:38;17492:3;17477:19;;17272:230::o;17507:397::-;17709:2;17691:21;;;17748:2;17728:18;;;17721:30;17787:34;17782:2;17767:18;;17760:62;-1:-1:-1;;;17853:2:8;17838:18;;17831:31;17894:3;17879:19;;17681:223::o;18344:183::-;18404:4;18437:18;18429:6;18426:30;18423:2;;;18459:18;;:::i;:::-;-1:-1:-1;18504:1:8;18500:14;18516:4;18496:25;;18413:114::o;18532:128::-;18572:3;18603:1;18599:6;18596:1;18593:13;18590:2;;;18609:18;;:::i;:::-;-1:-1:-1;18645:9:8;;18580:80::o;18665:120::-;18705:1;18731;18721:2;;18736:18;;:::i;:::-;-1:-1:-1;18770:9:8;;18711:74::o;18790:125::-;18830:4;18858:1;18855;18852:8;18849:2;;;18863:18;;:::i;:::-;-1:-1:-1;18900:9:8;;18839:76::o;18920:258::-;18992:1;19002:113;19016:6;19013:1;19010:13;19002:113;;;19092:11;;;19086:18;19073:11;;;19066:39;19038:2;19031:10;19002:113;;;19133:6;19130:1;19127:13;19124:2;;;19168:1;19159:6;19154:3;19150:16;19143:27;19124:2;;18973:205;;;:::o;19183:380::-;19262:1;19258:12;;;;19305;;;19326:2;;19380:4;19372:6;19368:17;19358:27;;19326:2;19433;19425:6;19422:14;19402:18;19399:38;19396:2;;;19479:10;19474:3;19470:20;19467:1;19460:31;19514:4;19511:1;19504:15;19542:4;19539:1;19532:15;19396:2;;19238:325;;;:::o;19568:249::-;19678:2;19659:13;;-1:-1:-1;;19655:27:8;19643:40;;19713:18;19698:34;;19734:22;;;19695:62;19692:2;;;19760:18;;:::i;:::-;19796:2;19789:22;-1:-1:-1;;19615:202:8:o;19822:135::-;19861:3;-1:-1:-1;;19882:17:8;;19879:2;;;19902:18;;:::i;:::-;-1:-1:-1;19949:1:8;19938:13;;19869:88::o;19962:112::-;19994:1;20020;20010:2;;20025:18;;:::i;:::-;-1:-1:-1;20059:9:8;;20000:74::o;20079:127::-;20140:10;20135:3;20131:20;20128:1;20121:31;20171:4;20168:1;20161:15;20195:4;20192:1;20185:15;20211:127;20272:10;20267:3;20263:20;20260:1;20253:31;20303:4;20300:1;20293:15;20327:4;20324:1;20317:15;20343:127;20404:10;20399:3;20395:20;20392:1;20385:31;20435:4;20432:1;20425:15;20459:4;20456:1;20449:15;20475:127;20536:10;20531:3;20527:20;20524:1;20517:31;20567:4;20564:1;20557:15;20591:4;20588:1;20581:15;20607:179;20642:3;20684:1;20666:16;20663:23;20660:2;;;20730:1;20727;20724;20709:23;-1:-1:-1;20767:1:8;20761:8;20756:3;20752:18;20660:2;20650:136;:::o;20791:671::-;20830:3;20872:4;20854:16;20851:26;20848:2;;;20838:624;:::o;20848:2::-;20914;20908:9;-1:-1:-1;;20979:16:8;20975:25;;20972:1;20908:9;20951:50;21030:4;21024:11;21054:16;21089:18;21160:2;21153:4;21145:6;21141:17;21138:25;21133:2;21125:6;21122:14;21119:45;21116:2;;;21167:5;;;;;20838:624;:::o;21116:2::-;21204:6;21198:4;21194:17;21183:28;;21240:3;21234:10;21267:2;21259:6;21256:14;21253:2;;;21273:5;;;;;;20838:624;:::o;21253:2::-;21357;21338:16;21332:4;21328:27;21324:36;21317:4;21308:6;21303:3;21299:16;21295:27;21292:69;21289:2;;;21364:5;;;;;;20838:624;:::o;21289:2::-;21380:57;21431:4;21422:6;21414;21410:19;21406:30;21400:4;21380:57;:::i;:::-;-1:-1:-1;21453:3:8;;20838:624;-1:-1:-1;;;;;20838:624:8:o;21467:131::-;-1:-1:-1;;;;;21542:31:8;;21532:42;;21522:2;;21588:1;21585;21578:12;21522:2;21512:86;:::o;21603:131::-;-1:-1:-1;;;;;;21677:32:8;;21667:43;;21657:2;;21724:1;21721;21714:12",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. Modified version of OpenZeppelin's ERC1155 implementation https://eips.ethereum.org/EIPS/eip-1155 https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155",
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "Returns the total balance of `account`",
        "notice": "May not query the zero address"
      },
      "balanceOf(address,uint256)": {
        "details": "Returns the amount of tokens of token type `id` owned by `account`.",
        "notice": "May not query the zero address"
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Batched version of balanceOf.",
        "notice": "May not query the zero address"
      },
      "constructor": {
        "params": {
          "name_": "The name of the token",
          "oracleAddress": "The address where the Oracle resides",
          "symbol_": "The symbol of the token",
          "uri_": "The URI for token metadata"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns true if `operator` is approved to transfer `account`'s tokens."
      },
      "mint(address,uint256,uint256,bytes)": {
        "details": "Creates `amount` tokens of token type `id`, and assigns them to `account`.",
        "notice": "`account` cannot be the zero address.If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
      },
      "mintBatch(address,uint256[],uint256[],bytes)": {
        "details": "Batched version of _mint.",
        "notice": "`ids` and `amounts` must have the same length.- If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Batched version of safeTransferFrom.",
        "notice": "`ids` and `amounts` must have the same length.If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers amount tokens of token type `id` from `from` to `to`.",
        "notice": "May not query the zero addressIf the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.`from` must have a balance of tokens of type `id` of at least `amount`.If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.",
        "notice": "`operator` cannot be the caller."
      },
      "setURI(string,string)": {
        "details": "Allows the URI to be changed by the Oracle operator",
        "params": {
          "suffix": "the end of the URI (eg, \".json\")",
          "uri_": "the base URI"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "Returns the URI for token type `id`.",
        "notice": "OpenSea requires the contract to do the URL building"
      }
    },
    "version": 1
  },
  "offset": [
    660,
    15540
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xBF2DB4C8 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x14A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x1988 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x15B9 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1EB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x14A PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x17D PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x192E JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x132 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2E1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x2FC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33B SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x388 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x388 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3A1 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CD SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD PUSH2 0x430 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45C SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4FB JUMP JUMPDEST DUP2 PUSH2 0x4D8 DUP6 PUSH2 0x1088 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4EB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE7F43C68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1CFC JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x61F JUMPI PUSH2 0x61F PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x63D JUMPI PUSH2 0x63D PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x69E JUMPI PUSH2 0x69E PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x6E9 DUP2 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x604 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x742 SWAP3 SWAP2 SWAP1 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x759 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x77C JUMPI POP PUSH2 0x77C DUP6 CALLER PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1C25 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x84B JUMPI PUSH2 0x84B PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x869 JUMPI PUSH2 0x869 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE DUP5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP9 SWAP1 SUB SWAP1 SSTORE DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x909 SWAP1 DUP5 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x936 SWAP1 DUP5 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x94A SWAP1 PUSH2 0x1E3C JUMP JUMPDEST SWAP1 POP PUSH2 0x82E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9A1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9B7 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA40 JUMPI PUSH2 0xA40 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA69 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAE1 JUMPI PUSH2 0xAB4 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA8D JUMPI PUSH2 0xA8D PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAA7 JUMPI PUSH2 0xAA7 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x257 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAC6 JUMPI PUSH2 0xAC6 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xADA DUP2 PUSH2 0x1E3C JUMP JUMPDEST SWAP1 POP PUSH2 0xA6F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1B8A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE7F43C68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLER SWAP3 DUP6 SWAP3 SWAP2 PUSH2 0xC3D SWAP1 DUP5 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xC6A SWAP1 DUP5 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x759 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0xD42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE7F43C68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE34 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST DUP2 MLOAD PUSH2 0xE77 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x13BB JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0xE8B SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x13BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xEDA JUMPI POP PUSH2 0xEDA DUP6 CALLER PUSH2 0xE90 JUMP JUMPDEST PUSH2 0xF38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD CALLER SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP10 DUP8 SUB SWAP1 SSTORE DUP5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP11 SWAP1 SUB SWAP1 SSTORE DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xFF2 SWAP1 DUP5 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x101F SWAP1 DUP5 SWAP1 PUSH2 0x1D61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x107F DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x12F1 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x10AC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x10D6 JUMPI DUP1 PUSH2 0x10C0 DUP2 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP PUSH2 0x10CF SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1D79 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F1 JUMPI PUSH2 0x10F1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x111B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x4FB JUMPI PUSH2 0x1130 PUSH1 0x1 DUP4 PUSH2 0x1D8D JUMP JUMPDEST SWAP2 POP PUSH2 0x113D PUSH1 0xA DUP7 PUSH2 0x1E57 JUMP JUMPDEST PUSH2 0x1148 SWAP1 PUSH1 0x30 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x115D JUMPI PUSH2 0x115D PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x117F PUSH1 0xA DUP7 PUSH2 0x1D79 JUMP JUMPDEST SWAP5 POP PUSH2 0x111F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x11CA SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1214 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1211 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12C1 JUMPI PUSH2 0x1220 PUSH2 0x1EC3 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x125A JUMPI POP PUSH2 0x1235 PUSH2 0x1EDF JUMP JUMPDEST DUP1 PUSH2 0x1240 JUMPI POP PUSH2 0x125C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x107F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1B42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1335 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x137F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x137C SWAP2 DUP2 ADD SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x138B JUMPI PUSH2 0x1220 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x107F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1B42 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x13C7 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x13E9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x142F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1402 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x142F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x142F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x142F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1414 JUMP JUMPDEST POP PUSH2 0x143B SWAP3 SWAP2 POP PUSH2 0x143F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x143B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1472 DUP3 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147F DUP3 DUP3 PUSH2 0x1E0F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x149F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x14BE JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14A2 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14F6 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150D PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1E0F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x155C DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x155C DUP2 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x159E DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x15AE DUP2 PUSH2 0x1F69 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x15DC DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x15EC DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1615 DUP10 DUP4 DUP11 ADD PUSH2 0x1454 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1637 DUP10 DUP4 DUP11 ADD PUSH2 0x1454 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165A DUP9 DUP3 DUP10 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x168A DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x169A DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165A DUP9 DUP3 DUP10 ADD PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x16F1 DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x170E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171A DUP9 DUP4 DUP10 ADD PUSH2 0x1454 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173C DUP9 DUP4 DUP10 ADD PUSH2 0x1454 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175F DUP8 DUP3 DUP9 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1789 DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17BC DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x17EB DUP2 PUSH2 0x1F69 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175F DUP8 DUP3 DUP9 ADD PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x184C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x186D DUP3 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187A DUP3 DUP3 PUSH2 0x1E0F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x18C6 JUMPI DUP1 CALLDATALOAD PUSH2 0x18B2 DUP2 PUSH2 0x1F69 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x189F JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x18DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18EA DUP6 DUP3 DUP7 ADD PUSH2 0x1454 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x155C DUP2 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x155C DUP2 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1965 DUP7 DUP4 DUP8 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x197B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18EA DUP6 DUP3 DUP7 ADD PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19D1 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x19B5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19F4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x1A1A DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x1DA4 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1A2E DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x1DA4 JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1A41 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1DA4 JUMP JUMPDEST ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1A77 SWAP1 DUP4 ADD DUP7 PUSH2 0x19A1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1A89 DUP2 DUP7 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1A9D DUP2 DUP6 PUSH2 0x19DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1AE3 SWAP1 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x155C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B14 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19A1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B26 DUP2 DUP6 PUSH2 0x19A1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x155C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865204F7261636C65206F70657261746F72206D617920706572 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x3337B936903A3434B99030B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D57 JUMPI PUSH2 0x1D57 PUSH2 0x1EAD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D74 JUMPI PUSH2 0x1D74 PUSH2 0x1E6B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D88 JUMPI PUSH2 0x1D88 PUSH2 0x1E81 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D9F JUMPI PUSH2 0x1D9F PUSH2 0x1E6B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DBF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DA7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1DCE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1DE8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E09 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1E35 JUMPI PUSH2 0x1E35 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1E50 JUMPI PUSH2 0x1E50 PUSH2 0x1E6B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E66 JUMPI PUSH2 0x1E66 PUSH2 0x1E81 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1EDC JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1EED JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1F1D JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F35 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1F4F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F5E PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1E0F JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1F7E JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xB67DDFC321EE7CA53F30C557141BBA122346C5E613989AC4D1908D8B27568F64 PUSH20 0x6F6C634300080600330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4"
    },
    "25": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20B"
    },
    "64": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBF2DB4C8"
    },
    "71": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21E"
    },
    "75": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE985E9C5"
    },
    "82": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x231"
    },
    "86": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF242432A"
    },
    "93": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x244"
    },
    "97": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "REVERT",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "109": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2"
    },
    "113": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x731133E9"
    },
    "120": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C5"
    },
    "124": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7DC0D1D0"
    },
    "131": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D8"
    },
    "135": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x203"
    },
    "146": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "150": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "REVERT",
      "path": "6"
    },
    "151": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "153": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE89341C"
    },
    "158": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "GT",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "164": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE89341C"
    },
    "169": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157"
    },
    "173": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1F7FDFFA"
    },
    "180": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16A"
    },
    "184": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2EB2C2D6"
    },
    "191": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F"
    },
    "195": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4E1273F4"
    },
    "202": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "206": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "210": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "REVERT",
      "path": "6"
    },
    "211": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "212": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "213": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xFDD58E"
    },
    "217": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF9"
    },
    "221": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "222": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "223": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1FFC9A7"
    },
    "228": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11F"
    },
    "232": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "233": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "234": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6FDDE03"
    },
    "239": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "EQ",
      "path": "6"
    },
    "240": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x142"
    },
    "243": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "244": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "245": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "DUP1",
      "path": "6"
    },
    "248": {
      "first_revert": true,
      "fn": null,
      "offset": [
        660,
        15540
      ],
      "op": "REVERT",
      "path": "6"
    },
    "249": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "250": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C"
    },
    "253": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x107"
    },
    "256": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "257": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "259": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x179E"
    },
    "262": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5722,
        6012
      ],
      "op": "JUMP",
      "path": "6"
    },
    "263": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "264": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x257"
    },
    "267": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5722,
        6012
      ],
      "op": "JUMP",
      "path": "6"
    },
    "268": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "269": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "271": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "272": {
      "op": "SWAP1"
    },
    "273": {
      "op": "DUP2"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "277": {
      "op": "ADD"
    },
    "278": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "279": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "281": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "282": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "DUP1",
      "path": "6"
    },
    "283": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "284": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "SUB",
      "path": "6"
    },
    "285": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "286": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "RETURN",
      "path": "6"
    },
    "287": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "288": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x132"
    },
    "291": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12D"
    },
    "294": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "295": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "297": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18F4"
    },
    "300": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        4394,
        4727
      ],
      "op": "JUMP",
      "path": "6"
    },
    "301": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "302": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B0"
    },
    "305": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        4394,
        4727
      ],
      "op": "JUMP",
      "path": "6"
    },
    "306": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "307": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "309": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "310": {
      "op": "SWAP1"
    },
    "311": {
      "op": "ISZERO"
    },
    "312": {
      "op": "ISZERO"
    },
    "313": {
      "op": "DUP2"
    },
    "314": {
      "op": "MSTORE"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "317": {
      "op": "ADD"
    },
    "318": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116"
    },
    "321": {
      "op": "JUMP"
    },
    "322": {
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "323": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14A"
    },
    "326": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x302"
    },
    "329": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMP",
      "path": "6"
    },
    "330": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "331": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "333": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "334": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116"
    },
    "337": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "338": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "339": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2F"
    },
    "342": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMP",
      "path": "6"
    },
    "343": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "344": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14A"
    },
    "347": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "350": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "351": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "353": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1988"
    },
    "356": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4866,
        5227
      ],
      "op": "JUMP",
      "path": "6"
    },
    "357": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "358": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x390"
    },
    "361": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4866,
        5227
      ],
      "op": "JUMP",
      "path": "6"
    },
    "362": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "363": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "366": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x178"
    },
    "369": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "370": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "372": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16D0"
    },
    "375": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11764,
        12564
      ],
      "op": "JUMP",
      "path": "6"
    },
    "376": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "377": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x503"
    },
    "380": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11764,
        12564
      ],
      "op": "JUMP",
      "path": "6"
    },
    "381": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "382": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "STOP",
      "path": "6"
    },
    "383": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "384": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "387": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "390": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "391": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "393": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15B9"
    },
    "396": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9199,
        10574
      ],
      "op": "JUMP",
      "path": "6"
    },
    "397": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "398": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x760"
    },
    "401": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9199,
        10574
      ],
      "op": "JUMP",
      "path": "6"
    },
    "402": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "403": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A5"
    },
    "406": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A0"
    },
    "409": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "410": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "412": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1821"
    },
    "415": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6122,
        6648
      ],
      "op": "JUMP",
      "path": "6"
    },
    "416": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "417": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9BF"
    },
    "420": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6122,
        6648
      ],
      "op": "JUMP",
      "path": "6"
    },
    "421": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "422": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "424": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "425": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116"
    },
    "428": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "429": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "430": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AEE"
    },
    "433": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6122,
        6648
      ],
      "op": "JUMP",
      "path": "6"
    },
    "434": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "435": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C"
    },
    "438": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C0"
    },
    "441": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "442": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "444": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x153F"
    },
    "447": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5346,
        5574
      ],
      "op": "JUMP",
      "path": "6"
    },
    "448": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "449": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAE9"
    },
    "452": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5346,
        5574
      ],
      "op": "JUMP",
      "path": "6"
    },
    "453": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "454": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "457": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D3"
    },
    "460": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "461": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "463": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17CA"
    },
    "466": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10893,
        11483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "467": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "468": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB2D"
    },
    "471": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10893,
        11483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "472": {
      "offset": [
        1424,
        1445
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "473": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "475": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "476": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EB"
    },
    "479": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "486": {
      "op": "SHL"
    },
    "487": {
      "op": "SUB"
    },
    "488": {
      "offset": [
        1424,
        1445
      ],
      "op": "AND",
      "path": "6"
    },
    "489": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "DUP2",
      "path": "6"
    },
    "490": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "JUMP",
      "path": "6"
    },
    "491": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "492": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "494": {
      "fn": "Loot.mint",
      "offset": [
        1424,
        1445
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "op": "SUB"
    },
    "503": {
      "op": "SWAP1"
    },
    "504": {
      "op": "SWAP2"
    },
    "505": {
      "op": "AND"
    },
    "506": {
      "op": "DUP2"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "offset": [
        1424,
        1445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116"
    },
    "514": {
      "op": "JUMP"
    },
    "515": {
      "offset": [
        1370,
        1390
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "516": {
      "fn": "Loot.mint",
      "offset": [
        1370,
        1390
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14A"
    },
    "519": {
      "fn": "Loot.mint",
      "offset": [
        1370,
        1390
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCCA"
    },
    "522": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        1370,
        1390
      ],
      "op": "JUMP",
      "path": "6"
    },
    "523": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "524": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "527": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x219"
    },
    "530": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "531": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "533": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176B"
    },
    "536": {
      "fn": "Loot.setApprovalForAll",
      "jump": "i",
      "offset": [
        6833,
        7179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "537": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "538": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCD7"
    },
    "541": {
      "fn": "Loot.setApprovalForAll",
      "jump": "i",
      "offset": [
        6833,
        7179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "542": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "543": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "546": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22C"
    },
    "549": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "550": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "552": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192E"
    },
    "555": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        15377,
        15538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "556": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "557": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDAE"
    },
    "560": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        15377,
        15538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "561": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "562": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x132"
    },
    "565": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23F"
    },
    "568": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "569": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "571": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1580"
    },
    "574": {
      "fn": "Loot.isApprovedForAll",
      "jump": "i",
      "offset": [
        7284,
        7478
      ],
      "op": "JUMP",
      "path": "6"
    },
    "575": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "576": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE90"
    },
    "579": {
      "fn": "Loot.isApprovedForAll",
      "jump": "i",
      "offset": [
        7284,
        7478
      ],
      "op": "JUMP",
      "path": "6"
    },
    "580": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "581": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "584": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x252"
    },
    "587": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "588": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "590": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1667"
    },
    "593": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7974,
        8918
      ],
      "op": "JUMP",
      "path": "6"
    },
    "594": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "595": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEBE"
    },
    "598": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7974,
        8918
      ],
      "op": "JUMP",
      "path": "6"
    },
    "599": {
      "fn": "Loot.balanceOf",
      "offset": [
        5722,
        6012
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "600": {
      "fn": "Loot.balanceOf",
      "offset": [
        5832,
        5839
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "op": "SUB"
    },
    "610": {
      "fn": "Loot.balanceOf",
      "offset": [
        5876,
        5897
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 0
    },
    "611": {
      "branch": 60,
      "fn": "Loot.balanceOf",
      "offset": [
        5876,
        5897
      ],
      "op": "AND",
      "path": "6"
    },
    "612": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x288"
    },
    "615": {
      "branch": 60,
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "616": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "618": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "627": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "628": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "630": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "ADD",
      "path": "6"
    },
    "631": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "634": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "635": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B8A"
    },
    "638": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5855,
        5966
      ],
      "op": "JUMP",
      "path": "6"
    },
    "639": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "640": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "642": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "643": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "DUP1",
      "path": "6"
    },
    "644": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "645": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "SUB",
      "path": "6"
    },
    "646": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "647": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "648": {
      "fn": "Loot.balanceOf",
      "offset": [
        5855,
        5966
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x0"
    },
    "652": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "653": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "DUP2",
      "path": "6"
    },
    "654": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "655": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "657": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "659": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "660": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "DUP2",
      "path": "6"
    },
    "661": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "662": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "664": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "DUP1",
      "path": "6"
    },
    "665": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "DUP4",
      "path": "6"
    },
    "666": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        5996
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "op": "SUB"
    },
    "675": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "676": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "677": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "678": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "AND",
      "path": "6"
    },
    "679": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "DUP4",
      "path": "6"
    },
    "680": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "681": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "682": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "683": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "684": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "685": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "686": {
      "fn": "Loot.balanceOf",
      "offset": [
        5983,
        6005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "687": {
      "fn": "Loot.balanceOf",
      "jump": "o",
      "offset": [
        5722,
        6012
      ],
      "op": "JUMP",
      "path": "6"
    },
    "688": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "689": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4520,
        4524
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "SUB"
    },
    "699": {
      "op": "NOT"
    },
    "700": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4600
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 2
    },
    "701": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4600
      ],
      "op": "AND",
      "path": "6"
    },
    "702": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "707": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "709": {
      "op": "SHL"
    },
    "710": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4600
      ],
      "op": "EQ",
      "path": "6"
    },
    "711": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4600
      ],
      "op": "DUP1",
      "path": "6"
    },
    "712": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4668
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E1"
    },
    "715": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4668
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "723": {
      "op": "SHL"
    },
    "724": {
      "op": "SUB"
    },
    "725": {
      "op": "NOT"
    },
    "726": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4616,
        4668
      ],
      "op": "DUP3",
      "path": "6"
    },
    "727": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4616,
        4668
      ],
      "op": "AND",
      "path": "6"
    },
    "728": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4616,
        4668
      ],
      "op": "EQ",
      "path": "6"
    },
    "737": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4668
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "738": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4720
      ],
      "op": "DUP1",
      "path": "6"
    },
    "739": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4720
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FC"
    },
    "742": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4559,
        4720
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "743": {
      "op": "POP"
    },
    "744": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "749": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "751": {
      "op": "SHL"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "op": "NOT"
    },
    "761": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 3
    },
    "762": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "4"
    },
    "763": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "4"
    },
    "764": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4684,
        4720
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "765": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4540,
        4720
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "766": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4394,
        4727
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "fn": "Loot.supportsInterface",
      "jump": "o",
      "offset": [
        4394,
        4727
      ],
      "op": "JUMP",
      "path": "6"
    },
    "770": {
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "771": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "773": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "774": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "775": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30F"
    },
    "778": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "779": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD4"
    },
    "782": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMP",
      "path": "6"
    },
    "783": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "784": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "785": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "787": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "788": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "790": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "791": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "792": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DIV",
      "path": "6"
    },
    "793": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MUL",
      "path": "6"
    },
    "794": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "796": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "797": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "799": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "800": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "801": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "802": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "803": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "805": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "806": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "807": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "808": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "809": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "810": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "811": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "812": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "813": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "815": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "816": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP3",
      "path": "6"
    },
    "817": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "818": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "819": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33B"
    },
    "822": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "823": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD4"
    },
    "826": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMP",
      "path": "6"
    },
    "827": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "828": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "829": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "830": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x388"
    },
    "833": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "834": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "835": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "837": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "LT",
      "path": "6"
    },
    "838": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35D"
    },
    "841": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "842": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "845": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "846": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP4",
      "path": "6"
    },
    "847": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "848": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DIV",
      "path": "6"
    },
    "849": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MUL",
      "path": "6"
    },
    "850": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP4",
      "path": "6"
    },
    "851": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "852": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "853": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "855": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "856": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "857": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x388"
    },
    "860": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMP",
      "path": "6"
    },
    "861": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "862": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP3",
      "path": "6"
    },
    "863": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "864": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "865": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "866": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "868": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "869": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "871": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "873": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "874": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "875": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "876": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "877": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "878": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "879": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "880": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "881": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "883": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "884": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "885": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "887": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "888": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP1",
      "path": "6"
    },
    "889": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP4",
      "path": "6"
    },
    "890": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "GT",
      "path": "6"
    },
    "891": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36B"
    },
    "894": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "895": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP3",
      "path": "6"
    },
    "896": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "897": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SUB",
      "path": "6"
    },
    "898": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "900": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "AND",
      "path": "6"
    },
    "901": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP3",
      "path": "6"
    },
    "902": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "ADD",
      "path": "6"
    },
    "903": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "904": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "905": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "POP",
      "path": "6"
    },
    "906": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "POP",
      "path": "6"
    },
    "907": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "POP",
      "path": "6"
    },
    "908": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "POP",
      "path": "6"
    },
    "909": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "POP",
      "path": "6"
    },
    "910": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1298,
        1316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "911": {
      "fn": "Loot.supportsInterface",
      "jump": "o",
      "offset": [
        1298,
        1316
      ],
      "op": "JUMP",
      "path": "6"
    },
    "912": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "913": {
      "fn": "Loot.uri",
      "offset": [
        4926,
        4939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "915": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "917": {
      "fn": "Loot.uri",
      "offset": [
        4975,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "919": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "920": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "921": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A1"
    },
    "924": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "925": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD4"
    },
    "928": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMP",
      "path": "6"
    },
    "929": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "930": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "931": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "933": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "934": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "936": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "937": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "938": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DIV",
      "path": "6"
    },
    "939": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "MUL",
      "path": "6"
    },
    "940": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "942": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "943": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "945": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "946": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "947": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP2",
      "path": "6"
    },
    "948": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "949": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "951": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "952": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "953": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "954": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "955": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "956": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP2",
      "path": "6"
    },
    "957": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP2",
      "path": "6"
    },
    "958": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "959": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "961": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "962": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP3",
      "path": "6"
    },
    "963": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "964": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "965": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CD"
    },
    "968": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "969": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD4"
    },
    "972": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMP",
      "path": "6"
    },
    "973": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "974": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "975": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "976": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41A"
    },
    "979": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "980": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "981": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "983": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "LT",
      "path": "6"
    },
    "984": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EF"
    },
    "987": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "988": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "991": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "992": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP4",
      "path": "6"
    },
    "993": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "994": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DIV",
      "path": "6"
    },
    "995": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "MUL",
      "path": "6"
    },
    "996": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP4",
      "path": "6"
    },
    "997": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "998": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "999": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1001": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "1002": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1003": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41A"
    },
    "1006": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1007": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1008": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1009": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "1010": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1011": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1012": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1014": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1015": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1017": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1019": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1020": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1021": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1022": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1023": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1024": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1025": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1026": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1027": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1029": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "1030": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1031": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1033": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "1034": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1035": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1036": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "GT",
      "path": "6"
    },
    "1037": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FD"
    },
    "1040": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1041": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1042": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1043": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SUB",
      "path": "6"
    },
    "1044": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1046": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "AND",
      "path": "6"
    },
    "1047": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1048": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "ADD",
      "path": "6"
    },
    "1049": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1050": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1051": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "POP",
      "path": "6"
    },
    "1052": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "POP",
      "path": "6"
    },
    "1053": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "POP",
      "path": "6"
    },
    "1054": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "POP",
      "path": "6"
    },
    "1055": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "POP",
      "path": "6"
    },
    "1056": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1057": {
      "fn": "Loot.uri",
      "offset": [
        4951,
        4979
      ],
      "op": "POP",
      "path": "6"
    },
    "1058": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1060": {
      "fn": "Loot.uri",
      "offset": [
        5015,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1062": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1063": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1064": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x430"
    },
    "1067": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1068": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD4"
    },
    "1071": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1072": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1073": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1074": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1076": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1077": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1079": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1080": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1081": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DIV",
      "path": "6"
    },
    "1082": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "MUL",
      "path": "6"
    },
    "1083": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1085": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1086": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1088": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1089": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1090": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1091": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1092": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1094": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1095": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1096": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1097": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1098": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1099": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1100": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1101": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1102": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1104": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1105": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1106": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1107": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1108": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45C"
    },
    "1111": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1112": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD4"
    },
    "1115": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1116": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1117": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1118": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1119": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A9"
    },
    "1122": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1123": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1124": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1126": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "LT",
      "path": "6"
    },
    "1127": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47E"
    },
    "1130": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1131": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1134": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1135": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1136": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1137": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DIV",
      "path": "6"
    },
    "1138": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "MUL",
      "path": "6"
    },
    "1139": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1140": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1141": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1142": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1144": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1145": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1146": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A9"
    },
    "1149": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1150": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1151": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1152": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1153": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1154": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1155": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1157": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1158": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1160": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1162": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1163": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1164": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1165": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1166": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1167": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1168": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1169": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1170": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1172": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1173": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1174": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1176": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1177": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1178": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1179": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "GT",
      "path": "6"
    },
    "1180": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x48C"
    },
    "1183": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1184": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1185": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1186": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SUB",
      "path": "6"
    },
    "1187": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1189": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "AND",
      "path": "6"
    },
    "1190": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1191": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "ADD",
      "path": "6"
    },
    "1192": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1193": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1194": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "POP",
      "path": "6"
    },
    "1195": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "POP",
      "path": "6"
    },
    "1196": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "POP",
      "path": "6"
    },
    "1197": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "POP",
      "path": "6"
    },
    "1198": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "POP",
      "path": "6"
    },
    "1199": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1200": {
      "fn": "Loot.uri",
      "offset": [
        4989,
        5025
      ],
      "op": "POP",
      "path": "6"
    },
    "1201": {
      "fn": "Loot.uri",
      "offset": [
        5078,
        5079
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x0"
    },
    "1203": {
      "fn": "Loot.uri",
      "offset": [
        5060,
        5067
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1204": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5075
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1205": {
      "branch": 61,
      "fn": "Loot.uri",
      "offset": [
        5054,
        5079
      ],
      "op": "GT",
      "path": "6"
    },
    "1206": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4CE"
    },
    "1209": {
      "branch": 61,
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1210": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1212": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1213": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1214": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1216": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "ADD",
      "path": "6"
    },
    "1217": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1219": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1220": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1221": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1223": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1224": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1225": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "POP",
      "path": "6"
    },
    "1226": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FB"
    },
    "1229": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1230": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1231": {
      "fn": "Loot.uri",
      "offset": [
        5143,
        5150
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1232": {
      "fn": "Loot.uri",
      "offset": [
        5152,
        5169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D8"
    },
    "1235": {
      "fn": "Loot.uri",
      "offset": [
        5161,
        5168
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1236": {
      "fn": "Loot.uri",
      "offset": [
        5152,
        5160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1088"
    },
    "1239": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        5152,
        5169
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1240": {
      "fn": "Loot.uri",
      "offset": [
        5152,
        5169
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1241": {
      "fn": "Loot.uri",
      "offset": [
        5171,
        5180
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1242": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1244": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1245": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1247": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "ADD",
      "path": "6"
    },
    "1248": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4EB"
    },
    "1251": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1252": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1253": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1254": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1255": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A08"
    },
    "1258": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        5126,
        5181
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1259": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1260": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1262": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1263": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1265": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1266": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1267": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "SUB",
      "path": "6"
    },
    "1268": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "SUB",
      "path": "6"
    },
    "1269": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1270": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1271": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1272": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1274": {
      "fn": "Loot.uri",
      "offset": [
        5126,
        5181
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1275": {
      "fn": "Loot.uri",
      "offset": [
        5054,
        5220
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1276": {
      "fn": "Loot.uri",
      "offset": [
        5035,
        5220
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1277": {
      "fn": "Loot.uri",
      "offset": [
        4866,
        5227
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "op": "POP"
    },
    "1282": {
      "fn": "Loot.uri",
      "jump": "o",
      "offset": [
        4866,
        5227
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1283": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1284": {
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "1286": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1288": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1289": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4221
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1290": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1291": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1294": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4221
      ],
      "op": "EXP",
      "path": "6"
    },
    "1295": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1296": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4221
      ],
      "op": "DIV",
      "path": "6"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1303": {
      "op": "SHL"
    },
    "1304": {
      "op": "SUB"
    },
    "1305": {
      "offset": [
        4215,
        4221
      ],
      "op": "AND",
      "path": "6"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1312": {
      "op": "SHL"
    },
    "1313": {
      "op": "SUB"
    },
    "1314": {
      "offset": [
        4215,
        4233
      ],
      "op": "AND",
      "path": "6"
    },
    "1315": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4233
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE7F43C68"
    },
    "1320": {
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1322": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1323": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1324": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1329": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "1330": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1332": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "SHL",
      "path": "6"
    },
    "1333": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1334": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1335": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1337": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "1338": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1340": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1342": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1343": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1344": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1345": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "SUB",
      "path": "6"
    },
    "1346": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1347": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1348": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1349": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1350": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1351": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1352": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1353": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x551"
    },
    "1356": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1357": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1359": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1360": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1361": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1362": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "1363": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "GAS",
      "path": "6"
    },
    "1364": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1365": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1366": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1367": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1368": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x565"
    },
    "1371": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1372": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1373": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1375": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1376": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1377": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1378": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1380": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1381": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1382": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "1383": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "1384": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "1385": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "1386": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1388": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1389": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1390": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1392": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "NOT",
      "path": "6"
    },
    "1393": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1395": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1396": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "1397": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "1398": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1399": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "1400": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1401": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1403": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1404": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "1405": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1406": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "1407": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1408": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x589"
    },
    "1411": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1412": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1413": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1563"
    },
    "1416": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1417": {
      "fn": "Loot.mintBatch",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1424": {
      "op": "SHL"
    },
    "1425": {
      "op": "SUB"
    },
    "1426": {
      "offset": [
        4201,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "1427": {
      "offset": [
        4201,
        4211
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "offset": [
        4201,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "1437": {
      "fn": "Loot.mintBatch",
      "offset": [
        4201,
        4235
      ],
      "op": "EQ",
      "path": "6"
    },
    "1438": {
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B9"
    },
    "1441": {
      "offset": [
        4180,
        4309
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1442": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1444": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1451": {
      "op": "SHL"
    },
    "1452": {
      "offset": [
        4180,
        4309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1453": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1454": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1456": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "ADD",
      "path": "6"
    },
    "1457": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "1460": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1461": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BD5"
    },
    "1464": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        4180,
        4309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1465": {
      "fn": "Loot.mintBatch",
      "offset": [
        4180,
        4309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "Loot.mintBatch",
      "offset": [
        11944,
        11960
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 5
    },
    "1475": {
      "branch": 62,
      "fn": "Loot.mintBatch",
      "offset": [
        11944,
        11960
      ],
      "op": "AND",
      "path": "6"
    },
    "1476": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DF"
    },
    "1479": {
      "branch": 62,
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1480": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1482": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1491": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1492": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1494": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "ADD",
      "path": "6"
    },
    "1495": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "1498": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1499": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CFC"
    },
    "1502": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11936,
        11998
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1503": {
      "fn": "Loot.mintBatch",
      "offset": [
        11936,
        11998
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1504": {
      "fn": "Loot.mintBatch",
      "offset": [
        12043,
        12050
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 6
    },
    "1505": {
      "fn": "Loot.mintBatch",
      "offset": [
        12043,
        12057
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1506": {
      "fn": "Loot.mintBatch",
      "offset": [
        12029,
        12032
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1507": {
      "fn": "Loot.mintBatch",
      "offset": [
        12029,
        12039
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1508": {
      "branch": 63,
      "fn": "Loot.mintBatch",
      "offset": [
        12029,
        12057
      ],
      "op": "EQ",
      "path": "6"
    },
    "1509": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x600"
    },
    "1512": {
      "branch": 63,
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1513": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1515": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1524": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1525": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1527": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "ADD",
      "path": "6"
    },
    "1528": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "1531": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1532": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CB4"
    },
    "1535": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12008,
        12123
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1536": {
      "fn": "Loot.mintBatch",
      "offset": [
        12008,
        12123
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1537": {
      "fn": "Loot.mintBatch",
      "offset": [
        12153,
        12163
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1538": {
      "fn": "Loot.mintBatch",
      "offset": [
        12134,
        12150
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1540": {
      "fn": "Loot.mintBatch",
      "offset": [
        12174,
        12315
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1541": {
      "fn": "Loot.mintBatch",
      "offset": [
        12198,
        12201
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1542": {
      "fn": "Loot.mintBatch",
      "offset": [
        12198,
        12208
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1543": {
      "fn": "Loot.mintBatch",
      "offset": [
        12194,
        12195
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1544": {
      "fn": "Loot.mintBatch",
      "offset": [
        12194,
        12208
      ],
      "op": "LT",
      "path": "6"
    },
    "1545": {
      "fn": "Loot.mintBatch",
      "offset": [
        12174,
        12315
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1546": {
      "fn": "Loot.mintBatch",
      "offset": [
        12174,
        12315
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F1"
    },
    "1549": {
      "fn": "Loot.mintBatch",
      "offset": [
        12174,
        12315
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1550": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12261
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 7
    },
    "1551": {
      "fn": "Loot.mintBatch",
      "offset": [
        12262,
        12263
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1552": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1553": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1554": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1555": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "LT",
      "path": "6"
    },
    "1556": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x61F"
    },
    "1559": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1560": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x61F"
    },
    "1563": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "1566": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12254,
        12264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1567": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1568": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1570": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "MUL",
      "path": "6"
    },
    "1571": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1573": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "ADD",
      "path": "6"
    },
    "1574": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "ADD",
      "path": "6"
    },
    "1575": {
      "fn": "Loot.mintBatch",
      "offset": [
        12254,
        12264
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1576": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1578": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1580": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12242
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1581": {
      "fn": "Loot.mintBatch",
      "offset": [
        12243,
        12244
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1582": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1583": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1584": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1585": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "LT",
      "path": "6"
    },
    "1586": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x63D"
    },
    "1589": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1590": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x63D"
    },
    "1593": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "1596": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12239,
        12245
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1597": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1598": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1600": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "MUL",
      "path": "6"
    },
    "1601": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1603": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "ADD",
      "path": "6"
    },
    "1604": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "ADD",
      "path": "6"
    },
    "1605": {
      "fn": "Loot.mintBatch",
      "offset": [
        12239,
        12245
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1606": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1607": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1608": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1610": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "ADD",
      "path": "6"
    },
    "1611": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1612": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1613": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1614": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1616": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "ADD",
      "path": "6"
    },
    "1617": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1619": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12246
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1620": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1622": {
      "fn": "Loot.mintBatch",
      "offset": [
        12247,
        12249
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1629": {
      "op": "SHL"
    },
    "1630": {
      "op": "SUB"
    },
    "1631": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "AND",
      "path": "6"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1638": {
      "op": "SHL"
    },
    "1639": {
      "op": "SUB"
    },
    "1640": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "AND",
      "path": "6"
    },
    "1641": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1642": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1643": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1645": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "ADD",
      "path": "6"
    },
    "1646": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1647": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1648": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1649": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1651": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "ADD",
      "path": "6"
    },
    "1652": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1654": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1655": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12250
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1657": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1658": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1659": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1660": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x685"
    },
    "1663": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1664": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1665": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "1668": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12229,
        12264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1669": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1670": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1671": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "POP",
      "path": "6"
    },
    "1672": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "POP",
      "path": "6"
    },
    "1673": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1674": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1675": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1676": {
      "fn": "Loot.mintBatch",
      "offset": [
        12229,
        12264
      ],
      "op": "POP",
      "path": "6"
    },
    "1677": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12301
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 8
    },
    "1678": {
      "fn": "Loot.mintBatch",
      "offset": [
        12302,
        12303
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1679": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1680": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1681": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1682": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "LT",
      "path": "6"
    },
    "1683": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x69E"
    },
    "1686": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1687": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x69E"
    },
    "1690": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "1693": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12294,
        12304
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1694": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1695": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1697": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "MUL",
      "path": "6"
    },
    "1698": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1700": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "ADD",
      "path": "6"
    },
    "1701": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "ADD",
      "path": "6"
    },
    "1702": {
      "fn": "Loot.mintBatch",
      "offset": [
        12294,
        12304
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1703": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12286
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1705": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1706": {
      "fn": "Loot.mintBatch",
      "offset": [
        12287,
        12289
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "op": "SUB"
    },
    "1715": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "AND",
      "path": "6"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1722": {
      "op": "SHL"
    },
    "1723": {
      "op": "SUB"
    },
    "1724": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "AND",
      "path": "6"
    },
    "1725": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1726": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1727": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1729": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "ADD",
      "path": "6"
    },
    "1730": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1731": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1732": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1733": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1735": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "ADD",
      "path": "6"
    },
    "1736": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1738": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1739": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12290
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1741": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1742": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1743": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1744": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6D9"
    },
    "1747": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1748": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1749": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "1752": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12278,
        12304
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1753": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1754": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1755": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1756": {
      "fn": "Loot.mintBatch",
      "offset": [
        12278,
        12304
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 9
    },
    "1759": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E9"
    },
    "1764": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1765": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E3C"
    },
    "1768": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12210,
        12213
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1769": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1770": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1771": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "POP",
      "path": "6"
    },
    "1772": {
      "fn": "Loot.mintBatch",
      "offset": [
        12210,
        12213
      ],
      "op": "POP",
      "path": "6"
    },
    "1773": {
      "fn": "Loot.mintBatch",
      "offset": [
        12174,
        12315
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x604"
    },
    "1776": {
      "fn": "Loot.mintBatch",
      "offset": [
        12174,
        12315
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1777": {
      "fn": "Loot.mintBatch",
      "offset": [
        12174,
        12315
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1778": {
      "fn": "Loot.mintBatch",
      "offset": [
        12174,
        12315
      ],
      "op": "POP",
      "path": "6"
    },
    "1779": {
      "fn": "Loot.mintBatch",
      "offset": [
        12366,
        12368
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 10
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "op": "SUB"
    },
    "1788": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "AND",
      "path": "6"
    },
    "1789": {
      "fn": "Loot.mintBatch",
      "offset": [
        12362,
        12363
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "op": "SUB"
    },
    "1799": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "AND",
      "path": "6"
    },
    "1800": {
      "fn": "Loot.mintBatch",
      "offset": [
        12344,
        12352
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "AND",
      "path": "6"
    },
    "1810": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "1843": {
      "fn": "Loot.mintBatch",
      "offset": [
        12370,
        12373
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1844": {
      "fn": "Loot.mintBatch",
      "offset": [
        12375,
        12382
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1845": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1847": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1848": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x742"
    },
    "1851": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1852": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1853": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1854": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B01"
    },
    "1857": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12330,
        12383
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1858": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1859": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1861": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1862": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1863": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1864": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "SUB",
      "path": "6"
    },
    "1865": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1866": {
      "fn": "Loot.mintBatch",
      "offset": [
        12330,
        12383
      ],
      "op": "LOG4",
      "path": "6"
    },
    "1867": {
      "fn": "Loot.mintBatch",
      "offset": [
        12394,
        12557
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 11,
      "value": "0x759"
    },
    "1870": {
      "fn": "Loot.mintBatch",
      "offset": [
        12443,
        12451
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1871": {
      "fn": "Loot.mintBatch",
      "offset": [
        12473,
        12474
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1873": {
      "fn": "Loot.mintBatch",
      "offset": [
        12489,
        12491
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1874": {
      "fn": "Loot.mintBatch",
      "offset": [
        12505,
        12508
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1875": {
      "fn": "Loot.mintBatch",
      "offset": [
        12522,
        12529
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1876": {
      "fn": "Loot.mintBatch",
      "offset": [
        12543,
        12547
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1877": {
      "fn": "Loot.mintBatch",
      "offset": [
        12394,
        12429
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1186"
    },
    "1880": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        12394,
        12557
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1881": {
      "fn": "Loot.mintBatch",
      "offset": [
        12394,
        12557
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1882": {
      "fn": "Loot.mintBatch",
      "offset": [
        11926,
        12564
      ],
      "op": "POP",
      "path": "6"
    },
    "1883": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "POP",
      "path": "6"
    },
    "1884": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "POP",
      "path": "6"
    },
    "1885": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "POP",
      "path": "6"
    },
    "1886": {
      "fn": "Loot.mintBatch",
      "offset": [
        11764,
        12564
      ],
      "op": "POP",
      "path": "6"
    },
    "1887": {
      "fn": "Loot.mintBatch",
      "jump": "o",
      "offset": [
        11764,
        12564
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1888": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1895": {
      "op": "SHL"
    },
    "1896": {
      "op": "SUB"
    },
    "1897": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9416,
        9434
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 12
    },
    "1898": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9416,
        9434
      ],
      "op": "AND",
      "path": "6"
    },
    "1899": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9424,
        9434
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1900": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9416,
        9434
      ],
      "op": "EQ",
      "path": "6"
    },
    "1901": {
      "branch": 64,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9416,
        9434
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1902": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9416,
        9472
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x77C"
    },
    "1905": {
      "branch": 64,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9416,
        9472
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1906": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9416,
        9472
      ],
      "op": "POP",
      "path": "6"
    },
    "1907": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9438,
        9472
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x77C"
    },
    "1910": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9455,
        9459
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1911": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9461,
        9471
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1912": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9438,
        9454
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE90"
    },
    "1915": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9438,
        9472
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1916": {
      "branch": 65,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9438,
        9472
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1917": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E3"
    },
    "1920": {
      "branch": 65,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1921": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1923": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1924": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1932": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1935": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1937": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1938": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "ADD",
      "path": "6"
    },
    "1939": {
      "op": "MSTORE"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1944": {
      "op": "DUP3"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "op": "MSTORE"
    },
    "1947": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1982": {
      "op": "DUP3"
    },
    "1983": {
      "op": "ADD"
    },
    "1984": {
      "op": "MSTORE"
    },
    "1985": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2006": {
      "op": "SHL"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2009": {
      "op": "DUP3"
    },
    "2010": {
      "op": "ADD"
    },
    "2011": {
      "op": "MSTORE"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2014": {
      "op": "ADD"
    },
    "2015": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "2018": {
      "op": "JUMP"
    },
    "2019": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9395,
        9548
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2020": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9593,
        9600
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 13
    },
    "2021": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9593,
        9607
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2022": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9579,
        9582
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2023": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9579,
        9589
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2024": {
      "branch": 66,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9579,
        9607
      ],
      "op": "EQ",
      "path": "6"
    },
    "2025": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x804"
    },
    "2028": {
      "branch": 66,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2029": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2031": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2038": {
      "op": "SHL"
    },
    "2039": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2040": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2041": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2043": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "ADD",
      "path": "6"
    },
    "2044": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "2047": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2048": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CB4"
    },
    "2051": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9558,
        9673
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2052": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9558,
        9673
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2059": {
      "op": "SHL"
    },
    "2060": {
      "op": "SUB"
    },
    "2061": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9691,
        9707
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 14
    },
    "2062": {
      "branch": 67,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9691,
        9707
      ],
      "op": "AND",
      "path": "6"
    },
    "2063": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x82A"
    },
    "2066": {
      "branch": 67,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2067": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2069": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2078": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2079": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2081": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "ADD",
      "path": "6"
    },
    "2082": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "2085": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2086": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C25"
    },
    "2089": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9683,
        9749
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2090": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9683,
        9749
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2091": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9779,
        9789
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2092": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9760,
        9776
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2094": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9800,
        10337
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2095": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9824,
        9827
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2096": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9824,
        9834
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2097": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9820,
        9821
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2098": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9820,
        9834
      ],
      "op": "LT",
      "path": "6"
    },
    "2099": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9800,
        10337
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2100": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9800,
        10337
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x951"
    },
    "2103": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9800,
        10337
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2104": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9855,
        9865
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2106": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9871
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2107": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9872,
        9873
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2108": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2109": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2110": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2111": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "LT",
      "path": "6"
    },
    "2112": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x84B"
    },
    "2115": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2116": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x84B"
    },
    "2119": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "2122": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9868,
        9874
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2123": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2124": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2126": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "MUL",
      "path": "6"
    },
    "2127": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2129": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "ADD",
      "path": "6"
    },
    "2130": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "ADD",
      "path": "6"
    },
    "2131": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9868,
        9874
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2132": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9855,
        9874
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2133": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9855,
        9874
      ],
      "op": "POP",
      "path": "6"
    },
    "2134": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9888,
        9902
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2136": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9912
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2137": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9913,
        9914
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2138": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2139": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2140": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2141": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "LT",
      "path": "6"
    },
    "2142": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x869"
    },
    "2145": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2146": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x869"
    },
    "2149": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "2152": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9905,
        9915
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2153": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2154": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2156": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2157": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2158": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "MUL",
      "path": "6"
    },
    "2159": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2160": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2161": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2162": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "ADD",
      "path": "6"
    },
    "2163": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2164": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "ADD",
      "path": "6"
    },
    "2165": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2166": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9930,
        9949
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2168": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2169": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2170": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2171": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9961
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2173": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2174": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2175": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2177": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2178": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2179": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9965
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "DUP15",
      "path": "6"
    },
    "2189": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "AND",
      "path": "6"
    },
    "2190": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2191": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2192": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2193": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2194": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2195": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2196": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2197": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2198": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2199": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9952,
        9971
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2200": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2201": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9905,
        9915
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10010,
        10031
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 15
    },
    "2204": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10010,
        10031
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2205": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10010,
        10031
      ],
      "op": "LT",
      "path": "6"
    },
    "2206": {
      "branch": 68,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10010,
        10031
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2207": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8BA"
    },
    "2210": {
      "branch": 68,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2211": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2213": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2222": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2223": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2225": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "ADD",
      "path": "6"
    },
    "2226": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "2229": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2230": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C6A"
    },
    "2233": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9985,
        10107
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2234": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9985,
        10107
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2235": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 16,
      "value": "0x0"
    },
    "2237": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2238": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2239": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2240": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10158
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2242": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2244": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2245": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2246": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2247": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2249": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2250": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2251": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "op": "SUB"
    },
    "2260": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2261": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "DUP16",
      "path": "6"
    },
    "2262": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "AND",
      "path": "6"
    },
    "2263": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2264": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2265": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2266": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2267": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2268": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2269": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2270": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10168
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2271": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10171,
        10191
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2272": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10171,
        10191
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2273": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10171,
        10191
      ],
      "op": "SUB",
      "path": "6"
    },
    "2274": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10191
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2275": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10191
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2276": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10223
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 17
    },
    "2277": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10223
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2278": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2279": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10223
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2280": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10223
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2281": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10223
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2282": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10233
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2283": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10233
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2284": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10233
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2285": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2286": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10233
      ],
      "op": "SUB",
      "path": "6"
    },
    "2287": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2288": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10209,
        10233
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2289": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "DUP14",
      "path": "6",
      "statement": 18
    },
    "2290": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "AND",
      "path": "6"
    },
    "2291": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2292": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2293": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2294": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2295": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2296": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2297": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10278
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2298": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2299": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2300": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10185,
        10191
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2301": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10185,
        10191
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2302": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10149,
        10162
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2303": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x909"
    },
    "2306": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2307": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10185,
        10191
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2308": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10185,
        10191
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2309": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "2312": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        10261,
        10288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2313": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2314": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2315": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2316": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10261,
        10288
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2317": {
      "op": "POP"
    },
    "2318": {
      "op": "POP"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2325": {
      "op": "SHL"
    },
    "2326": {
      "op": "SUB"
    },
    "2327": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "DUP11",
      "path": "6",
      "statement": 19
    },
    "2328": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "AND",
      "path": "6"
    },
    "2329": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10310
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2331": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2332": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2333": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2334": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2336": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2337": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2338": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2339": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2341": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2342": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10316
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2343": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2344": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2345": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10320,
        10326
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2346": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10320,
        10326
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2347": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10310
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2348": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x936"
    },
    "2351": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2352": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10320,
        10326
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2353": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10320,
        10326
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2354": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "2357": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        10302,
        10326
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2358": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2359": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2360": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "POP",
      "path": "6"
    },
    "2361": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "POP",
      "path": "6"
    },
    "2362": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2363": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2364": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2365": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10302,
        10326
      ],
      "op": "POP",
      "path": "6"
    },
    "2366": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9841,
        10337
      ],
      "op": "POP",
      "path": "6"
    },
    "2367": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9841,
        10337
      ],
      "op": "POP",
      "path": "6"
    },
    "2368": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9841,
        10337
      ],
      "op": "POP",
      "path": "6"
    },
    "2369": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9836,
        9839
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 20
    },
    "2370": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9836,
        9839
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94A"
    },
    "2373": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9836,
        9839
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2374": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9836,
        9839
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E3C"
    },
    "2377": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9836,
        9839
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2378": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9836,
        9839
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2379": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9836,
        9839
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2380": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9836,
        9839
      ],
      "op": "POP",
      "path": "6"
    },
    "2381": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9800,
        10337
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x82E"
    },
    "2384": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9800,
        10337
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2385": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9800,
        10337
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2386": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9800,
        10337
      ],
      "op": "POP",
      "path": "6"
    },
    "2387": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10382,
        10384
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 21
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "op": "SUB"
    },
    "2396": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "AND",
      "path": "6"
    },
    "2397": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10376,
        10380
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "op": "SUB"
    },
    "2406": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "AND",
      "path": "6"
    },
    "2407": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10366,
        10374
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "op": "SUB"
    },
    "2416": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "AND",
      "path": "6"
    },
    "2417": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "2450": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10386,
        10389
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2451": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10391,
        10398
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2452": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2454": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2455": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A1"
    },
    "2458": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2459": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2460": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2461": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B01"
    },
    "2464": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        10352,
        10399
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2465": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2466": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2468": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2469": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2470": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2471": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "SUB",
      "path": "6"
    },
    "2472": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2473": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10352,
        10399
      ],
      "op": "LOG4",
      "path": "6"
    },
    "2474": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10410,
        10567
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 22,
      "value": "0x9B7"
    },
    "2477": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10459,
        10467
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2478": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10481,
        10485
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2479": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10499,
        10501
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2480": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10515,
        10518
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2481": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10532,
        10539
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2482": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10553,
        10557
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2483": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10410,
        10445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1186"
    },
    "2486": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        10410,
        10567
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2487": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10410,
        10567
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2488": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9385,
        10574
      ],
      "op": "POP",
      "path": "6"
    },
    "2489": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "POP",
      "path": "6"
    },
    "2490": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "POP",
      "path": "6"
    },
    "2491": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "POP",
      "path": "6"
    },
    "2492": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "POP",
      "path": "6"
    },
    "2493": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9199,
        10574
      ],
      "op": "POP",
      "path": "6"
    },
    "2494": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        9199,
        10574
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2495": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2496": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6257,
        6273
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2498": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6329,
        6332
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 23
    },
    "2499": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6329,
        6339
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2500": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6310,
        6318
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2501": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6310,
        6325
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2502": {
      "branch": 69,
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6310,
        6339
      ],
      "op": "EQ",
      "path": "6"
    },
    "2503": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA24"
    },
    "2506": {
      "branch": 69,
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2507": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2509": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2516": {
      "op": "SHL"
    },
    "2517": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2518": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2521": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2523": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2524": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "ADD",
      "path": "6"
    },
    "2525": {
      "op": "MSTORE"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2530": {
      "op": "DUP3"
    },
    "2531": {
      "op": "ADD"
    },
    "2532": {
      "op": "MSTORE"
    },
    "2533": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2568": {
      "op": "DUP3"
    },
    "2569": {
      "op": "ADD"
    },
    "2570": {
      "op": "MSTORE"
    },
    "2571": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "2583": {
      "op": "SHL"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2586": {
      "op": "DUP3"
    },
    "2587": {
      "op": "ADD"
    },
    "2588": {
      "op": "MSTORE"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2591": {
      "op": "ADD"
    },
    "2592": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "2595": {
      "op": "JUMP"
    },
    "2596": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6289,
        6406
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2597": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6417,
        6447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2599": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6464,
        6472
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2600": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6464,
        6479
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2601": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2610": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2611": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "GT",
      "path": "6"
    },
    "2612": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2613": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA40"
    },
    "2616": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2617": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA40"
    },
    "2620": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EAD"
    },
    "2623": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6450,
        6480
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2624": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2625": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2627": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2628": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2629": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2630": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2631": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2632": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2633": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2635": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "MUL",
      "path": "6"
    },
    "2636": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2638": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "ADD",
      "path": "6"
    },
    "2639": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2640": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "ADD",
      "path": "6"
    },
    "2641": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2643": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2644": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2645": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2646": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA69"
    },
    "2649": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2650": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2651": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2653": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "ADD",
      "path": "6"
    },
    "2654": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2656": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2657": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "MUL",
      "path": "6"
    },
    "2658": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2659": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2660": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2661": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "2662": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "ADD",
      "path": "6"
    },
    "2663": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2666": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6450,
        6480
      ],
      "op": "POP",
      "path": "6"
    },
    "2667": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6417,
        6480
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2668": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6417,
        6480
      ],
      "op": "POP",
      "path": "6"
    },
    "2669": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6496,
        6505
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2671": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6491,
        6611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2672": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6515,
        6523
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2673": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6515,
        6530
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2674": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6511,
        6512
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2675": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6511,
        6530
      ],
      "op": "LT",
      "path": "6"
    },
    "2676": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6491,
        6611
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2677": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6491,
        6611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAE1"
    },
    "2680": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6491,
        6611
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2681": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6570,
        6600
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0xAB4"
    },
    "2684": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6588
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2685": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6589,
        6590
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2686": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2687": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2688": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2689": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "LT",
      "path": "6"
    },
    "2690": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA8D"
    },
    "2693": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2694": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA8D"
    },
    "2697": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "2700": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6580,
        6591
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2701": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2702": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2704": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "MUL",
      "path": "6"
    },
    "2705": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2707": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "ADD",
      "path": "6"
    },
    "2708": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "ADD",
      "path": "6"
    },
    "2709": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6580,
        6591
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2710": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6596
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2711": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6597,
        6598
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2712": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2713": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2714": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2715": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "LT",
      "path": "6"
    },
    "2716": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA7"
    },
    "2719": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2720": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA7"
    },
    "2723": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "2726": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6593,
        6599
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2727": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2728": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2730": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "MUL",
      "path": "6"
    },
    "2731": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2733": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "ADD",
      "path": "6"
    },
    "2734": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "ADD",
      "path": "6"
    },
    "2735": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6593,
        6599
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2736": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6570,
        6579
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x257"
    },
    "2739": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6570,
        6600
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2740": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6570,
        6600
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2741": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6564
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2742": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6565,
        6566
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2743": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2744": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2745": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2746": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "LT",
      "path": "6"
    },
    "2747": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC6"
    },
    "2750": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2751": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC6"
    },
    "2754": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "2757": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6551,
        6567
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2758": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2759": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2761": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2762": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2763": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "MUL",
      "path": "6"
    },
    "2764": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2765": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2766": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2767": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "ADD",
      "path": "6"
    },
    "2768": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6567
      ],
      "op": "ADD",
      "path": "6"
    },
    "2769": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6551,
        6600
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2770": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6532,
        6535
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0xADA"
    },
    "2773": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6532,
        6535
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2774": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6532,
        6535
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E3C"
    },
    "2777": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6532,
        6535
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2778": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6532,
        6535
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2779": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6532,
        6535
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2780": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6532,
        6535
      ],
      "op": "POP",
      "path": "6"
    },
    "2781": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6491,
        6611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6F"
    },
    "2784": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6491,
        6611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2785": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6491,
        6611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6628,
        6641
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 26
    },
    "2788": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6122,
        6648
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2789": {
      "op": "POP"
    },
    "2790": {
      "op": "POP"
    },
    "2791": {
      "op": "POP"
    },
    "2792": {
      "fn": "Loot.balanceOfBatch",
      "jump": "o",
      "offset": [
        6122,
        6648
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2793": {
      "fn": "Loot.balanceOf",
      "offset": [
        5346,
        5574
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2794": {
      "fn": "Loot.balanceOf",
      "offset": [
        5403,
        5410
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "fn": "Loot.balanceOf",
      "offset": [
        5443,
        5464
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 27
    },
    "2805": {
      "branch": 70,
      "fn": "Loot.balanceOf",
      "offset": [
        5443,
        5464
      ],
      "op": "AND",
      "path": "6"
    },
    "2806": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB11"
    },
    "2809": {
      "branch": 70,
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2810": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2812": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2821": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2822": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2824": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "ADD",
      "path": "6"
    },
    "2825": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "2828": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2829": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B8A"
    },
    "2832": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5422,
        5533
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2833": {
      "fn": "Loot.balanceOf",
      "offset": [
        5422,
        5533
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "op": "SUB"
    },
    "2843": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "AND",
      "path": "6",
      "statement": 28
    },
    "2844": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5558
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2846": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2847": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2848": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2849": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2851": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2852": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2853": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2854": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2856": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2857": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2858": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2859": {
      "fn": "Loot.balanceOf",
      "offset": [
        5550,
        5567
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2860": {
      "fn": "Loot.balanceOf",
      "jump": "o",
      "offset": [
        5346,
        5574
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2861": {
      "fn": "Loot.mint",
      "offset": [
        10893,
        11483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2862": {
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "2864": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2866": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2867": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4221
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2868": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2869": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2872": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4221
      ],
      "op": "EXP",
      "path": "6"
    },
    "2873": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2874": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4221
      ],
      "op": "DIV",
      "path": "6"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2881": {
      "op": "SHL"
    },
    "2882": {
      "op": "SUB"
    },
    "2883": {
      "offset": [
        4215,
        4221
      ],
      "op": "AND",
      "path": "6"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2890": {
      "op": "SHL"
    },
    "2891": {
      "op": "SUB"
    },
    "2892": {
      "offset": [
        4215,
        4233
      ],
      "op": "AND",
      "path": "6"
    },
    "2893": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4233
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE7F43C68"
    },
    "2898": {
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2900": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2901": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2902": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2907": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "2908": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2910": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "SHL",
      "path": "6"
    },
    "2911": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2912": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2913": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2915": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "2916": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2918": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2920": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2921": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2922": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2923": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "SUB",
      "path": "6"
    },
    "2924": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2925": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2926": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2927": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2928": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2929": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2930": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2931": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7B"
    },
    "2934": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2935": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2937": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2938": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2939": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2940": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "2941": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "GAS",
      "path": "6"
    },
    "2942": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2943": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2944": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2945": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2946": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8F"
    },
    "2949": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2950": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2951": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2953": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2954": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2955": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2956": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2958": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2959": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2960": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "2961": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "2962": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "2963": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "2964": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2966": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2967": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2968": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2970": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "NOT",
      "path": "6"
    },
    "2971": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2973": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2974": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "2975": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "2976": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2977": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "2978": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2979": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2981": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2982": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "2983": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2984": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "2985": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2986": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB3"
    },
    "2989": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2990": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2991": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1563"
    },
    "2994": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2995": {
      "fn": "Loot.mint",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "op": "SUB"
    },
    "3004": {
      "offset": [
        4201,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "3005": {
      "offset": [
        4201,
        4211
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3012": {
      "op": "SHL"
    },
    "3013": {
      "op": "SUB"
    },
    "3014": {
      "offset": [
        4201,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "3015": {
      "fn": "Loot.mint",
      "offset": [
        4201,
        4235
      ],
      "op": "EQ",
      "path": "6"
    },
    "3016": {
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE3"
    },
    "3019": {
      "offset": [
        4180,
        4309
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3020": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3022": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3029": {
      "op": "SHL"
    },
    "3030": {
      "offset": [
        4180,
        4309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3031": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3032": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3034": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "ADD",
      "path": "6"
    },
    "3035": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "3038": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3039": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BD5"
    },
    "3042": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        4180,
        4309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3043": {
      "fn": "Loot.mint",
      "offset": [
        4180,
        4309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3050": {
      "op": "SHL"
    },
    "3051": {
      "op": "SUB"
    },
    "3052": {
      "fn": "Loot.mint",
      "offset": [
        11053,
        11074
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 29
    },
    "3053": {
      "branch": 71,
      "fn": "Loot.mint",
      "offset": [
        11053,
        11074
      ],
      "op": "AND",
      "path": "6"
    },
    "3054": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC09"
    },
    "3057": {
      "branch": 71,
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3058": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3060": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3067": {
      "op": "SHL"
    },
    "3068": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3069": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3070": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3072": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "ADD",
      "path": "6"
    },
    "3073": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "3076": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3077": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CFC"
    },
    "3080": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        11045,
        11112
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3081": {
      "fn": "Loot.mint",
      "offset": [
        11045,
        11112
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3082": {
      "fn": "Loot.mint",
      "offset": [
        11123,
        11139
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3084": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 30
    },
    "3085": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3086": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3087": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11172
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3089": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3091": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3092": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3093": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3094": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3096": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3097": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3098": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11176
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3105": {
      "op": "SHL"
    },
    "3106": {
      "op": "SUB"
    },
    "3107": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3108": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "AND",
      "path": "6"
    },
    "3109": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3110": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3111": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3112": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3113": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3114": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3115": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3116": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3117": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3118": {
      "fn": "Loot.mint",
      "offset": [
        11142,
        11152
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3119": {
      "fn": "Loot.mint",
      "offset": [
        11142,
        11152
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3120": {
      "fn": "Loot.mint",
      "offset": [
        11189,
        11195
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3121": {
      "fn": "Loot.mint",
      "offset": [
        11189,
        11195
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3122": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11185
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3123": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3D"
    },
    "3126": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3127": {
      "fn": "Loot.mint",
      "offset": [
        11189,
        11195
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3128": {
      "fn": "Loot.mint",
      "offset": [
        11189,
        11195
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3129": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "3132": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        11163,
        11195
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3133": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3134": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3135": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3136": {
      "fn": "Loot.mint",
      "offset": [
        11163,
        11195
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3137": {
      "op": "POP"
    },
    "3138": {
      "op": "POP"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "op": "SUB"
    },
    "3147": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 31
    },
    "3148": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "AND",
      "path": "6"
    },
    "3149": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11213
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3151": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3152": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3153": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3154": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3156": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3157": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3158": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3159": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3161": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3162": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11222
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3163": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3164": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3165": {
      "fn": "Loot.mint",
      "offset": [
        11226,
        11232
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3166": {
      "fn": "Loot.mint",
      "offset": [
        11226,
        11232
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3167": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11213
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3168": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC6A"
    },
    "3171": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3172": {
      "fn": "Loot.mint",
      "offset": [
        11226,
        11232
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3173": {
      "fn": "Loot.mint",
      "offset": [
        11226,
        11232
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3174": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "3177": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        11205,
        11232
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3178": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3179": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3180": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3181": {
      "fn": "Loot.mint",
      "offset": [
        11205,
        11232
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3182": {
      "op": "POP"
    },
    "3183": {
      "op": "POP"
    },
    "3184": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 32,
      "value": "0x40"
    },
    "3186": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3187": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3188": {
      "op": "DUP6"
    },
    "3189": {
      "op": "DUP2"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3193": {
      "op": "DUP2"
    },
    "3194": {
      "op": "ADD"
    },
    "3195": {
      "op": "DUP6"
    },
    "3196": {
      "op": "SWAP1"
    },
    "3197": {
      "op": "MSTORE"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3204": {
      "op": "SHL"
    },
    "3205": {
      "op": "SUB"
    },
    "3206": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3207": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3208": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "AND",
      "path": "6"
    },
    "3209": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3210": {
      "fn": "Loot.mint",
      "offset": [
        11280,
        11281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3212": {
      "fn": "Loot.mint",
      "offset": [
        11280,
        11281
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3213": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3214": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3215": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "AND",
      "path": "6"
    },
    "3216": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3217": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "3250": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3251": {
      "op": "ADD"
    },
    "3252": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3254": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3255": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3256": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3257": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "SUB",
      "path": "6"
    },
    "3258": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3259": {
      "fn": "Loot.mint",
      "offset": [
        11247,
        11304
      ],
      "op": "LOG4",
      "path": "6"
    },
    "3260": {
      "fn": "Loot.mint",
      "offset": [
        11315,
        11476
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 33,
      "value": "0x759"
    },
    "3263": {
      "fn": "Loot.mint",
      "offset": [
        11359,
        11367
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3264": {
      "fn": "Loot.mint",
      "offset": [
        11389,
        11390
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3266": {
      "fn": "Loot.mint",
      "offset": [
        11405,
        11412
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3267": {
      "fn": "Loot.mint",
      "offset": [
        11426,
        11428
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3268": {
      "fn": "Loot.mint",
      "offset": [
        11442,
        11448
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3269": {
      "fn": "Loot.mint",
      "offset": [
        11462,
        11466
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3270": {
      "fn": "Loot.mint",
      "offset": [
        11315,
        11345
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12F1"
    },
    "3273": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        11315,
        11476
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3274": {
      "offset": [
        1370,
        1390
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3275": {
      "fn": "Loot.mint",
      "offset": [
        1370,
        1390
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3277": {
      "fn": "Loot.mint",
      "offset": [
        1370,
        1390
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3278": {
      "fn": "Loot.mint",
      "offset": [
        1370,
        1390
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3279": {
      "fn": "Loot.mint",
      "offset": [
        1370,
        1390
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30F"
    },
    "3282": {
      "fn": "Loot.mint",
      "offset": [
        1370,
        1390
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3283": {
      "fn": "Loot.mint",
      "offset": [
        1370,
        1390
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD4"
    },
    "3286": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        1370,
        1390
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3287": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3288": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6960,
        6970
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 34
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3295": {
      "op": "SHL"
    },
    "3296": {
      "op": "SUB"
    },
    "3297": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6960,
        6982
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3298": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6960,
        6982
      ],
      "op": "AND",
      "path": "6"
    },
    "3299": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6960,
        6982
      ],
      "op": "EQ",
      "path": "6"
    },
    "3300": {
      "branch": 72,
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6960,
        6982
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3301": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD42"
    },
    "3304": {
      "branch": 72,
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3305": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3307": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3314": {
      "op": "SHL"
    },
    "3315": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3316": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3319": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3321": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3322": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "ADD",
      "path": "6"
    },
    "3323": {
      "op": "MSTORE"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3328": {
      "op": "DUP3"
    },
    "3329": {
      "op": "ADD"
    },
    "3330": {
      "op": "MSTORE"
    },
    "3331": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3366": {
      "op": "DUP3"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "MSTORE"
    },
    "3369": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3381": {
      "op": "SHL"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3384": {
      "op": "DUP3"
    },
    "3385": {
      "op": "ADD"
    },
    "3386": {
      "op": "MSTORE"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "3393": {
      "op": "JUMP"
    },
    "3394": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6939,
        7049
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3395": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7079,
        7089
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 35
    },
    "3396": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3398": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3399": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3400": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3401": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7078
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3403": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3405": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3406": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3407": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3408": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3410": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3411": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3412": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7090
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "SUB"
    },
    "3421": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3422": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "AND",
      "path": "6"
    },
    "3423": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3424": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3425": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3426": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3427": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3428": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3429": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3430": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3431": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3432": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3433": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3434": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3437": {
      "op": "NOT"
    },
    "3438": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "AND",
      "path": "6"
    },
    "3439": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3440": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3441": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3442": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3443": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3444": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "OR",
      "path": "6"
    },
    "3445": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3446": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3447": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7111
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3448": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 36
    },
    "3449": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3450": {
      "op": "SWAP1"
    },
    "3451": {
      "op": "DUP2"
    },
    "3452": {
      "op": "MSTORE"
    },
    "3453": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3454": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7060,
        7100
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3455": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7079,
        7089
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3456": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "3489": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3490": {
      "op": "ADD"
    },
    "3491": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3493": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3494": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3495": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3496": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "SUB",
      "path": "6"
    },
    "3497": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3498": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        7126,
        7172
      ],
      "op": "LOG3",
      "path": "6"
    },
    "3499": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "POP",
      "path": "6"
    },
    "3500": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6833,
        7179
      ],
      "op": "POP",
      "path": "6"
    },
    "3501": {
      "fn": "Loot.setApprovalForAll",
      "jump": "o",
      "offset": [
        6833,
        7179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3502": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3503": {
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "3505": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3507": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3508": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4221
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3509": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3510": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "3513": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4221
      ],
      "op": "EXP",
      "path": "6"
    },
    "3514": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3515": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4221
      ],
      "op": "DIV",
      "path": "6"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3522": {
      "op": "SHL"
    },
    "3523": {
      "op": "SUB"
    },
    "3524": {
      "offset": [
        4215,
        4221
      ],
      "op": "AND",
      "path": "6"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "op": "SUB"
    },
    "3533": {
      "offset": [
        4215,
        4233
      ],
      "op": "AND",
      "path": "6"
    },
    "3534": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4233
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE7F43C68"
    },
    "3539": {
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3541": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3542": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3543": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3548": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "3549": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "3551": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "SHL",
      "path": "6"
    },
    "3552": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3553": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3554": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3556": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "3557": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3559": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3561": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3562": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3563": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3564": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "SUB",
      "path": "6"
    },
    "3565": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3566": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3567": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3568": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3569": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3570": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3571": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3572": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDFC"
    },
    "3575": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3576": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3578": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3579": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3580": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3581": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "3582": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "GAS",
      "path": "6"
    },
    "3583": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "3584": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3585": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3586": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3587": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE10"
    },
    "3590": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3591": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3592": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3594": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3595": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3596": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3597": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3599": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3600": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3601": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "3602": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "3603": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "3604": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "3605": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3607": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3608": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3609": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3611": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "NOT",
      "path": "6"
    },
    "3612": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3614": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3615": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "3616": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "3617": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3618": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "3619": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3620": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3622": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3623": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "POP",
      "path": "6"
    },
    "3624": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3625": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "ADD",
      "path": "6"
    },
    "3626": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3627": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE34"
    },
    "3630": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3631": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3632": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1563"
    },
    "3635": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3636": {
      "fn": "Loot.setURI",
      "offset": [
        4215,
        4235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3643": {
      "op": "SHL"
    },
    "3644": {
      "op": "SUB"
    },
    "3645": {
      "offset": [
        4201,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "3646": {
      "offset": [
        4201,
        4211
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "op": "SUB"
    },
    "3655": {
      "offset": [
        4201,
        4235
      ],
      "op": "AND",
      "path": "6"
    },
    "3656": {
      "branch": 73,
      "fn": "Loot.setURI",
      "offset": [
        4201,
        4235
      ],
      "op": "EQ",
      "path": "6"
    },
    "3657": {
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE64"
    },
    "3660": {
      "branch": 73,
      "offset": [
        4180,
        4309
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3661": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3663": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3670": {
      "op": "SHL"
    },
    "3671": {
      "offset": [
        4180,
        4309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3672": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3673": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3675": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "ADD",
      "path": "6"
    },
    "3676": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "3679": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3680": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BD5"
    },
    "3683": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        4180,
        4309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3684": {
      "fn": "Loot.setURI",
      "offset": [
        4180,
        4309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3685": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 37
    },
    "3686": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3687": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE77"
    },
    "3690": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3691": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15495
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3693": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15495
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3694": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3696": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3697": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "ADD",
      "path": "6"
    },
    "3698": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3699": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13BB"
    },
    "3702": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        15491,
        15502
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3703": {
      "fn": "Loot.setURI",
      "offset": [
        15491,
        15502
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 38
    },
    "3706": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3707": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE8B"
    },
    "3710": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3711": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15522
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3713": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15522
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3714": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3716": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3717": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "ADD",
      "path": "6"
    },
    "3718": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3719": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13BB"
    },
    "3722": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        15512,
        15531
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3723": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3724": {
      "fn": "Loot.setURI",
      "offset": [
        15512,
        15531
      ],
      "op": "POP",
      "path": "6"
    },
    "3725": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "POP",
      "path": "6"
    },
    "3726": {
      "fn": "Loot.setURI",
      "offset": [
        15377,
        15538
      ],
      "op": "POP",
      "path": "6"
    },
    "3727": {
      "fn": "Loot.setURI",
      "jump": "o",
      "offset": [
        15377,
        15538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3728": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7284,
        7478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3735": {
      "op": "SHL"
    },
    "3736": {
      "op": "SUB"
    },
    "3737": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 39
    },
    "3738": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3739": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "AND",
      "path": "6"
    },
    "3740": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7407,
        7411
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3742": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3743": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3744": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3745": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7452
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3747": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3749": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3750": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3751": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3752": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3754": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3755": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3756": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7461
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3757": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3758": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3759": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3760": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "AND",
      "path": "6"
    },
    "3761": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3762": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3763": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3764": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3765": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3766": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3767": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3768": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3769": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3771": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "AND",
      "path": "6"
    },
    "3772": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7434,
        7471
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3773": {
      "fn": "Loot.isApprovedForAll",
      "jump": "o",
      "offset": [
        7284,
        7478
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3774": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3781": {
      "op": "SHL"
    },
    "3782": {
      "op": "SUB"
    },
    "3783": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8166,
        8184
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 40
    },
    "3784": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8166,
        8184
      ],
      "op": "AND",
      "path": "6"
    },
    "3785": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8174,
        8184
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3786": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8166,
        8184
      ],
      "op": "EQ",
      "path": "6"
    },
    "3787": {
      "branch": 74,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8166,
        8184
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3788": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8166,
        8222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEDA"
    },
    "3791": {
      "branch": 74,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8166,
        8222
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3792": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8166,
        8222
      ],
      "op": "POP",
      "path": "6"
    },
    "3793": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8188,
        8222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEDA"
    },
    "3796": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8205,
        8209
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3797": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8211,
        8221
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3798": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8188,
        8204
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE90"
    },
    "3801": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8188,
        8222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3802": {
      "branch": 75,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8188,
        8222
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3803": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF38"
    },
    "3806": {
      "branch": 75,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3807": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3809": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3816": {
      "op": "SHL"
    },
    "3817": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3818": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3821": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3823": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3824": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "ADD",
      "path": "6"
    },
    "3825": {
      "op": "MSTORE"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3830": {
      "op": "DUP3"
    },
    "3831": {
      "op": "ADD"
    },
    "3832": {
      "op": "MSTORE"
    },
    "3833": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3868": {
      "op": "DUP3"
    },
    "3869": {
      "op": "ADD"
    },
    "3870": {
      "op": "MSTORE"
    },
    "3871": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "3883": {
      "op": "SHL"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3886": {
      "op": "DUP3"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "op": "MSTORE"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3891": {
      "op": "ADD"
    },
    "3892": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "3895": {
      "op": "JUMP"
    },
    "3896": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8145,
        8289
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3903": {
      "op": "SHL"
    },
    "3904": {
      "op": "SUB"
    },
    "3905": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8307,
        8323
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 41
    },
    "3906": {
      "branch": 76,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8307,
        8323
      ],
      "op": "AND",
      "path": "6"
    },
    "3907": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF5E"
    },
    "3910": {
      "branch": 76,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3911": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3913": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3920": {
      "op": "SHL"
    },
    "3921": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3922": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3923": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3925": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "ADD",
      "path": "6"
    },
    "3926": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "3929": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3930": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C25"
    },
    "3933": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8299,
        8365
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3934": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8299,
        8365
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3935": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8376,
        8392
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3937": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3938": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3939": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3940": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3942": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3944": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3945": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3946": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3947": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3949": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3950": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3951": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8451
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3958": {
      "op": "SHL"
    },
    "3959": {
      "op": "SUB"
    },
    "3960": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3961": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "AND",
      "path": "6"
    },
    "3962": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3963": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3964": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3965": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3966": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3967": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3968": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3969": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8438,
        8457
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3970": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8395,
        8405
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3971": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8395,
        8405
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3972": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8488,
        8509
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 42
    },
    "3973": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8488,
        8509
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3974": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8488,
        8509
      ],
      "op": "LT",
      "path": "6"
    },
    "3975": {
      "branch": 77,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8488,
        8509
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3976": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFA3"
    },
    "3979": {
      "branch": 77,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3980": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3982": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3989": {
      "op": "SHL"
    },
    "3990": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3991": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3992": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3994": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "ADD",
      "path": "6"
    },
    "3995": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "3998": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3999": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C6A"
    },
    "4002": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8467,
        8577
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4003": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8467,
        8577
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4004": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x0"
    },
    "4006": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4007": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4008": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4009": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8620
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4011": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4013": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4014": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4015": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4016": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4018": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4019": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4020": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4027": {
      "op": "SHL"
    },
    "4028": {
      "op": "SUB"
    },
    "4029": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4030": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "DUP13",
      "path": "6"
    },
    "4031": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "AND",
      "path": "6"
    },
    "4032": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4033": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4034": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4035": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4036": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4037": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4038": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4039": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8630
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4040": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8633,
        8653
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4041": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8633,
        8653
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4042": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8633,
        8653
      ],
      "op": "SUB",
      "path": "6"
    },
    "4043": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8653
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4044": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8653
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4045": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8681
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 44
    },
    "4046": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8681
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4047": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8681
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4048": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8681
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4049": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8681
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4050": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8681
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4051": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4052": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8691
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4053": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8691
      ],
      "op": "DUP11",
      "path": "6"
    },
    "4054": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4055": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8691
      ],
      "op": "SUB",
      "path": "6"
    },
    "4056": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4057": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8667,
        8691
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4058": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "DUP11",
      "path": "6",
      "statement": 45
    },
    "4059": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "AND",
      "path": "6"
    },
    "4060": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4061": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4062": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4063": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4064": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4065": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4066": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8728
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4067": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4068": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4069": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8647,
        8653
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4070": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8647,
        8653
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4071": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8611,
        8624
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4072": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFF2"
    },
    "4075": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4076": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8647,
        8653
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4077": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8647,
        8653
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4078": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "4081": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8711,
        8738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4082": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4083": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4084": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4085": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8711,
        8738
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "op": "POP"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4094": {
      "op": "SHL"
    },
    "4095": {
      "op": "SUB"
    },
    "4096": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 46
    },
    "4097": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "AND",
      "path": "6"
    },
    "4098": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8756
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4100": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4101": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4102": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4103": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4105": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4106": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4107": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4108": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4110": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4111": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8760
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4112": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4113": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4114": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8764,
        8770
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4115": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8764,
        8770
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4116": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8756
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4117": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x101F"
    },
    "4120": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4121": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8764,
        8770
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4122": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8764,
        8770
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4123": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "4126": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8748,
        8770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4127": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4128": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4129": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4130": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8748,
        8770
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4131": {
      "op": "POP"
    },
    "4132": {
      "op": "POP"
    },
    "4133": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 47,
      "value": "0x40"
    },
    "4135": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4136": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4137": {
      "op": "DUP7"
    },
    "4138": {
      "op": "DUP2"
    },
    "4139": {
      "op": "MSTORE"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4142": {
      "op": "DUP2"
    },
    "4143": {
      "op": "ADD"
    },
    "4144": {
      "op": "DUP7"
    },
    "4145": {
      "op": "SWAP1"
    },
    "4146": {
      "op": "MSTORE"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4153": {
      "op": "SHL"
    },
    "4154": {
      "op": "SUB"
    },
    "4155": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4156": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4157": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "AND",
      "path": "6"
    },
    "4158": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4159": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "DUP11",
      "path": "6"
    },
    "4160": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4161": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "AND",
      "path": "6"
    },
    "4162": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4163": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4164": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4165": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "AND",
      "path": "6"
    },
    "4166": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4167": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "4200": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4201": {
      "op": "ADD"
    },
    "4202": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4204": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4205": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4206": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4207": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "SUB",
      "path": "6"
    },
    "4208": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4209": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8786,
        8832
      ],
      "op": "LOG4",
      "path": "6"
    },
    "4210": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8843,
        8911
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 48,
      "value": "0x107F"
    },
    "4213": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8874,
        8882
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4214": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8884,
        8888
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4215": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8890,
        8892
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4216": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8894,
        8896
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4217": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8898,
        8904
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4218": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8906,
        8910
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4219": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8843,
        8873
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12F1"
    },
    "4222": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8843,
        8911
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4223": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8843,
        8911
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4224": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8135,
        8918
      ],
      "op": "POP",
      "path": "6"
    },
    "4225": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8135,
        8918
      ],
      "op": "POP",
      "path": "6"
    },
    "4226": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "POP",
      "path": "6"
    },
    "4227": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "POP",
      "path": "6"
    },
    "4228": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "POP",
      "path": "6"
    },
    "4229": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "POP",
      "path": "6"
    },
    "4230": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        8918
      ],
      "op": "POP",
      "path": "6"
    },
    "4231": {
      "fn": "Loot.safeTransferFrom",
      "jump": "o",
      "offset": [
        7974,
        8918
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4232": {
      "fn": "Loot.toString",
      "offset": [
        14494,
        15197
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4233": {
      "fn": "Loot.toString",
      "offset": [
        14550,
        14563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4235": {
      "branch": 78,
      "fn": "Loot.toString",
      "offset": [
        14767,
        14777
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4236": {
      "fn": "Loot.toString",
      "offset": [
        14763,
        14814
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AC"
    },
    "4239": {
      "branch": 78,
      "fn": "Loot.toString",
      "offset": [
        14763,
        14814
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4240": {
      "op": "POP"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 49,
      "value": "0x40"
    },
    "4244": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4245": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4246": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4247": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4248": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "ADD",
      "path": "6"
    },
    "4249": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4250": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4251": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4252": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4254": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4255": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "4260": {
      "op": "SHL"
    },
    "4261": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4263": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4264": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "ADD",
      "path": "6"
    },
    "4265": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4266": {
      "fn": "Loot.toString",
      "offset": [
        14793,
        14803
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4267": {
      "fn": "Loot.toString",
      "jump": "o",
      "offset": [
        14494,
        15197
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4268": {
      "fn": "Loot.toString",
      "offset": [
        14763,
        14814
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4269": {
      "fn": "Loot.toString",
      "offset": [
        14838,
        14843
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4270": {
      "fn": "Loot.toString",
      "offset": [
        14823,
        14835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4272": {
      "fn": "Loot.toString",
      "offset": [
        14877,
        14952
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4273": {
      "fn": "Loot.toString",
      "offset": [
        14884,
        14893
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4274": {
      "fn": "Loot.toString",
      "offset": [
        14884,
        14893
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4275": {
      "fn": "Loot.toString",
      "offset": [
        14877,
        14952
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10D6"
    },
    "4278": {
      "fn": "Loot.toString",
      "offset": [
        14877,
        14952
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4279": {
      "fn": "Loot.toString",
      "offset": [
        14909,
        14917
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 50
    },
    "4280": {
      "fn": "Loot.toString",
      "offset": [
        14909,
        14917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C0"
    },
    "4283": {
      "fn": "Loot.toString",
      "offset": [
        14909,
        14917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4284": {
      "fn": "Loot.toString",
      "offset": [
        14909,
        14917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E3C"
    },
    "4287": {
      "fn": "Loot.toString",
      "jump": "i",
      "offset": [
        14909,
        14917
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4288": {
      "fn": "Loot.toString",
      "offset": [
        14909,
        14917
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4289": {
      "fn": "Loot.toString",
      "offset": [
        14909,
        14917
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4290": {
      "op": "POP"
    },
    "4291": {
      "fn": "Loot.toString",
      "offset": [
        14931,
        14941
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 51,
      "value": "0x10CF"
    },
    "4294": {
      "fn": "Loot.toString",
      "offset": [
        14931,
        14941
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4295": {
      "op": "POP"
    },
    "4296": {
      "fn": "Loot.toString",
      "offset": [
        14939,
        14941
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4298": {
      "fn": "Loot.toString",
      "offset": [
        14931,
        14941
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4299": {
      "fn": "Loot.toString",
      "offset": [
        14931,
        14941
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D79"
    },
    "4302": {
      "fn": "Loot.toString",
      "jump": "i",
      "offset": [
        14931,
        14941
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4303": {
      "fn": "Loot.toString",
      "offset": [
        14931,
        14941
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4304": {
      "fn": "Loot.toString",
      "offset": [
        14931,
        14941
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4305": {
      "fn": "Loot.toString",
      "offset": [
        14931,
        14941
      ],
      "op": "POP",
      "path": "6"
    },
    "4306": {
      "fn": "Loot.toString",
      "offset": [
        14877,
        14952
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B0"
    },
    "4309": {
      "fn": "Loot.toString",
      "offset": [
        14877,
        14952
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4310": {
      "fn": "Loot.toString",
      "offset": [
        14877,
        14952
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4311": {
      "fn": "Loot.toString",
      "offset": [
        14961,
        14980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4313": {
      "fn": "Loot.toString",
      "offset": [
        14993,
        14999
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4314": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4323": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4324": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "GT",
      "path": "6"
    },
    "4325": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4326": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10F1"
    },
    "4329": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4330": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10F1"
    },
    "4333": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EAD"
    },
    "4336": {
      "fn": "Loot.toString",
      "jump": "i",
      "offset": [
        14983,
        15000
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4337": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4338": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4340": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4341": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4342": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4343": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4344": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4345": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4346": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4348": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "ADD",
      "path": "6"
    },
    "4349": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4351": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "NOT",
      "path": "6"
    },
    "4352": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "AND",
      "path": "6"
    },
    "4353": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4355": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "ADD",
      "path": "6"
    },
    "4356": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4357": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "ADD",
      "path": "6"
    },
    "4358": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4360": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4361": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4362": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4363": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x111B"
    },
    "4366": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4367": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4369": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4370": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "ADD",
      "path": "6"
    },
    "4371": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4372": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4373": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "4374": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4375": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "4376": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "ADD",
      "path": "6"
    },
    "4377": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4378": {
      "op": "POP"
    },
    "4379": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4380": {
      "fn": "Loot.toString",
      "offset": [
        14983,
        15000
      ],
      "op": "POP",
      "path": "6"
    },
    "4381": {
      "fn": "Loot.toString",
      "offset": [
        14961,
        15000
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4382": {
      "fn": "Loot.toString",
      "offset": [
        14961,
        15000
      ],
      "op": "POP",
      "path": "6"
    },
    "4383": {
      "fn": "Loot.toString",
      "offset": [
        15010,
        15160
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4384": {
      "fn": "Loot.toString",
      "offset": [
        15017,
        15027
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4385": {
      "fn": "Loot.toString",
      "offset": [
        15017,
        15027
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4386": {
      "fn": "Loot.toString",
      "offset": [
        15010,
        15160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FB"
    },
    "4389": {
      "fn": "Loot.toString",
      "offset": [
        15010,
        15160
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4390": {
      "fn": "Loot.toString",
      "offset": [
        15043,
        15054
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 52,
      "value": "0x1130"
    },
    "4393": {
      "fn": "Loot.toString",
      "offset": [
        15053,
        15054
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4395": {
      "fn": "Loot.toString",
      "offset": [
        15043,
        15054
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4396": {
      "fn": "Loot.toString",
      "offset": [
        15043,
        15054
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D8D"
    },
    "4399": {
      "fn": "Loot.toString",
      "jump": "i",
      "offset": [
        15043,
        15054
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4400": {
      "fn": "Loot.toString",
      "offset": [
        15043,
        15054
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4401": {
      "fn": "Loot.toString",
      "offset": [
        15043,
        15054
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4402": {
      "op": "POP"
    },
    "4403": {
      "fn": "Loot.toString",
      "offset": [
        15111,
        15121
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 53,
      "value": "0x113D"
    },
    "4406": {
      "fn": "Loot.toString",
      "offset": [
        15119,
        15121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4408": {
      "fn": "Loot.toString",
      "offset": [
        15111,
        15116
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4409": {
      "fn": "Loot.toString",
      "offset": [
        15111,
        15121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E57"
    },
    "4412": {
      "fn": "Loot.toString",
      "jump": "i",
      "offset": [
        15111,
        15121
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4413": {
      "fn": "Loot.toString",
      "offset": [
        15111,
        15121
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4414": {
      "fn": "Loot.toString",
      "offset": [
        15098,
        15122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1148"
    },
    "4417": {
      "fn": "Loot.toString",
      "offset": [
        15098,
        15122
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4418": {
      "fn": "Loot.toString",
      "offset": [
        15098,
        15100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x30"
    },
    "4420": {
      "fn": "Loot.toString",
      "offset": [
        15098,
        15122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "4423": {
      "fn": "Loot.toString",
      "jump": "i",
      "offset": [
        15098,
        15122
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4424": {
      "fn": "Loot.toString",
      "offset": [
        15098,
        15122
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4425": {
      "fn": "Loot.toString",
      "offset": [
        15085,
        15124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF8"
    },
    "4427": {
      "fn": "Loot.toString",
      "offset": [
        15085,
        15124
      ],
      "op": "SHL",
      "path": "6"
    },
    "4428": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15074
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4429": {
      "fn": "Loot.toString",
      "offset": [
        15075,
        15081
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4430": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4431": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4432": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4433": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "LT",
      "path": "6"
    },
    "4434": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x115D"
    },
    "4437": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4438": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x115D"
    },
    "4441": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E97"
    },
    "4444": {
      "fn": "Loot.toString",
      "jump": "i",
      "offset": [
        15068,
        15082
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4445": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4446": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4448": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "ADD",
      "path": "6"
    },
    "4449": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15082
      ],
      "op": "ADD",
      "path": "6"
    },
    "4450": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4457": {
      "op": "SHL"
    },
    "4458": {
      "op": "SUB"
    },
    "4459": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "NOT",
      "path": "6"
    },
    "4460": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "AND",
      "path": "6"
    },
    "4461": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4462": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4463": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4465": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "BYTE",
      "path": "6"
    },
    "4466": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4467": {
      "fn": "Loot.toString",
      "offset": [
        15068,
        15124
      ],
      "op": "MSTORE8",
      "path": "6"
    },
    "4468": {
      "op": "POP"
    },
    "4469": {
      "fn": "Loot.toString",
      "offset": [
        15138,
        15149
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 54,
      "value": "0x117F"
    },
    "4472": {
      "fn": "Loot.toString",
      "offset": [
        15147,
        15149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4474": {
      "fn": "Loot.toString",
      "offset": [
        15138,
        15149
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4475": {
      "fn": "Loot.toString",
      "offset": [
        15138,
        15149
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D79"
    },
    "4478": {
      "fn": "Loot.toString",
      "jump": "i",
      "offset": [
        15138,
        15149
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4479": {
      "fn": "Loot.toString",
      "offset": [
        15138,
        15149
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4480": {
      "fn": "Loot.toString",
      "offset": [
        15138,
        15149
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "4481": {
      "fn": "Loot.toString",
      "offset": [
        15138,
        15149
      ],
      "op": "POP",
      "path": "6"
    },
    "4482": {
      "fn": "Loot.toString",
      "offset": [
        15010,
        15160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x111F"
    },
    "4485": {
      "fn": "Loot.toString",
      "offset": [
        15010,
        15160
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4486": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13447,
        14393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4493": {
      "op": "SHL"
    },
    "4494": {
      "op": "SUB"
    },
    "4495": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13679,
        13692
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4496": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13679,
        13692
      ],
      "op": "AND",
      "path": "6"
    },
    "4497": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4498": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "3",
      "statement": 55
    },
    "4499": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13675,
        14387
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B7"
    },
    "4502": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13675,
        14387
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4503": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4505": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4506": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4513": {
      "op": "SHL"
    },
    "4514": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4515": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4522": {
      "op": "SHL"
    },
    "4523": {
      "op": "SUB"
    },
    "4524": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13773
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4525": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13773
      ],
      "op": "AND",
      "path": "6"
    },
    "4526": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13773
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4527": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13773
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBC197C81"
    },
    "4532": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13773
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4533": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11CA"
    },
    "4536": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4537": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13795,
        13803
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4538": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13795,
        13803
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4539": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13825,
        13829
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4540": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13825,
        13829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4541": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13851,
        13854
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4542": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13851,
        13854
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4543": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13876,
        13883
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4544": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13876,
        13883
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4545": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13905,
        13909
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4546": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13905,
        13909
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4547": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4549": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "ADD",
      "path": "6"
    },
    "4550": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A4B"
    },
    "4553": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13730,
        13927
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4554": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4555": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4557": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4559": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4560": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4561": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4562": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "SUB",
      "path": "6"
    },
    "4563": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4564": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4566": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4567": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4568": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4569": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4570": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4571": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4572": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11E4"
    },
    "4575": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4576": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4578": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4579": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4580": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4581": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "POP",
      "path": "6"
    },
    "4582": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "GAS",
      "path": "6"
    },
    "4583": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "CALL",
      "path": "6"
    },
    "4584": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4585": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "POP",
      "path": "6"
    },
    "4586": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "POP",
      "path": "6"
    },
    "4587": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "POP",
      "path": "6"
    },
    "4588": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4589": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4590": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1214"
    },
    "4593": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4594": {
      "op": "POP"
    },
    "4595": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4597": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4598": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4599": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4601": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4602": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4603": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4604": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "ADD",
      "path": "6"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4607": {
      "op": "NOT"
    },
    "4608": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "AND",
      "path": "6"
    },
    "4609": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4610": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "ADD",
      "path": "6"
    },
    "4611": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4612": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4613": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4614": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1211"
    },
    "4617": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4618": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4619": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "ADD",
      "path": "6"
    },
    "4620": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4621": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1911"
    },
    "4624": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13730,
        13927
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4625": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4626": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4628": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13730,
        13927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4629": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12C1"
    },
    "4632": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4633": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1220"
    },
    "4636": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EC3"
    },
    "4639": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4640": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4641": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4642": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8C379A0"
    },
    "4647": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "EQ",
      "path": "6"
    },
    "4648": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4649": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125A"
    },
    "4652": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4653": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "POP",
      "path": "6"
    },
    "4654": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1235"
    },
    "4657": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EDF"
    },
    "4660": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4661": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4662": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4663": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1240"
    },
    "4666": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4667": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "POP",
      "path": "6"
    },
    "4668": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125C"
    },
    "4671": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4672": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4673": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14253,
        14259
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 56
    },
    "4674": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4676": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4683": {
      "op": "SHL"
    },
    "4684": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4685": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4686": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4688": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "ADD",
      "path": "6"
    },
    "4689": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "4692": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4693": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4694": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14246,
        14260
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2F"
    },
    "4697": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14246,
        14260
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4698": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4699": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "POP",
      "path": "6"
    },
    "4700": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4701": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14300,
        14362
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 57,
      "value": "0x40"
    },
    "4703": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14300,
        14362
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4704": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4710": {
      "op": "SHL"
    },
    "4711": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14300,
        14362
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4712": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14300,
        14362
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4715": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14300,
        14362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4717": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14300,
        14362
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4718": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14300,
        14362
      ],
      "op": "ADD",
      "path": "6"
    },
    "4719": {
      "op": "MSTORE"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4724": {
      "op": "DUP3"
    },
    "4725": {
      "op": "ADD"
    },
    "4726": {
      "op": "MSTORE"
    },
    "4727": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4762": {
      "op": "DUP3"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "op": "MSTORE"
    },
    "4765": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4788": {
      "op": "SHL"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4791": {
      "op": "DUP3"
    },
    "4792": {
      "op": "ADD"
    },
    "4793": {
      "op": "MSTORE"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4796": {
      "op": "ADD"
    },
    "4797": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14300,
        14362
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "4800": {
      "op": "JUMP"
    },
    "4801": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13710,
        14377
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4808": {
      "op": "SHL"
    },
    "4809": {
      "op": "SUB"
    },
    "4810": {
      "op": "NOT"
    },
    "4811": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14009,
        14069
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4812": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14009,
        14069
      ],
      "op": "AND",
      "path": "6"
    },
    "4813": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4820": {
      "op": "SHL"
    },
    "4821": {
      "branch": 79,
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14009,
        14069
      ],
      "op": "EQ",
      "path": "6"
    },
    "4822": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13984,
        14179
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x107F"
    },
    "4825": {
      "branch": 79,
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13984,
        14179
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4826": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 58,
      "value": "0x40"
    },
    "4828": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4829": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4835": {
      "op": "SHL"
    },
    "4836": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4837": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4838": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4840": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "ADD",
      "path": "6"
    },
    "4841": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "4844": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4845": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14110,
        14160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B42"
    },
    "4848": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14110,
        14160
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4849": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12570,
        13441
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4856": {
      "op": "SHL"
    },
    "4857": {
      "op": "SUB"
    },
    "4858": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12777,
        12790
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4859": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12777,
        12790
      ],
      "op": "AND",
      "path": "6"
    },
    "4860": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4861": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4862": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12773,
        13435
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B7"
    },
    "4865": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12773,
        13435
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4866": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4868": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4869": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4876": {
      "op": "SHL"
    },
    "4877": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4878": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4885": {
      "op": "SHL"
    },
    "4886": {
      "op": "SUB"
    },
    "4887": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        12866
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4888": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        12866
      ],
      "op": "AND",
      "path": "6"
    },
    "4889": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        12866
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4890": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        12866
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF23A6E61"
    },
    "4895": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        12866
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4896": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1335"
    },
    "4899": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4900": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12888,
        12896
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4901": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12888,
        12896
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4902": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12918,
        12922
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4903": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12918,
        12922
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4904": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12944,
        12946
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4905": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12944,
        12946
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4906": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12968,
        12974
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4907": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12968,
        12974
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4908": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12996,
        13000
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4909": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12996,
        13000
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4910": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4912": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "ADD",
      "path": "6"
    },
    "4913": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AA9"
    },
    "4916": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12828,
        13018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4917": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4918": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4920": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4922": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4923": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4924": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4925": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "SUB",
      "path": "6"
    },
    "4926": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4927": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4929": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4930": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4931": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4932": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4933": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4934": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4935": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134F"
    },
    "4938": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4939": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4941": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4942": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4943": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4944": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "POP",
      "path": "6"
    },
    "4945": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "GAS",
      "path": "6"
    },
    "4946": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "CALL",
      "path": "6"
    },
    "4947": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4948": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "POP",
      "path": "6"
    },
    "4949": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "POP",
      "path": "6"
    },
    "4950": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "POP",
      "path": "6"
    },
    "4951": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4952": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4953": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x137F"
    },
    "4956": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4960": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4961": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4962": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4964": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4965": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4966": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4967": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "ADD",
      "path": "6"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4970": {
      "op": "NOT"
    },
    "4971": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "AND",
      "path": "6"
    },
    "4972": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4973": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "ADD",
      "path": "6"
    },
    "4974": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4975": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4976": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4977": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x137C"
    },
    "4980": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4981": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4982": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "ADD",
      "path": "6"
    },
    "4983": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4984": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1911"
    },
    "4987": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12828,
        13018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4988": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4989": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4991": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12828,
        13018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4992": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12808,
        13425
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x138B"
    },
    "4995": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12808,
        13425
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4996": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12808,
        13425
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1220"
    },
    "4999": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12808,
        13425
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EC3"
    },
    "5002": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12808,
        13425
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5003": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12808,
        13425
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5010": {
      "op": "SHL"
    },
    "5011": {
      "op": "SUB"
    },
    "5012": {
      "op": "NOT"
    },
    "5013": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13079,
        13134
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5014": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13079,
        13134
      ],
      "op": "AND",
      "path": "6"
    },
    "5015": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5022": {
      "op": "SHL"
    },
    "5023": {
      "branch": 80,
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13079,
        13134
      ],
      "op": "EQ",
      "path": "6"
    },
    "5024": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13075,
        13227
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x107F"
    },
    "5027": {
      "branch": 80,
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13075,
        13227
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5028": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 59,
      "value": "0x40"
    },
    "5030": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5031": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5037": {
      "op": "SHL"
    },
    "5038": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5039": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5040": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5042": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "ADD",
      "path": "6"
    },
    "5043": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "5046": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5047": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        13158,
        13208
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B42"
    },
    "5050": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13158,
        13208
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5051": {
      "op": "JUMPDEST"
    },
    "5052": {
      "op": "DUP3"
    },
    "5053": {
      "op": "DUP1"
    },
    "5054": {
      "op": "SLOAD"
    },
    "5055": {
      "op": "PUSH2",
      "value": "0x13C7"
    },
    "5058": {
      "op": "SWAP1"
    },
    "5059": {
      "op": "PUSH2",
      "value": "0x1DD4"
    },
    "5062": {
      "jump": "i",
      "op": "JUMP"
    },
    "5063": {
      "op": "JUMPDEST"
    },
    "5064": {
      "op": "SWAP1"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5067": {
      "op": "MSTORE"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5072": {
      "op": "KECCAK256"
    },
    "5073": {
      "op": "SWAP1"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5076": {
      "op": "ADD"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5079": {
      "op": "SWAP1"
    },
    "5080": {
      "op": "DIV"
    },
    "5081": {
      "op": "DUP2"
    },
    "5082": {
      "op": "ADD"
    },
    "5083": {
      "op": "SWAP3"
    },
    "5084": {
      "op": "DUP3"
    },
    "5085": {
      "op": "PUSH2",
      "value": "0x13E9"
    },
    "5088": {
      "op": "JUMPI"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5091": {
      "op": "DUP6"
    },
    "5092": {
      "op": "SSTORE"
    },
    "5093": {
      "op": "PUSH2",
      "value": "0x142F"
    },
    "5096": {
      "op": "JUMP"
    },
    "5097": {
      "op": "JUMPDEST"
    },
    "5098": {
      "op": "DUP3"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5101": {
      "op": "LT"
    },
    "5102": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5105": {
      "op": "JUMPI"
    },
    "5106": {
      "op": "DUP1"
    },
    "5107": {
      "op": "MLOAD"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5110": {
      "op": "NOT"
    },
    "5111": {
      "op": "AND"
    },
    "5112": {
      "op": "DUP4"
    },
    "5113": {
      "op": "DUP1"
    },
    "5114": {
      "op": "ADD"
    },
    "5115": {
      "op": "OR"
    },
    "5116": {
      "op": "DUP6"
    },
    "5117": {
      "op": "SSTORE"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x142F"
    },
    "5121": {
      "op": "JUMP"
    },
    "5122": {
      "op": "JUMPDEST"
    },
    "5123": {
      "op": "DUP3"
    },
    "5124": {
      "op": "DUP1"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5128": {
      "op": "ADD"
    },
    "5129": {
      "op": "DUP6"
    },
    "5130": {
      "op": "SSTORE"
    },
    "5131": {
      "op": "DUP3"
    },
    "5132": {
      "op": "ISZERO"
    },
    "5133": {
      "op": "PUSH2",
      "value": "0x142F"
    },
    "5136": {
      "op": "JUMPI"
    },
    "5137": {
      "op": "SWAP2"
    },
    "5138": {
      "op": "DUP3"
    },
    "5139": {
      "op": "ADD"
    },
    "5140": {
      "op": "JUMPDEST"
    },
    "5141": {
      "op": "DUP3"
    },
    "5142": {
      "op": "DUP2"
    },
    "5143": {
      "op": "GT"
    },
    "5144": {
      "op": "ISZERO"
    },
    "5145": {
      "op": "PUSH2",
      "value": "0x142F"
    },
    "5148": {
      "op": "JUMPI"
    },
    "5149": {
      "op": "DUP3"
    },
    "5150": {
      "op": "MLOAD"
    },
    "5151": {
      "op": "DUP3"
    },
    "5152": {
      "op": "SSTORE"
    },
    "5153": {
      "op": "SWAP2"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5156": {
      "op": "ADD"
    },
    "5157": {
      "op": "SWAP2"
    },
    "5158": {
      "op": "SWAP1"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5161": {
      "op": "ADD"
    },
    "5162": {
      "op": "SWAP1"
    },
    "5163": {
      "op": "PUSH2",
      "value": "0x1414"
    },
    "5166": {
      "op": "JUMP"
    },
    "5167": {
      "op": "JUMPDEST"
    },
    "5168": {
      "op": "POP"
    },
    "5169": {
      "op": "PUSH2",
      "value": "0x143B"
    },
    "5172": {
      "op": "SWAP3"
    },
    "5173": {
      "op": "SWAP2"
    },
    "5174": {
      "op": "POP"
    },
    "5175": {
      "op": "PUSH2",
      "value": "0x143F"
    },
    "5178": {
      "jump": "i",
      "op": "JUMP"
    },
    "5179": {
      "op": "JUMPDEST"
    },
    "5180": {
      "op": "POP"
    },
    "5181": {
      "op": "SWAP1"
    },
    "5182": {
      "jump": "o",
      "op": "JUMP"
    },
    "5183": {
      "op": "JUMPDEST"
    },
    "5184": {
      "op": "JUMPDEST"
    },
    "5185": {
      "op": "DUP1"
    },
    "5186": {
      "op": "DUP3"
    },
    "5187": {
      "op": "GT"
    },
    "5188": {
      "op": "ISZERO"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0x143B"
    },
    "5192": {
      "op": "JUMPI"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5195": {
      "op": "DUP2"
    },
    "5196": {
      "op": "SSTORE"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "ADD"
    },
    "5200": {
      "op": "PUSH2",
      "value": "0x1440"
    },
    "5203": {
      "op": "JUMP"
    },
    "5204": {
      "op": "JUMPDEST"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5207": {
      "op": "DUP3"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5210": {
      "op": "DUP4"
    },
    "5211": {
      "op": "ADD"
    },
    "5212": {
      "op": "SLT"
    },
    "5213": {
      "op": "PUSH2",
      "value": "0x1465"
    },
    "5216": {
      "op": "JUMPI"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5219": {
      "op": "DUP1"
    },
    "5220": {
      "op": "REVERT"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "DUP2"
    },
    "5223": {
      "op": "CALLDATALOAD"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5226": {
      "op": "PUSH2",
      "value": "0x1472"
    },
    "5229": {
      "op": "DUP3"
    },
    "5230": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "5233": {
      "jump": "i",
      "op": "JUMP"
    },
    "5234": {
      "op": "JUMPDEST"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5237": {
      "op": "MLOAD"
    },
    "5238": {
      "op": "PUSH2",
      "value": "0x147F"
    },
    "5241": {
      "op": "DUP3"
    },
    "5242": {
      "op": "DUP3"
    },
    "5243": {
      "op": "PUSH2",
      "value": "0x1E0F"
    },
    "5246": {
      "jump": "i",
      "op": "JUMP"
    },
    "5247": {
      "op": "JUMPDEST"
    },
    "5248": {
      "op": "DUP4"
    },
    "5249": {
      "op": "DUP2"
    },
    "5250": {
      "op": "MSTORE"
    },
    "5251": {
      "op": "DUP3"
    },
    "5252": {
      "op": "DUP2"
    },
    "5253": {
      "op": "ADD"
    },
    "5254": {
      "op": "SWAP2"
    },
    "5255": {
      "op": "POP"
    },
    "5256": {
      "op": "DUP6"
    },
    "5257": {
      "op": "DUP4"
    },
    "5258": {
      "op": "ADD"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5261": {
      "op": "DUP6"
    },
    "5262": {
      "op": "SWAP1"
    },
    "5263": {
      "op": "SHL"
    },
    "5264": {
      "op": "DUP8"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "op": "DUP5"
    },
    "5267": {
      "op": "ADD"
    },
    "5268": {
      "op": "DUP9"
    },
    "5269": {
      "op": "LT"
    },
    "5270": {
      "op": "ISZERO"
    },
    "5271": {
      "op": "PUSH2",
      "value": "0x149F"
    },
    "5274": {
      "op": "JUMPI"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5277": {
      "op": "DUP1"
    },
    "5278": {
      "op": "REVERT"
    },
    "5279": {
      "op": "JUMPDEST"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5282": {
      "op": "JUMPDEST"
    },
    "5283": {
      "op": "DUP6"
    },
    "5284": {
      "op": "DUP2"
    },
    "5285": {
      "op": "LT"
    },
    "5286": {
      "op": "ISZERO"
    },
    "5287": {
      "op": "PUSH2",
      "value": "0x14BE"
    },
    "5290": {
      "op": "JUMPI"
    },
    "5291": {
      "op": "DUP2"
    },
    "5292": {
      "op": "CALLDATALOAD"
    },
    "5293": {
      "op": "DUP5"
    },
    "5294": {
      "op": "MSTORE"
    },
    "5295": {
      "op": "SWAP3"
    },
    "5296": {
      "op": "DUP5"
    },
    "5297": {
      "op": "ADD"
    },
    "5298": {
      "op": "SWAP3"
    },
    "5299": {
      "op": "SWAP1"
    },
    "5300": {
      "op": "DUP5"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "SWAP1"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5305": {
      "op": "ADD"
    },
    "5306": {
      "op": "PUSH2",
      "value": "0x14A2"
    },
    "5309": {
      "op": "JUMP"
    },
    "5310": {
      "op": "JUMPDEST"
    },
    "5311": {
      "op": "POP"
    },
    "5312": {
      "op": "SWAP1"
    },
    "5313": {
      "op": "SWAP8"
    },
    "5314": {
      "op": "SWAP7"
    },
    "5315": {
      "op": "POP"
    },
    "5316": {
      "op": "POP"
    },
    "5317": {
      "op": "POP"
    },
    "5318": {
      "op": "POP"
    },
    "5319": {
      "op": "POP"
    },
    "5320": {
      "op": "POP"
    },
    "5321": {
      "op": "POP"
    },
    "5322": {
      "jump": "o",
      "op": "JUMP"
    },
    "5323": {
      "op": "JUMPDEST"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5326": {
      "op": "DUP3"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5329": {
      "op": "DUP4"
    },
    "5330": {
      "op": "ADD"
    },
    "5331": {
      "op": "SLT"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x14DC"
    },
    "5335": {
      "op": "JUMPI"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5338": {
      "op": "DUP1"
    },
    "5339": {
      "op": "REVERT"
    },
    "5340": {
      "op": "JUMPDEST"
    },
    "5341": {
      "op": "DUP2"
    },
    "5342": {
      "op": "CALLDATALOAD"
    },
    "5343": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5352": {
      "op": "DUP2"
    },
    "5353": {
      "op": "GT"
    },
    "5354": {
      "op": "ISZERO"
    },
    "5355": {
      "op": "PUSH2",
      "value": "0x14F6"
    },
    "5358": {
      "op": "JUMPI"
    },
    "5359": {
      "op": "PUSH2",
      "value": "0x14F6"
    },
    "5362": {
      "op": "PUSH2",
      "value": "0x1EAD"
    },
    "5365": {
      "jump": "i",
      "op": "JUMP"
    },
    "5366": {
      "op": "JUMPDEST"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5369": {
      "op": "MLOAD"
    },
    "5370": {
      "op": "PUSH2",
      "value": "0x150D"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5375": {
      "op": "DUP4"
    },
    "5376": {
      "op": "ADD"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5379": {
      "op": "NOT"
    },
    "5380": {
      "op": "AND"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5383": {
      "op": "ADD"
    },
    "5384": {
      "op": "DUP3"
    },
    "5385": {
      "op": "PUSH2",
      "value": "0x1E0F"
    },
    "5388": {
      "jump": "i",
      "op": "JUMP"
    },
    "5389": {
      "op": "JUMPDEST"
    },
    "5390": {
      "op": "DUP2"
    },
    "5391": {
      "op": "DUP2"
    },
    "5392": {
      "op": "MSTORE"
    },
    "5393": {
      "op": "DUP5"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5396": {
      "op": "DUP4"
    },
    "5397": {
      "op": "DUP7"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "ADD"
    },
    "5400": {
      "op": "GT"
    },
    "5401": {
      "op": "ISZERO"
    },
    "5402": {
      "op": "PUSH2",
      "value": "0x1522"
    },
    "5405": {
      "op": "JUMPI"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5408": {
      "op": "DUP1"
    },
    "5409": {
      "op": "REVERT"
    },
    "5410": {
      "op": "JUMPDEST"
    },
    "5411": {
      "op": "DUP2"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5414": {
      "op": "DUP6"
    },
    "5415": {
      "op": "ADD"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5418": {
      "op": "DUP4"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "CALLDATACOPY"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5423": {
      "op": "SWAP2"
    },
    "5424": {
      "op": "DUP2"
    },
    "5425": {
      "op": "ADD"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "SWAP2"
    },
    "5430": {
      "op": "SWAP1"
    },
    "5431": {
      "op": "SWAP2"
    },
    "5432": {
      "op": "MSTORE"
    },
    "5433": {
      "op": "SWAP4"
    },
    "5434": {
      "op": "SWAP3"
    },
    "5435": {
      "op": "POP"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "jump": "o",
      "op": "JUMP"
    },
    "5439": {
      "op": "JUMPDEST"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5444": {
      "op": "DUP3"
    },
    "5445": {
      "op": "DUP5"
    },
    "5446": {
      "op": "SUB"
    },
    "5447": {
      "op": "SLT"
    },
    "5448": {
      "op": "ISZERO"
    },
    "5449": {
      "op": "PUSH2",
      "value": "0x1551"
    },
    "5452": {
      "op": "JUMPI"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5455": {
      "op": "DUP1"
    },
    "5456": {
      "op": "REVERT"
    },
    "5457": {
      "op": "JUMPDEST"
    },
    "5458": {
      "op": "DUP2"
    },
    "5459": {
      "op": "CALLDATALOAD"
    },
    "5460": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "5463": {
      "op": "DUP2"
    },
    "5464": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5467": {
      "jump": "i",
      "op": "JUMP"
    },
    "5468": {
      "op": "JUMPDEST"
    },
    "5469": {
      "op": "SWAP4"
    },
    "5470": {
      "op": "SWAP3"
    },
    "5471": {
      "op": "POP"
    },
    "5472": {
      "op": "POP"
    },
    "5473": {
      "op": "POP"
    },
    "5474": {
      "jump": "o",
      "op": "JUMP"
    },
    "5475": {
      "op": "JUMPDEST"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5480": {
      "op": "DUP3"
    },
    "5481": {
      "op": "DUP5"
    },
    "5482": {
      "op": "SUB"
    },
    "5483": {
      "op": "SLT"
    },
    "5484": {
      "op": "ISZERO"
    },
    "5485": {
      "op": "PUSH2",
      "value": "0x1575"
    },
    "5488": {
      "op": "JUMPI"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5491": {
      "op": "DUP1"
    },
    "5492": {
      "op": "REVERT"
    },
    "5493": {
      "op": "JUMPDEST"
    },
    "5494": {
      "op": "DUP2"
    },
    "5495": {
      "op": "MLOAD"
    },
    "5496": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "5499": {
      "op": "DUP2"
    },
    "5500": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5503": {
      "jump": "i",
      "op": "JUMP"
    },
    "5504": {
      "op": "JUMPDEST"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5507": {
      "op": "DUP1"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5510": {
      "op": "DUP4"
    },
    "5511": {
      "op": "DUP6"
    },
    "5512": {
      "op": "SUB"
    },
    "5513": {
      "op": "SLT"
    },
    "5514": {
      "op": "ISZERO"
    },
    "5515": {
      "op": "PUSH2",
      "value": "0x1593"
    },
    "5518": {
      "op": "JUMPI"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5521": {
      "op": "DUP1"
    },
    "5522": {
      "op": "REVERT"
    },
    "5523": {
      "op": "JUMPDEST"
    },
    "5524": {
      "op": "DUP3"
    },
    "5525": {
      "op": "CALLDATALOAD"
    },
    "5526": {
      "op": "PUSH2",
      "value": "0x159E"
    },
    "5529": {
      "op": "DUP2"
    },
    "5530": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5533": {
      "jump": "i",
      "op": "JUMP"
    },
    "5534": {
      "op": "JUMPDEST"
    },
    "5535": {
      "op": "SWAP2"
    },
    "5536": {
      "op": "POP"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5539": {
      "op": "DUP4"
    },
    "5540": {
      "op": "ADD"
    },
    "5541": {
      "op": "CALLDATALOAD"
    },
    "5542": {
      "op": "PUSH2",
      "value": "0x15AE"
    },
    "5545": {
      "op": "DUP2"
    },
    "5546": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5549": {
      "jump": "i",
      "op": "JUMP"
    },
    "5550": {
      "op": "JUMPDEST"
    },
    "5551": {
      "op": "DUP1"
    },
    "5552": {
      "op": "SWAP2"
    },
    "5553": {
      "op": "POP"
    },
    "5554": {
      "op": "POP"
    },
    "5555": {
      "op": "SWAP3"
    },
    "5556": {
      "op": "POP"
    },
    "5557": {
      "op": "SWAP3"
    },
    "5558": {
      "op": "SWAP1"
    },
    "5559": {
      "op": "POP"
    },
    "5560": {
      "jump": "o",
      "op": "JUMP"
    },
    "5561": {
      "op": "JUMPDEST"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5564": {
      "op": "DUP1"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5567": {
      "op": "DUP1"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5572": {
      "op": "DUP7"
    },
    "5573": {
      "op": "DUP9"
    },
    "5574": {
      "op": "SUB"
    },
    "5575": {
      "op": "SLT"
    },
    "5576": {
      "op": "ISZERO"
    },
    "5577": {
      "op": "PUSH2",
      "value": "0x15D1"
    },
    "5580": {
      "op": "JUMPI"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5583": {
      "op": "DUP1"
    },
    "5584": {
      "op": "REVERT"
    },
    "5585": {
      "op": "JUMPDEST"
    },
    "5586": {
      "op": "DUP6"
    },
    "5587": {
      "op": "CALLDATALOAD"
    },
    "5588": {
      "op": "PUSH2",
      "value": "0x15DC"
    },
    "5591": {
      "op": "DUP2"
    },
    "5592": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5595": {
      "jump": "i",
      "op": "JUMP"
    },
    "5596": {
      "op": "JUMPDEST"
    },
    "5597": {
      "op": "SWAP5"
    },
    "5598": {
      "op": "POP"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5601": {
      "op": "DUP7"
    },
    "5602": {
      "op": "ADD"
    },
    "5603": {
      "op": "CALLDATALOAD"
    },
    "5604": {
      "op": "PUSH2",
      "value": "0x15EC"
    },
    "5607": {
      "op": "DUP2"
    },
    "5608": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5611": {
      "jump": "i",
      "op": "JUMP"
    },
    "5612": {
      "op": "JUMPDEST"
    },
    "5613": {
      "op": "SWAP4"
    },
    "5614": {
      "op": "POP"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5617": {
      "op": "DUP7"
    },
    "5618": {
      "op": "ADD"
    },
    "5619": {
      "op": "CALLDATALOAD"
    },
    "5620": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5629": {
      "op": "DUP1"
    },
    "5630": {
      "op": "DUP3"
    },
    "5631": {
      "op": "GT"
    },
    "5632": {
      "op": "ISZERO"
    },
    "5633": {
      "op": "PUSH2",
      "value": "0x1609"
    },
    "5636": {
      "op": "JUMPI"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5639": {
      "op": "DUP1"
    },
    "5640": {
      "op": "REVERT"
    },
    "5641": {
      "op": "JUMPDEST"
    },
    "5642": {
      "op": "PUSH2",
      "value": "0x1615"
    },
    "5645": {
      "op": "DUP10"
    },
    "5646": {
      "op": "DUP4"
    },
    "5647": {
      "op": "DUP11"
    },
    "5648": {
      "op": "ADD"
    },
    "5649": {
      "op": "PUSH2",
      "value": "0x1454"
    },
    "5652": {
      "jump": "i",
      "op": "JUMP"
    },
    "5653": {
      "op": "JUMPDEST"
    },
    "5654": {
      "op": "SWAP5"
    },
    "5655": {
      "op": "POP"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5658": {
      "op": "DUP9"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "CALLDATALOAD"
    },
    "5661": {
      "op": "SWAP2"
    },
    "5662": {
      "op": "POP"
    },
    "5663": {
      "op": "DUP1"
    },
    "5664": {
      "op": "DUP3"
    },
    "5665": {
      "op": "GT"
    },
    "5666": {
      "op": "ISZERO"
    },
    "5667": {
      "op": "PUSH2",
      "value": "0x162B"
    },
    "5670": {
      "op": "JUMPI"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5673": {
      "op": "DUP1"
    },
    "5674": {
      "op": "REVERT"
    },
    "5675": {
      "op": "JUMPDEST"
    },
    "5676": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "5679": {
      "op": "DUP10"
    },
    "5680": {
      "op": "DUP4"
    },
    "5681": {
      "op": "DUP11"
    },
    "5682": {
      "op": "ADD"
    },
    "5683": {
      "op": "PUSH2",
      "value": "0x1454"
    },
    "5686": {
      "jump": "i",
      "op": "JUMP"
    },
    "5687": {
      "op": "JUMPDEST"
    },
    "5688": {
      "op": "SWAP4"
    },
    "5689": {
      "op": "POP"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5692": {
      "op": "DUP9"
    },
    "5693": {
      "op": "ADD"
    },
    "5694": {
      "op": "CALLDATALOAD"
    },
    "5695": {
      "op": "SWAP2"
    },
    "5696": {
      "op": "POP"
    },
    "5697": {
      "op": "DUP1"
    },
    "5698": {
      "op": "DUP3"
    },
    "5699": {
      "op": "GT"
    },
    "5700": {
      "op": "ISZERO"
    },
    "5701": {
      "op": "PUSH2",
      "value": "0x164D"
    },
    "5704": {
      "op": "JUMPI"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5707": {
      "op": "DUP1"
    },
    "5708": {
      "op": "REVERT"
    },
    "5709": {
      "op": "JUMPDEST"
    },
    "5710": {
      "op": "POP"
    },
    "5711": {
      "op": "PUSH2",
      "value": "0x165A"
    },
    "5714": {
      "op": "DUP9"
    },
    "5715": {
      "op": "DUP3"
    },
    "5716": {
      "op": "DUP10"
    },
    "5717": {
      "op": "ADD"
    },
    "5718": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "5721": {
      "jump": "i",
      "op": "JUMP"
    },
    "5722": {
      "op": "JUMPDEST"
    },
    "5723": {
      "op": "SWAP2"
    },
    "5724": {
      "op": "POP"
    },
    "5725": {
      "op": "POP"
    },
    "5726": {
      "op": "SWAP3"
    },
    "5727": {
      "op": "SWAP6"
    },
    "5728": {
      "op": "POP"
    },
    "5729": {
      "op": "SWAP3"
    },
    "5730": {
      "op": "SWAP6"
    },
    "5731": {
      "op": "SWAP1"
    },
    "5732": {
      "op": "SWAP4"
    },
    "5733": {
      "op": "POP"
    },
    "5734": {
      "jump": "o",
      "op": "JUMP"
    },
    "5735": {
      "op": "JUMPDEST"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5738": {
      "op": "DUP1"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5741": {
      "op": "DUP1"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5746": {
      "op": "DUP7"
    },
    "5747": {
      "op": "DUP9"
    },
    "5748": {
      "op": "SUB"
    },
    "5749": {
      "op": "SLT"
    },
    "5750": {
      "op": "ISZERO"
    },
    "5751": {
      "op": "PUSH2",
      "value": "0x167F"
    },
    "5754": {
      "op": "JUMPI"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5757": {
      "op": "DUP1"
    },
    "5758": {
      "op": "REVERT"
    },
    "5759": {
      "op": "JUMPDEST"
    },
    "5760": {
      "op": "DUP6"
    },
    "5761": {
      "op": "CALLDATALOAD"
    },
    "5762": {
      "op": "PUSH2",
      "value": "0x168A"
    },
    "5765": {
      "op": "DUP2"
    },
    "5766": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5769": {
      "jump": "i",
      "op": "JUMP"
    },
    "5770": {
      "op": "JUMPDEST"
    },
    "5771": {
      "op": "SWAP5"
    },
    "5772": {
      "op": "POP"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5775": {
      "op": "DUP7"
    },
    "5776": {
      "op": "ADD"
    },
    "5777": {
      "op": "CALLDATALOAD"
    },
    "5778": {
      "op": "PUSH2",
      "value": "0x169A"
    },
    "5781": {
      "op": "DUP2"
    },
    "5782": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5785": {
      "jump": "i",
      "op": "JUMP"
    },
    "5786": {
      "op": "JUMPDEST"
    },
    "5787": {
      "op": "SWAP4"
    },
    "5788": {
      "op": "POP"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5791": {
      "op": "DUP7"
    },
    "5792": {
      "op": "ADD"
    },
    "5793": {
      "op": "CALLDATALOAD"
    },
    "5794": {
      "op": "SWAP3"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5798": {
      "op": "DUP7"
    },
    "5799": {
      "op": "ADD"
    },
    "5800": {
      "op": "CALLDATALOAD"
    },
    "5801": {
      "op": "SWAP2"
    },
    "5802": {
      "op": "POP"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5805": {
      "op": "DUP7"
    },
    "5806": {
      "op": "ADD"
    },
    "5807": {
      "op": "CALLDATALOAD"
    },
    "5808": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5817": {
      "op": "DUP2"
    },
    "5818": {
      "op": "GT"
    },
    "5819": {
      "op": "ISZERO"
    },
    "5820": {
      "op": "PUSH2",
      "value": "0x16C4"
    },
    "5823": {
      "op": "JUMPI"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5826": {
      "op": "DUP1"
    },
    "5827": {
      "op": "REVERT"
    },
    "5828": {
      "op": "JUMPDEST"
    },
    "5829": {
      "op": "PUSH2",
      "value": "0x165A"
    },
    "5832": {
      "op": "DUP9"
    },
    "5833": {
      "op": "DUP3"
    },
    "5834": {
      "op": "DUP10"
    },
    "5835": {
      "op": "ADD"
    },
    "5836": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "5839": {
      "jump": "i",
      "op": "JUMP"
    },
    "5840": {
      "op": "JUMPDEST"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5843": {
      "op": "DUP1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5846": {
      "op": "DUP1"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5849": {
      "op": "DUP6"
    },
    "5850": {
      "op": "DUP8"
    },
    "5851": {
      "op": "SUB"
    },
    "5852": {
      "op": "SLT"
    },
    "5853": {
      "op": "ISZERO"
    },
    "5854": {
      "op": "PUSH2",
      "value": "0x16E6"
    },
    "5857": {
      "op": "JUMPI"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5860": {
      "op": "DUP1"
    },
    "5861": {
      "op": "REVERT"
    },
    "5862": {
      "op": "JUMPDEST"
    },
    "5863": {
      "op": "DUP5"
    },
    "5864": {
      "op": "CALLDATALOAD"
    },
    "5865": {
      "op": "PUSH2",
      "value": "0x16F1"
    },
    "5868": {
      "op": "DUP2"
    },
    "5869": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "5872": {
      "jump": "i",
      "op": "JUMP"
    },
    "5873": {
      "op": "JUMPDEST"
    },
    "5874": {
      "op": "SWAP4"
    },
    "5875": {
      "op": "POP"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5878": {
      "op": "DUP6"
    },
    "5879": {
      "op": "ADD"
    },
    "5880": {
      "op": "CALLDATALOAD"
    },
    "5881": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5890": {
      "op": "DUP1"
    },
    "5891": {
      "op": "DUP3"
    },
    "5892": {
      "op": "GT"
    },
    "5893": {
      "op": "ISZERO"
    },
    "5894": {
      "op": "PUSH2",
      "value": "0x170E"
    },
    "5897": {
      "op": "JUMPI"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5900": {
      "op": "DUP1"
    },
    "5901": {
      "op": "REVERT"
    },
    "5902": {
      "op": "JUMPDEST"
    },
    "5903": {
      "op": "PUSH2",
      "value": "0x171A"
    },
    "5906": {
      "op": "DUP9"
    },
    "5907": {
      "op": "DUP4"
    },
    "5908": {
      "op": "DUP10"
    },
    "5909": {
      "op": "ADD"
    },
    "5910": {
      "op": "PUSH2",
      "value": "0x1454"
    },
    "5913": {
      "jump": "i",
      "op": "JUMP"
    },
    "5914": {
      "op": "JUMPDEST"
    },
    "5915": {
      "op": "SWAP5"
    },
    "5916": {
      "op": "POP"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5919": {
      "op": "DUP8"
    },
    "5920": {
      "op": "ADD"
    },
    "5921": {
      "op": "CALLDATALOAD"
    },
    "5922": {
      "op": "SWAP2"
    },
    "5923": {
      "op": "POP"
    },
    "5924": {
      "op": "DUP1"
    },
    "5925": {
      "op": "DUP3"
    },
    "5926": {
      "op": "GT"
    },
    "5927": {
      "op": "ISZERO"
    },
    "5928": {
      "op": "PUSH2",
      "value": "0x1730"
    },
    "5931": {
      "op": "JUMPI"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5934": {
      "op": "DUP1"
    },
    "5935": {
      "op": "REVERT"
    },
    "5936": {
      "op": "JUMPDEST"
    },
    "5937": {
      "op": "PUSH2",
      "value": "0x173C"
    },
    "5940": {
      "op": "DUP9"
    },
    "5941": {
      "op": "DUP4"
    },
    "5942": {
      "op": "DUP10"
    },
    "5943": {
      "op": "ADD"
    },
    "5944": {
      "op": "PUSH2",
      "value": "0x1454"
    },
    "5947": {
      "jump": "i",
      "op": "JUMP"
    },
    "5948": {
      "op": "JUMPDEST"
    },
    "5949": {
      "op": "SWAP4"
    },
    "5950": {
      "op": "POP"
    },
    "5951": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5953": {
      "op": "DUP8"
    },
    "5954": {
      "op": "ADD"
    },
    "5955": {
      "op": "CALLDATALOAD"
    },
    "5956": {
      "op": "SWAP2"
    },
    "5957": {
      "op": "POP"
    },
    "5958": {
      "op": "DUP1"
    },
    "5959": {
      "op": "DUP3"
    },
    "5960": {
      "op": "GT"
    },
    "5961": {
      "op": "ISZERO"
    },
    "5962": {
      "op": "PUSH2",
      "value": "0x1752"
    },
    "5965": {
      "op": "JUMPI"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5968": {
      "op": "DUP1"
    },
    "5969": {
      "op": "REVERT"
    },
    "5970": {
      "op": "JUMPDEST"
    },
    "5971": {
      "op": "POP"
    },
    "5972": {
      "op": "PUSH2",
      "value": "0x175F"
    },
    "5975": {
      "op": "DUP8"
    },
    "5976": {
      "op": "DUP3"
    },
    "5977": {
      "op": "DUP9"
    },
    "5978": {
      "op": "ADD"
    },
    "5979": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "5982": {
      "jump": "i",
      "op": "JUMP"
    },
    "5983": {
      "op": "JUMPDEST"
    },
    "5984": {
      "op": "SWAP2"
    },
    "5985": {
      "op": "POP"
    },
    "5986": {
      "op": "POP"
    },
    "5987": {
      "op": "SWAP3"
    },
    "5988": {
      "op": "SWAP6"
    },
    "5989": {
      "op": "SWAP2"
    },
    "5990": {
      "op": "SWAP5"
    },
    "5991": {
      "op": "POP"
    },
    "5992": {
      "op": "SWAP3"
    },
    "5993": {
      "op": "POP"
    },
    "5994": {
      "jump": "o",
      "op": "JUMP"
    },
    "5995": {
      "op": "JUMPDEST"
    },
    "5996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5998": {
      "op": "DUP1"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6001": {
      "op": "DUP4"
    },
    "6002": {
      "op": "DUP6"
    },
    "6003": {
      "op": "SUB"
    },
    "6004": {
      "op": "SLT"
    },
    "6005": {
      "op": "ISZERO"
    },
    "6006": {
      "op": "PUSH2",
      "value": "0x177E"
    },
    "6009": {
      "op": "JUMPI"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6012": {
      "op": "DUP1"
    },
    "6013": {
      "op": "REVERT"
    },
    "6014": {
      "op": "JUMPDEST"
    },
    "6015": {
      "op": "DUP3"
    },
    "6016": {
      "op": "CALLDATALOAD"
    },
    "6017": {
      "op": "PUSH2",
      "value": "0x1789"
    },
    "6020": {
      "op": "DUP2"
    },
    "6021": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "6024": {
      "jump": "i",
      "op": "JUMP"
    },
    "6025": {
      "op": "JUMPDEST"
    },
    "6026": {
      "op": "SWAP2"
    },
    "6027": {
      "op": "POP"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6030": {
      "op": "DUP4"
    },
    "6031": {
      "op": "ADD"
    },
    "6032": {
      "op": "CALLDATALOAD"
    },
    "6033": {
      "op": "DUP1"
    },
    "6034": {
      "op": "ISZERO"
    },
    "6035": {
      "op": "ISZERO"
    },
    "6036": {
      "op": "DUP2"
    },
    "6037": {
      "op": "EQ"
    },
    "6038": {
      "op": "PUSH2",
      "value": "0x15AE"
    },
    "6041": {
      "op": "JUMPI"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6044": {
      "op": "DUP1"
    },
    "6045": {
      "op": "REVERT"
    },
    "6046": {
      "op": "JUMPDEST"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6049": {
      "op": "DUP1"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6052": {
      "op": "DUP4"
    },
    "6053": {
      "op": "DUP6"
    },
    "6054": {
      "op": "SUB"
    },
    "6055": {
      "op": "SLT"
    },
    "6056": {
      "op": "ISZERO"
    },
    "6057": {
      "op": "PUSH2",
      "value": "0x17B1"
    },
    "6060": {
      "op": "JUMPI"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6063": {
      "op": "DUP1"
    },
    "6064": {
      "op": "REVERT"
    },
    "6065": {
      "op": "JUMPDEST"
    },
    "6066": {
      "op": "DUP3"
    },
    "6067": {
      "op": "CALLDATALOAD"
    },
    "6068": {
      "op": "PUSH2",
      "value": "0x17BC"
    },
    "6071": {
      "op": "DUP2"
    },
    "6072": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "6075": {
      "jump": "i",
      "op": "JUMP"
    },
    "6076": {
      "op": "JUMPDEST"
    },
    "6077": {
      "op": "SWAP5"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6080": {
      "op": "SWAP4"
    },
    "6081": {
      "op": "SWAP1"
    },
    "6082": {
      "op": "SWAP4"
    },
    "6083": {
      "op": "ADD"
    },
    "6084": {
      "op": "CALLDATALOAD"
    },
    "6085": {
      "op": "SWAP4"
    },
    "6086": {
      "op": "POP"
    },
    "6087": {
      "op": "POP"
    },
    "6088": {
      "op": "POP"
    },
    "6089": {
      "jump": "o",
      "op": "JUMP"
    },
    "6090": {
      "op": "JUMPDEST"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6093": {
      "op": "DUP1"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6096": {
      "op": "DUP1"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6099": {
      "op": "DUP6"
    },
    "6100": {
      "op": "DUP8"
    },
    "6101": {
      "op": "SUB"
    },
    "6102": {
      "op": "SLT"
    },
    "6103": {
      "op": "ISZERO"
    },
    "6104": {
      "op": "PUSH2",
      "value": "0x17E0"
    },
    "6107": {
      "op": "JUMPI"
    },
    "6108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6110": {
      "op": "DUP1"
    },
    "6111": {
      "op": "REVERT"
    },
    "6112": {
      "op": "JUMPDEST"
    },
    "6113": {
      "op": "DUP5"
    },
    "6114": {
      "op": "CALLDATALOAD"
    },
    "6115": {
      "op": "PUSH2",
      "value": "0x17EB"
    },
    "6118": {
      "op": "DUP2"
    },
    "6119": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "6122": {
      "jump": "i",
      "op": "JUMP"
    },
    "6123": {
      "op": "JUMPDEST"
    },
    "6124": {
      "op": "SWAP4"
    },
    "6125": {
      "op": "POP"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6128": {
      "op": "DUP6"
    },
    "6129": {
      "op": "ADD"
    },
    "6130": {
      "op": "CALLDATALOAD"
    },
    "6131": {
      "op": "SWAP3"
    },
    "6132": {
      "op": "POP"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6135": {
      "op": "DUP6"
    },
    "6136": {
      "op": "ADD"
    },
    "6137": {
      "op": "CALLDATALOAD"
    },
    "6138": {
      "op": "SWAP2"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6142": {
      "op": "DUP6"
    },
    "6143": {
      "op": "ADD"
    },
    "6144": {
      "op": "CALLDATALOAD"
    },
    "6145": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6154": {
      "op": "DUP2"
    },
    "6155": {
      "op": "GT"
    },
    "6156": {
      "op": "ISZERO"
    },
    "6157": {
      "op": "PUSH2",
      "value": "0x1815"
    },
    "6160": {
      "op": "JUMPI"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6163": {
      "op": "DUP1"
    },
    "6164": {
      "op": "REVERT"
    },
    "6165": {
      "op": "JUMPDEST"
    },
    "6166": {
      "op": "PUSH2",
      "value": "0x175F"
    },
    "6169": {
      "op": "DUP8"
    },
    "6170": {
      "op": "DUP3"
    },
    "6171": {
      "op": "DUP9"
    },
    "6172": {
      "op": "ADD"
    },
    "6173": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "6176": {
      "jump": "i",
      "op": "JUMP"
    },
    "6177": {
      "op": "JUMPDEST"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6180": {
      "op": "DUP1"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6183": {
      "op": "DUP4"
    },
    "6184": {
      "op": "DUP6"
    },
    "6185": {
      "op": "SUB"
    },
    "6186": {
      "op": "SLT"
    },
    "6187": {
      "op": "ISZERO"
    },
    "6188": {
      "op": "PUSH2",
      "value": "0x1834"
    },
    "6191": {
      "op": "JUMPI"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6194": {
      "op": "DUP1"
    },
    "6195": {
      "op": "REVERT"
    },
    "6196": {
      "op": "JUMPDEST"
    },
    "6197": {
      "op": "DUP3"
    },
    "6198": {
      "op": "CALLDATALOAD"
    },
    "6199": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6208": {
      "op": "DUP1"
    },
    "6209": {
      "op": "DUP3"
    },
    "6210": {
      "op": "GT"
    },
    "6211": {
      "op": "ISZERO"
    },
    "6212": {
      "op": "PUSH2",
      "value": "0x184C"
    },
    "6215": {
      "op": "JUMPI"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6218": {
      "op": "DUP1"
    },
    "6219": {
      "op": "REVERT"
    },
    "6220": {
      "op": "JUMPDEST"
    },
    "6221": {
      "op": "DUP2"
    },
    "6222": {
      "op": "DUP6"
    },
    "6223": {
      "op": "ADD"
    },
    "6224": {
      "op": "SWAP2"
    },
    "6225": {
      "op": "POP"
    },
    "6226": {
      "op": "DUP6"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6229": {
      "op": "DUP4"
    },
    "6230": {
      "op": "ADD"
    },
    "6231": {
      "op": "SLT"
    },
    "6232": {
      "op": "PUSH2",
      "value": "0x1860"
    },
    "6235": {
      "op": "JUMPI"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6238": {
      "op": "DUP1"
    },
    "6239": {
      "op": "REVERT"
    },
    "6240": {
      "op": "JUMPDEST"
    },
    "6241": {
      "op": "DUP2"
    },
    "6242": {
      "op": "CALLDATALOAD"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6245": {
      "op": "PUSH2",
      "value": "0x186D"
    },
    "6248": {
      "op": "DUP3"
    },
    "6249": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "6252": {
      "jump": "i",
      "op": "JUMP"
    },
    "6253": {
      "op": "JUMPDEST"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6256": {
      "op": "MLOAD"
    },
    "6257": {
      "op": "PUSH2",
      "value": "0x187A"
    },
    "6260": {
      "op": "DUP3"
    },
    "6261": {
      "op": "DUP3"
    },
    "6262": {
      "op": "PUSH2",
      "value": "0x1E0F"
    },
    "6265": {
      "jump": "i",
      "op": "JUMP"
    },
    "6266": {
      "op": "JUMPDEST"
    },
    "6267": {
      "op": "DUP4"
    },
    "6268": {
      "op": "DUP2"
    },
    "6269": {
      "op": "MSTORE"
    },
    "6270": {
      "op": "DUP3"
    },
    "6271": {
      "op": "DUP2"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "op": "SWAP2"
    },
    "6274": {
      "op": "POP"
    },
    "6275": {
      "op": "DUP6"
    },
    "6276": {
      "op": "DUP4"
    },
    "6277": {
      "op": "ADD"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6280": {
      "op": "DUP6"
    },
    "6281": {
      "op": "SWAP1"
    },
    "6282": {
      "op": "SHL"
    },
    "6283": {
      "op": "DUP8"
    },
    "6284": {
      "op": "ADD"
    },
    "6285": {
      "op": "DUP5"
    },
    "6286": {
      "op": "ADD"
    },
    "6287": {
      "op": "DUP12"
    },
    "6288": {
      "op": "LT"
    },
    "6289": {
      "op": "ISZERO"
    },
    "6290": {
      "op": "PUSH2",
      "value": "0x189A"
    },
    "6293": {
      "op": "JUMPI"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6296": {
      "op": "DUP1"
    },
    "6297": {
      "op": "REVERT"
    },
    "6298": {
      "op": "JUMPDEST"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6301": {
      "op": "SWAP7"
    },
    "6302": {
      "op": "POP"
    },
    "6303": {
      "op": "JUMPDEST"
    },
    "6304": {
      "op": "DUP5"
    },
    "6305": {
      "op": "DUP8"
    },
    "6306": {
      "op": "LT"
    },
    "6307": {
      "op": "ISZERO"
    },
    "6308": {
      "op": "PUSH2",
      "value": "0x18C6"
    },
    "6311": {
      "op": "JUMPI"
    },
    "6312": {
      "op": "DUP1"
    },
    "6313": {
      "op": "CALLDATALOAD"
    },
    "6314": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "6317": {
      "op": "DUP2"
    },
    "6318": {
      "op": "PUSH2",
      "value": "0x1F69"
    },
    "6321": {
      "jump": "i",
      "op": "JUMP"
    },
    "6322": {
      "op": "JUMPDEST"
    },
    "6323": {
      "op": "DUP4"
    },
    "6324": {
      "op": "MSTORE"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6327": {
      "op": "SWAP7"
    },
    "6328": {
      "op": "SWAP1"
    },
    "6329": {
      "op": "SWAP7"
    },
    "6330": {
      "op": "ADD"
    },
    "6331": {
      "op": "SWAP6"
    },
    "6332": {
      "op": "SWAP2"
    },
    "6333": {
      "op": "DUP4"
    },
    "6334": {
      "op": "ADD"
    },
    "6335": {
      "op": "SWAP2"
    },
    "6336": {
      "op": "DUP4"
    },
    "6337": {
      "op": "ADD"
    },
    "6338": {
      "op": "PUSH2",
      "value": "0x189F"
    },
    "6341": {
      "op": "JUMP"
    },
    "6342": {
      "op": "JUMPDEST"
    },
    "6343": {
      "op": "POP"
    },
    "6344": {
      "op": "SWAP7"
    },
    "6345": {
      "op": "POP"
    },
    "6346": {
      "op": "POP"
    },
    "6347": {
      "op": "DUP7"
    },
    "6348": {
      "op": "ADD"
    },
    "6349": {
      "op": "CALLDATALOAD"
    },
    "6350": {
      "op": "SWAP3"
    },
    "6351": {
      "op": "POP"
    },
    "6352": {
      "op": "POP"
    },
    "6353": {
      "op": "DUP1"
    },
    "6354": {
      "op": "DUP3"
    },
    "6355": {
      "op": "GT"
    },
    "6356": {
      "op": "ISZERO"
    },
    "6357": {
      "op": "PUSH2",
      "value": "0x18DD"
    },
    "6360": {
      "op": "JUMPI"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6363": {
      "op": "DUP1"
    },
    "6364": {
      "op": "REVERT"
    },
    "6365": {
      "op": "JUMPDEST"
    },
    "6366": {
      "op": "POP"
    },
    "6367": {
      "op": "PUSH2",
      "value": "0x18EA"
    },
    "6370": {
      "op": "DUP6"
    },
    "6371": {
      "op": "DUP3"
    },
    "6372": {
      "op": "DUP7"
    },
    "6373": {
      "op": "ADD"
    },
    "6374": {
      "op": "PUSH2",
      "value": "0x1454"
    },
    "6377": {
      "jump": "i",
      "op": "JUMP"
    },
    "6378": {
      "op": "JUMPDEST"
    },
    "6379": {
      "op": "SWAP2"
    },
    "6380": {
      "op": "POP"
    },
    "6381": {
      "op": "POP"
    },
    "6382": {
      "op": "SWAP3"
    },
    "6383": {
      "op": "POP"
    },
    "6384": {
      "op": "SWAP3"
    },
    "6385": {
      "op": "SWAP1"
    },
    "6386": {
      "op": "POP"
    },
    "6387": {
      "jump": "o",
      "op": "JUMP"
    },
    "6388": {
      "op": "JUMPDEST"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6393": {
      "op": "DUP3"
    },
    "6394": {
      "op": "DUP5"
    },
    "6395": {
      "op": "SUB"
    },
    "6396": {
      "op": "SLT"
    },
    "6397": {
      "op": "ISZERO"
    },
    "6398": {
      "op": "PUSH2",
      "value": "0x1906"
    },
    "6401": {
      "op": "JUMPI"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6404": {
      "op": "DUP1"
    },
    "6405": {
      "op": "REVERT"
    },
    "6406": {
      "op": "JUMPDEST"
    },
    "6407": {
      "op": "DUP2"
    },
    "6408": {
      "op": "CALLDATALOAD"
    },
    "6409": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "6412": {
      "op": "DUP2"
    },
    "6413": {
      "op": "PUSH2",
      "value": "0x1F81"
    },
    "6416": {
      "jump": "i",
      "op": "JUMP"
    },
    "6417": {
      "op": "JUMPDEST"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6422": {
      "op": "DUP3"
    },
    "6423": {
      "op": "DUP5"
    },
    "6424": {
      "op": "SUB"
    },
    "6425": {
      "op": "SLT"
    },
    "6426": {
      "op": "ISZERO"
    },
    "6427": {
      "op": "PUSH2",
      "value": "0x1923"
    },
    "6430": {
      "op": "JUMPI"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6433": {
      "op": "DUP1"
    },
    "6434": {
      "op": "REVERT"
    },
    "6435": {
      "op": "JUMPDEST"
    },
    "6436": {
      "op": "DUP2"
    },
    "6437": {
      "op": "MLOAD"
    },
    "6438": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "6441": {
      "op": "DUP2"
    },
    "6442": {
      "op": "PUSH2",
      "value": "0x1F81"
    },
    "6445": {
      "jump": "i",
      "op": "JUMP"
    },
    "6446": {
      "op": "JUMPDEST"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6449": {
      "op": "DUP1"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6452": {
      "op": "DUP4"
    },
    "6453": {
      "op": "DUP6"
    },
    "6454": {
      "op": "SUB"
    },
    "6455": {
      "op": "SLT"
    },
    "6456": {
      "op": "ISZERO"
    },
    "6457": {
      "op": "PUSH2",
      "value": "0x1941"
    },
    "6460": {
      "op": "JUMPI"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6463": {
      "op": "DUP1"
    },
    "6464": {
      "op": "REVERT"
    },
    "6465": {
      "op": "JUMPDEST"
    },
    "6466": {
      "op": "DUP3"
    },
    "6467": {
      "op": "CALLDATALOAD"
    },
    "6468": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6477": {
      "op": "DUP1"
    },
    "6478": {
      "op": "DUP3"
    },
    "6479": {
      "op": "GT"
    },
    "6480": {
      "op": "ISZERO"
    },
    "6481": {
      "op": "PUSH2",
      "value": "0x1959"
    },
    "6484": {
      "op": "JUMPI"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6487": {
      "op": "DUP1"
    },
    "6488": {
      "op": "REVERT"
    },
    "6489": {
      "op": "JUMPDEST"
    },
    "6490": {
      "op": "PUSH2",
      "value": "0x1965"
    },
    "6493": {
      "op": "DUP7"
    },
    "6494": {
      "op": "DUP4"
    },
    "6495": {
      "op": "DUP8"
    },
    "6496": {
      "op": "ADD"
    },
    "6497": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "6500": {
      "jump": "i",
      "op": "JUMP"
    },
    "6501": {
      "op": "JUMPDEST"
    },
    "6502": {
      "op": "SWAP4"
    },
    "6503": {
      "op": "POP"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6506": {
      "op": "DUP6"
    },
    "6507": {
      "op": "ADD"
    },
    "6508": {
      "op": "CALLDATALOAD"
    },
    "6509": {
      "op": "SWAP2"
    },
    "6510": {
      "op": "POP"
    },
    "6511": {
      "op": "DUP1"
    },
    "6512": {
      "op": "DUP3"
    },
    "6513": {
      "op": "GT"
    },
    "6514": {
      "op": "ISZERO"
    },
    "6515": {
      "op": "PUSH2",
      "value": "0x197B"
    },
    "6518": {
      "op": "JUMPI"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6521": {
      "op": "DUP1"
    },
    "6522": {
      "op": "REVERT"
    },
    "6523": {
      "op": "JUMPDEST"
    },
    "6524": {
      "op": "POP"
    },
    "6525": {
      "op": "PUSH2",
      "value": "0x18EA"
    },
    "6528": {
      "op": "DUP6"
    },
    "6529": {
      "op": "DUP3"
    },
    "6530": {
      "op": "DUP7"
    },
    "6531": {
      "op": "ADD"
    },
    "6532": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "6535": {
      "jump": "i",
      "op": "JUMP"
    },
    "6536": {
      "op": "JUMPDEST"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6541": {
      "op": "DUP3"
    },
    "6542": {
      "op": "DUP5"
    },
    "6543": {
      "op": "SUB"
    },
    "6544": {
      "op": "SLT"
    },
    "6545": {
      "op": "ISZERO"
    },
    "6546": {
      "op": "PUSH2",
      "value": "0x199A"
    },
    "6549": {
      "op": "JUMPI"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6552": {
      "op": "DUP1"
    },
    "6553": {
      "op": "REVERT"
    },
    "6554": {
      "op": "JUMPDEST"
    },
    "6555": {
      "op": "POP"
    },
    "6556": {
      "op": "CALLDATALOAD"
    },
    "6557": {
      "op": "SWAP2"
    },
    "6558": {
      "op": "SWAP1"
    },
    "6559": {
      "op": "POP"
    },
    "6560": {
      "jump": "o",
      "op": "JUMP"
    },
    "6561": {
      "op": "JUMPDEST"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6564": {
      "op": "DUP2"
    },
    "6565": {
      "op": "MLOAD"
    },
    "6566": {
      "op": "DUP1"
    },
    "6567": {
      "op": "DUP5"
    },
    "6568": {
      "op": "MSTORE"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6571": {
      "op": "DUP1"
    },
    "6572": {
      "op": "DUP6"
    },
    "6573": {
      "op": "ADD"
    },
    "6574": {
      "op": "SWAP5"
    },
    "6575": {
      "op": "POP"
    },
    "6576": {
      "op": "DUP1"
    },
    "6577": {
      "op": "DUP5"
    },
    "6578": {
      "op": "ADD"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6581": {
      "op": "JUMPDEST"
    },
    "6582": {
      "op": "DUP4"
    },
    "6583": {
      "op": "DUP2"
    },
    "6584": {
      "op": "LT"
    },
    "6585": {
      "op": "ISZERO"
    },
    "6586": {
      "op": "PUSH2",
      "value": "0x19D1"
    },
    "6589": {
      "op": "JUMPI"
    },
    "6590": {
      "op": "DUP2"
    },
    "6591": {
      "op": "MLOAD"
    },
    "6592": {
      "op": "DUP8"
    },
    "6593": {
      "op": "MSTORE"
    },
    "6594": {
      "op": "SWAP6"
    },
    "6595": {
      "op": "DUP3"
    },
    "6596": {
      "op": "ADD"
    },
    "6597": {
      "op": "SWAP6"
    },
    "6598": {
      "op": "SWAP1"
    },
    "6599": {
      "op": "DUP3"
    },
    "6600": {
      "op": "ADD"
    },
    "6601": {
      "op": "SWAP1"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6604": {
      "op": "ADD"
    },
    "6605": {
      "op": "PUSH2",
      "value": "0x19B5"
    },
    "6608": {
      "op": "JUMP"
    },
    "6609": {
      "op": "JUMPDEST"
    },
    "6610": {
      "op": "POP"
    },
    "6611": {
      "op": "SWAP5"
    },
    "6612": {
      "op": "SWAP6"
    },
    "6613": {
      "op": "SWAP5"
    },
    "6614": {
      "op": "POP"
    },
    "6615": {
      "op": "POP"
    },
    "6616": {
      "op": "POP"
    },
    "6617": {
      "op": "POP"
    },
    "6618": {
      "op": "POP"
    },
    "6619": {
      "jump": "o",
      "op": "JUMP"
    },
    "6620": {
      "op": "JUMPDEST"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6623": {
      "op": "DUP2"
    },
    "6624": {
      "op": "MLOAD"
    },
    "6625": {
      "op": "DUP1"
    },
    "6626": {
      "op": "DUP5"
    },
    "6627": {
      "op": "MSTORE"
    },
    "6628": {
      "op": "PUSH2",
      "value": "0x19F4"
    },
    "6631": {
      "op": "DUP2"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6634": {
      "op": "DUP7"
    },
    "6635": {
      "op": "ADD"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6638": {
      "op": "DUP7"
    },
    "6639": {
      "op": "ADD"
    },
    "6640": {
      "op": "PUSH2",
      "value": "0x1DA4"
    },
    "6643": {
      "jump": "i",
      "op": "JUMP"
    },
    "6644": {
      "op": "JUMPDEST"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6647": {
      "op": "ADD"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6650": {
      "op": "NOT"
    },
    "6651": {
      "op": "AND"
    },
    "6652": {
      "op": "SWAP3"
    },
    "6653": {
      "op": "SWAP1"
    },
    "6654": {
      "op": "SWAP3"
    },
    "6655": {
      "op": "ADD"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6658": {
      "op": "ADD"
    },
    "6659": {
      "op": "SWAP3"
    },
    "6660": {
      "op": "SWAP2"
    },
    "6661": {
      "op": "POP"
    },
    "6662": {
      "op": "POP"
    },
    "6663": {
      "jump": "o",
      "op": "JUMP"
    },
    "6664": {
      "op": "JUMPDEST"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6667": {
      "op": "DUP5"
    },
    "6668": {
      "op": "MLOAD"
    },
    "6669": {
      "op": "PUSH2",
      "value": "0x1A1A"
    },
    "6672": {
      "op": "DUP2"
    },
    "6673": {
      "op": "DUP5"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6676": {
      "op": "DUP10"
    },
    "6677": {
      "op": "ADD"
    },
    "6678": {
      "op": "PUSH2",
      "value": "0x1DA4"
    },
    "6681": {
      "jump": "i",
      "op": "JUMP"
    },
    "6682": {
      "op": "JUMPDEST"
    },
    "6683": {
      "op": "DUP5"
    },
    "6684": {
      "op": "MLOAD"
    },
    "6685": {
      "op": "SWAP1"
    },
    "6686": {
      "op": "DUP4"
    },
    "6687": {
      "op": "ADD"
    },
    "6688": {
      "op": "SWAP1"
    },
    "6689": {
      "op": "PUSH2",
      "value": "0x1A2E"
    },
    "6692": {
      "op": "DUP2"
    },
    "6693": {
      "op": "DUP4"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6696": {
      "op": "DUP10"
    },
    "6697": {
      "op": "ADD"
    },
    "6698": {
      "op": "PUSH2",
      "value": "0x1DA4"
    },
    "6701": {
      "jump": "i",
      "op": "JUMP"
    },
    "6702": {
      "op": "JUMPDEST"
    },
    "6703": {
      "op": "DUP5"
    },
    "6704": {
      "op": "MLOAD"
    },
    "6705": {
      "op": "SWAP2"
    },
    "6706": {
      "op": "ADD"
    },
    "6707": {
      "op": "SWAP1"
    },
    "6708": {
      "op": "PUSH2",
      "value": "0x1A41"
    },
    "6711": {
      "op": "DUP2"
    },
    "6712": {
      "op": "DUP4"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6715": {
      "op": "DUP9"
    },
    "6716": {
      "op": "ADD"
    },
    "6717": {
      "op": "PUSH2",
      "value": "0x1DA4"
    },
    "6720": {
      "jump": "i",
      "op": "JUMP"
    },
    "6721": {
      "op": "JUMPDEST"
    },
    "6722": {
      "op": "ADD"
    },
    "6723": {
      "op": "SWAP6"
    },
    "6724": {
      "op": "SWAP5"
    },
    "6725": {
      "op": "POP"
    },
    "6726": {
      "op": "POP"
    },
    "6727": {
      "op": "POP"
    },
    "6728": {
      "op": "POP"
    },
    "6729": {
      "op": "POP"
    },
    "6730": {
      "jump": "o",
      "op": "JUMP"
    },
    "6731": {
      "op": "JUMPDEST"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6738": {
      "op": "SHL"
    },
    "6739": {
      "op": "SUB"
    },
    "6740": {
      "op": "DUP7"
    },
    "6741": {
      "op": "DUP2"
    },
    "6742": {
      "op": "AND"
    },
    "6743": {
      "op": "DUP3"
    },
    "6744": {
      "op": "MSTORE"
    },
    "6745": {
      "op": "DUP6"
    },
    "6746": {
      "op": "AND"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6749": {
      "op": "DUP3"
    },
    "6750": {
      "op": "ADD"
    },
    "6751": {
      "op": "MSTORE"
    },
    "6752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6756": {
      "op": "DUP3"
    },
    "6757": {
      "op": "ADD"
    },
    "6758": {
      "op": "DUP2"
    },
    "6759": {
      "op": "SWAP1"
    },
    "6760": {
      "op": "MSTORE"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6763": {
      "op": "SWAP1"
    },
    "6764": {
      "op": "PUSH2",
      "value": "0x1A77"
    },
    "6767": {
      "op": "SWAP1"
    },
    "6768": {
      "op": "DUP4"
    },
    "6769": {
      "op": "ADD"
    },
    "6770": {
      "op": "DUP7"
    },
    "6771": {
      "op": "PUSH2",
      "value": "0x19A1"
    },
    "6774": {
      "jump": "i",
      "op": "JUMP"
    },
    "6775": {
      "op": "JUMPDEST"
    },
    "6776": {
      "op": "DUP3"
    },
    "6777": {
      "op": "DUP2"
    },
    "6778": {
      "op": "SUB"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6781": {
      "op": "DUP5"
    },
    "6782": {
      "op": "ADD"
    },
    "6783": {
      "op": "MSTORE"
    },
    "6784": {
      "op": "PUSH2",
      "value": "0x1A89"
    },
    "6787": {
      "op": "DUP2"
    },
    "6788": {
      "op": "DUP7"
    },
    "6789": {
      "op": "PUSH2",
      "value": "0x19A1"
    },
    "6792": {
      "jump": "i",
      "op": "JUMP"
    },
    "6793": {
      "op": "JUMPDEST"
    },
    "6794": {
      "op": "SWAP1"
    },
    "6795": {
      "op": "POP"
    },
    "6796": {
      "op": "DUP3"
    },
    "6797": {
      "op": "DUP2"
    },
    "6798": {
      "op": "SUB"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6801": {
      "op": "DUP5"
    },
    "6802": {
      "op": "ADD"
    },
    "6803": {
      "op": "MSTORE"
    },
    "6804": {
      "op": "PUSH2",
      "value": "0x1A9D"
    },
    "6807": {
      "op": "DUP2"
    },
    "6808": {
      "op": "DUP6"
    },
    "6809": {
      "op": "PUSH2",
      "value": "0x19DC"
    },
    "6812": {
      "jump": "i",
      "op": "JUMP"
    },
    "6813": {
      "op": "JUMPDEST"
    },
    "6814": {
      "op": "SWAP9"
    },
    "6815": {
      "op": "SWAP8"
    },
    "6816": {
      "op": "POP"
    },
    "6817": {
      "op": "POP"
    },
    "6818": {
      "op": "POP"
    },
    "6819": {
      "op": "POP"
    },
    "6820": {
      "op": "POP"
    },
    "6821": {
      "op": "POP"
    },
    "6822": {
      "op": "POP"
    },
    "6823": {
      "op": "POP"
    },
    "6824": {
      "jump": "o",
      "op": "JUMP"
    },
    "6825": {
      "op": "JUMPDEST"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6832": {
      "op": "SHL"
    },
    "6833": {
      "op": "SUB"
    },
    "6834": {
      "op": "DUP7"
    },
    "6835": {
      "op": "DUP2"
    },
    "6836": {
      "op": "AND"
    },
    "6837": {
      "op": "DUP3"
    },
    "6838": {
      "op": "MSTORE"
    },
    "6839": {
      "op": "DUP6"
    },
    "6840": {
      "op": "AND"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6843": {
      "op": "DUP3"
    },
    "6844": {
      "op": "ADD"
    },
    "6845": {
      "op": "MSTORE"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6848": {
      "op": "DUP2"
    },
    "6849": {
      "op": "ADD"
    },
    "6850": {
      "op": "DUP5"
    },
    "6851": {
      "op": "SWAP1"
    },
    "6852": {
      "op": "MSTORE"
    },
    "6853": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6855": {
      "op": "DUP2"
    },
    "6856": {
      "op": "ADD"
    },
    "6857": {
      "op": "DUP4"
    },
    "6858": {
      "op": "SWAP1"
    },
    "6859": {
      "op": "MSTORE"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6864": {
      "op": "DUP3"
    },
    "6865": {
      "op": "ADD"
    },
    "6866": {
      "op": "DUP2"
    },
    "6867": {
      "op": "SWAP1"
    },
    "6868": {
      "op": "MSTORE"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6871": {
      "op": "SWAP1"
    },
    "6872": {
      "op": "PUSH2",
      "value": "0x1AE3"
    },
    "6875": {
      "op": "SWAP1"
    },
    "6876": {
      "op": "DUP4"
    },
    "6877": {
      "op": "ADD"
    },
    "6878": {
      "op": "DUP5"
    },
    "6879": {
      "op": "PUSH2",
      "value": "0x19DC"
    },
    "6882": {
      "jump": "i",
      "op": "JUMP"
    },
    "6883": {
      "op": "JUMPDEST"
    },
    "6884": {
      "op": "SWAP8"
    },
    "6885": {
      "op": "SWAP7"
    },
    "6886": {
      "op": "POP"
    },
    "6887": {
      "op": "POP"
    },
    "6888": {
      "op": "POP"
    },
    "6889": {
      "op": "POP"
    },
    "6890": {
      "op": "POP"
    },
    "6891": {
      "op": "POP"
    },
    "6892": {
      "op": "POP"
    },
    "6893": {
      "jump": "o",
      "op": "JUMP"
    },
    "6894": {
      "op": "JUMPDEST"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6897": {
      "op": "DUP2"
    },
    "6898": {
      "op": "MSTORE"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6901": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6906": {
      "op": "DUP4"
    },
    "6907": {
      "op": "ADD"
    },
    "6908": {
      "op": "DUP5"
    },
    "6909": {
      "op": "PUSH2",
      "value": "0x19A1"
    },
    "6912": {
      "jump": "i",
      "op": "JUMP"
    },
    "6913": {
      "op": "JUMPDEST"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6916": {
      "op": "DUP2"
    },
    "6917": {
      "op": "MSTORE"
    },
    "6918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6920": {
      "op": "PUSH2",
      "value": "0x1B14"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6925": {
      "op": "DUP4"
    },
    "6926": {
      "op": "ADD"
    },
    "6927": {
      "op": "DUP6"
    },
    "6928": {
      "op": "PUSH2",
      "value": "0x19A1"
    },
    "6931": {
      "jump": "i",
      "op": "JUMP"
    },
    "6932": {
      "op": "JUMPDEST"
    },
    "6933": {
      "op": "DUP3"
    },
    "6934": {
      "op": "DUP2"
    },
    "6935": {
      "op": "SUB"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6938": {
      "op": "DUP5"
    },
    "6939": {
      "op": "ADD"
    },
    "6940": {
      "op": "MSTORE"
    },
    "6941": {
      "op": "PUSH2",
      "value": "0x1B26"
    },
    "6944": {
      "op": "DUP2"
    },
    "6945": {
      "op": "DUP6"
    },
    "6946": {
      "op": "PUSH2",
      "value": "0x19A1"
    },
    "6949": {
      "jump": "i",
      "op": "JUMP"
    },
    "6950": {
      "op": "JUMPDEST"
    },
    "6951": {
      "op": "SWAP6"
    },
    "6952": {
      "op": "SWAP5"
    },
    "6953": {
      "op": "POP"
    },
    "6954": {
      "op": "POP"
    },
    "6955": {
      "op": "POP"
    },
    "6956": {
      "op": "POP"
    },
    "6957": {
      "op": "POP"
    },
    "6958": {
      "jump": "o",
      "op": "JUMP"
    },
    "6959": {
      "op": "JUMPDEST"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6962": {
      "op": "DUP2"
    },
    "6963": {
      "op": "MSTORE"
    },
    "6964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6966": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6971": {
      "op": "DUP4"
    },
    "6972": {
      "op": "ADD"
    },
    "6973": {
      "op": "DUP5"
    },
    "6974": {
      "op": "PUSH2",
      "value": "0x19DC"
    },
    "6977": {
      "jump": "i",
      "op": "JUMP"
    },
    "6978": {
      "op": "JUMPDEST"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6981": {
      "op": "DUP1"
    },
    "6982": {
      "op": "DUP3"
    },
    "6983": {
      "op": "MSTORE"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6986": {
      "op": "SWAP1"
    },
    "6987": {
      "op": "DUP3"
    },
    "6988": {
      "op": "ADD"
    },
    "6989": {
      "op": "MSTORE"
    },
    "6990": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "7023": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7025": {
      "op": "DUP3"
    },
    "7026": {
      "op": "ADD"
    },
    "7027": {
      "op": "MSTORE"
    },
    "7028": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7039": {
      "op": "SHL"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7042": {
      "op": "DUP3"
    },
    "7043": {
      "op": "ADD"
    },
    "7044": {
      "op": "MSTORE"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7047": {
      "op": "ADD"
    },
    "7048": {
      "op": "SWAP1"
    },
    "7049": {
      "jump": "o",
      "op": "JUMP"
    },
    "7050": {
      "op": "JUMPDEST"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7053": {
      "op": "DUP1"
    },
    "7054": {
      "op": "DUP3"
    },
    "7055": {
      "op": "MSTORE"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "7058": {
      "op": "SWAP1"
    },
    "7059": {
      "op": "DUP3"
    },
    "7060": {
      "op": "ADD"
    },
    "7061": {
      "op": "MSTORE"
    },
    "7062": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7097": {
      "op": "DUP3"
    },
    "7098": {
      "op": "ADD"
    },
    "7099": {
      "op": "MSTORE"
    },
    "7100": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7114": {
      "op": "SHL"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7117": {
      "op": "DUP3"
    },
    "7118": {
      "op": "ADD"
    },
    "7119": {
      "op": "MSTORE"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7122": {
      "op": "ADD"
    },
    "7123": {
      "op": "SWAP1"
    },
    "7124": {
      "jump": "o",
      "op": "JUMP"
    },
    "7125": {
      "op": "JUMPDEST"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7128": {
      "op": "DUP1"
    },
    "7129": {
      "op": "DUP3"
    },
    "7130": {
      "op": "MSTORE"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7133": {
      "op": "SWAP1"
    },
    "7134": {
      "op": "DUP3"
    },
    "7135": {
      "op": "ADD"
    },
    "7136": {
      "op": "MSTORE"
    },
    "7137": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865204F7261636C65206F70657261746F72206D617920706572"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7172": {
      "op": "DUP3"
    },
    "7173": {
      "op": "ADD"
    },
    "7174": {
      "op": "MSTORE"
    },
    "7175": {
      "op": "PUSH16",
      "value": "0x3337B936903A3434B99030B1BA34B7B7"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "7194": {
      "op": "SHL"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7197": {
      "op": "DUP3"
    },
    "7198": {
      "op": "ADD"
    },
    "7199": {
      "op": "MSTORE"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7202": {
      "op": "ADD"
    },
    "7203": {
      "op": "SWAP1"
    },
    "7204": {
      "jump": "o",
      "op": "JUMP"
    },
    "7205": {
      "op": "JUMPDEST"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7208": {
      "op": "DUP1"
    },
    "7209": {
      "op": "DUP3"
    },
    "7210": {
      "op": "MSTORE"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7213": {
      "op": "SWAP1"
    },
    "7214": {
      "op": "DUP3"
    },
    "7215": {
      "op": "ADD"
    },
    "7216": {
      "op": "MSTORE"
    },
    "7217": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7252": {
      "op": "DUP3"
    },
    "7253": {
      "op": "ADD"
    },
    "7254": {
      "op": "MSTORE"
    },
    "7255": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7263": {
      "op": "SHL"
    },
    "7264": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7266": {
      "op": "DUP3"
    },
    "7267": {
      "op": "ADD"
    },
    "7268": {
      "op": "MSTORE"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7271": {
      "op": "ADD"
    },
    "7272": {
      "op": "SWAP1"
    },
    "7273": {
      "jump": "o",
      "op": "JUMP"
    },
    "7274": {
      "op": "JUMPDEST"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7277": {
      "op": "DUP1"
    },
    "7278": {
      "op": "DUP3"
    },
    "7279": {
      "op": "MSTORE"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7282": {
      "op": "SWAP1"
    },
    "7283": {
      "op": "DUP3"
    },
    "7284": {
      "op": "ADD"
    },
    "7285": {
      "op": "MSTORE"
    },
    "7286": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "7319": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7321": {
      "op": "DUP3"
    },
    "7322": {
      "op": "ADD"
    },
    "7323": {
      "op": "MSTORE"
    },
    "7324": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7337": {
      "op": "SHL"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7340": {
      "op": "DUP3"
    },
    "7341": {
      "op": "ADD"
    },
    "7342": {
      "op": "MSTORE"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7345": {
      "op": "ADD"
    },
    "7346": {
      "op": "SWAP1"
    },
    "7347": {
      "jump": "o",
      "op": "JUMP"
    },
    "7348": {
      "op": "JUMPDEST"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7351": {
      "op": "DUP1"
    },
    "7352": {
      "op": "DUP3"
    },
    "7353": {
      "op": "MSTORE"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "7356": {
      "op": "SWAP1"
    },
    "7357": {
      "op": "DUP3"
    },
    "7358": {
      "op": "ADD"
    },
    "7359": {
      "op": "MSTORE"
    },
    "7360": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7395": {
      "op": "DUP3"
    },
    "7396": {
      "op": "ADD"
    },
    "7397": {
      "op": "MSTORE"
    },
    "7398": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "7407": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "7409": {
      "op": "SHL"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7412": {
      "op": "DUP3"
    },
    "7413": {
      "op": "ADD"
    },
    "7414": {
      "op": "MSTORE"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7417": {
      "op": "ADD"
    },
    "7418": {
      "op": "SWAP1"
    },
    "7419": {
      "jump": "o",
      "op": "JUMP"
    },
    "7420": {
      "op": "JUMPDEST"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7423": {
      "op": "DUP1"
    },
    "7424": {
      "op": "DUP3"
    },
    "7425": {
      "op": "MSTORE"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7428": {
      "op": "SWAP1"
    },
    "7429": {
      "op": "DUP3"
    },
    "7430": {
      "op": "ADD"
    },
    "7431": {
      "op": "MSTORE"
    },
    "7432": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7467": {
      "op": "DUP3"
    },
    "7468": {
      "op": "ADD"
    },
    "7469": {
      "op": "MSTORE"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7474": {
      "op": "SHL"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7477": {
      "op": "DUP3"
    },
    "7478": {
      "op": "ADD"
    },
    "7479": {
      "op": "MSTORE"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7482": {
      "op": "ADD"
    },
    "7483": {
      "op": "SWAP1"
    },
    "7484": {
      "jump": "o",
      "op": "JUMP"
    },
    "7485": {
      "op": "JUMPDEST"
    },
    "7486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7488": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7497": {
      "op": "DUP3"
    },
    "7498": {
      "op": "GT"
    },
    "7499": {
      "op": "ISZERO"
    },
    "7500": {
      "op": "PUSH2",
      "value": "0x1D57"
    },
    "7503": {
      "op": "JUMPI"
    },
    "7504": {
      "op": "PUSH2",
      "value": "0x1D57"
    },
    "7507": {
      "op": "PUSH2",
      "value": "0x1EAD"
    },
    "7510": {
      "jump": "i",
      "op": "JUMP"
    },
    "7511": {
      "op": "JUMPDEST"
    },
    "7512": {
      "op": "POP"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7515": {
      "op": "SHL"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7518": {
      "op": "ADD"
    },
    "7519": {
      "op": "SWAP1"
    },
    "7520": {
      "jump": "o",
      "op": "JUMP"
    },
    "7521": {
      "op": "JUMPDEST"
    },
    "7522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7524": {
      "op": "DUP3"
    },
    "7525": {
      "op": "NOT"
    },
    "7526": {
      "op": "DUP3"
    },
    "7527": {
      "op": "GT"
    },
    "7528": {
      "op": "ISZERO"
    },
    "7529": {
      "op": "PUSH2",
      "value": "0x1D74"
    },
    "7532": {
      "op": "JUMPI"
    },
    "7533": {
      "op": "PUSH2",
      "value": "0x1D74"
    },
    "7536": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7539": {
      "jump": "i",
      "op": "JUMP"
    },
    "7540": {
      "op": "JUMPDEST"
    },
    "7541": {
      "op": "POP"
    },
    "7542": {
      "op": "ADD"
    },
    "7543": {
      "op": "SWAP1"
    },
    "7544": {
      "jump": "o",
      "op": "JUMP"
    },
    "7545": {
      "op": "JUMPDEST"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7548": {
      "op": "DUP3"
    },
    "7549": {
      "op": "PUSH2",
      "value": "0x1D88"
    },
    "7552": {
      "op": "JUMPI"
    },
    "7553": {
      "op": "PUSH2",
      "value": "0x1D88"
    },
    "7556": {
      "op": "PUSH2",
      "value": "0x1E81"
    },
    "7559": {
      "jump": "i",
      "op": "JUMP"
    },
    "7560": {
      "op": "JUMPDEST"
    },
    "7561": {
      "op": "POP"
    },
    "7562": {
      "op": "DIV"
    },
    "7563": {
      "op": "SWAP1"
    },
    "7564": {
      "jump": "o",
      "op": "JUMP"
    },
    "7565": {
      "op": "JUMPDEST"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7568": {
      "op": "DUP3"
    },
    "7569": {
      "op": "DUP3"
    },
    "7570": {
      "op": "LT"
    },
    "7571": {
      "op": "ISZERO"
    },
    "7572": {
      "op": "PUSH2",
      "value": "0x1D9F"
    },
    "7575": {
      "op": "JUMPI"
    },
    "7576": {
      "op": "PUSH2",
      "value": "0x1D9F"
    },
    "7579": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7582": {
      "jump": "i",
      "op": "JUMP"
    },
    "7583": {
      "op": "JUMPDEST"
    },
    "7584": {
      "op": "POP"
    },
    "7585": {
      "op": "SUB"
    },
    "7586": {
      "op": "SWAP1"
    },
    "7587": {
      "jump": "o",
      "op": "JUMP"
    },
    "7588": {
      "op": "JUMPDEST"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7591": {
      "op": "JUMPDEST"
    },
    "7592": {
      "op": "DUP4"
    },
    "7593": {
      "op": "DUP2"
    },
    "7594": {
      "op": "LT"
    },
    "7595": {
      "op": "ISZERO"
    },
    "7596": {
      "op": "PUSH2",
      "value": "0x1DBF"
    },
    "7599": {
      "op": "JUMPI"
    },
    "7600": {
      "op": "DUP2"
    },
    "7601": {
      "op": "DUP2"
    },
    "7602": {
      "op": "ADD"
    },
    "7603": {
      "op": "MLOAD"
    },
    "7604": {
      "op": "DUP4"
    },
    "7605": {
      "op": "DUP3"
    },
    "7606": {
      "op": "ADD"
    },
    "7607": {
      "op": "MSTORE"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7610": {
      "op": "ADD"
    },
    "7611": {
      "op": "PUSH2",
      "value": "0x1DA7"
    },
    "7614": {
      "op": "JUMP"
    },
    "7615": {
      "op": "JUMPDEST"
    },
    "7616": {
      "op": "DUP4"
    },
    "7617": {
      "op": "DUP2"
    },
    "7618": {
      "op": "GT"
    },
    "7619": {
      "op": "ISZERO"
    },
    "7620": {
      "op": "PUSH2",
      "value": "0x1DCE"
    },
    "7623": {
      "op": "JUMPI"
    },
    "7624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7626": {
      "op": "DUP5"
    },
    "7627": {
      "op": "DUP5"
    },
    "7628": {
      "op": "ADD"
    },
    "7629": {
      "op": "MSTORE"
    },
    "7630": {
      "op": "JUMPDEST"
    },
    "7631": {
      "op": "POP"
    },
    "7632": {
      "op": "POP"
    },
    "7633": {
      "op": "POP"
    },
    "7634": {
      "op": "POP"
    },
    "7635": {
      "jump": "o",
      "op": "JUMP"
    },
    "7636": {
      "op": "JUMPDEST"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7639": {
      "op": "DUP2"
    },
    "7640": {
      "op": "DUP2"
    },
    "7641": {
      "op": "SHR"
    },
    "7642": {
      "op": "SWAP1"
    },
    "7643": {
      "op": "DUP3"
    },
    "7644": {
      "op": "AND"
    },
    "7645": {
      "op": "DUP1"
    },
    "7646": {
      "op": "PUSH2",
      "value": "0x1DE8"
    },
    "7649": {
      "op": "JUMPI"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7652": {
      "op": "DUP3"
    },
    "7653": {
      "op": "AND"
    },
    "7654": {
      "op": "SWAP2"
    },
    "7655": {
      "op": "POP"
    },
    "7656": {
      "op": "JUMPDEST"
    },
    "7657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7659": {
      "op": "DUP3"
    },
    "7660": {
      "op": "LT"
    },
    "7661": {
      "op": "DUP2"
    },
    "7662": {
      "op": "EQ"
    },
    "7663": {
      "op": "ISZERO"
    },
    "7664": {
      "op": "PUSH2",
      "value": "0x1E09"
    },
    "7667": {
      "op": "JUMPI"
    },
    "7668": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7675": {
      "op": "SHL"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7678": {
      "op": "MSTORE"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7683": {
      "op": "MSTORE"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7688": {
      "op": "REVERT"
    },
    "7689": {
      "op": "JUMPDEST"
    },
    "7690": {
      "op": "POP"
    },
    "7691": {
      "op": "SWAP2"
    },
    "7692": {
      "op": "SWAP1"
    },
    "7693": {
      "op": "POP"
    },
    "7694": {
      "jump": "o",
      "op": "JUMP"
    },
    "7695": {
      "op": "JUMPDEST"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7698": {
      "op": "DUP3"
    },
    "7699": {
      "op": "ADD"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7702": {
      "op": "NOT"
    },
    "7703": {
      "op": "AND"
    },
    "7704": {
      "op": "DUP2"
    },
    "7705": {
      "op": "ADD"
    },
    "7706": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7715": {
      "op": "DUP2"
    },
    "7716": {
      "op": "GT"
    },
    "7717": {
      "op": "DUP3"
    },
    "7718": {
      "op": "DUP3"
    },
    "7719": {
      "op": "LT"
    },
    "7720": {
      "op": "OR"
    },
    "7721": {
      "op": "ISZERO"
    },
    "7722": {
      "op": "PUSH2",
      "value": "0x1E35"
    },
    "7725": {
      "op": "JUMPI"
    },
    "7726": {
      "op": "PUSH2",
      "value": "0x1E35"
    },
    "7729": {
      "op": "PUSH2",
      "value": "0x1EAD"
    },
    "7732": {
      "jump": "i",
      "op": "JUMP"
    },
    "7733": {
      "op": "JUMPDEST"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7736": {
      "op": "MSTORE"
    },
    "7737": {
      "op": "POP"
    },
    "7738": {
      "op": "POP"
    },
    "7739": {
      "jump": "o",
      "op": "JUMP"
    },
    "7740": {
      "op": "JUMPDEST"
    },
    "7741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7745": {
      "op": "NOT"
    },
    "7746": {
      "op": "DUP3"
    },
    "7747": {
      "op": "EQ"
    },
    "7748": {
      "op": "ISZERO"
    },
    "7749": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "7752": {
      "op": "JUMPI"
    },
    "7753": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "7756": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7759": {
      "jump": "i",
      "op": "JUMP"
    },
    "7760": {
      "op": "JUMPDEST"
    },
    "7761": {
      "op": "POP"
    },
    "7762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7764": {
      "op": "ADD"
    },
    "7765": {
      "op": "SWAP1"
    },
    "7766": {
      "jump": "o",
      "op": "JUMP"
    },
    "7767": {
      "op": "JUMPDEST"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7770": {
      "op": "DUP3"
    },
    "7771": {
      "op": "PUSH2",
      "value": "0x1E66"
    },
    "7774": {
      "op": "JUMPI"
    },
    "7775": {
      "op": "PUSH2",
      "value": "0x1E66"
    },
    "7778": {
      "op": "PUSH2",
      "value": "0x1E81"
    },
    "7781": {
      "jump": "i",
      "op": "JUMP"
    },
    "7782": {
      "op": "JUMPDEST"
    },
    "7783": {
      "op": "POP"
    },
    "7784": {
      "op": "MOD"
    },
    "7785": {
      "op": "SWAP1"
    },
    "7786": {
      "jump": "o",
      "op": "JUMP"
    },
    "7787": {
      "op": "JUMPDEST"
    },
    "7788": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7795": {
      "op": "SHL"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7798": {
      "op": "MSTORE"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7803": {
      "op": "MSTORE"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7808": {
      "op": "REVERT"
    },
    "7809": {
      "op": "JUMPDEST"
    },
    "7810": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7817": {
      "op": "SHL"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7820": {
      "op": "MSTORE"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7825": {
      "op": "MSTORE"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7830": {
      "op": "REVERT"
    },
    "7831": {
      "op": "JUMPDEST"
    },
    "7832": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7839": {
      "op": "SHL"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7842": {
      "op": "MSTORE"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7847": {
      "op": "MSTORE"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7852": {
      "op": "REVERT"
    },
    "7853": {
      "op": "JUMPDEST"
    },
    "7854": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7861": {
      "op": "SHL"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7864": {
      "op": "MSTORE"
    },
    "7865": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7869": {
      "op": "MSTORE"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7874": {
      "op": "REVERT"
    },
    "7875": {
      "op": "JUMPDEST"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7880": {
      "op": "RETURNDATASIZE"
    },
    "7881": {
      "op": "GT"
    },
    "7882": {
      "op": "ISZERO"
    },
    "7883": {
      "op": "PUSH2",
      "value": "0x1EDC"
    },
    "7886": {
      "op": "JUMPI"
    },
    "7887": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7891": {
      "op": "DUP1"
    },
    "7892": {
      "op": "RETURNDATACOPY"
    },
    "7893": {
      "op": "POP"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7896": {
      "op": "MLOAD"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7899": {
      "op": "SHR"
    },
    "7900": {
      "op": "JUMPDEST"
    },
    "7901": {
      "op": "SWAP1"
    },
    "7902": {
      "jump": "o",
      "op": "JUMP"
    },
    "7903": {
      "op": "JUMPDEST"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7908": {
      "op": "RETURNDATASIZE"
    },
    "7909": {
      "op": "LT"
    },
    "7910": {
      "op": "ISZERO"
    },
    "7911": {
      "op": "PUSH2",
      "value": "0x1EED"
    },
    "7914": {
      "op": "JUMPI"
    },
    "7915": {
      "op": "SWAP1"
    },
    "7916": {
      "jump": "o",
      "op": "JUMP"
    },
    "7917": {
      "op": "JUMPDEST"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7920": {
      "op": "MLOAD"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7923": {
      "op": "NOT"
    },
    "7924": {
      "op": "RETURNDATASIZE"
    },
    "7925": {
      "op": "DUP2"
    },
    "7926": {
      "op": "ADD"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7929": {
      "op": "DUP4"
    },
    "7930": {
      "op": "RETURNDATACOPY"
    },
    "7931": {
      "op": "DUP2"
    },
    "7932": {
      "op": "MLOAD"
    },
    "7933": {
      "op": "RETURNDATASIZE"
    },
    "7934": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7943": {
      "op": "DUP2"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7946": {
      "op": "DUP5"
    },
    "7947": {
      "op": "ADD"
    },
    "7948": {
      "op": "GT"
    },
    "7949": {
      "op": "DUP2"
    },
    "7950": {
      "op": "DUP5"
    },
    "7951": {
      "op": "GT"
    },
    "7952": {
      "op": "OR"
    },
    "7953": {
      "op": "ISZERO"
    },
    "7954": {
      "op": "PUSH2",
      "value": "0x1F1D"
    },
    "7957": {
      "op": "JUMPI"
    },
    "7958": {
      "op": "POP"
    },
    "7959": {
      "op": "POP"
    },
    "7960": {
      "op": "POP"
    },
    "7961": {
      "op": "POP"
    },
    "7962": {
      "op": "POP"
    },
    "7963": {
      "op": "SWAP1"
    },
    "7964": {
      "jump": "o",
      "op": "JUMP"
    },
    "7965": {
      "op": "JUMPDEST"
    },
    "7966": {
      "op": "DUP3"
    },
    "7967": {
      "op": "DUP6"
    },
    "7968": {
      "op": "ADD"
    },
    "7969": {
      "op": "SWAP2"
    },
    "7970": {
      "op": "POP"
    },
    "7971": {
      "op": "DUP2"
    },
    "7972": {
      "op": "MLOAD"
    },
    "7973": {
      "op": "DUP2"
    },
    "7974": {
      "op": "DUP2"
    },
    "7975": {
      "op": "GT"
    },
    "7976": {
      "op": "ISZERO"
    },
    "7977": {
      "op": "PUSH2",
      "value": "0x1F35"
    },
    "7980": {
      "op": "JUMPI"
    },
    "7981": {
      "op": "POP"
    },
    "7982": {
      "op": "POP"
    },
    "7983": {
      "op": "POP"
    },
    "7984": {
      "op": "POP"
    },
    "7985": {
      "op": "POP"
    },
    "7986": {
      "op": "POP"
    },
    "7987": {
      "op": "SWAP1"
    },
    "7988": {
      "jump": "o",
      "op": "JUMP"
    },
    "7989": {
      "op": "JUMPDEST"
    },
    "7990": {
      "op": "DUP5"
    },
    "7991": {
      "op": "RETURNDATASIZE"
    },
    "7992": {
      "op": "DUP8"
    },
    "7993": {
      "op": "ADD"
    },
    "7994": {
      "op": "ADD"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7997": {
      "op": "DUP3"
    },
    "7998": {
      "op": "DUP6"
    },
    "7999": {
      "op": "ADD"
    },
    "8000": {
      "op": "ADD"
    },
    "8001": {
      "op": "GT"
    },
    "8002": {
      "op": "ISZERO"
    },
    "8003": {
      "op": "PUSH2",
      "value": "0x1F4F"
    },
    "8006": {
      "op": "JUMPI"
    },
    "8007": {
      "op": "POP"
    },
    "8008": {
      "op": "POP"
    },
    "8009": {
      "op": "POP"
    },
    "8010": {
      "op": "POP"
    },
    "8011": {
      "op": "POP"
    },
    "8012": {
      "op": "POP"
    },
    "8013": {
      "op": "SWAP1"
    },
    "8014": {
      "jump": "o",
      "op": "JUMP"
    },
    "8015": {
      "op": "JUMPDEST"
    },
    "8016": {
      "op": "PUSH2",
      "value": "0x1F5E"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8021": {
      "op": "DUP3"
    },
    "8022": {
      "op": "DUP7"
    },
    "8023": {
      "op": "ADD"
    },
    "8024": {
      "op": "ADD"
    },
    "8025": {
      "op": "DUP8"
    },
    "8026": {
      "op": "PUSH2",
      "value": "0x1E0F"
    },
    "8029": {
      "jump": "i",
      "op": "JUMP"
    },
    "8030": {
      "op": "JUMPDEST"
    },
    "8031": {
      "op": "POP"
    },
    "8032": {
      "op": "SWAP1"
    },
    "8033": {
      "op": "SWAP6"
    },
    "8034": {
      "op": "SWAP5"
    },
    "8035": {
      "op": "POP"
    },
    "8036": {
      "op": "POP"
    },
    "8037": {
      "op": "POP"
    },
    "8038": {
      "op": "POP"
    },
    "8039": {
      "op": "POP"
    },
    "8040": {
      "jump": "o",
      "op": "JUMP"
    },
    "8041": {
      "op": "JUMPDEST"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8048": {
      "op": "SHL"
    },
    "8049": {
      "op": "SUB"
    },
    "8050": {
      "op": "DUP2"
    },
    "8051": {
      "op": "AND"
    },
    "8052": {
      "op": "DUP2"
    },
    "8053": {
      "op": "EQ"
    },
    "8054": {
      "op": "PUSH2",
      "value": "0x1F7E"
    },
    "8057": {
      "op": "JUMPI"
    },
    "8058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8060": {
      "op": "DUP1"
    },
    "8061": {
      "op": "REVERT"
    },
    "8062": {
      "op": "JUMPDEST"
    },
    "8063": {
      "op": "POP"
    },
    "8064": {
      "jump": "o",
      "op": "JUMP"
    },
    "8065": {
      "op": "JUMPDEST"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8072": {
      "op": "SHL"
    },
    "8073": {
      "op": "SUB"
    },
    "8074": {
      "op": "NOT"
    },
    "8075": {
      "op": "DUP2"
    },
    "8076": {
      "op": "AND"
    },
    "8077": {
      "op": "DUP2"
    },
    "8078": {
      "op": "EQ"
    },
    "8079": {
      "op": "PUSH2",
      "value": "0x1F7E"
    },
    "8082": {
      "op": "JUMPI"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8085": {
      "op": "DUP1"
    },
    "8086": {
      "op": "REVERT"
    }
  },
  "sha1": "3437829c3c235907c8464a35793310a9f0cf69b6",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IOracle.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * Modified version of OpenZeppelin's ERC1155 implementation\n * https://eips.ethereum.org/EIPS/eip-1155\n * https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155\n */\ncontract Loot is ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Total balance of user\n    mapping(address => uint256) private _balance;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n    string private _uriSuffix;\n\n    // Contract name (used for marketplaces)\n    string public name;\n\n    // Contract symbol (used for marketplaces)\n    string public symbol;\n\n    // The Oracle contract\n    IOracle public oracle;\n\n    // Items\n    enum Item {\n        // Ear\n        EARRING,\n        // Eyes\n        BIG_SHADES,\n        BLUE_EYE_SHADOW,\n        CLASSIC_SHADES,\n        CLOWN_EYES_BLUE,\n        CLOWN_EYES_GREEN,\n        EYE_MASK,\n        EYE_PATCH,\n        GREEN_EYE_SHADOW,\n        HORNED_RIM_GLASSES,\n        NERD_GLASSES,\n        PURPLE_EYE_SHADOW,\n        REGULAR_SHADES,\n        SMALL_SHADES,\n        THREE_D_GLASSES,\n        VR,\n        WELDING_GOGGLES,\n        // Face\n        MOLE,\n        ROSY_CHEEKS,\n        SPOTS,\n        VAMPIRE_HAIR,\n        // Facial_hair\n        BIG_BEARD,\n        CHINSTRAP,\n        FRONT_BEARD,\n        FRONT_BEARD_DARK,\n        GOAT,\n        HANDLEBARS,\n        LUXURIOUS_BEARD,\n        MUSTACHE,\n        MUTTONCHOPS,\n        NORMAL_BEARD,\n        NORMAL_BEARD_BLACK,\n        SHADOW_BEARD,\n        // Head\n        BANDANA,\n        BEANIE,\n        BLONDE_BOB,\n        BLONDE_SHORT,\n        CAP,\n        CAP_FORWARD,\n        CLOWN_HAIR_GREEN,\n        COWBOY_HAT,\n        CRAZY_HAIR,\n        DARK_HAIR,\n        DO_RAG,\n        FEDORA,\n        FRUMPY_HAIR,\n        HALF_SHAVED,\n        HEADBAND,\n        HOODIE,\n        KNITTED_CAP,\n        MESSY_HAIR,\n        MOHAWK,\n        MOHAWK_DARK,\n        MOHAWK_THIN,\n        ORANGE_SIDE,\n        PEAK_SPIKE,\n        PIGTAILS,\n        PILOT_HELMET,\n        PINK_WITH_HAT,\n        POLICE_CAP,\n        PURPLE_HAIR,\n        RED_MOHAWK,\n        SHAVED_HEAD,\n        STRAIGHT_HAIR,\n        STRAIGHT_HAIR_BLONDE,\n        STRAIGHT_HAIR_DARK,\n        STRINGY_HAIR,\n        TASSLE_HAT,\n        TIARA,\n        TOP_HAT,\n        WILD_BLONDE,\n        WILD_HAIR,\n        WILD_WHITE_HAIR,\n        // Mouth\n        BLACK_LIPSTICK,\n        BUCK_TEETH,\n        FROWN,\n        HOT_LIPSTICK,\n        MEDICAL_MASK,\n        PURPLE_LIPSTICK,\n        SMILE,\n        // Neck\n        CHOKER,\n        GOLD_CHAIN,\n        SILVER_CHAIN,\n        // Nose\n        CLOWN_NOSE,\n        // Smoke\n        CIGARETTE,\n        PIPE,\n        VAPE,\n        // Species\n        ALIEN,\n        APE,\n        HUMAN,\n        ZOMBIE\n    }\n\n    /**\n     * @param name_         The name of the token\n     * @param symbol_       The symbol of the token\n     * @param uri_          The URI for token metadata\n     * @param oracleAddress The address where the Oracle resides\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        string memory uri_,\n        string memory uriSuffix,\n        address oracleAddress\n    ) {\n        name = name_;\n        symbol = symbol_;\n        _uri = uri_;\n        _uriSuffix = uriSuffix;\n        oracle = IOracle(oracleAddress);\n    }\n\n    /**\n     * @dev Modifier that only Oracle operators may call\n     */\n    modifier onlyOracleOperator() {\n        require(\n            msg.sender == oracle.getOperator(),\n            \"Only the Oracle operator may perform this action\"\n        );\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns the URI for token type `id`.\n     * @notice OpenSea requires the contract to do the URL building\n     */\n    function uri(uint256 tokenId) public view override returns (string memory) {\n        string memory baseURI = _uri;\n        string memory suffixURI = _uriSuffix;\n        return\n            bytes(baseURI).length > 0\n                ? string(\n                    abi.encodePacked(baseURI, toString(tokenId), suffixURI)\n                )\n                : \"\";\n    }\n\n    /**\n     * @dev Returns the total balance of `account`\n     * @notice May not query the zero address\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        return _balance[account];\n    }\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     * @notice May not query the zero address\n     */\n    function balanceOf(address account, uint256 id)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev Batched version of balanceOf.\n     * @notice May not query the zero address\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        override\n        returns (uint256[] memory)\n    {\n        require(\n            accounts.length == ids.length,\n            \"ERC1155: accounts and ids length mismatch\"\n        );\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.\n     * @notice `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        override\n    {\n        require(\n            msg.sender != operator,\n            \"ERC1155: setting approval status for self\"\n        );\n\n        _operatorApprovals[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer `account`'s tokens.\n     */\n    function isApprovedForAll(address account, address operator)\n        public\n        view\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev Transfers amount tokens of token type `id` from `from` to `to`.\n     * @notice May not query the zero address\n     * @notice If the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.\n     * @notice `from` must have a balance of tokens of type `id` of at least `amount`.\n     * @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public override {\n        require(\n            from == msg.sender || isApprovedForAll(from, msg.sender),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = msg.sender;\n\n        uint256 fromBalance = _balances[id][from];\n        require(\n            fromBalance >= amount,\n            \"ERC1155: insufficient balance for transfer\"\n        );\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n            _balance[from] -= amount;\n        }\n        _balances[id][to] += amount;\n        _balance[to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev Batched version of safeTransferFrom.\n     * @notice `ids` and `amounts` must have the same length.\n     * @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public override {\n        require(\n            from == msg.sender || isApprovedForAll(from, msg.sender),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = msg.sender;\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(\n                fromBalance >= amount,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n                _balance[from] -= amount;\n            }\n            _balances[id][to] += amount;\n            _balance[from] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            from,\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     * @notice `account` cannot be the zero address.\n     * @notice If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public onlyOracleOperator {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = msg.sender;\n\n        _balances[id][account] += amount;\n        _balance[account] += amount;\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(\n            operator,\n            address(0),\n            account,\n            id,\n            amount,\n            data\n        );\n    }\n\n    /**\n     * @dev Batched version of _mint.\n     * @notice `ids` and `amounts` must have the same length.\n     * @notice - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public onlyOracleOperator {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n\n        address operator = msg.sender;\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n            _balance[to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            address(0),\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155Received(\n                    operator,\n                    from,\n                    id,\n                    amount,\n                    data\n                )\n            returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155BatchReceived(\n                    operator,\n                    from,\n                    ids,\n                    amounts,\n                    data\n                )\n            returns (bytes4 response) {\n                if (\n                    response != IERC1155Receiver.onERC1155BatchReceived.selector\n                ) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Allows the URI to be changed by the Oracle operator\n     * @param uri_      the base URI\n     * @param suffix    the end of the URI (eg, \".json\")\n     */\n    function setURI(string memory uri_, string memory suffix)\n        public\n        onlyOracleOperator\n    {\n        _uri = uri_;\n        _uriSuffix = suffix;\n    }\n}\n",
  "sourceMap": "660:14880:6:-:0;;;3742:319;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3922:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;3944:16:6;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;3970:11:6;;;;:4;;:11;;;;;:::i;:::-;-1:-1:-1;3991:22:6;;;;:10;;:22;;;;;:::i;:::-;-1:-1:-1;4023:6:6;:31;;-1:-1:-1;;;;;;4023:31:6;-1:-1:-1;;;;;4023:31:6;;;;;;;;;;-1:-1:-1;660:14880:6;;-1:-1:-1;;;660:14880:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:14880:6;;;-1:-1:-1;660:14880:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:8;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:8;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:8;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:8:o;904:1139::-;1050:6;1058;1066;1074;1082;1135:3;1123:9;1114:7;1110:23;1106:33;1103:2;;;1152:1;1149;1142:12;1103:2;1179:16;;-1:-1:-1;;;;;1244:14:8;;;1241:2;;;1271:1;1268;1261:12;1241:2;1294:61;1347:7;1338:6;1327:9;1323:22;1294:61;:::i;:::-;1284:71;;1401:2;1390:9;1386:18;1380:25;1364:41;;1430:2;1420:8;1417:16;1414:2;;;1446:1;1443;1436:12;1414:2;1469:63;1524:7;1513:8;1502:9;1498:24;1469:63;:::i;:::-;1459:73;;1578:2;1567:9;1563:18;1557:25;1541:41;;1607:2;1597:8;1594:16;1591:2;;;1623:1;1620;1613:12;1591:2;1646:63;1701:7;1690:8;1679:9;1675:24;1646:63;:::i;:::-;1636:73;;1755:2;1744:9;1740:18;1734:25;1718:41;;1784:2;1774:8;1771:16;1768:2;;;1800:1;1797;1790:12;1768:2;;1823:63;1878:7;1867:8;1856:9;1852:24;1823:63;:::i;:::-;1929:3;1914:19;;1908:26;1813:73;;-1:-1:-1;1908:26:8;-1:-1:-1;;;;;;1963:31:8;;1953:42;;1943:2;;2009:1;2006;1999:12;1943:2;2032:5;2022:15;;;1093:950;;;;;;;;:::o;2048:380::-;2127:1;2123:12;;;;2170;;;2191:2;;2245:4;2237:6;2233:17;2223:27;;2191:2;2298;2290:6;2287:14;2267:18;2264:38;2261:2;;;2344:10;2339:3;2335:20;2332:1;2325:31;2379:4;2376:1;2369:15;2407:4;2404:1;2397:15;2261:2;;2103:325;;;:::o;2433:127::-;2494:10;2489:3;2485:20;2482:1;2475:31;2525:4;2522:1;2515:15;2549:4;2546:1;2539:15;2465:95;660:14880:6;;;;;;",
  "sourcePath": "contracts/Loot.sol",
  "type": "contract"
}