{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mintBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155.sol",
    "1": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155Receiver.sol",
    "2": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "3": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Address.sol",
    "4": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/ERC165.sol",
    "5": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/IERC165.sol",
    "6": "contracts/Loot.sol",
    "7": "interfaces/IOracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/Loot.sol",
    "exportedSymbols": {
      "Address": [
        1410
      ],
      "ERC165": [
        1434
      ],
      "IERC1155": [
        1057
      ],
      "IERC1155MetadataURI": [
        1113
      ],
      "IERC1155Receiver": [
        1098
      ],
      "IERC165": [
        1454
      ],
      "IOracle": [
        1442
      ],
      "Loot": [
        935
      ]
    },
    "id": 936,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "interfaces/IOracle.sol",
        "file": "../interfaces/IOracle.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1443,
        "src": "58:35:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1058,
        "src": "94:60:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1099,
        "src": "155:68:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1114,
        "src": "224:82:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1411,
        "src": "307:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 936,
        "sourceUnit": 1435,
        "src": "359:64:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1434,
              "src": "677:6:6"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "677:6:6"
          },
          {
            "baseName": {
              "id": 11,
              "name": "IERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1057,
              "src": "685:8:6"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "685:8:6"
          },
          {
            "baseName": {
              "id": 13,
              "name": "IERC1155MetadataURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1113,
              "src": "695:19:6"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "695:19:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "425:234:6",
          "text": " @dev Implementation of the basic standard multi-token.\n Modified version of OpenZeppelin's ERC1155 implementation\n https://eips.ethereum.org/EIPS/eip-1155\n https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155"
        },
        "fullyImplemented": true,
        "id": 935,
        "linearizedBaseContracts": [
          935,
          1113,
          1057,
          1434,
          1454
        ],
        "name": "Loot",
        "nameLocation": "669:4:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 17,
            "libraryName": {
              "id": 15,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1410,
              "src": "727:7:6"
            },
            "nodeType": "UsingForDirective",
            "src": "721:26:6",
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "739:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "_balance",
            "nameLocation": "818:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "782:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "790:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "782:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "801:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "938:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "882:65:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 22,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "882:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 25,
                "keyType": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "901:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1057:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1004:71:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1012:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1004:44:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 31,
                "keyType": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1031:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1023:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 30,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1042:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "1211:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1196:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 34,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1196:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 37,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "1281:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1267:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 36,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1267:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 39,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "1353:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1339:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 38,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1339:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "1401:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 935,
            "src": "1393:14:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOracle_$1442",
              "typeString": "contract IOracle"
            },
            "typeName": {
              "id": 41,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40,
                "name": "IOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1442,
                "src": "1393:7:6"
              },
              "referencedDeclaration": 1442,
              "src": "1393:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$1442",
                "typeString": "contract IOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Loot.Item",
            "id": 134,
            "members": [
              {
                "id": 43,
                "name": "EARRING",
                "nameLocation": "1462:7:6",
                "nodeType": "EnumValue",
                "src": "1462:7:6"
              },
              {
                "id": 44,
                "name": "BIG_SHADES",
                "nameLocation": "1495:10:6",
                "nodeType": "EnumValue",
                "src": "1495:10:6"
              },
              {
                "id": 45,
                "name": "BLUE_EYE_SHADOW",
                "nameLocation": "1515:15:6",
                "nodeType": "EnumValue",
                "src": "1515:15:6"
              },
              {
                "id": 46,
                "name": "CLASSIC_SHADES",
                "nameLocation": "1540:14:6",
                "nodeType": "EnumValue",
                "src": "1540:14:6"
              },
              {
                "id": 47,
                "name": "CLOWN_EYES_BLUE",
                "nameLocation": "1564:15:6",
                "nodeType": "EnumValue",
                "src": "1564:15:6"
              },
              {
                "id": 48,
                "name": "CLOWN_EYES_GREEN",
                "nameLocation": "1589:16:6",
                "nodeType": "EnumValue",
                "src": "1589:16:6"
              },
              {
                "id": 49,
                "name": "EYE_MASK",
                "nameLocation": "1615:8:6",
                "nodeType": "EnumValue",
                "src": "1615:8:6"
              },
              {
                "id": 50,
                "name": "EYE_PATCH",
                "nameLocation": "1633:9:6",
                "nodeType": "EnumValue",
                "src": "1633:9:6"
              },
              {
                "id": 51,
                "name": "GREEN_EYE_SHADOW",
                "nameLocation": "1652:16:6",
                "nodeType": "EnumValue",
                "src": "1652:16:6"
              },
              {
                "id": 52,
                "name": "HORNED_RIM_GLASSES",
                "nameLocation": "1678:18:6",
                "nodeType": "EnumValue",
                "src": "1678:18:6"
              },
              {
                "id": 53,
                "name": "NERD_GLASSES",
                "nameLocation": "1706:12:6",
                "nodeType": "EnumValue",
                "src": "1706:12:6"
              },
              {
                "id": 54,
                "name": "PURPLE_EYE_SHADOW",
                "nameLocation": "1728:17:6",
                "nodeType": "EnumValue",
                "src": "1728:17:6"
              },
              {
                "id": 55,
                "name": "REGULAR_SHADES",
                "nameLocation": "1755:14:6",
                "nodeType": "EnumValue",
                "src": "1755:14:6"
              },
              {
                "id": 56,
                "name": "SMALL_SHADES",
                "nameLocation": "1779:12:6",
                "nodeType": "EnumValue",
                "src": "1779:12:6"
              },
              {
                "id": 57,
                "name": "THREE_D_GLASSES",
                "nameLocation": "1801:15:6",
                "nodeType": "EnumValue",
                "src": "1801:15:6"
              },
              {
                "id": 58,
                "name": "VR",
                "nameLocation": "1826:2:6",
                "nodeType": "EnumValue",
                "src": "1826:2:6"
              },
              {
                "id": 59,
                "name": "WELDING_GOGGLES",
                "nameLocation": "1838:15:6",
                "nodeType": "EnumValue",
                "src": "1838:15:6"
              },
              {
                "id": 60,
                "name": "MOLE",
                "nameLocation": "1879:4:6",
                "nodeType": "EnumValue",
                "src": "1879:4:6"
              },
              {
                "id": 61,
                "name": "ROSY_CHEEKS",
                "nameLocation": "1893:11:6",
                "nodeType": "EnumValue",
                "src": "1893:11:6"
              },
              {
                "id": 62,
                "name": "SPOTS",
                "nameLocation": "1914:5:6",
                "nodeType": "EnumValue",
                "src": "1914:5:6"
              },
              {
                "id": 63,
                "name": "VAMPIRE_HAIR",
                "nameLocation": "1929:12:6",
                "nodeType": "EnumValue",
                "src": "1929:12:6"
              },
              {
                "id": 64,
                "name": "BIG_BEARD",
                "nameLocation": "1974:9:6",
                "nodeType": "EnumValue",
                "src": "1974:9:6"
              },
              {
                "id": 65,
                "name": "CHINSTRAP",
                "nameLocation": "1993:9:6",
                "nodeType": "EnumValue",
                "src": "1993:9:6"
              },
              {
                "id": 66,
                "name": "FRONT_BEARD",
                "nameLocation": "2012:11:6",
                "nodeType": "EnumValue",
                "src": "2012:11:6"
              },
              {
                "id": 67,
                "name": "FRONT_BEARD_DARK",
                "nameLocation": "2033:16:6",
                "nodeType": "EnumValue",
                "src": "2033:16:6"
              },
              {
                "id": 68,
                "name": "GOAT",
                "nameLocation": "2059:4:6",
                "nodeType": "EnumValue",
                "src": "2059:4:6"
              },
              {
                "id": 69,
                "name": "HANDLEBARS",
                "nameLocation": "2073:10:6",
                "nodeType": "EnumValue",
                "src": "2073:10:6"
              },
              {
                "id": 70,
                "name": "LUXURIOUS_BEARD",
                "nameLocation": "2093:15:6",
                "nodeType": "EnumValue",
                "src": "2093:15:6"
              },
              {
                "id": 71,
                "name": "MUSTACHE",
                "nameLocation": "2118:8:6",
                "nodeType": "EnumValue",
                "src": "2118:8:6"
              },
              {
                "id": 72,
                "name": "MUTTONCHOPS",
                "nameLocation": "2136:11:6",
                "nodeType": "EnumValue",
                "src": "2136:11:6"
              },
              {
                "id": 73,
                "name": "NORMAL_BEARD",
                "nameLocation": "2157:12:6",
                "nodeType": "EnumValue",
                "src": "2157:12:6"
              },
              {
                "id": 74,
                "name": "NORMAL_BEARD_BLACK",
                "nameLocation": "2179:18:6",
                "nodeType": "EnumValue",
                "src": "2179:18:6"
              },
              {
                "id": 75,
                "name": "SHADOW_BEARD",
                "nameLocation": "2207:12:6",
                "nodeType": "EnumValue",
                "src": "2207:12:6"
              },
              {
                "id": 76,
                "name": "BANDANA",
                "nameLocation": "2245:7:6",
                "nodeType": "EnumValue",
                "src": "2245:7:6"
              },
              {
                "id": 77,
                "name": "BEANIE",
                "nameLocation": "2262:6:6",
                "nodeType": "EnumValue",
                "src": "2262:6:6"
              },
              {
                "id": 78,
                "name": "BLONDE_BOB",
                "nameLocation": "2278:10:6",
                "nodeType": "EnumValue",
                "src": "2278:10:6"
              },
              {
                "id": 79,
                "name": "BLONDE_SHORT",
                "nameLocation": "2298:12:6",
                "nodeType": "EnumValue",
                "src": "2298:12:6"
              },
              {
                "id": 80,
                "name": "CAP",
                "nameLocation": "2320:3:6",
                "nodeType": "EnumValue",
                "src": "2320:3:6"
              },
              {
                "id": 81,
                "name": "CAP_FORWARD",
                "nameLocation": "2333:11:6",
                "nodeType": "EnumValue",
                "src": "2333:11:6"
              },
              {
                "id": 82,
                "name": "CLOWN_HAIR_GREEN",
                "nameLocation": "2354:16:6",
                "nodeType": "EnumValue",
                "src": "2354:16:6"
              },
              {
                "id": 83,
                "name": "COWBOY_HAT",
                "nameLocation": "2380:10:6",
                "nodeType": "EnumValue",
                "src": "2380:10:6"
              },
              {
                "id": 84,
                "name": "CRAZY_HAIR",
                "nameLocation": "2400:10:6",
                "nodeType": "EnumValue",
                "src": "2400:10:6"
              },
              {
                "id": 85,
                "name": "DARK_HAIR",
                "nameLocation": "2420:9:6",
                "nodeType": "EnumValue",
                "src": "2420:9:6"
              },
              {
                "id": 86,
                "name": "DO_RAG",
                "nameLocation": "2439:6:6",
                "nodeType": "EnumValue",
                "src": "2439:6:6"
              },
              {
                "id": 87,
                "name": "FEDORA",
                "nameLocation": "2455:6:6",
                "nodeType": "EnumValue",
                "src": "2455:6:6"
              },
              {
                "id": 88,
                "name": "FRUMPY_HAIR",
                "nameLocation": "2471:11:6",
                "nodeType": "EnumValue",
                "src": "2471:11:6"
              },
              {
                "id": 89,
                "name": "HALF_SHAVED",
                "nameLocation": "2492:11:6",
                "nodeType": "EnumValue",
                "src": "2492:11:6"
              },
              {
                "id": 90,
                "name": "HEADBAND",
                "nameLocation": "2513:8:6",
                "nodeType": "EnumValue",
                "src": "2513:8:6"
              },
              {
                "id": 91,
                "name": "HOODIE",
                "nameLocation": "2531:6:6",
                "nodeType": "EnumValue",
                "src": "2531:6:6"
              },
              {
                "id": 92,
                "name": "KNITTED_CAP",
                "nameLocation": "2547:11:6",
                "nodeType": "EnumValue",
                "src": "2547:11:6"
              },
              {
                "id": 93,
                "name": "MESSY_HAIR",
                "nameLocation": "2568:10:6",
                "nodeType": "EnumValue",
                "src": "2568:10:6"
              },
              {
                "id": 94,
                "name": "MOHAWK",
                "nameLocation": "2588:6:6",
                "nodeType": "EnumValue",
                "src": "2588:6:6"
              },
              {
                "id": 95,
                "name": "MOHAWK_DARK",
                "nameLocation": "2604:11:6",
                "nodeType": "EnumValue",
                "src": "2604:11:6"
              },
              {
                "id": 96,
                "name": "MOHAWK_THIN",
                "nameLocation": "2625:11:6",
                "nodeType": "EnumValue",
                "src": "2625:11:6"
              },
              {
                "id": 97,
                "name": "ORANGE_SIDE",
                "nameLocation": "2646:11:6",
                "nodeType": "EnumValue",
                "src": "2646:11:6"
              },
              {
                "id": 98,
                "name": "PEAK_SPIKE",
                "nameLocation": "2667:10:6",
                "nodeType": "EnumValue",
                "src": "2667:10:6"
              },
              {
                "id": 99,
                "name": "PIGTAILS",
                "nameLocation": "2687:8:6",
                "nodeType": "EnumValue",
                "src": "2687:8:6"
              },
              {
                "id": 100,
                "name": "PILOT_HELMET",
                "nameLocation": "2705:12:6",
                "nodeType": "EnumValue",
                "src": "2705:12:6"
              },
              {
                "id": 101,
                "name": "PINK_WITH_HAT",
                "nameLocation": "2727:13:6",
                "nodeType": "EnumValue",
                "src": "2727:13:6"
              },
              {
                "id": 102,
                "name": "POLICE_CAP",
                "nameLocation": "2750:10:6",
                "nodeType": "EnumValue",
                "src": "2750:10:6"
              },
              {
                "id": 103,
                "name": "PURPLE_HAIR",
                "nameLocation": "2770:11:6",
                "nodeType": "EnumValue",
                "src": "2770:11:6"
              },
              {
                "id": 104,
                "name": "RED_MOHAWK",
                "nameLocation": "2791:10:6",
                "nodeType": "EnumValue",
                "src": "2791:10:6"
              },
              {
                "id": 105,
                "name": "SHAVED_HEAD",
                "nameLocation": "2811:11:6",
                "nodeType": "EnumValue",
                "src": "2811:11:6"
              },
              {
                "id": 106,
                "name": "STRAIGHT_HAIR",
                "nameLocation": "2832:13:6",
                "nodeType": "EnumValue",
                "src": "2832:13:6"
              },
              {
                "id": 107,
                "name": "STRAIGHT_HAIR_BLONDE",
                "nameLocation": "2855:20:6",
                "nodeType": "EnumValue",
                "src": "2855:20:6"
              },
              {
                "id": 108,
                "name": "STRAIGHT_HAIR_DARK",
                "nameLocation": "2885:18:6",
                "nodeType": "EnumValue",
                "src": "2885:18:6"
              },
              {
                "id": 109,
                "name": "STRINGY_HAIR",
                "nameLocation": "2913:12:6",
                "nodeType": "EnumValue",
                "src": "2913:12:6"
              },
              {
                "id": 110,
                "name": "TASSLE_HAT",
                "nameLocation": "2935:10:6",
                "nodeType": "EnumValue",
                "src": "2935:10:6"
              },
              {
                "id": 111,
                "name": "TIARA",
                "nameLocation": "2955:5:6",
                "nodeType": "EnumValue",
                "src": "2955:5:6"
              },
              {
                "id": 112,
                "name": "TOP_HAT",
                "nameLocation": "2970:7:6",
                "nodeType": "EnumValue",
                "src": "2970:7:6"
              },
              {
                "id": 113,
                "name": "WILD_BLONDE",
                "nameLocation": "2987:11:6",
                "nodeType": "EnumValue",
                "src": "2987:11:6"
              },
              {
                "id": 114,
                "name": "WILD_HAIR",
                "nameLocation": "3008:9:6",
                "nodeType": "EnumValue",
                "src": "3008:9:6"
              },
              {
                "id": 115,
                "name": "WILD_WHITE_HAIR",
                "nameLocation": "3027:15:6",
                "nodeType": "EnumValue",
                "src": "3027:15:6"
              },
              {
                "id": 116,
                "name": "BLACK_LIPSTICK",
                "nameLocation": "3069:14:6",
                "nodeType": "EnumValue",
                "src": "3069:14:6"
              },
              {
                "id": 117,
                "name": "BUCK_TEETH",
                "nameLocation": "3093:10:6",
                "nodeType": "EnumValue",
                "src": "3093:10:6"
              },
              {
                "id": 118,
                "name": "FROWN",
                "nameLocation": "3113:5:6",
                "nodeType": "EnumValue",
                "src": "3113:5:6"
              },
              {
                "id": 119,
                "name": "HOT_LIPSTICK",
                "nameLocation": "3128:12:6",
                "nodeType": "EnumValue",
                "src": "3128:12:6"
              },
              {
                "id": 120,
                "name": "MEDICAL_MASK",
                "nameLocation": "3150:12:6",
                "nodeType": "EnumValue",
                "src": "3150:12:6"
              },
              {
                "id": 121,
                "name": "PURPLE_LIPSTICK",
                "nameLocation": "3172:15:6",
                "nodeType": "EnumValue",
                "src": "3172:15:6"
              },
              {
                "id": 122,
                "name": "SMILE",
                "nameLocation": "3197:5:6",
                "nodeType": "EnumValue",
                "src": "3197:5:6"
              },
              {
                "id": 123,
                "name": "CHOKER",
                "nameLocation": "3228:6:6",
                "nodeType": "EnumValue",
                "src": "3228:6:6"
              },
              {
                "id": 124,
                "name": "GOLD_CHAIN",
                "nameLocation": "3244:10:6",
                "nodeType": "EnumValue",
                "src": "3244:10:6"
              },
              {
                "id": 125,
                "name": "SILVER_CHAIN",
                "nameLocation": "3264:12:6",
                "nodeType": "EnumValue",
                "src": "3264:12:6"
              },
              {
                "id": 126,
                "name": "CLOWN_NOSE",
                "nameLocation": "3302:10:6",
                "nodeType": "EnumValue",
                "src": "3302:10:6"
              },
              {
                "id": 127,
                "name": "CIGARETTE",
                "nameLocation": "3339:9:6",
                "nodeType": "EnumValue",
                "src": "3339:9:6"
              },
              {
                "id": 128,
                "name": "PIPE",
                "nameLocation": "3358:4:6",
                "nodeType": "EnumValue",
                "src": "3358:4:6"
              },
              {
                "id": 129,
                "name": "VAPE",
                "nameLocation": "3372:4:6",
                "nodeType": "EnumValue",
                "src": "3372:4:6"
              },
              {
                "id": 130,
                "name": "ALIEN",
                "nameLocation": "3405:5:6",
                "nodeType": "EnumValue",
                "src": "3405:5:6"
              },
              {
                "id": 131,
                "name": "APE",
                "nameLocation": "3420:3:6",
                "nodeType": "EnumValue",
                "src": "3420:3:6"
              },
              {
                "id": 132,
                "name": "HUMAN",
                "nameLocation": "3433:5:6",
                "nodeType": "EnumValue",
                "src": "3433:5:6"
              },
              {
                "id": 133,
                "name": "ZOMBIE",
                "nameLocation": "3448:6:6",
                "nodeType": "EnumValue",
                "src": "3448:6:6"
              }
            ],
            "name": "Item",
            "nameLocation": "1432:4:6",
            "nodeType": "EnumDefinition",
            "src": "1427:2033:6"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "3646:117:6",
              "statements": [
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 146,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "3656:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 147,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3663:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3656:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:12:6"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 150,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "3678:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3687:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3678:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3678:16:6"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 154,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3704:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 155,
                      "name": "uri_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "3711:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3704:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "3704:11:6"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3725:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1442",
                        "typeString": "contract IOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 160,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "3742:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 159,
                        "name": "IOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
                        "src": "3734:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOracle_$1442_$",
                          "typeString": "type(contract IOracle)"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3734:22:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1442",
                        "typeString": "contract IOracle"
                      }
                    },
                    "src": "3725:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$1442",
                      "typeString": "contract IOracle"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:31:6"
                }
              ]
            },
            "documentation": {
              "id": 135,
              "nodeType": "StructuredDocumentation",
              "src": "3466:38:6",
              "text": " @dev See {_setURI}."
            },
            "id": 165,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "3544:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3530:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3530:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "3573:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3559:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3559:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "3604:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3590:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3590:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "oracleAddress",
                  "nameLocation": "3626:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3618:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3520:125:6"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3646:0:6"
            },
            "scope": 935,
            "src": "3509:254:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "3872:157:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3903:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3903:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 171,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "3917:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOracle_$1442",
                                "typeString": "contract IOracle"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1441,
                            "src": "3917:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3917:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3903:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f7261636c65206f70657261746f72206d617920706572666f726d207468697320616374696f6e",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3951:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f838567f5ff9ac50cd236f5e25efd25d30be7f5f73dcf970ebe8f73d5744142",
                          "typeString": "literal_string \"Only the oracle operator may perform this action\""
                        },
                        "value": "Only the oracle operator may perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f838567f5ff9ac50cd236f5e25efd25d30be7f5f73dcf970ebe8f73d5744142",
                          "typeString": "literal_string \"Only the oracle operator may perform this action\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3882:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3882:129:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3882:129:6"
                },
                {
                  "id": 178,
                  "nodeType": "PlaceholderStatement",
                  "src": "4021:1:6"
                }
              ]
            },
            "documentation": {
              "id": 166,
              "nodeType": "StructuredDocumentation",
              "src": "3769:68:6",
              "text": " @dev Modifier that only oracle operators may call"
            },
            "id": 180,
            "name": "onlyOracleOperator",
            "nameLocation": "3851:18:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3869:2:6"
            },
            "src": "3842:187:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1433,
              1453
            ],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "4232:197:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 191,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4261:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 193,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1057,
                                "src": "4281:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$1057_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$1057_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 192,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4276:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4276:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1057",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4276:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4261:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 197,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4318:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 199,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1113,
                                "src": "4338:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1113_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1113_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 198,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4333:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4333:25:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1113",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4333:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4318:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4261:109:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 206,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4410:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 204,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4386:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Loot_$935_$",
                            "typeString": "type(contract super Loot)"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1433,
                        "src": "4386:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4386:36:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4261:161:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "4242:180:6"
                }
              ]
            },
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "4035:56:6",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4105:17:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 187,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 185,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1434,
                  "src": "4188:6:6"
                },
                {
                  "id": 186,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1454,
                  "src": "4196:7:6"
                }
              ],
              "src": "4179:25:6"
            },
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4130:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4123:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4123:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4122:20:6"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4222:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4222:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4221:6:6"
            },
            "scope": 935,
            "src": "4096:333:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1112
            ],
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "4567:28:6",
              "statements": [
                {
                  "expression": {
                    "id": 220,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "4584:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 219,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "4577:11:6"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "4435:60:6",
              "text": " @dev Returns the URI for token type `id`."
            },
            "functionSelector": "0e89341c",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "4509:3:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 216,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4534:8:6"
            },
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4513:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4513:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4512:9:6"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4552:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4552:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4551:15:6"
            },
            "scope": 935,
            "src": "4500:95:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "4808:162:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 232,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "4839:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4858:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4850:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 233,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4850:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4850:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4839:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4874:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4818:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4818:111:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "4818:111:6"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 241,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "4946:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 243,
                    "indexExpression": {
                      "id": 242,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "4955:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4946:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 244,
                  "nodeType": "Return",
                  "src": "4939:24:6"
                }
              ]
            },
            "documentation": {
              "id": 224,
              "nodeType": "StructuredDocumentation",
              "src": "4601:108:6",
              "text": " @dev Returns the total balance of `account`\n @notice May not query the zero address"
            },
            "functionSelector": "70a08231",
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4723:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4741:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "4733:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4733:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4732:17:6"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "4795:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4795:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4794:9:6"
            },
            "scope": 935,
            "src": "4714:256:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              995
            ],
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "5241:167:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "5272:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5291:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5283:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 259,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5283:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5283:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5272:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5307:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5251:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5251:111:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "5251:111:6"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 267,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "5379:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "id": 268,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5389:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5379:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 271,
                    "indexExpression": {
                      "id": 270,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "5393:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5379:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 256,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "5372:29:6"
                }
              ]
            },
            "documentation": {
              "id": 247,
              "nodeType": "StructuredDocumentation",
              "src": "4976:137:6",
              "text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n @notice May not query the zero address"
            },
            "functionSelector": "00fdd58e",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5127:9:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 253,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5202:8:6"
            },
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5145:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "5137:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5137:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5162:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "5154:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5154:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5136:29:6"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "5228:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5228:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5227:9:6"
            },
            "scope": 935,
            "src": "5118:290:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1008
            ],
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "5675:369:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 289,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "5706:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5706:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 291,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "5725:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5725:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5706:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5749:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5685:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5685:117:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5685:117:6"
                },
                {
                  "assignments": [
                    301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "5830:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "5813:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5813:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 300,
                        "nodeType": "ArrayTypeName",
                        "src": "5813:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 308,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 305,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "5860:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5860:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5846:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5850:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 303,
                        "nodeType": "ArrayTypeName",
                        "src": "5850:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5846:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5813:63:6"
                },
                {
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "5933:74:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 320,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "5947:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 322,
                            "indexExpression": {
                              "id": 321,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "5961:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5947:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 324,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 278,
                                  "src": "5976:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 326,
                                "indexExpression": {
                                  "id": 325,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 310,
                                  "src": "5985:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5976:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 327,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "5989:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 329,
                                "indexExpression": {
                                  "id": 328,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 310,
                                  "src": "5993:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5989:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 323,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                246,
                                274
                              ],
                              "referencedDeclaration": 274,
                              "src": "5966:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5966:30:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5947:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "5947:49:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 313,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "5907:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 314,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "5911:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5911:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5907:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 334,
                  "initializationExpression": {
                    "assignments": [
                      310
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5900:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "5892:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5892:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 312,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5904:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5892:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5928:3:6",
                      "subExpression": {
                        "id": 317,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "5930:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 319,
                    "nodeType": "ExpressionStatement",
                    "src": "5928:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "5887:120:6"
                },
                {
                  "expression": {
                    "id": 335,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 301,
                    "src": "6024:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 287,
                  "id": 336,
                  "nodeType": "Return",
                  "src": "6017:20:6"
                }
              ]
            },
            "documentation": {
              "id": 275,
              "nodeType": "StructuredDocumentation",
              "src": "5414:99:6",
              "text": " @dev Batched version of balanceOf.\n @notice May not query the zero address"
            },
            "functionSelector": "4e1273f4",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "5527:14:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 283,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5627:8:6"
            },
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "5559:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "5542:25:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 276,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5542:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 277,
                    "nodeType": "ArrayTypeName",
                    "src": "5542:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "5586:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "5569:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 279,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5569:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 280,
                    "nodeType": "ArrayTypeName",
                    "src": "5569:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5541:49:6"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "5653:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 284,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5653:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 285,
                    "nodeType": "ArrayTypeName",
                    "src": "5653:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5652:18:6"
            },
            "scope": 935,
            "src": "5518:526:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1016
            ],
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "6325:250:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 348,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6356:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6356:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 350,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "6370:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6356:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6392:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6335:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6335:110:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "6335:110:6"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 355,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "6456:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 359,
                        "indexExpression": {
                          "expression": {
                            "id": 356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6475:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6475:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6456:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 360,
                      "indexExpression": {
                        "id": 358,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6487:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6456:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 361,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "6499:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6456:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "6456:51:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 365,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6537:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6537:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 367,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6549:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 368,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "6559:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 364,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "6522:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6522:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "EmitStatement",
                  "src": "6517:51:6"
                }
              ]
            },
            "documentation": {
              "id": 339,
              "nodeType": "StructuredDocumentation",
              "src": "6050:174:6",
              "text": " @dev Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.\n @notice `operator` cannot be the caller."
            },
            "functionSelector": "a22cb465",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "6238:17:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 345,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6312:8:6"
            },
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6264:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "6256:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6256:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "6279:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "6274:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6274:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6255:33:6"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6325:0:6"
            },
            "scope": 935,
            "src": "6229:346:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1026
            ],
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "6813:61:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 383,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "6830:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 385,
                      "indexExpression": {
                        "id": 384,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "6849:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6830:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 387,
                    "indexExpression": {
                      "id": 386,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "6858:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6830:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 382,
                  "id": 388,
                  "nodeType": "Return",
                  "src": "6823:44:6"
                }
              ]
            },
            "documentation": {
              "id": 373,
              "nodeType": "StructuredDocumentation",
              "src": "6581:94:6",
              "text": " @dev Returns true if `operator` is approved to transfer `account`'s tokens."
            },
            "functionSelector": "e985e9c5",
            "id": 390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "6689:16:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6777:8:6"
            },
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6714:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "6706:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6706:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6731:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "6723:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6723:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6705:35:6"
            },
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "6803:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6803:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6802:6:6"
            },
            "scope": 935,
            "src": "6680:194:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1040
            ],
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "7531:783:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 406,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "7562:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 407,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7570:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7570:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7562:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 411,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 393,
                              "src": "7601:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 412,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7607:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7607:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 410,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "7584:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7584:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7562:56:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7632:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7541:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7541:144:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "7541:144:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 420,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "7703:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7717:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7709:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 421,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7709:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7709:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7703:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7721:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7695:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7695:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "7695:66:6"
                },
                {
                  "assignments": [
                    430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 430,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "7780:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "7772:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 429,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7772:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "expression": {
                      "id": 431,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "7791:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7791:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7772:29:6"
                },
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "7820:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "7812:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7812:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 436,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "7834:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 438,
                      "indexExpression": {
                        "id": 437,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "7844:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7834:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 440,
                    "indexExpression": {
                      "id": 439,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "7848:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7834:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7812:41:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 443,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "7884:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 444,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "7899:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7884:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7919:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7863:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7863:110:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "7863:110:6"
                },
                {
                  "id": 465,
                  "nodeType": "UncheckedBlock",
                  "src": "7983:115:6",
                  "statements": [
                    {
                      "expression": {
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 449,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "8007:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 452,
                            "indexExpression": {
                              "id": 450,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "8017:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8007:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 453,
                          "indexExpression": {
                            "id": 451,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "8021:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8007:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 454,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "8029:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 455,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "8043:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8029:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8007:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 458,
                      "nodeType": "ExpressionStatement",
                      "src": "8007:42:6"
                    },
                    {
                      "expression": {
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 459,
                            "name": "_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "8063:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 461,
                          "indexExpression": {
                            "id": 460,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "8072:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8063:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 462,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "8081:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8063:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 464,
                      "nodeType": "ExpressionStatement",
                      "src": "8063:24:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 466,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "8107:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 469,
                        "indexExpression": {
                          "id": 467,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "8117:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8107:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 470,
                      "indexExpression": {
                        "id": 468,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "8121:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8107:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 471,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "8128:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8107:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "8107:27:6"
                },
                {
                  "expression": {
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 474,
                        "name": "_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "8144:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 476,
                      "indexExpression": {
                        "id": 475,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "8153:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8144:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 477,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "8160:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8144:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "8144:22:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 481,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "8197:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 482,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "8207:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 483,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "8213:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 484,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "8217:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 485,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "8221:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 480,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "8182:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8182:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 487,
                  "nodeType": "EmitStatement",
                  "src": "8177:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 489,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "8270:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 490,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "8280:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 491,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "8286:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 492,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "8290:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 493,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "8294:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 494,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "8302:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 488,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "8239:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8239:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "8239:68:6"
                }
              ]
            },
            "documentation": {
              "id": 391,
              "nodeType": "StructuredDocumentation",
              "src": "6880:485:6",
              "text": " @dev Transfers amount tokens of token type `id` from `from` to `to`.\n @notice May not query the zero address\n @notice If the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.\n @notice `from` must have a balance of tokens of type `id` of at least `amount`.\n @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value."
            },
            "functionSelector": "f242432a",
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "7379:16:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 403,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7522:8:6"
            },
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7413:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7405:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7405:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7435:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7427:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7427:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "7455:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7447:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7447:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7475:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7467:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7467:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7504:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7491:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7491:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7395:119:6"
            },
            "returnParameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7531:0:6"
            },
            "scope": 935,
            "src": "7370:944:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1056
            ],
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "8781:1189:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 516,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "8812:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 517,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8820:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8820:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8812:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 521,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "8851:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 522,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8857:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8857:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 520,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "8834:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8834:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8812:56:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8882:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8791:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8791:153:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "8791:153:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 530,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "8975:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8975:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 532,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "8989:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8989:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8975:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9017:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8954:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8954:115:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "8954:115:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 539,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "9087:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9101:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9093:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 540,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9093:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9093:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9087:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9105:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9079:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9079:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "9079:66:6"
                },
                {
                  "assignments": [
                    549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 549,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9164:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 641,
                      "src": "9156:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 548,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9156:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 552,
                  "initialValue": {
                    "expression": {
                      "id": 550,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "9175:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "9175:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9156:29:6"
                },
                {
                  "body": {
                    "id": 622,
                    "nodeType": "Block",
                    "src": "9237:496:6",
                    "statements": [
                      {
                        "assignments": [
                          565
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 565,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9259:2:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 622,
                            "src": "9251:10:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 564,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9251:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 569,
                        "initialValue": {
                          "baseExpression": {
                            "id": 566,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "9264:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 568,
                          "indexExpression": {
                            "id": 567,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "9268:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9264:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9251:19:6"
                      },
                      {
                        "assignments": [
                          571
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 571,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "9292:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 622,
                            "src": "9284:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 570,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9284:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 575,
                        "initialValue": {
                          "baseExpression": {
                            "id": 572,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "9301:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 574,
                          "indexExpression": {
                            "id": 573,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "9309:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9301:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9284:27:6"
                      },
                      {
                        "assignments": [
                          577
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 577,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "9334:11:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 622,
                            "src": "9326:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 576,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9326:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 583,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 578,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "9348:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 580,
                            "indexExpression": {
                              "id": 579,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "9358:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9348:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 582,
                          "indexExpression": {
                            "id": 581,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "9362:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9348:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9326:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 585,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 577,
                                "src": "9406:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 586,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 571,
                                "src": "9421:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9406:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9445:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 584,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9381:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9381:122:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 590,
                        "nodeType": "ExpressionStatement",
                        "src": "9381:122:6"
                      },
                      {
                        "id": 607,
                        "nodeType": "UncheckedBlock",
                        "src": "9517:127:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 591,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "9545:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 594,
                                  "indexExpression": {
                                    "id": 592,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 565,
                                    "src": "9555:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9545:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 595,
                                "indexExpression": {
                                  "id": 593,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 501,
                                  "src": "9559:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "9545:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 596,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 577,
                                  "src": "9567:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 597,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 571,
                                  "src": "9581:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9567:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9545:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 600,
                            "nodeType": "ExpressionStatement",
                            "src": "9545:42:6"
                          },
                          {
                            "expression": {
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 601,
                                  "name": "_balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "9605:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 603,
                                "indexExpression": {
                                  "id": 602,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 501,
                                  "src": "9614:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "9605:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "id": 604,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 571,
                                "src": "9623:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9605:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 606,
                            "nodeType": "ExpressionStatement",
                            "src": "9605:24:6"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 608,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "9657:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 611,
                              "indexExpression": {
                                "id": 609,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 565,
                                "src": "9667:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9657:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 612,
                            "indexExpression": {
                              "id": 610,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "9671:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9657:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 613,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "9678:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9657:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 615,
                        "nodeType": "ExpressionStatement",
                        "src": "9657:27:6"
                      },
                      {
                        "expression": {
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 616,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "9698:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 618,
                            "indexExpression": {
                              "id": 617,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "9707:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9698:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 619,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "9716:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9698:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "9698:24:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 557,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "9216:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 558,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "9220:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9220:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9216:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 623,
                  "initializationExpression": {
                    "assignments": [
                      554
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 554,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9209:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 623,
                        "src": "9201:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9201:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 556,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9213:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9201:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "9232:3:6",
                      "subExpression": {
                        "id": 561,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "9234:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 563,
                    "nodeType": "ExpressionStatement",
                    "src": "9232:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "9196:537:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 625,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "9762:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 626,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "9772:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 627,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "9778:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 628,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "9782:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 629,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "9787:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 624,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "9748:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9748:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 631,
                  "nodeType": "EmitStatement",
                  "src": "9743:52:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 633,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "9855:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 634,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "9877:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 635,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "9895:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 636,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "9911:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 637,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "9928:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 638,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "9949:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 632,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "9806:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9806:157:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "9806:157:6"
                }
              ]
            },
            "documentation": {
              "id": 499,
              "nodeType": "StructuredDocumentation",
              "src": "8320:270:6",
              "text": " @dev Batched version of safeTransferFrom.\n @notice `ids` and `amounts` must have the same length.\n @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value."
            },
            "functionSelector": "2eb2c2d6",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "8604:21:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 513,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8772:8:6"
            },
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8643:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8635:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8635:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8665:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8657:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8657:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "8694:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8677:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 504,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8677:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 505,
                    "nodeType": "ArrayTypeName",
                    "src": "8677:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "8724:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8707:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 507,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8707:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 508,
                    "nodeType": "ArrayTypeName",
                    "src": "8707:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8754:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8741:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8741:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8625:139:6"
            },
            "returnParameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8781:0:6"
            },
            "scope": 935,
            "src": "8595:1375:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "10431:448:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 657,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "10449:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10468:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10460:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 658,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10460:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10460:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10449:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10472:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10441:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10441:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "10441:67:6"
                },
                {
                  "assignments": [
                    667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 667,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10527:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "10519:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10519:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "expression": {
                      "id": 668,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "10538:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "10538:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10519:29:6"
                },
                {
                  "expression": {
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 671,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "10559:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 674,
                        "indexExpression": {
                          "id": 672,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "10569:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10559:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 675,
                      "indexExpression": {
                        "id": 673,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "10573:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10559:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 676,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "10585:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10559:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "10559:32:6"
                },
                {
                  "expression": {
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 679,
                        "name": "_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "10601:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 681,
                      "indexExpression": {
                        "id": 680,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "10610:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10601:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 682,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "10622:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10601:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "10601:27:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "10658:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10676:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10668:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10668:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10668:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 691,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "10680:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 692,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "10689:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 693,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "10693:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 685,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "10643:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10643:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "EmitStatement",
                  "src": "10638:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 697,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "10755:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10785:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10777:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10777:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10777:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 702,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "10801:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 703,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "10822:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 704,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "10838:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 705,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "10858:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 696,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "10711:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10711:161:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "10711:161:6"
                }
              ]
            },
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "9976:308:6",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n @notice `account` cannot be the zero address.\n @notice If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "functionSelector": "731133e9",
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 654,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 653,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 180,
                  "src": "10412:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "10412:18:6"
              }
            ],
            "name": "mint",
            "nameLocation": "10298:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10320:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "10312:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10312:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10345:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "10337:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10337:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10365:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "10357:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10357:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10394:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "10381:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10381:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10302:102:6"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10431:0:6"
            },
            "scope": 935,
            "src": "10289:590:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "11322:638:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 726,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "11340:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11354:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11346:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 727,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11346:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11346:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11340:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11358:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 725,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11332:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11332:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "11332:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 736,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "11425:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11425:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 738,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "11439:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11439:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11425:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11467:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11404:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11404:115:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "11404:115:6"
                },
                {
                  "assignments": [
                    745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 745,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11538:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 805,
                      "src": "11530:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 744,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11530:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 748,
                  "initialValue": {
                    "expression": {
                      "id": 746,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "11549:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "11549:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11530:29:6"
                },
                {
                  "body": {
                    "id": 780,
                    "nodeType": "Block",
                    "src": "11611:100:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 760,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "11625:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 765,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 761,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 715,
                                  "src": "11635:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 763,
                                "indexExpression": {
                                  "id": 762,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 750,
                                  "src": "11639:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11635:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11625:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 766,
                            "indexExpression": {
                              "id": 764,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 712,
                              "src": "11643:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11625:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 767,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "11650:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 769,
                            "indexExpression": {
                              "id": 768,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 750,
                              "src": "11658:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11650:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11625:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 771,
                        "nodeType": "ExpressionStatement",
                        "src": "11625:35:6"
                      },
                      {
                        "expression": {
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 772,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "11674:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 774,
                            "indexExpression": {
                              "id": 773,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 712,
                              "src": "11683:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11674:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 775,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "11690:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 777,
                            "indexExpression": {
                              "id": 776,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 750,
                              "src": "11698:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11690:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11674:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "11674:26:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 753,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "11590:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 754,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "11594:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11594:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11590:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 781,
                  "initializationExpression": {
                    "assignments": [
                      750
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11583:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 781,
                        "src": "11575:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11575:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 752,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11587:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11575:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11606:3:6",
                      "subExpression": {
                        "id": 757,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "11606:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 759,
                    "nodeType": "ExpressionStatement",
                    "src": "11606:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "11570:141:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 783,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "11740:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11758:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11750:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11750:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11750:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 788,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "11762:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 789,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "11766:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 790,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "11771:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 782,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "11726:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11726:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "EmitStatement",
                  "src": "11721:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 794,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "11839:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11869:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11861:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11861:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11861:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 799,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "11885:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "11901:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 801,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "11918:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 802,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "11939:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 793,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "11790:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11790:163:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "11790:163:6"
                }
              ]
            },
            "documentation": {
              "id": 710,
              "nodeType": "StructuredDocumentation",
              "src": "10885:270:6",
              "text": " @dev Batched version of _mint.\n @notice `ids` and `amounts` must have the same length.\n @notice - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "functionSelector": "1f7fdffa",
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 723,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 722,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 180,
                  "src": "11303:18:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "11303:18:6"
              }
            ],
            "name": "mintBatch",
            "nameLocation": "11169:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11196:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11188:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11188:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11225:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11208:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 713,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11208:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 714,
                    "nodeType": "ArrayTypeName",
                    "src": "11208:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11255:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11238:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 716,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11238:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 717,
                    "nodeType": "ArrayTypeName",
                    "src": "11238:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11285:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11272:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11272:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11178:117:6"
            },
            "returnParameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11322:0:6"
            },
            "scope": 935,
            "src": "11160:800:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "12159:678:6",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 821,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "12173:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1133,
                      "src": "12173:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12173:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 867,
                  "nodeType": "IfStatement",
                  "src": "12169:662:6",
                  "trueBody": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "12190:641:6",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 848,
                              "nodeType": "Block",
                              "src": "12453:184:6",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 841,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 837,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 835,
                                      "src": "12475:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 838,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1098,
                                          "src": "12487:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1098_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 839,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1079,
                                        "src": "12487:34:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12487:43:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12475:55:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 847,
                                  "nodeType": "IfStatement",
                                  "src": "12471:152:6",
                                  "trueBody": {
                                    "id": 846,
                                    "nodeType": "Block",
                                    "src": "12532:91:6",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 843,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12561:42:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 842,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12554:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 844,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12554:50:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 845,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12554:50:6"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 849,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 836,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 835,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "12443:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 849,
                                  "src": "12436:15:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 834,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12436:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12435:17:6"
                            },
                            "src": "12427:210:6"
                          },
                          {
                            "block": {
                              "id": 857,
                              "nodeType": "Block",
                              "src": "12672:47:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 854,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 851,
                                        "src": "12697:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 853,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "12690:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12690:14:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 856,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12690:14:6"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 858,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 852,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 851,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12664:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 858,
                                  "src": "12650:20:6",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 850,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12650:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12649:22:6"
                            },
                            "src": "12638:81:6"
                          },
                          {
                            "block": {
                              "id": 863,
                              "nodeType": "Block",
                              "src": "12726:95:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 860,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12751:54:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 859,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "12744:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12744:62:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 862,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12744:62:6"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 864,
                            "nodeType": "TryCatchClause",
                            "src": "12720:101:6"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 828,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "12284:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 829,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "12314:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 830,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "12340:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 831,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 816,
                              "src": "12364:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 832,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "12392:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 825,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 812,
                                  "src": "12241:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 824,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1098,
                                "src": "12224:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1098_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12224:20:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$1098",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1079,
                            "src": "12224:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12224:190:6",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 865,
                        "nodeType": "TryStatement",
                        "src": "12204:617:6"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "11975:30:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12023:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12015:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12015:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12049:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12041:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12041:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12071:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12063:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12063:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "12091:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12083:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12083:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12111:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12103:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12103:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12140:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12127:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12127:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12005:145:6"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12159:0:6"
            },
            "scope": 935,
            "src": "11966:871:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 933,
              "nodeType": "Block",
              "src": "13061:728:6",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 886,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "13075:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1133,
                      "src": "13075:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13075:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "nodeType": "IfStatement",
                  "src": "13071:712:6",
                  "trueBody": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "13092:691:6",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 913,
                              "nodeType": "Block",
                              "src": "13362:227:6",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 906,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 902,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 900,
                                      "src": "13405:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 903,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1098,
                                          "src": "13417:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1098_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 904,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1097,
                                        "src": "13417:39:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 905,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13417:48:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13405:60:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 912,
                                  "nodeType": "IfStatement",
                                  "src": "13380:195:6",
                                  "trueBody": {
                                    "id": 911,
                                    "nodeType": "Block",
                                    "src": "13484:91:6",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 908,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13513:42:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 907,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13506:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 909,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13506:50:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 910,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13506:50:6"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 914,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 901,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 900,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13352:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 914,
                                  "src": "13345:15:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 899,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13345:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13344:17:6"
                            },
                            "src": "13336:253:6"
                          },
                          {
                            "block": {
                              "id": 922,
                              "nodeType": "Block",
                              "src": "13624:47:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 919,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 916,
                                        "src": "13649:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 918,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13642:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 920,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13642:14:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 921,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13642:14:6"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 923,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 917,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 916,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13616:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 923,
                                  "src": "13602:20:6",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 915,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13602:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13601:22:6"
                            },
                            "src": "13590:81:6"
                          },
                          {
                            "block": {
                              "id": 928,
                              "nodeType": "Block",
                              "src": "13678:95:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 925,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13703:54:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 924,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13696:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13696:62:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 927,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13696:62:6"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 929,
                            "nodeType": "TryCatchClause",
                            "src": "13672:101:6"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 893,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "13191:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 894,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "13221:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 895,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "13247:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 896,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 881,
                              "src": "13272:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 897,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 883,
                              "src": "13301:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 890,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 875,
                                  "src": "13143:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 889,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1098,
                                "src": "13126:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1098_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13126:20:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$1098",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1097,
                            "src": "13126:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13126:197:6",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 930,
                        "nodeType": "TryStatement",
                        "src": "13106:667:6"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 934,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "12852:35:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12905:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "12897:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12897:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12931:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "12923:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12923:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12953:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "12945:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12945:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "12982:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "12965:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 876,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12965:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 877,
                    "nodeType": "ArrayTypeName",
                    "src": "12965:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13012:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "12995:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 879,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12995:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 880,
                    "nodeType": "ArrayTypeName",
                    "src": "12995:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13042:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "13029:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13029:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12887:165:6"
            },
            "returnParameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13061:0:6"
            },
            "scope": 935,
            "src": "12843:946:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 936,
        "src": "660:13131:6",
        "usedErrors": []
      }
    ],
    "src": "33:13759:6"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001e2338038062001e238339810160408190526200003491620001fd565b835162000049906004906020870190620000a0565b5082516200005f906005906020860190620000a0565b50815162000075906003906020850190620000a0565b50600680546001600160a01b0319166001600160a01b03929092169190911790555062000303915050565b828054620000ae90620002b0565b90600052602060002090601f016020900481019282620000d257600085556200011d565b82601f10620000ed57805160ff19168380011785556200011d565b828001600101855582156200011d579182015b828111156200011d57825182559160200191906001019062000100565b506200012b9291506200012f565b5090565b5b808211156200012b576000815560010162000130565b600082601f8301126200015857600080fd5b81516001600160401b0380821115620001755762000175620002ed565b604051601f8301601f19908116603f01168101908282118183101715620001a057620001a0620002ed565b81604052838152602092508683858801011115620001bd57600080fd5b600091505b83821015620001e15785820183015181830184015290820190620001c2565b83821115620001f35760008385830101525b9695505050505050565b600080600080608085870312156200021457600080fd5b84516001600160401b03808211156200022c57600080fd5b6200023a8883890162000146565b955060208701519150808211156200025157600080fd5b6200025f8883890162000146565b945060408701519150808211156200027657600080fd5b50620002858782880162000146565b606087015190935090506001600160a01b0381168114620002a557600080fd5b939692955090935050565b600181811c90821680620002c557607f821691505b60208210811415620002e757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611b1080620003136000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c57806395d89b411161006657806395d89b41146101b2578063a22cb465146101ba578063e985e9c5146101cd578063f242432a146101e057600080fd5b80634e1273f41461016c57806370a082311461018c578063731133e91461019f57600080fd5b8062fdd58e146100d357806301ffc9a7146100f957806306fdde031461011c5780630e89341c146101315780631f7fdffa146101445780632eb2c2d614610159575b600080fd5b6100e66100e13660046113e2565b6101f3565b6040519081526020015b60405180910390f35b61010c610107366004611538565b61024c565b60405190151581526020016100f0565b61012461029e565b6040516100f091906116f7565b61012461013f366004611572565b61032c565b610157610152366004611314565b6103c0565b005b6101576101673660046111fd565b61061d565b61017f61017a366004611465565b61087c565b6040516100f091906116b6565b6100e661019a366004611183565b6109a6565b6101576101ad36600461140e565b6109ea565b610124610b87565b6101576101c83660046113af565b610b94565b61010c6101db3660046111c4565b610c6b565b6101576101ee3660046112ab565b610c99565b60006001600160a01b0383166102245760405162461bcd60e51b815260040161021b90611752565b60405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061027d57506001600160e01b031982166303a24d0760e21b145b8061029857506301ffc9a760e01b6001600160e01b03198316145b92915050565b600480546102ab90611941565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611941565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b505050505081565b60606003805461033b90611941565b80601f016020809104026020016040519081016040528092919081815260200182805461036790611941565b80156103b45780601f10610389576101008083540402835291602001916103b4565b820191906000526020600020905b81548152906001019060200180831161039757829003601f168201915b50505050509050919050565b600660009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561040e57600080fd5b505afa158015610422573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044691906111a7565b6001600160a01b0316336001600160a01b0316146104765760405162461bcd60e51b815260040161021b9061182c565b6001600160a01b03841661049c5760405162461bcd60e51b815260040161021b906118c4565b81518351146104bd5760405162461bcd60e51b815260040161021b9061187c565b3360005b84518110156105ae578381815181106104dc576104dc6119da565b6020026020010151600160008784815181106104fa576104fa6119da565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105429190611929565b9250508190555083818151811061055b5761055b6119da565b6020026020010151600080886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105969190611929565b909155508190506105a6816119a9565b9150506104c1565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516105ff9291906116c9565b60405180910390a461061681600087878787610e63565b5050505050565b6001600160a01b03851633148061063957506106398533610c6b565b6106a05760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161021b565b81518351146106c15760405162461bcd60e51b815260040161021b9061187c565b6001600160a01b0384166106e75760405162461bcd60e51b815260040161021b9061179d565b3360005b845181101561080e576000858281518110610708576107086119da565b602002602001015190506000858381518110610726576107266119da565b60209081029190910181015160008481526001835260408082206001600160a01b038e1683529093529190912054909150818110156107775760405162461bcd60e51b815260040161021b906117e2565b60008381526001602090815260408083206001600160a01b03808f1685528184528285208787039055848452828520805488900390558d168452909152812080548492906107c6908490611929565b90915550506001600160a01b038a16600090815260208190526040812080548492906107f3908490611929565b9250508190555050505080610807906119a9565b90506106eb565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161085e9291906116c9565b60405180910390a4610874818787878787610e63565b505050505050565b606081518351146108e15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161021b565b6000835167ffffffffffffffff8111156108fd576108fd6119f0565b604051908082528060200260200182016040528015610926578160200160208202803683370190505b50905060005b845181101561099e5761097185828151811061094a5761094a6119da565b6020026020010151858381518110610964576109646119da565b60200260200101516101f3565b828281518110610983576109836119da565b6020908102919091010152610997816119a9565b905061092c565b509392505050565b60006001600160a01b0382166109ce5760405162461bcd60e51b815260040161021b90611752565b506001600160a01b031660009081526020819052604090205490565b600660009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7091906111a7565b6001600160a01b0316336001600160a01b031614610aa05760405162461bcd60e51b815260040161021b9061182c565b6001600160a01b038416610ac65760405162461bcd60e51b815260040161021b906118c4565b60008381526001602090815260408083206001600160a01b0388168452909152812080543392859291610afa908490611929565b90915550506001600160a01b03851660009081526020819052604081208054859290610b27908490611929565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461061681600087878787610fce565b600580546102ab90611941565b336001600160a01b0383161415610bff5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161021b565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038516331480610cb55750610cb58533610c6b565b610d135760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161021b565b6001600160a01b038416610d395760405162461bcd60e51b815260040161021b9061179d565b60008381526001602090815260408083206001600160a01b0389168452909152902054339083811015610d7e5760405162461bcd60e51b815260040161021b906117e2565b60008581526001602090815260408083206001600160a01b03808c168552818452828520898703905584845282852080548a900390558a16845290915281208054869290610dcd908490611929565b90915550506001600160a01b03861660009081526020819052604081208054869290610dfa908490611929565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e5a828888888888610fce565b50505050505050565b6001600160a01b0384163b156108745760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ea79089908990889088908890600401611613565b602060405180830381600087803b158015610ec157600080fd5b505af1925050508015610ef1575060408051601f3d908101601f19168201909252610eee91810190611555565b60015b610f9e57610efd611a06565b806308c379a01415610f375750610f12611a22565b80610f1d5750610f39565b8060405162461bcd60e51b815260040161021b91906116f7565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161021b565b6001600160e01b0319811663bc197c8160e01b14610e5a5760405162461bcd60e51b815260040161021b9061170a565b6001600160a01b0384163b156108745760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906110129089908990889088908890600401611671565b602060405180830381600087803b15801561102c57600080fd5b505af192505050801561105c575060408051601f3d908101601f1916820190925261105991810190611555565b60015b61106857610efd611a06565b6001600160e01b0319811663f23a6e6160e01b14610e5a5760405162461bcd60e51b815260040161021b9061170a565b600082601f8301126110a957600080fd5b813560206110b682611905565b6040516110c3828261197c565b8381528281019150858301600585901b870184018810156110e357600080fd5b60005b85811015611102578135845292840192908401906001016110e6565b5090979650505050505050565b600082601f83011261112057600080fd5b813567ffffffffffffffff81111561113a5761113a6119f0565b604051611151601f8301601f19166020018261197c565b81815284602083860101111561116657600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561119557600080fd5b81356111a081611aac565b9392505050565b6000602082840312156111b957600080fd5b81516111a081611aac565b600080604083850312156111d757600080fd5b82356111e281611aac565b915060208301356111f281611aac565b809150509250929050565b600080600080600060a0868803121561121557600080fd5b853561122081611aac565b9450602086013561123081611aac565b9350604086013567ffffffffffffffff8082111561124d57600080fd5b61125989838a01611098565b9450606088013591508082111561126f57600080fd5b61127b89838a01611098565b9350608088013591508082111561129157600080fd5b5061129e8882890161110f565b9150509295509295909350565b600080600080600060a086880312156112c357600080fd5b85356112ce81611aac565b945060208601356112de81611aac565b93506040860135925060608601359150608086013567ffffffffffffffff81111561130857600080fd5b61129e8882890161110f565b6000806000806080858703121561132a57600080fd5b843561133581611aac565b9350602085013567ffffffffffffffff8082111561135257600080fd5b61135e88838901611098565b9450604087013591508082111561137457600080fd5b61138088838901611098565b9350606087013591508082111561139657600080fd5b506113a38782880161110f565b91505092959194509250565b600080604083850312156113c257600080fd5b82356113cd81611aac565b9150602083013580151581146111f257600080fd5b600080604083850312156113f557600080fd5b823561140081611aac565b946020939093013593505050565b6000806000806080858703121561142457600080fd5b843561142f81611aac565b93506020850135925060408501359150606085013567ffffffffffffffff81111561145957600080fd5b6113a38782880161110f565b6000806040838503121561147857600080fd5b823567ffffffffffffffff8082111561149057600080fd5b818501915085601f8301126114a457600080fd5b813560206114b182611905565b6040516114be828261197c565b8381528281019150858301600585901b870184018b10156114de57600080fd5b600096505b8487101561150a5780356114f681611aac565b8352600196909601959183019183016114e3565b509650508601359250508082111561152157600080fd5b5061152e85828601611098565b9150509250929050565b60006020828403121561154a57600080fd5b81356111a081611ac4565b60006020828403121561156757600080fd5b81516111a081611ac4565b60006020828403121561158457600080fd5b5035919050565b600081518084526020808501945080840160005b838110156115bb5781518752958201959082019060010161159f565b509495945050505050565b6000815180845260005b818110156115ec576020818501810151868301820152016115d0565b818111156115fe576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061163f9083018661158b565b8281036060840152611651818661158b565b9050828103608084015261166581856115c6565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906116ab908301846115c6565b979650505050505050565b6020815260006111a0602083018461158b565b6040815260006116dc604083018561158b565b82810360208401526116ee818561158b565b95945050505050565b6020815260006111a060208301846115c6565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526030908201527f4f6e6c7920746865206f7261636c65206f70657261746f72206d61792070657260408201526f3337b936903a3434b99030b1ba34b7b760811b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b600067ffffffffffffffff82111561191f5761191f6119f0565b5060051b60200190565b6000821982111561193c5761193c6119c4565b500190565b600181811c9082168061195557607f821691505b6020821081141561197657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156119a2576119a26119f0565b6040525050565b60006000198214156119bd576119bd6119c4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611a1f5760046000803e5060005160e01c5b90565b600060443d1015611a305790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611a6057505050505090565b8285019150815181811115611a785750505050505090565b843d8701016020828501011115611a925750505050505090565b611aa16020828601018761197c565b509095945050505050565b6001600160a01b0381168114611ac157600080fd5b50565b6001600160e01b031981168114611ac157600080fdfea2646970667358221220f81004d9b9f8c0c6ed6911e6d6cac7b76ae31a586d2e8f45d20034c3fb8e06d364736f6c63430008060033",
  "bytecodeSha1": "d5d3be7b18c7842dac49620df303e9af26c46967",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "Loot",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Loot._doSafeBatchTransferAcceptanceCheck": {
          "69": [
            13405,
            13465,
            false
          ]
        },
        "Loot._doSafeTransferAcceptanceCheck": {
          "70": [
            12475,
            12530,
            false
          ]
        },
        "Loot.balanceOf": {
          "52": [
            5272,
            5293,
            true
          ],
          "61": [
            4839,
            4860,
            true
          ]
        },
        "Loot.balanceOfBatch": {
          "60": [
            5706,
            5735,
            true
          ]
        },
        "Loot.mint": {
          "62": [
            3903,
            3937,
            true
          ],
          "63": [
            10449,
            10470,
            true
          ]
        },
        "Loot.mintBatch": {
          "53": [
            11340,
            11356,
            true
          ],
          "54": [
            11425,
            11453,
            true
          ]
        },
        "Loot.safeBatchTransferFrom": {
          "55": [
            8812,
            8830,
            true
          ],
          "56": [
            8834,
            8868,
            true
          ],
          "57": [
            8975,
            9003,
            true
          ],
          "58": [
            9087,
            9103,
            true
          ],
          "59": [
            9406,
            9427,
            true
          ]
        },
        "Loot.safeTransferFrom": {
          "65": [
            7562,
            7580,
            true
          ],
          "66": [
            7584,
            7618,
            true
          ],
          "67": [
            7703,
            7719,
            true
          ],
          "68": [
            7884,
            7905,
            true
          ]
        },
        "Loot.setApprovalForAll": {
          "64": [
            6356,
            6378,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {
        "Address.isContract": {
          "47": [
            1073,
            1088
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "3": [
            864,
            911
          ]
        }
      },
      "5": {},
      "6": {
        "Loot._doSafeBatchTransferAcceptanceCheck": {
          "48": [
            13642,
            13656
          ],
          "49": [
            13696,
            13758
          ],
          "50": [
            13506,
            13556
          ]
        },
        "Loot._doSafeTransferAcceptanceCheck": {
          "51": [
            12554,
            12604
          ]
        },
        "Loot.balanceOf": {
          "0": [
            5251,
            5362
          ],
          "1": [
            5372,
            5401
          ],
          "27": [
            4818,
            4929
          ],
          "28": [
            4939,
            4963
          ]
        },
        "Loot.balanceOfBatch": {
          "23": [
            5685,
            5802
          ],
          "24": [
            5947,
            5996
          ],
          "25": [
            5928,
            5931
          ],
          "26": [
            6017,
            6037
          ]
        },
        "Loot.isApprovedForAll": {
          "37": [
            6823,
            6867
          ]
        },
        "Loot.mint": {
          "29": [
            10441,
            10508
          ],
          "30": [
            10559,
            10591
          ],
          "31": [
            10601,
            10628
          ],
          "32": [
            10638,
            10700
          ],
          "33": [
            10711,
            10872
          ]
        },
        "Loot.mintBatch": {
          "5": [
            11332,
            11394
          ],
          "6": [
            11404,
            11519
          ],
          "7": [
            11625,
            11660
          ],
          "8": [
            11674,
            11700
          ],
          "9": [
            11606,
            11609
          ],
          "10": [
            11721,
            11779
          ],
          "11": [
            11790,
            11953
          ]
        },
        "Loot.safeBatchTransferFrom": {
          "12": [
            8791,
            8944
          ],
          "13": [
            8954,
            9069
          ],
          "14": [
            9079,
            9145
          ],
          "15": [
            9381,
            9503
          ],
          "16": [
            9545,
            9587
          ],
          "17": [
            9605,
            9629
          ],
          "18": [
            9657,
            9684
          ],
          "19": [
            9698,
            9722
          ],
          "20": [
            9232,
            9235
          ],
          "21": [
            9743,
            9795
          ],
          "22": [
            9806,
            9963
          ]
        },
        "Loot.safeTransferFrom": {
          "38": [
            7541,
            7685
          ],
          "39": [
            7695,
            7761
          ],
          "40": [
            7863,
            7973
          ],
          "41": [
            8007,
            8049
          ],
          "42": [
            8063,
            8087
          ],
          "43": [
            8107,
            8134
          ],
          "44": [
            8144,
            8166
          ],
          "45": [
            8177,
            8228
          ],
          "46": [
            8239,
            8307
          ]
        },
        "Loot.setApprovalForAll": {
          "34": [
            6335,
            6445
          ],
          "35": [
            6456,
            6507
          ],
          "36": [
            6517,
            6568
          ]
        },
        "Loot.supportsInterface": {
          "2": [
            4242,
            4422
          ]
        },
        "Loot.uri": {
          "4": [
            4577,
            4588
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.1/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC165",
    "IOracle"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c57806395d89b411161006657806395d89b41146101b2578063a22cb465146101ba578063e985e9c5146101cd578063f242432a146101e057600080fd5b80634e1273f41461016c57806370a082311461018c578063731133e91461019f57600080fd5b8062fdd58e146100d357806301ffc9a7146100f957806306fdde031461011c5780630e89341c146101315780631f7fdffa146101445780632eb2c2d614610159575b600080fd5b6100e66100e13660046113e2565b6101f3565b6040519081526020015b60405180910390f35b61010c610107366004611538565b61024c565b60405190151581526020016100f0565b61012461029e565b6040516100f091906116f7565b61012461013f366004611572565b61032c565b610157610152366004611314565b6103c0565b005b6101576101673660046111fd565b61061d565b61017f61017a366004611465565b61087c565b6040516100f091906116b6565b6100e661019a366004611183565b6109a6565b6101576101ad36600461140e565b6109ea565b610124610b87565b6101576101c83660046113af565b610b94565b61010c6101db3660046111c4565b610c6b565b6101576101ee3660046112ab565b610c99565b60006001600160a01b0383166102245760405162461bcd60e51b815260040161021b90611752565b60405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061027d57506001600160e01b031982166303a24d0760e21b145b8061029857506301ffc9a760e01b6001600160e01b03198316145b92915050565b600480546102ab90611941565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611941565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b505050505081565b60606003805461033b90611941565b80601f016020809104026020016040519081016040528092919081815260200182805461036790611941565b80156103b45780601f10610389576101008083540402835291602001916103b4565b820191906000526020600020905b81548152906001019060200180831161039757829003601f168201915b50505050509050919050565b600660009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561040e57600080fd5b505afa158015610422573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044691906111a7565b6001600160a01b0316336001600160a01b0316146104765760405162461bcd60e51b815260040161021b9061182c565b6001600160a01b03841661049c5760405162461bcd60e51b815260040161021b906118c4565b81518351146104bd5760405162461bcd60e51b815260040161021b9061187c565b3360005b84518110156105ae578381815181106104dc576104dc6119da565b6020026020010151600160008784815181106104fa576104fa6119da565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105429190611929565b9250508190555083818151811061055b5761055b6119da565b6020026020010151600080886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105969190611929565b909155508190506105a6816119a9565b9150506104c1565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516105ff9291906116c9565b60405180910390a461061681600087878787610e63565b5050505050565b6001600160a01b03851633148061063957506106398533610c6b565b6106a05760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161021b565b81518351146106c15760405162461bcd60e51b815260040161021b9061187c565b6001600160a01b0384166106e75760405162461bcd60e51b815260040161021b9061179d565b3360005b845181101561080e576000858281518110610708576107086119da565b602002602001015190506000858381518110610726576107266119da565b60209081029190910181015160008481526001835260408082206001600160a01b038e1683529093529190912054909150818110156107775760405162461bcd60e51b815260040161021b906117e2565b60008381526001602090815260408083206001600160a01b03808f1685528184528285208787039055848452828520805488900390558d168452909152812080548492906107c6908490611929565b90915550506001600160a01b038a16600090815260208190526040812080548492906107f3908490611929565b9250508190555050505080610807906119a9565b90506106eb565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161085e9291906116c9565b60405180910390a4610874818787878787610e63565b505050505050565b606081518351146108e15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161021b565b6000835167ffffffffffffffff8111156108fd576108fd6119f0565b604051908082528060200260200182016040528015610926578160200160208202803683370190505b50905060005b845181101561099e5761097185828151811061094a5761094a6119da565b6020026020010151858381518110610964576109646119da565b60200260200101516101f3565b828281518110610983576109836119da565b6020908102919091010152610997816119a9565b905061092c565b509392505050565b60006001600160a01b0382166109ce5760405162461bcd60e51b815260040161021b90611752565b506001600160a01b031660009081526020819052604090205490565b600660009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7091906111a7565b6001600160a01b0316336001600160a01b031614610aa05760405162461bcd60e51b815260040161021b9061182c565b6001600160a01b038416610ac65760405162461bcd60e51b815260040161021b906118c4565b60008381526001602090815260408083206001600160a01b0388168452909152812080543392859291610afa908490611929565b90915550506001600160a01b03851660009081526020819052604081208054859290610b27908490611929565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461061681600087878787610fce565b600580546102ab90611941565b336001600160a01b0383161415610bff5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161021b565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038516331480610cb55750610cb58533610c6b565b610d135760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161021b565b6001600160a01b038416610d395760405162461bcd60e51b815260040161021b9061179d565b60008381526001602090815260408083206001600160a01b0389168452909152902054339083811015610d7e5760405162461bcd60e51b815260040161021b906117e2565b60008581526001602090815260408083206001600160a01b03808c168552818452828520898703905584845282852080548a900390558a16845290915281208054869290610dcd908490611929565b90915550506001600160a01b03861660009081526020819052604081208054869290610dfa908490611929565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e5a828888888888610fce565b50505050505050565b6001600160a01b0384163b156108745760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ea79089908990889088908890600401611613565b602060405180830381600087803b158015610ec157600080fd5b505af1925050508015610ef1575060408051601f3d908101601f19168201909252610eee91810190611555565b60015b610f9e57610efd611a06565b806308c379a01415610f375750610f12611a22565b80610f1d5750610f39565b8060405162461bcd60e51b815260040161021b91906116f7565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161021b565b6001600160e01b0319811663bc197c8160e01b14610e5a5760405162461bcd60e51b815260040161021b9061170a565b6001600160a01b0384163b156108745760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906110129089908990889088908890600401611671565b602060405180830381600087803b15801561102c57600080fd5b505af192505050801561105c575060408051601f3d908101601f1916820190925261105991810190611555565b60015b61106857610efd611a06565b6001600160e01b0319811663f23a6e6160e01b14610e5a5760405162461bcd60e51b815260040161021b9061170a565b600082601f8301126110a957600080fd5b813560206110b682611905565b6040516110c3828261197c565b8381528281019150858301600585901b870184018810156110e357600080fd5b60005b85811015611102578135845292840192908401906001016110e6565b5090979650505050505050565b600082601f83011261112057600080fd5b813567ffffffffffffffff81111561113a5761113a6119f0565b604051611151601f8301601f19166020018261197c565b81815284602083860101111561116657600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561119557600080fd5b81356111a081611aac565b9392505050565b6000602082840312156111b957600080fd5b81516111a081611aac565b600080604083850312156111d757600080fd5b82356111e281611aac565b915060208301356111f281611aac565b809150509250929050565b600080600080600060a0868803121561121557600080fd5b853561122081611aac565b9450602086013561123081611aac565b9350604086013567ffffffffffffffff8082111561124d57600080fd5b61125989838a01611098565b9450606088013591508082111561126f57600080fd5b61127b89838a01611098565b9350608088013591508082111561129157600080fd5b5061129e8882890161110f565b9150509295509295909350565b600080600080600060a086880312156112c357600080fd5b85356112ce81611aac565b945060208601356112de81611aac565b93506040860135925060608601359150608086013567ffffffffffffffff81111561130857600080fd5b61129e8882890161110f565b6000806000806080858703121561132a57600080fd5b843561133581611aac565b9350602085013567ffffffffffffffff8082111561135257600080fd5b61135e88838901611098565b9450604087013591508082111561137457600080fd5b61138088838901611098565b9350606087013591508082111561139657600080fd5b506113a38782880161110f565b91505092959194509250565b600080604083850312156113c257600080fd5b82356113cd81611aac565b9150602083013580151581146111f257600080fd5b600080604083850312156113f557600080fd5b823561140081611aac565b946020939093013593505050565b6000806000806080858703121561142457600080fd5b843561142f81611aac565b93506020850135925060408501359150606085013567ffffffffffffffff81111561145957600080fd5b6113a38782880161110f565b6000806040838503121561147857600080fd5b823567ffffffffffffffff8082111561149057600080fd5b818501915085601f8301126114a457600080fd5b813560206114b182611905565b6040516114be828261197c565b8381528281019150858301600585901b870184018b10156114de57600080fd5b600096505b8487101561150a5780356114f681611aac565b8352600196909601959183019183016114e3565b509650508601359250508082111561152157600080fd5b5061152e85828601611098565b9150509250929050565b60006020828403121561154a57600080fd5b81356111a081611ac4565b60006020828403121561156757600080fd5b81516111a081611ac4565b60006020828403121561158457600080fd5b5035919050565b600081518084526020808501945080840160005b838110156115bb5781518752958201959082019060010161159f565b509495945050505050565b6000815180845260005b818110156115ec576020818501810151868301820152016115d0565b818111156115fe576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061163f9083018661158b565b8281036060840152611651818661158b565b9050828103608084015261166581856115c6565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906116ab908301846115c6565b979650505050505050565b6020815260006111a0602083018461158b565b6040815260006116dc604083018561158b565b82810360208401526116ee818561158b565b95945050505050565b6020815260006111a060208301846115c6565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526030908201527f4f6e6c7920746865206f7261636c65206f70657261746f72206d61792070657260408201526f3337b936903a3434b99030b1ba34b7b760811b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b600067ffffffffffffffff82111561191f5761191f6119f0565b5060051b60200190565b6000821982111561193c5761193c6119c4565b500190565b600181811c9082168061195557607f821691505b6020821081141561197657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156119a2576119a26119f0565b6040525050565b60006000198214156119bd576119bd6119c4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611a1f5760046000803e5060005160e01c5b90565b600060443d1015611a305790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611a6057505050505090565b8285019150815181811115611a785750505050505090565b843d8701016020828501011115611a925750505050505090565b611aa16020828601018761197c565b509095945050505050565b6001600160a01b0381168114611ac157600080fd5b50565b6001600160e01b031981168114611ac157600080fdfea2646970667358221220f81004d9b9f8c0c6ed6911e6d6cac7b76ae31a586d2e8f45d20034c3fb8e06d364736f6c63430008060033",
  "deployedSourceMap": "660:13131:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5118:290;;;;;;:::i;:::-;;:::i;:::-;;;16830:25:8;;;16818:2;16803:18;5118:290:6;;;;;;;;4096:333;;;;;;:::i;:::-;;:::i;:::-;;;11497:14:8;;11490:22;11472:41;;11460:2;11445:18;4096:333:6;11427:92:8;1267:18:6;;;:::i;:::-;;;;;;;:::i;4500:95::-;;;;;;:::i;:::-;;:::i;11160:800::-;;;;;;:::i;:::-;;:::i;:::-;;8595:1375;;;;;;:::i;:::-;;:::i;5518:526::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4714:256::-;;;;;;:::i;:::-;;:::i;10289:590::-;;;;;;:::i;:::-;;:::i;1339:20::-;;;:::i;6229:346::-;;;;;;:::i;:::-;;:::i;6680:194::-;;;;;;:::i;:::-;;:::i;7370:944::-;;;;;;:::i;:::-;;:::i;5118:290::-;5228:7;-1:-1:-1;;;;;5272:21:6;;5251:111;;;;-1:-1:-1;;;5251:111:6;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;5379:13:6;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5379:22:6;;;;;;;;;;;;5118:290::o;4096:333::-;4222:4;-1:-1:-1;;;;;;4261:41:6;;-1:-1:-1;;;4261:41:6;;:109;;-1:-1:-1;;;;;;;4318:52:6;;-1:-1:-1;;;4318:52:6;4261:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:4;;;4386:36:6;4242:180;4096:333;-1:-1:-1;;4096:333:6:o;1267:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4500:95::-;4552:13;4584:4;4577:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:95;;;:::o;11160:800::-;3917:6;;;;;;;;;-1:-1:-1;;;;;3917:6:6;-1:-1:-1;;;;;3917:18:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3903:34:6;:10;-1:-1:-1;;;;;3903:34:6;;3882:129;;;;-1:-1:-1;;;3882:129:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;11340:16:6;::::1;11332:62;;;;-1:-1:-1::0;;;11332:62:6::1;;;;;;;:::i;:::-;11439:7;:14;11425:3;:10;:28;11404:115;;;;-1:-1:-1::0;;;11404:115:6::1;;;;;;;:::i;:::-;11549:10;11530:16;11570:141;11594:3;:10;11590:1;:14;11570:141;;;11650:7;11658:1;11650:10;;;;;;;;:::i;:::-;;;;;;;11625:9;:17;11635:3;11639:1;11635:6;;;;;;;;:::i;:::-;;;;;;;11625:17;;;;;;;;;;;:21;11643:2;-1:-1:-1::0;;;;;11625:21:6::1;-1:-1:-1::0;;;;;11625:21:6::1;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;11690:7;11698:1;11690:10;;;;;;;;:::i;:::-;;;;;;;11674:8;:12:::0;11683:2:::1;-1:-1:-1::0;;;;;11674:12:6::1;-1:-1:-1::0;;;;;11674:12:6::1;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;11606:3:6;;-1:-1:-1;11606:3:6::1;::::0;::::1;:::i;:::-;;;;11570:141;;;;11762:2;-1:-1:-1::0;;;;;11726:53:6::1;11758:1;-1:-1:-1::0;;;;;11726:53:6::1;11740:8;-1:-1:-1::0;;;;;11726:53:6::1;;11766:3;11771:7;11726:53;;;;;;;:::i;:::-;;;;;;;;11790:163;11839:8;11869:1;11885:2;11901:3;11918:7;11939:4;11790:35;:163::i;:::-;11322:638;11160:800:::0;;;;:::o;8595:1375::-;-1:-1:-1;;;;;8812:18:6;;8820:10;8812:18;;:56;;;8834:34;8851:4;8857:10;8834:16;:34::i;:::-;8791:153;;;;-1:-1:-1;;;8791:153:6;;14008:2:8;8791:153:6;;;13990:21:8;14047:2;14027:18;;;14020:30;14086:34;14066:18;;;14059:62;-1:-1:-1;;;14137:18:8;;;14130:48;14195:19;;8791:153:6;13980:240:8;8791:153:6;8989:7;:14;8975:3;:10;:28;8954:115;;;;-1:-1:-1;;;8954:115:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;9087:16:6;;9079:66;;;;-1:-1:-1;;;9079:66:6;;;;;;;:::i;:::-;9175:10;9156:16;9196:537;9220:3;:10;9216:1;:14;9196:537;;;9251:10;9264:3;9268:1;9264:6;;;;;;;;:::i;:::-;;;;;;;9251:19;;9284:14;9301:7;9309:1;9301:10;;;;;;;;:::i;:::-;;;;;;;;;;;;9326:19;9348:13;;;:9;:13;;;;;;-1:-1:-1;;;;;9348:19:6;;;;;;;;;;;;9301:10;;-1:-1:-1;9406:21:6;;;;9381:122;;;;-1:-1:-1;;;9381:122:6;;;;;;;:::i;:::-;9545:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9545:19:6;;;;;;;;;;;9567:20;;;9545:42;;9605:14;;;;;;:24;;;;;;;9657:17;;;;;;;;;:27;;9581:6;;9545:13;9657:27;;9581:6;;9657:27;:::i;:::-;;;;-1:-1:-1;;;;;;;9698:14:6;;:8;:14;;;;;;;;;;:24;;9716:6;;9698:8;:24;;9716:6;;9698:24;:::i;:::-;;;;;;;;9237:496;;;9232:3;;;;:::i;:::-;;;9196:537;;;;9778:2;-1:-1:-1;;;;;9748:47:6;9772:4;-1:-1:-1;;;;;9748:47:6;9762:8;-1:-1:-1;;;;;9748:47:6;;9782:3;9787:7;9748:47;;;;;;;:::i;:::-;;;;;;;;9806:157;9855:8;9877:4;9895:2;9911:3;9928:7;9949:4;9806:35;:157::i;:::-;8781:1189;8595:1375;;;;;:::o;5518:526::-;5653:16;5725:3;:10;5706:8;:15;:29;5685:117;;;;-1:-1:-1;;;5685:117:6;;15665:2:8;5685:117:6;;;15647:21:8;15704:2;15684:18;;;15677:30;15743:34;15723:18;;;15716:62;-1:-1:-1;;;15794:18:8;;;15787:39;15843:19;;5685:117:6;15637:231:8;5685:117:6;5813:30;5860:8;:15;5846:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5846:30:6;;5813:63;;5892:9;5887:120;5911:8;:15;5907:1;:19;5887:120;;;5966:30;5976:8;5985:1;5976:11;;;;;;;;:::i;:::-;;;;;;;5989:3;5993:1;5989:6;;;;;;;;:::i;:::-;;;;;;;5966:9;:30::i;:::-;5947:13;5961:1;5947:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;5928:3;;;:::i;:::-;;;5887:120;;;-1:-1:-1;6024:13:6;5518:526;-1:-1:-1;;;5518:526:6:o;4714:256::-;4795:7;-1:-1:-1;;;;;4839:21:6;;4818:111;;;;-1:-1:-1;;;4818:111:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4946:17:6;:8;:17;;;;;;;;;;;;4714:256::o;10289:590::-;3917:6;;;;;;;;;-1:-1:-1;;;;;3917:6:6;-1:-1:-1;;;;;3917:18:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3903:34:6;:10;-1:-1:-1;;;;;3903:34:6;;3882:129;;;;-1:-1:-1;;;3882:129:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;10449:21:6;::::1;10441:67;;;;-1:-1:-1::0;;;10441:67:6::1;;;;;;;:::i;:::-;10519:16;10559:13:::0;;;:9:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;10559:22:6;::::1;::::0;;;;;;;:32;;10538:10:::1;::::0;10585:6;;10559:22;:32:::1;::::0;10585:6;;10559:32:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;10601:17:6;::::1;:8;:17:::0;;;::::1;::::0;;;;;;:27;;10622:6;;10601:8;:27:::1;::::0;10622:6;;10601:27:::1;:::i;:::-;::::0;;;-1:-1:-1;;10643:57:6::1;::::0;;17040:25:8;;;17096:2;17081:18;;17074:34;;;-1:-1:-1;;;;;10643:57:6;;::::1;::::0;10676:1:::1;::::0;10643:57;;::::1;::::0;::::1;::::0;17013:18:8;10643:57:6::1;;;;;;;10711:161;10755:8;10785:1;10801:7;10822:2;10838:6;10858:4;10711:30;:161::i;1339:20::-:0;;;;;;;:::i;6229:346::-;6356:10;-1:-1:-1;;;;;6356:22:6;;;;6335:110;;;;-1:-1:-1;;;6335:110:6;;15255:2:8;6335:110:6;;;15237:21:8;15294:2;15274:18;;;15267:30;15333:34;15313:18;;;15306:62;-1:-1:-1;;;15384:18:8;;;15377:39;15433:19;;6335:110:6;15227:231:8;6335:110:6;6475:10;6456:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;6456:40:6;;;;;;;;;;;;:51;;-1:-1:-1;;6456:51:6;;;;;;;;;;6522:46;;11472:41:8;;;6456:40:6;;6475:10;6522:46;;11445:18:8;6522:46:6;;;;;;;6229:346;;:::o;6680:194::-;-1:-1:-1;;;;;6830:27:6;;;6803:4;6830:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;6680:194::o;7370:944::-;-1:-1:-1;;;;;7562:18:6;;7570:10;7562:18;;:56;;;7584:34;7601:4;7607:10;7584:16;:34::i;:::-;7541:144;;;;-1:-1:-1;;;7541:144:6;;13192:2:8;7541:144:6;;;13174:21:8;13231:2;13211:18;;;13204:30;13270:34;13250:18;;;13243:62;-1:-1:-1;;;13321:18:8;;;13314:39;13370:19;;7541:144:6;13164:231:8;7541:144:6;-1:-1:-1;;;;;7703:16:6;;7695:66;;;;-1:-1:-1;;;7695:66:6;;;;;;;:::i;:::-;7772:16;7834:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7834:19:6;;;;;;;;;;7791:10;;7884:21;;;;7863:110;;;;-1:-1:-1;;;7863:110:6;;;;;;;:::i;:::-;8007:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8007:19:6;;;;;;;;;;;8029:20;;;8007:42;;8063:14;;;;;;:24;;;;;;;8107:17;;;;;;;;;:27;;8043:6;;8007:13;8107:27;;8043:6;;8107:27;:::i;:::-;;;;-1:-1:-1;;;;;;;8144:12:6;;:8;:12;;;;;;;;;;:22;;8160:6;;8144:8;:22;;8160:6;;8144:22;:::i;:::-;;;;-1:-1:-1;;8182:46:6;;;17040:25:8;;;17096:2;17081:18;;17074:34;;;-1:-1:-1;;;;;8182:46:6;;;;;;;;;;;;;;17013:18:8;8182:46:6;;;;;;;8239:68;8270:8;8280:4;8286:2;8290;8294:6;8302:4;8239:30;:68::i;:::-;7531:783;;7370:944;;;;;:::o;12843:946::-;-1:-1:-1;;;;;13075:13:6;;1034:20:3;1080:8;13071:712:6;;13126:197;;-1:-1:-1;;;13126:197:6;;-1:-1:-1;;;;;13126:43:6;;;;;:197;;13191:8;;13221:4;;13247:3;;13272:7;;13301:4;;13126:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13126:197:6;;;;;;;;-1:-1:-1;;13126:197:6;;;;;;;;;;;;:::i;:::-;;;13106:667;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;13649:6;13642:14;;-1:-1:-1;;;13642:14:6;;;;;;;;:::i;13106:667::-;;;13696:62;;-1:-1:-1;;;13696:62:6;;11950:2:8;13696:62:6;;;11932:21:8;11989:2;11969:18;;;11962:30;12028:34;12008:18;;;12001:62;-1:-1:-1;;;12079:18:8;;;12072:50;12139:19;;13696:62:6;11922:242:8;13106:667:6;-1:-1:-1;;;;;;13405:60:6;;-1:-1:-1;;;13405:60:6;13380:195;;13506:50;;-1:-1:-1;;;13506:50:6;;;;;;;:::i;11966:871::-;-1:-1:-1;;;;;12173:13:6;;1034:20:3;1080:8;12169:662:6;;12224:190;;-1:-1:-1;;;12224:190:6;;-1:-1:-1;;;;;12224:38:6;;;;;:190;;12284:8;;12314:4;;12340:2;;12364:6;;12392:4;;12224:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12224:190:6;;;;;;;;-1:-1:-1;;12224:190:6;;;;;;;;;;;;:::i;:::-;;;12204:617;;;;:::i;:::-;-1:-1:-1;;;;;;12475:55:6;;-1:-1:-1;;;12475:55:6;12471:152;;12554:50;;-1:-1:-1;;;12554:50:6;;;;;;;:::i;14:735:8:-;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;175:6;162:20;201:4;224:43;264:2;224:43;:::i;:::-;296:2;290:9;308:31;336:2;328:6;308:31;:::i;:::-;374:18;;;408:15;;;;-1:-1:-1;443:15:8;;;493:1;489:10;;;477:23;;473:32;;470:41;-1:-1:-1;467:2:8;;;524:1;521;514:12;467:2;546:1;556:163;570:2;567:1;564:9;556:163;;;627:17;;615:30;;665:12;;;;697;;;;588:1;581:9;556:163;;;-1:-1:-1;737:6:8;;78:671;-1:-1:-1;;;;;;;78:671:8:o;754:555::-;796:5;849:3;842:4;834:6;830:17;826:27;816:2;;867:1;864;857:12;816:2;903:6;890:20;929:18;925:2;922:26;919:2;;;951:18;;:::i;:::-;1000:2;994:9;1012:67;1067:2;1048:13;;-1:-1:-1;;1044:27:8;1073:4;1040:38;994:9;1012:67;:::i;:::-;1103:2;1095:6;1088:18;1149:3;1142:4;1137:2;1129:6;1125:15;1121:26;1118:35;1115:2;;;1166:1;1163;1156:12;1115:2;1230;1223:4;1215:6;1211:17;1204:4;1196:6;1192:17;1179:54;1277:1;1253:15;;;1270:4;1249:26;1242:37;;;;1257:6;806:503;-1:-1:-1;;;806:503:8:o;1314:247::-;1373:6;1426:2;1414:9;1405:7;1401:23;1397:32;1394:2;;;1442:1;1439;1432:12;1394:2;1481:9;1468:23;1500:31;1525:5;1500:31;:::i;:::-;1550:5;1384:177;-1:-1:-1;;;1384:177:8:o;1566:251::-;1636:6;1689:2;1677:9;1668:7;1664:23;1660:32;1657:2;;;1705:1;1702;1695:12;1657:2;1737:9;1731:16;1756:31;1781:5;1756:31;:::i;1822:388::-;1890:6;1898;1951:2;1939:9;1930:7;1926:23;1922:32;1919:2;;;1967:1;1964;1957:12;1919:2;2006:9;1993:23;2025:31;2050:5;2025:31;:::i;:::-;2075:5;-1:-1:-1;2132:2:8;2117:18;;2104:32;2145:33;2104:32;2145:33;:::i;:::-;2197:7;2187:17;;;1909:301;;;;;:::o;2215:1071::-;2369:6;2377;2385;2393;2401;2454:3;2442:9;2433:7;2429:23;2425:33;2422:2;;;2471:1;2468;2461:12;2422:2;2510:9;2497:23;2529:31;2554:5;2529:31;:::i;:::-;2579:5;-1:-1:-1;2636:2:8;2621:18;;2608:32;2649:33;2608:32;2649:33;:::i;:::-;2701:7;-1:-1:-1;2759:2:8;2744:18;;2731:32;2782:18;2812:14;;;2809:2;;;2839:1;2836;2829:12;2809:2;2862:61;2915:7;2906:6;2895:9;2891:22;2862:61;:::i;:::-;2852:71;;2976:2;2965:9;2961:18;2948:32;2932:48;;3005:2;2995:8;2992:16;2989:2;;;3021:1;3018;3011:12;2989:2;3044:63;3099:7;3088:8;3077:9;3073:24;3044:63;:::i;:::-;3034:73;;3160:3;3149:9;3145:19;3132:33;3116:49;;3190:2;3180:8;3177:16;3174:2;;;3206:1;3203;3196:12;3174:2;;3229:51;3272:7;3261:8;3250:9;3246:24;3229:51;:::i;:::-;3219:61;;;2412:874;;;;;;;;:::o;3291:734::-;3395:6;3403;3411;3419;3427;3480:3;3468:9;3459:7;3455:23;3451:33;3448:2;;;3497:1;3494;3487:12;3448:2;3536:9;3523:23;3555:31;3580:5;3555:31;:::i;:::-;3605:5;-1:-1:-1;3662:2:8;3647:18;;3634:32;3675:33;3634:32;3675:33;:::i;:::-;3727:7;-1:-1:-1;3781:2:8;3766:18;;3753:32;;-1:-1:-1;3832:2:8;3817:18;;3804:32;;-1:-1:-1;3887:3:8;3872:19;;3859:33;3915:18;3904:30;;3901:2;;;3947:1;3944;3937:12;3901:2;3970:49;4011:7;4002:6;3991:9;3987:22;3970:49;:::i;4030:929::-;4175:6;4183;4191;4199;4252:3;4240:9;4231:7;4227:23;4223:33;4220:2;;;4269:1;4266;4259:12;4220:2;4308:9;4295:23;4327:31;4352:5;4327:31;:::i;:::-;4377:5;-1:-1:-1;4433:2:8;4418:18;;4405:32;4456:18;4486:14;;;4483:2;;;4513:1;4510;4503:12;4483:2;4536:61;4589:7;4580:6;4569:9;4565:22;4536:61;:::i;:::-;4526:71;;4650:2;4639:9;4635:18;4622:32;4606:48;;4679:2;4669:8;4666:16;4663:2;;;4695:1;4692;4685:12;4663:2;4718:63;4773:7;4762:8;4751:9;4747:24;4718:63;:::i;:::-;4708:73;;4834:2;4823:9;4819:18;4806:32;4790:48;;4863:2;4853:8;4850:16;4847:2;;;4879:1;4876;4869:12;4847:2;;4902:51;4945:7;4934:8;4923:9;4919:24;4902:51;:::i;:::-;4892:61;;;4210:749;;;;;;;:::o;4964:416::-;5029:6;5037;5090:2;5078:9;5069:7;5065:23;5061:32;5058:2;;;5106:1;5103;5096:12;5058:2;5145:9;5132:23;5164:31;5189:5;5164:31;:::i;:::-;5214:5;-1:-1:-1;5271:2:8;5256:18;;5243:32;5313:15;;5306:23;5294:36;;5284:2;;5344:1;5341;5334:12;5385:315;5453:6;5461;5514:2;5502:9;5493:7;5489:23;5485:32;5482:2;;;5530:1;5527;5520:12;5482:2;5569:9;5556:23;5588:31;5613:5;5588:31;:::i;:::-;5638:5;5690:2;5675:18;;;;5662:32;;-1:-1:-1;;;5472:228:8:o;5705:592::-;5800:6;5808;5816;5824;5877:3;5865:9;5856:7;5852:23;5848:33;5845:2;;;5894:1;5891;5884:12;5845:2;5933:9;5920:23;5952:31;5977:5;5952:31;:::i;:::-;6002:5;-1:-1:-1;6054:2:8;6039:18;;6026:32;;-1:-1:-1;6105:2:8;6090:18;;6077:32;;-1:-1:-1;6160:2:8;6145:18;;6132:32;6187:18;6176:30;;6173:2;;;6219:1;6216;6209:12;6173:2;6242:49;6283:7;6274:6;6263:9;6259:22;6242:49;:::i;6302:1288::-;6420:6;6428;6481:2;6469:9;6460:7;6456:23;6452:32;6449:2;;;6497:1;6494;6487:12;6449:2;6537:9;6524:23;6566:18;6607:2;6599:6;6596:14;6593:2;;;6623:1;6620;6613:12;6593:2;6661:6;6650:9;6646:22;6636:32;;6706:7;6699:4;6695:2;6691:13;6687:27;6677:2;;6728:1;6725;6718:12;6677:2;6764;6751:16;6786:4;6809:43;6849:2;6809:43;:::i;:::-;6881:2;6875:9;6893:31;6921:2;6913:6;6893:31;:::i;:::-;6959:18;;;6993:15;;;;-1:-1:-1;7028:11:8;;;7070:1;7066:10;;;7058:19;;7054:28;;7051:41;-1:-1:-1;7048:2:8;;;7105:1;7102;7095:12;7048:2;7127:1;7118:10;;7137:238;7151:2;7148:1;7145:9;7137:238;;;7222:3;7209:17;7239:31;7264:5;7239:31;:::i;:::-;7283:18;;7169:1;7162:9;;;;;7321:12;;;;7353;;7137:238;;;-1:-1:-1;7394:6:8;-1:-1:-1;;7438:18:8;;7425:32;;-1:-1:-1;;7469:16:8;;;7466:2;;;7498:1;7495;7488:12;7466:2;;7521:63;7576:7;7565:8;7554:9;7550:24;7521:63;:::i;:::-;7511:73;;;6439:1151;;;;;:::o;7595:245::-;7653:6;7706:2;7694:9;7685:7;7681:23;7677:32;7674:2;;;7722:1;7719;7712:12;7674:2;7761:9;7748:23;7780:30;7804:5;7780:30;:::i;7845:249::-;7914:6;7967:2;7955:9;7946:7;7942:23;7938:32;7935:2;;;7983:1;7980;7973:12;7935:2;8015:9;8009:16;8034:30;8058:5;8034:30;:::i;8099:180::-;8158:6;8211:2;8199:9;8190:7;8186:23;8182:32;8179:2;;;8227:1;8224;8217:12;8179:2;-1:-1:-1;8250:23:8;;8169:110;-1:-1:-1;8169:110:8:o;8284:435::-;8337:3;8375:5;8369:12;8402:6;8397:3;8390:19;8428:4;8457:2;8452:3;8448:12;8441:19;;8494:2;8487:5;8483:14;8515:1;8525:169;8539:6;8536:1;8533:13;8525:169;;;8600:13;;8588:26;;8634:12;;;;8669:15;;;;8561:1;8554:9;8525:169;;;-1:-1:-1;8710:3:8;;8345:374;-1:-1:-1;;;;;8345:374:8:o;8724:471::-;8765:3;8803:5;8797:12;8830:6;8825:3;8818:19;8855:1;8865:162;8879:6;8876:1;8873:13;8865:162;;;8941:4;8997:13;;;8993:22;;8987:29;8969:11;;;8965:20;;8958:59;8894:12;8865:162;;;9045:6;9042:1;9039:13;9036:2;;;9111:1;9104:4;9095:6;9090:3;9086:16;9082:27;9075:38;9036:2;-1:-1:-1;9177:2:8;9156:15;-1:-1:-1;;9152:29:8;9143:39;;;;9184:4;9139:50;;8773:422;-1:-1:-1;;8773:422:8:o;9200:826::-;-1:-1:-1;;;;;9597:15:8;;;9579:34;;9649:15;;9644:2;9629:18;;9622:43;9559:3;9696:2;9681:18;;9674:31;;;9522:4;;9728:57;;9765:19;;9757:6;9728:57;:::i;:::-;9833:9;9825:6;9821:22;9816:2;9805:9;9801:18;9794:50;9867:44;9904:6;9896;9867:44;:::i;:::-;9853:58;;9960:9;9952:6;9948:22;9942:3;9931:9;9927:19;9920:51;9988:32;10013:6;10005;9988:32;:::i;:::-;9980:40;9531:495;-1:-1:-1;;;;;;;;9531:495:8:o;10031:560::-;-1:-1:-1;;;;;10328:15:8;;;10310:34;;10380:15;;10375:2;10360:18;;10353:43;10427:2;10412:18;;10405:34;;;10470:2;10455:18;;10448:34;;;10290:3;10513;10498:19;;10491:32;;;10253:4;;10540:45;;10565:19;;10557:6;10540:45;:::i;:::-;10532:53;10262:329;-1:-1:-1;;;;;;;10262:329:8:o;10596:261::-;10775:2;10764:9;10757:21;10738:4;10795:56;10847:2;10836:9;10832:18;10824:6;10795:56;:::i;10862:465::-;11119:2;11108:9;11101:21;11082:4;11145:56;11197:2;11186:9;11182:18;11174:6;11145:56;:::i;:::-;11249:9;11241:6;11237:22;11232:2;11221:9;11217:18;11210:50;11277:44;11314:6;11306;11277:44;:::i;:::-;11269:52;11091:236;-1:-1:-1;;;;;11091:236:8:o;11524:219::-;11673:2;11662:9;11655:21;11636:4;11693:44;11733:2;11722:9;11718:18;11710:6;11693:44;:::i;12169:404::-;12371:2;12353:21;;;12410:2;12390:18;;;12383:30;12449:34;12444:2;12429:18;;12422:62;-1:-1:-1;;;12515:2:8;12500:18;;12493:38;12563:3;12548:19;;12343:230::o;12578:407::-;12780:2;12762:21;;;12819:2;12799:18;;;12792:30;12858:34;12853:2;12838:18;;12831:62;-1:-1:-1;;;12924:2:8;12909:18;;12902:41;12975:3;12960:19;;12752:233::o;13400:401::-;13602:2;13584:21;;;13641:2;13621:18;;;13614:30;13680:34;13675:2;13660:18;;13653:62;-1:-1:-1;;;13746:2:8;13731:18;;13724:35;13791:3;13776:19;;13574:227::o;14225:406::-;14427:2;14409:21;;;14466:2;14446:18;;;14439:30;14505:34;14500:2;14485:18;;14478:62;-1:-1:-1;;;14571:2:8;14556:18;;14549:40;14621:3;14606:19;;14399:232::o;14636:412::-;14838:2;14820:21;;;14877:2;14857:18;;;14850:30;14916:34;14911:2;14896:18;;14889:62;-1:-1:-1;;;14982:2:8;14967:18;;14960:46;15038:3;15023:19;;14810:238::o;15873:404::-;16075:2;16057:21;;;16114:2;16094:18;;;16087:30;16153:34;16148:2;16133:18;;16126:62;-1:-1:-1;;;16219:2:8;16204:18;;16197:38;16267:3;16252:19;;16047:230::o;16282:397::-;16484:2;16466:21;;;16523:2;16503:18;;;16496:30;16562:34;16557:2;16542:18;;16535:62;-1:-1:-1;;;16628:2:8;16613:18;;16606:31;16669:3;16654:19;;16456:223::o;17119:183::-;17179:4;17212:18;17204:6;17201:30;17198:2;;;17234:18;;:::i;:::-;-1:-1:-1;17279:1:8;17275:14;17291:4;17271:25;;17188:114::o;17307:128::-;17347:3;17378:1;17374:6;17371:1;17368:13;17365:2;;;17384:18;;:::i;:::-;-1:-1:-1;17420:9:8;;17355:80::o;17440:380::-;17519:1;17515:12;;;;17562;;;17583:2;;17637:4;17629:6;17625:17;17615:27;;17583:2;17690;17682:6;17679:14;17659:18;17656:38;17653:2;;;17736:10;17731:3;17727:20;17724:1;17717:31;17771:4;17768:1;17761:15;17799:4;17796:1;17789:15;17653:2;;17495:325;;;:::o;17825:249::-;17935:2;17916:13;;-1:-1:-1;;17912:27:8;17900:40;;17970:18;17955:34;;17991:22;;;17952:62;17949:2;;;18017:18;;:::i;:::-;18053:2;18046:22;-1:-1:-1;;17872:202:8:o;18079:135::-;18118:3;-1:-1:-1;;18139:17:8;;18136:2;;;18159:18;;:::i;:::-;-1:-1:-1;18206:1:8;18195:13;;18126:88::o;18219:127::-;18280:10;18275:3;18271:20;18268:1;18261:31;18311:4;18308:1;18301:15;18335:4;18332:1;18325:15;18351:127;18412:10;18407:3;18403:20;18400:1;18393:31;18443:4;18440:1;18433:15;18467:4;18464:1;18457:15;18483:127;18544:10;18539:3;18535:20;18532:1;18525:31;18575:4;18572:1;18565:15;18599:4;18596:1;18589:15;18615:179;18650:3;18692:1;18674:16;18671:23;18668:2;;;18738:1;18735;18732;18717:23;-1:-1:-1;18775:1:8;18769:8;18764:3;18760:18;18668:2;18658:136;:::o;18799:671::-;18838:3;18880:4;18862:16;18859:26;18856:2;;;18846:624;:::o;18856:2::-;18922;18916:9;-1:-1:-1;;18987:16:8;18983:25;;18980:1;18916:9;18959:50;19038:4;19032:11;19062:16;19097:18;19168:2;19161:4;19153:6;19149:17;19146:25;19141:2;19133:6;19130:14;19127:45;19124:2;;;19175:5;;;;;18846:624;:::o;19124:2::-;19212:6;19206:4;19202:17;19191:28;;19248:3;19242:10;19275:2;19267:6;19264:14;19261:2;;;19281:5;;;;;;18846:624;:::o;19261:2::-;19365;19346:16;19340:4;19336:27;19332:36;19325:4;19316:6;19311:3;19307:16;19303:27;19300:69;19297:2;;;19372:5;;;;;;18846:624;:::o;19297:2::-;19388:57;19439:4;19430:6;19422;19418:19;19414:30;19408:4;19388:57;:::i;:::-;-1:-1:-1;19461:3:8;;18846:624;-1:-1:-1;;;;;18846:624:8:o;19475:131::-;-1:-1:-1;;;;;19550:31:8;;19540:42;;19530:2;;19596:1;19593;19586:12;19530:2;19520:86;:::o;19611:131::-;-1:-1:-1;;;;;;19685:32:8;;19675:43;;19665:2;;19732:1;19729;19722:12",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. Modified version of OpenZeppelin's ERC1155 implementation https://eips.ethereum.org/EIPS/eip-1155 https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155",
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "Returns the total balance of `account`",
        "notice": "May not query the zero address"
      },
      "balanceOf(address,uint256)": {
        "details": "Returns the amount of tokens of token type `id` owned by `account`.",
        "notice": "May not query the zero address"
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Batched version of balanceOf.",
        "notice": "May not query the zero address"
      },
      "constructor": {
        "details": "See {_setURI}."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns true if `operator` is approved to transfer `account`'s tokens."
      },
      "mint(address,uint256,uint256,bytes)": {
        "details": "Creates `amount` tokens of token type `id`, and assigns them to `account`.",
        "notice": "`account` cannot be the zero address.If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
      },
      "mintBatch(address,uint256[],uint256[],bytes)": {
        "details": "Batched version of _mint.",
        "notice": "`ids` and `amounts` must have the same length.- If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Batched version of safeTransferFrom.",
        "notice": "`ids` and `amounts` must have the same length.If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers amount tokens of token type `id` from `from` to `to`.",
        "notice": "May not query the zero addressIf the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.`from` must have a balance of tokens of type `id` of at least `amount`.If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.",
        "notice": "`operator` cannot be the caller."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "Returns the URI for token type `id`."
      }
    },
    "version": 1
  },
  "offset": [
    660,
    13791
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH2 0x17F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0x140E JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x124 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x11C4 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x224 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x27D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x298 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x1941 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x1941 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x33B SWAP1 PUSH2 0x1941 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x367 SWAP1 PUSH2 0x1941 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x389 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x397 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE7F43C68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x422 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x18C4 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x187C JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5AE JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4DC JUMPI PUSH2 0x4DC PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4FA JUMPI PUSH2 0x4FA PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x55B JUMPI PUSH2 0x55B PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x1929 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x5A6 DUP2 PUSH2 0x19A9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C1 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x5FF SWAP3 SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x616 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE63 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x639 JUMPI POP PUSH2 0x639 DUP6 CALLER PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21B JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x179D JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH2 0x708 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x726 JUMPI PUSH2 0x726 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE DUP5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP9 SWAP1 SUB SWAP1 SSTORE DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7C6 SWAP1 DUP5 SWAP1 PUSH2 0x1929 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7F3 SWAP1 DUP5 SWAP1 PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x807 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x6EB JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP3 SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x874 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE63 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FD PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x926 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x99E JUMPI PUSH2 0x971 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x94A JUMPI PUSH2 0x94A PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x964 JUMPI PUSH2 0x964 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F3 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x983 JUMPI PUSH2 0x983 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x997 DUP2 PUSH2 0x19A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x92C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x1752 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE7F43C68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLER SWAP3 DUP6 SWAP3 SWAP2 PUSH2 0xAFA SWAP1 DUP5 SWAP1 PUSH2 0x1929 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xB27 SWAP1 DUP5 SWAP1 PUSH2 0x1929 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x616 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x1941 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xCB5 JUMPI POP PUSH2 0xCB5 DUP6 CALLER PUSH2 0xC6B JUMP JUMPDEST PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD CALLER SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xD7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP10 DUP8 SUB SWAP1 SSTORE DUP5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP11 SWAP1 SUB SWAP1 SSTORE DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xDCD SWAP1 DUP5 SWAP1 PUSH2 0x1929 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xDFA SWAP1 DUP5 SWAP1 PUSH2 0x1929 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE5A DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xFCE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xEA7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEF1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEEE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF9E JUMPI PUSH2 0xEFD PUSH2 0x1A06 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xF37 JUMPI POP PUSH2 0xF12 PUSH2 0x1A22 JUMP JUMPDEST DUP1 PUSH2 0xF1D JUMPI POP PUSH2 0xF39 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1012 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x102C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x105C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1059 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1068 JUMPI PUSH2 0xEFD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x10B6 DUP3 PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C3 DUP3 DUP3 PUSH2 0x197C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x10E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1102 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10E6 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113A JUMPI PUSH2 0x113A PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1151 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x197C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A0 DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11A0 DUP2 PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x11E2 DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x11F2 DUP2 PUSH2 0x1AAC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1220 DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1230 DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x124D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1259 DUP10 DUP4 DUP11 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x126F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127B DUP10 DUP4 DUP11 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129E DUP9 DUP3 DUP10 ADD PUSH2 0x110F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x12CE DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x12DE DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129E DUP9 DUP3 DUP10 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x132A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1335 DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135E DUP9 DUP4 DUP10 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1380 DUP9 DUP4 DUP10 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A3 DUP8 DUP3 DUP9 ADD PUSH2 0x110F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13CD DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1400 DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x142F DUP2 PUSH2 0x1AAC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A3 DUP8 DUP3 DUP9 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x14B1 DUP3 PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14BE DUP3 DUP3 PUSH2 0x197C JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x150A JUMPI DUP1 CALLDATALOAD PUSH2 0x14F6 DUP2 PUSH2 0x1AAC JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x14E3 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152E DUP6 DUP3 DUP7 ADD PUSH2 0x1098 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A0 DUP2 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11A0 DUP2 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15BB JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x159F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15D0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x15FE JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x163F SWAP1 DUP4 ADD DUP7 PUSH2 0x158B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1651 DUP2 DUP7 PUSH2 0x158B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1665 DUP2 DUP6 PUSH2 0x15C6 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x16AB SWAP1 DUP4 ADD DUP5 PUSH2 0x15C6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16DC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x158B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16EE DUP2 DUP6 PUSH2 0x158B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F7261636C65206F70657261746F72206D617920706572 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x3337B936903A3434B99030B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x191F JUMPI PUSH2 0x191F PUSH2 0x19F0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x193C JUMPI PUSH2 0x193C PUSH2 0x19C4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1955 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1976 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x19A2 JUMPI PUSH2 0x19A2 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x19BD JUMPI PUSH2 0x19BD PUSH2 0x19C4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1A1F JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1A30 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1A60 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A78 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A92 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1AA1 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x197C JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1AC1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 LT DIV 0xD9 0xB9 0xF8 0xC0 0xC6 0xED PUSH10 0x11E6D6CAC7B76AE31A58 PUSH14 0x2E8F45D20034C3FB8E06D364736F PUSH13 0x63430008060033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE"
    },
    "25": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4E1273F4"
    },
    "38": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2"
    },
    "64": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA22CB465"
    },
    "71": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BA"
    },
    "75": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE985E9C5"
    },
    "82": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CD"
    },
    "86": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF242432A"
    },
    "93": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E0"
    },
    "97": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "REVERT",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4E1273F4"
    },
    "109": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16C"
    },
    "113": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C"
    },
    "124": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x731133E9"
    },
    "131": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19F"
    },
    "135": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "139": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "REVERT",
      "path": "6"
    },
    "140": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "141": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "142": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xFDD58E"
    },
    "146": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD3"
    },
    "150": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "151": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1FFC9A7"
    },
    "157": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF9"
    },
    "161": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "162": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6FDDE03"
    },
    "168": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C"
    },
    "172": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE89341C"
    },
    "179": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "180": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x131"
    },
    "183": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "184": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1F7FDFFA"
    },
    "190": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "191": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "194": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "195": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2EB2C2D6"
    },
    "201": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "EQ",
      "path": "6"
    },
    "202": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x159"
    },
    "205": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "206": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "210": {
      "first_revert": true,
      "fn": null,
      "offset": [
        660,
        13791
      ],
      "op": "REVERT",
      "path": "6"
    },
    "211": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "212": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE6"
    },
    "215": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE1"
    },
    "218": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "219": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "221": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E2"
    },
    "224": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5118,
        5408
      ],
      "op": "JUMP",
      "path": "6"
    },
    "225": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "226": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F3"
    },
    "229": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5118,
        5408
      ],
      "op": "JUMP",
      "path": "6"
    },
    "230": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "231": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "233": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "234": {
      "op": "SWAP1"
    },
    "235": {
      "op": "DUP2"
    },
    "236": {
      "op": "MSTORE"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "239": {
      "op": "ADD"
    },
    "240": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "241": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "243": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "244": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "DUP1",
      "path": "6"
    },
    "245": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "246": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "SUB",
      "path": "6"
    },
    "247": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "248": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "RETURN",
      "path": "6"
    },
    "249": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "250": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C"
    },
    "253": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x107"
    },
    "256": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "257": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "259": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1538"
    },
    "262": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        4096,
        4429
      ],
      "op": "JUMP",
      "path": "6"
    },
    "263": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "264": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24C"
    },
    "267": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        4096,
        4429
      ],
      "op": "JUMP",
      "path": "6"
    },
    "268": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "269": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "271": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "272": {
      "op": "SWAP1"
    },
    "273": {
      "op": "ISZERO"
    },
    "274": {
      "op": "ISZERO"
    },
    "275": {
      "op": "DUP2"
    },
    "276": {
      "op": "MSTORE"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "279": {
      "op": "ADD"
    },
    "280": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0"
    },
    "283": {
      "op": "JUMP"
    },
    "284": {
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "285": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x124"
    },
    "288": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29E"
    },
    "291": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "292": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "293": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "295": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "296": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0"
    },
    "299": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "300": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "301": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F7"
    },
    "304": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "305": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "306": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x124"
    },
    "309": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13F"
    },
    "312": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "313": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "315": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1572"
    },
    "318": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4500,
        4595
      ],
      "op": "JUMP",
      "path": "6"
    },
    "319": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "320": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32C"
    },
    "323": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4500,
        4595
      ],
      "op": "JUMP",
      "path": "6"
    },
    "324": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "325": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157"
    },
    "328": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x152"
    },
    "331": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "332": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "334": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1314"
    },
    "337": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11160,
        11960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "338": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "339": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C0"
    },
    "342": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11160,
        11960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "343": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "344": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "STOP",
      "path": "6"
    },
    "345": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "346": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157"
    },
    "349": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x167"
    },
    "352": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "353": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "355": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11FD"
    },
    "358": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        8595,
        9970
      ],
      "op": "JUMP",
      "path": "6"
    },
    "359": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "360": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x61D"
    },
    "363": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        8595,
        9970
      ],
      "op": "JUMP",
      "path": "6"
    },
    "364": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "365": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F"
    },
    "368": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17A"
    },
    "371": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "372": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "374": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1465"
    },
    "377": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5518,
        6044
      ],
      "op": "JUMP",
      "path": "6"
    },
    "378": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "379": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87C"
    },
    "382": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5518,
        6044
      ],
      "op": "JUMP",
      "path": "6"
    },
    "383": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "384": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "386": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "387": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0"
    },
    "390": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "391": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "392": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16B6"
    },
    "395": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5518,
        6044
      ],
      "op": "JUMP",
      "path": "6"
    },
    "396": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "397": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE6"
    },
    "400": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19A"
    },
    "403": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "404": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "406": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1183"
    },
    "409": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        4714,
        4970
      ],
      "op": "JUMP",
      "path": "6"
    },
    "410": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "411": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A6"
    },
    "414": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        4714,
        4970
      ],
      "op": "JUMP",
      "path": "6"
    },
    "415": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "416": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157"
    },
    "419": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AD"
    },
    "422": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "423": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "425": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x140E"
    },
    "428": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10289,
        10879
      ],
      "op": "JUMP",
      "path": "6"
    },
    "429": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "430": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9EA"
    },
    "433": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10289,
        10879
      ],
      "op": "JUMP",
      "path": "6"
    },
    "434": {
      "offset": [
        1339,
        1359
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "435": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x124"
    },
    "438": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB87"
    },
    "441": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        1339,
        1359
      ],
      "op": "JUMP",
      "path": "6"
    },
    "442": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "443": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157"
    },
    "446": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C8"
    },
    "449": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "450": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "452": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13AF"
    },
    "455": {
      "fn": "Loot.setApprovalForAll",
      "jump": "i",
      "offset": [
        6229,
        6575
      ],
      "op": "JUMP",
      "path": "6"
    },
    "456": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "457": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB94"
    },
    "460": {
      "fn": "Loot.setApprovalForAll",
      "jump": "i",
      "offset": [
        6229,
        6575
      ],
      "op": "JUMP",
      "path": "6"
    },
    "461": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "462": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C"
    },
    "465": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DB"
    },
    "468": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "469": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "471": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C4"
    },
    "474": {
      "fn": "Loot.isApprovedForAll",
      "jump": "i",
      "offset": [
        6680,
        6874
      ],
      "op": "JUMP",
      "path": "6"
    },
    "475": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "476": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC6B"
    },
    "479": {
      "fn": "Loot.isApprovedForAll",
      "jump": "i",
      "offset": [
        6680,
        6874
      ],
      "op": "JUMP",
      "path": "6"
    },
    "480": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "481": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157"
    },
    "484": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EE"
    },
    "487": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "488": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "490": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12AB"
    },
    "493": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7370,
        8314
      ],
      "op": "JUMP",
      "path": "6"
    },
    "494": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "495": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC99"
    },
    "498": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7370,
        8314
      ],
      "op": "JUMP",
      "path": "6"
    },
    "499": {
      "fn": "Loot.balanceOf",
      "offset": [
        5118,
        5408
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "500": {
      "fn": "Loot.balanceOf",
      "offset": [
        5228,
        5235
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "508": {
      "op": "SHL"
    },
    "509": {
      "op": "SUB"
    },
    "510": {
      "fn": "Loot.balanceOf",
      "offset": [
        5272,
        5293
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 0
    },
    "511": {
      "branch": 52,
      "fn": "Loot.balanceOf",
      "offset": [
        5272,
        5293
      ],
      "op": "AND",
      "path": "6"
    },
    "512": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x224"
    },
    "515": {
      "branch": 52,
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "516": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "518": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "DUP2",
      "path": "6"
    },
    "527": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "528": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "530": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "ADD",
      "path": "6"
    },
    "531": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "534": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "535": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1752"
    },
    "538": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5251,
        5362
      ],
      "op": "JUMP",
      "path": "6"
    },
    "539": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "540": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "542": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "543": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "DUP1",
      "path": "6"
    },
    "544": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "545": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "SUB",
      "path": "6"
    },
    "546": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "547": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "548": {
      "fn": "Loot.balanceOf",
      "offset": [
        5251,
        5362
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x0"
    },
    "552": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "553": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "DUP2",
      "path": "6"
    },
    "554": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "555": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5388
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "557": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "559": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "560": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "DUP2",
      "path": "6"
    },
    "561": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "562": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "564": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "DUP1",
      "path": "6"
    },
    "565": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "DUP4",
      "path": "6"
    },
    "566": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5392
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "op": "SUB"
    },
    "575": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "576": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "577": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "578": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "AND",
      "path": "6"
    },
    "579": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "DUP4",
      "path": "6"
    },
    "580": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "581": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "582": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "583": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "584": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "585": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "586": {
      "fn": "Loot.balanceOf",
      "offset": [
        5379,
        5401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "587": {
      "fn": "Loot.balanceOf",
      "jump": "o",
      "offset": [
        5118,
        5408
      ],
      "op": "JUMP",
      "path": "6"
    },
    "588": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "589": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4222,
        4226
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "op": "SUB"
    },
    "599": {
      "op": "NOT"
    },
    "600": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4302
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 2
    },
    "601": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4302
      ],
      "op": "AND",
      "path": "6"
    },
    "602": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "609": {
      "op": "SHL"
    },
    "610": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4302
      ],
      "op": "EQ",
      "path": "6"
    },
    "611": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4302
      ],
      "op": "DUP1",
      "path": "6"
    },
    "612": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4370
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D"
    },
    "615": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4370
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "616": {
      "op": "POP"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "623": {
      "op": "SHL"
    },
    "624": {
      "op": "SUB"
    },
    "625": {
      "op": "NOT"
    },
    "626": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4318,
        4370
      ],
      "op": "DUP3",
      "path": "6"
    },
    "627": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4318,
        4370
      ],
      "op": "AND",
      "path": "6"
    },
    "628": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "633": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "635": {
      "op": "SHL"
    },
    "636": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4318,
        4370
      ],
      "op": "EQ",
      "path": "6"
    },
    "637": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4370
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "638": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4422
      ],
      "op": "DUP1",
      "path": "6"
    },
    "639": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4422
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x298"
    },
    "642": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4261,
        4422
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "643": {
      "op": "POP"
    },
    "644": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "649": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "651": {
      "op": "SHL"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "658": {
      "op": "SHL"
    },
    "659": {
      "op": "SUB"
    },
    "660": {
      "op": "NOT"
    },
    "661": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 3
    },
    "662": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "4"
    },
    "663": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "4"
    },
    "664": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4386,
        4422
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "665": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4242,
        4422
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "666": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4096,
        4429
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "op": "POP"
    },
    "669": {
      "fn": "Loot.supportsInterface",
      "jump": "o",
      "offset": [
        4096,
        4429
      ],
      "op": "JUMP",
      "path": "6"
    },
    "670": {
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "671": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "673": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "674": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "675": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "678": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "679": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1941"
    },
    "682": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "683": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "684": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "685": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "687": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "688": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "690": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "691": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "692": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DIV",
      "path": "6"
    },
    "693": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MUL",
      "path": "6"
    },
    "694": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "696": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "697": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "699": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "700": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "701": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "702": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "703": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "705": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "706": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "707": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "708": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "709": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "710": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "711": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "712": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "713": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "715": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "716": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP3",
      "path": "6"
    },
    "717": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "718": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "719": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D7"
    },
    "722": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "723": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1941"
    },
    "726": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "727": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "728": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "729": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "730": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x324"
    },
    "733": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "734": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "735": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "737": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "LT",
      "path": "6"
    },
    "738": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F9"
    },
    "741": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "742": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "745": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "746": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP4",
      "path": "6"
    },
    "747": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "748": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DIV",
      "path": "6"
    },
    "749": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MUL",
      "path": "6"
    },
    "750": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP4",
      "path": "6"
    },
    "751": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "752": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "753": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "755": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "756": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "757": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x324"
    },
    "760": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "761": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "762": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP3",
      "path": "6"
    },
    "763": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "764": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "765": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "766": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "768": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "769": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "771": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "773": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "774": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "775": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "776": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "777": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "778": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "779": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "780": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "781": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "783": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "784": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "785": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "787": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "788": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "789": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP4",
      "path": "6"
    },
    "790": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "GT",
      "path": "6"
    },
    "791": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "794": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "795": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP3",
      "path": "6"
    },
    "796": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "797": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SUB",
      "path": "6"
    },
    "798": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "800": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "AND",
      "path": "6"
    },
    "801": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP3",
      "path": "6"
    },
    "802": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "6"
    },
    "803": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "804": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "805": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "6"
    },
    "806": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "6"
    },
    "807": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "6"
    },
    "808": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "6"
    },
    "809": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "6"
    },
    "810": {
      "fn": "Loot.supportsInterface",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "811": {
      "fn": "Loot.supportsInterface",
      "jump": "o",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "812": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "813": {
      "fn": "Loot.uri",
      "offset": [
        4552,
        4565
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "815": {
      "fn": "Loot.uri",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x3"
    },
    "817": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "818": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "819": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33B"
    },
    "822": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "823": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1941"
    },
    "826": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMP",
      "path": "6"
    },
    "827": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "828": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "829": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "831": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "832": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "834": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "835": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "836": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DIV",
      "path": "6"
    },
    "837": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "MUL",
      "path": "6"
    },
    "838": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "840": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "841": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "843": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "844": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "845": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP2",
      "path": "6"
    },
    "846": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "847": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "849": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "850": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "851": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "852": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "853": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "854": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP2",
      "path": "6"
    },
    "855": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP2",
      "path": "6"
    },
    "856": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "857": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "859": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "860": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP3",
      "path": "6"
    },
    "861": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "862": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "863": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x367"
    },
    "866": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "867": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1941"
    },
    "870": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMP",
      "path": "6"
    },
    "871": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "872": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "873": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "874": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B4"
    },
    "877": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "878": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "879": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "881": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "LT",
      "path": "6"
    },
    "882": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x389"
    },
    "885": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "886": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "889": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "890": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP4",
      "path": "6"
    },
    "891": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "892": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DIV",
      "path": "6"
    },
    "893": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "MUL",
      "path": "6"
    },
    "894": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP4",
      "path": "6"
    },
    "895": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "896": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "897": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "899": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "900": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "901": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B4"
    },
    "904": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMP",
      "path": "6"
    },
    "905": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "906": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP3",
      "path": "6"
    },
    "907": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "908": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "909": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "910": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "912": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "913": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "915": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "917": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "918": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "919": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "920": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP2",
      "path": "6"
    },
    "921": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "922": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP2",
      "path": "6"
    },
    "923": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "924": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "925": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "927": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "928": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "929": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "931": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "932": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "933": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP4",
      "path": "6"
    },
    "934": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "GT",
      "path": "6"
    },
    "935": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "938": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "939": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP3",
      "path": "6"
    },
    "940": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "941": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SUB",
      "path": "6"
    },
    "942": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "944": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "AND",
      "path": "6"
    },
    "945": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "DUP3",
      "path": "6"
    },
    "946": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "ADD",
      "path": "6"
    },
    "947": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "948": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "949": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "POP",
      "path": "6"
    },
    "950": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "POP",
      "path": "6"
    },
    "951": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "POP",
      "path": "6"
    },
    "952": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "POP",
      "path": "6"
    },
    "953": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "POP",
      "path": "6"
    },
    "954": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "955": {
      "fn": "Loot.uri",
      "offset": [
        4577,
        4588
      ],
      "op": "POP",
      "path": "6"
    },
    "956": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "957": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "958": {
      "fn": "Loot.uri",
      "offset": [
        4500,
        4595
      ],
      "op": "POP",
      "path": "6"
    },
    "959": {
      "fn": "Loot.uri",
      "jump": "o",
      "offset": [
        4500,
        4595
      ],
      "op": "JUMP",
      "path": "6"
    },
    "960": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "961": {
      "offset": [
        3917,
        3923
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "963": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3923
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "965": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3923
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "966": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3923
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "967": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3923
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "968": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3923
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "971": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3923
      ],
      "op": "EXP",
      "path": "6"
    },
    "972": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3923
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "973": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3923
      ],
      "op": "DIV",
      "path": "6"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "980": {
      "op": "SHL"
    },
    "981": {
      "op": "SUB"
    },
    "982": {
      "offset": [
        3917,
        3923
      ],
      "op": "AND",
      "path": "6"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "SUB"
    },
    "991": {
      "offset": [
        3917,
        3935
      ],
      "op": "AND",
      "path": "6"
    },
    "992": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3935
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE7F43C68"
    },
    "997": {
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "999": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1000": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1001": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1006": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "AND",
      "path": "6"
    },
    "1007": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1009": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "SHL",
      "path": "6"
    },
    "1010": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1011": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1012": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1014": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "ADD",
      "path": "6"
    },
    "1015": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1017": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1019": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1020": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1021": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1022": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "SUB",
      "path": "6"
    },
    "1023": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1024": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1025": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1026": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1027": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1028": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1029": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1030": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x40E"
    },
    "1033": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1034": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1036": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1037": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1038": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1039": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "1040": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "GAS",
      "path": "6"
    },
    "1041": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1042": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1043": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1044": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1045": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "1048": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1049": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1050": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1052": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1053": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1054": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1055": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1057": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1058": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1059": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "1060": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "1061": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "1062": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "1063": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1065": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1066": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1067": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1069": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "NOT",
      "path": "6"
    },
    "1070": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1072": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1073": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "ADD",
      "path": "6"
    },
    "1074": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "AND",
      "path": "6"
    },
    "1075": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1076": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "ADD",
      "path": "6"
    },
    "1077": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1078": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1080": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1081": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "1082": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1083": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "ADD",
      "path": "6"
    },
    "1084": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1085": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x446"
    },
    "1088": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1089": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1090": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11A7"
    },
    "1093": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1094": {
      "fn": "Loot.mintBatch",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "op": "SUB"
    },
    "1103": {
      "offset": [
        3903,
        3937
      ],
      "op": "AND",
      "path": "6"
    },
    "1104": {
      "offset": [
        3903,
        3913
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "offset": [
        3903,
        3937
      ],
      "op": "AND",
      "path": "6"
    },
    "1114": {
      "fn": "Loot.mintBatch",
      "offset": [
        3903,
        3937
      ],
      "op": "EQ",
      "path": "6"
    },
    "1115": {
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x476"
    },
    "1118": {
      "offset": [
        3882,
        4011
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1119": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1121": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "offset": [
        3882,
        4011
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1130": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1131": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1133": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "ADD",
      "path": "6"
    },
    "1134": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "1137": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1138": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x182C"
    },
    "1141": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        3882,
        4011
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1142": {
      "fn": "Loot.mintBatch",
      "offset": [
        3882,
        4011
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "op": "SUB"
    },
    "1151": {
      "fn": "Loot.mintBatch",
      "offset": [
        11340,
        11356
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 5
    },
    "1152": {
      "branch": 53,
      "fn": "Loot.mintBatch",
      "offset": [
        11340,
        11356
      ],
      "op": "AND",
      "path": "6"
    },
    "1153": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x49C"
    },
    "1156": {
      "branch": 53,
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1157": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1159": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1168": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1169": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1171": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "ADD",
      "path": "6"
    },
    "1172": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "1175": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1176": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C4"
    },
    "1179": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11332,
        11394
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1180": {
      "fn": "Loot.mintBatch",
      "offset": [
        11332,
        11394
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1181": {
      "fn": "Loot.mintBatch",
      "offset": [
        11439,
        11446
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 6
    },
    "1182": {
      "fn": "Loot.mintBatch",
      "offset": [
        11439,
        11453
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1183": {
      "fn": "Loot.mintBatch",
      "offset": [
        11425,
        11428
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1184": {
      "fn": "Loot.mintBatch",
      "offset": [
        11425,
        11435
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1185": {
      "branch": 54,
      "fn": "Loot.mintBatch",
      "offset": [
        11425,
        11453
      ],
      "op": "EQ",
      "path": "6"
    },
    "1186": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BD"
    },
    "1189": {
      "branch": 54,
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1190": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1192": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1201": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1202": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1204": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "ADD",
      "path": "6"
    },
    "1205": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "1208": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1209": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x187C"
    },
    "1212": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11404,
        11519
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1213": {
      "fn": "Loot.mintBatch",
      "offset": [
        11404,
        11519
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1214": {
      "fn": "Loot.mintBatch",
      "offset": [
        11549,
        11559
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1215": {
      "fn": "Loot.mintBatch",
      "offset": [
        11530,
        11546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1217": {
      "fn": "Loot.mintBatch",
      "offset": [
        11570,
        11711
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1218": {
      "fn": "Loot.mintBatch",
      "offset": [
        11594,
        11597
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1219": {
      "fn": "Loot.mintBatch",
      "offset": [
        11594,
        11604
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1220": {
      "fn": "Loot.mintBatch",
      "offset": [
        11590,
        11591
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1221": {
      "fn": "Loot.mintBatch",
      "offset": [
        11590,
        11604
      ],
      "op": "LT",
      "path": "6"
    },
    "1222": {
      "fn": "Loot.mintBatch",
      "offset": [
        11570,
        11711
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1223": {
      "fn": "Loot.mintBatch",
      "offset": [
        11570,
        11711
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5AE"
    },
    "1226": {
      "fn": "Loot.mintBatch",
      "offset": [
        11570,
        11711
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1227": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11657
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 7
    },
    "1228": {
      "fn": "Loot.mintBatch",
      "offset": [
        11658,
        11659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1229": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1230": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1231": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1232": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "LT",
      "path": "6"
    },
    "1233": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DC"
    },
    "1236": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1237": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DC"
    },
    "1240": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DA"
    },
    "1243": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11650,
        11660
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1244": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1245": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1247": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "MUL",
      "path": "6"
    },
    "1248": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1250": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "ADD",
      "path": "6"
    },
    "1251": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "ADD",
      "path": "6"
    },
    "1252": {
      "fn": "Loot.mintBatch",
      "offset": [
        11650,
        11660
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1253": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11634
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1255": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1257": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11638
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1258": {
      "fn": "Loot.mintBatch",
      "offset": [
        11639,
        11640
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1259": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1260": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1261": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1262": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "LT",
      "path": "6"
    },
    "1263": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FA"
    },
    "1266": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1267": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FA"
    },
    "1270": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DA"
    },
    "1273": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11635,
        11641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1274": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1275": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1277": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "MUL",
      "path": "6"
    },
    "1278": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1280": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "ADD",
      "path": "6"
    },
    "1281": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "ADD",
      "path": "6"
    },
    "1282": {
      "fn": "Loot.mintBatch",
      "offset": [
        11635,
        11641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1283": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1284": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1285": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1287": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "ADD",
      "path": "6"
    },
    "1288": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1289": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1290": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1291": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1293": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "ADD",
      "path": "6"
    },
    "1294": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1296": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11642
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1297": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1299": {
      "fn": "Loot.mintBatch",
      "offset": [
        11643,
        11645
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "op": "SUB"
    },
    "1308": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "AND",
      "path": "6"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "AND",
      "path": "6"
    },
    "1318": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1319": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1320": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1322": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "ADD",
      "path": "6"
    },
    "1323": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1324": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1325": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1326": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1328": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "ADD",
      "path": "6"
    },
    "1329": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1331": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1332": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11646
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1334": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1335": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1336": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1337": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x542"
    },
    "1340": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1341": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1342": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1929"
    },
    "1345": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11625,
        11660
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1346": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1347": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1348": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "POP",
      "path": "6"
    },
    "1349": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "POP",
      "path": "6"
    },
    "1350": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1351": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1352": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1353": {
      "fn": "Loot.mintBatch",
      "offset": [
        11625,
        11660
      ],
      "op": "POP",
      "path": "6"
    },
    "1354": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11697
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 8
    },
    "1355": {
      "fn": "Loot.mintBatch",
      "offset": [
        11698,
        11699
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1356": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1357": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1358": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1359": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "LT",
      "path": "6"
    },
    "1360": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x55B"
    },
    "1363": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1364": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x55B"
    },
    "1367": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DA"
    },
    "1370": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11690,
        11700
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1371": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1372": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1374": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "MUL",
      "path": "6"
    },
    "1375": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1377": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "ADD",
      "path": "6"
    },
    "1378": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "ADD",
      "path": "6"
    },
    "1379": {
      "fn": "Loot.mintBatch",
      "offset": [
        11690,
        11700
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1380": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1382": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1383": {
      "fn": "Loot.mintBatch",
      "offset": [
        11683,
        11685
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "op": "SUB"
    },
    "1392": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "AND",
      "path": "6"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1399": {
      "op": "SHL"
    },
    "1400": {
      "op": "SUB"
    },
    "1401": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "AND",
      "path": "6"
    },
    "1402": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1403": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1404": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1406": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "ADD",
      "path": "6"
    },
    "1407": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1408": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1409": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1410": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1412": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "ADD",
      "path": "6"
    },
    "1413": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1415": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1416": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1418": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1419": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1420": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1421": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x596"
    },
    "1424": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1425": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1426": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1929"
    },
    "1429": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11674,
        11700
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1430": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1431": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1432": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1433": {
      "fn": "Loot.mintBatch",
      "offset": [
        11674,
        11700
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1434": {
      "op": "POP"
    },
    "1435": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 9
    },
    "1436": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A6"
    },
    "1441": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1442": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19A9"
    },
    "1445": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11606,
        11609
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1446": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1447": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1448": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "POP",
      "path": "6"
    },
    "1449": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11609
      ],
      "op": "POP",
      "path": "6"
    },
    "1450": {
      "fn": "Loot.mintBatch",
      "offset": [
        11570,
        11711
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C1"
    },
    "1453": {
      "fn": "Loot.mintBatch",
      "offset": [
        11570,
        11711
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1454": {
      "fn": "Loot.mintBatch",
      "offset": [
        11570,
        11711
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1455": {
      "fn": "Loot.mintBatch",
      "offset": [
        11570,
        11711
      ],
      "op": "POP",
      "path": "6"
    },
    "1456": {
      "fn": "Loot.mintBatch",
      "offset": [
        11762,
        11764
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 10
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1463": {
      "op": "SHL"
    },
    "1464": {
      "op": "SUB"
    },
    "1465": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "AND",
      "path": "6"
    },
    "1466": {
      "fn": "Loot.mintBatch",
      "offset": [
        11758,
        11759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1474": {
      "op": "SHL"
    },
    "1475": {
      "op": "SUB"
    },
    "1476": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "AND",
      "path": "6"
    },
    "1477": {
      "fn": "Loot.mintBatch",
      "offset": [
        11740,
        11748
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1484": {
      "op": "SHL"
    },
    "1485": {
      "op": "SUB"
    },
    "1486": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "AND",
      "path": "6"
    },
    "1487": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "1520": {
      "fn": "Loot.mintBatch",
      "offset": [
        11766,
        11769
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1521": {
      "fn": "Loot.mintBatch",
      "offset": [
        11771,
        11778
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1522": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1524": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1525": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5FF"
    },
    "1528": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1529": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1530": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1531": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16C9"
    },
    "1534": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11726,
        11779
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1535": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1536": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1538": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1539": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1540": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1541": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "SUB",
      "path": "6"
    },
    "1542": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1543": {
      "fn": "Loot.mintBatch",
      "offset": [
        11726,
        11779
      ],
      "op": "LOG4",
      "path": "6"
    },
    "1544": {
      "fn": "Loot.mintBatch",
      "offset": [
        11790,
        11953
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 11,
      "value": "0x616"
    },
    "1547": {
      "fn": "Loot.mintBatch",
      "offset": [
        11839,
        11847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1548": {
      "fn": "Loot.mintBatch",
      "offset": [
        11869,
        11870
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1550": {
      "fn": "Loot.mintBatch",
      "offset": [
        11885,
        11887
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1551": {
      "fn": "Loot.mintBatch",
      "offset": [
        11901,
        11904
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1552": {
      "fn": "Loot.mintBatch",
      "offset": [
        11918,
        11925
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1553": {
      "fn": "Loot.mintBatch",
      "offset": [
        11939,
        11943
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1554": {
      "fn": "Loot.mintBatch",
      "offset": [
        11790,
        11825
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE63"
    },
    "1557": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11790,
        11953
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1558": {
      "fn": "Loot.mintBatch",
      "offset": [
        11790,
        11953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1559": {
      "fn": "Loot.mintBatch",
      "offset": [
        11322,
        11960
      ],
      "op": "POP",
      "path": "6"
    },
    "1560": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "POP",
      "path": "6"
    },
    "1561": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "POP",
      "path": "6"
    },
    "1562": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "POP",
      "path": "6"
    },
    "1563": {
      "fn": "Loot.mintBatch",
      "offset": [
        11160,
        11960
      ],
      "op": "POP",
      "path": "6"
    },
    "1564": {
      "fn": "Loot.mintBatch",
      "jump": "o",
      "offset": [
        11160,
        11960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1565": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8812,
        8830
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 12
    },
    "1575": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8812,
        8830
      ],
      "op": "AND",
      "path": "6"
    },
    "1576": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8820,
        8830
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1577": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8812,
        8830
      ],
      "op": "EQ",
      "path": "6"
    },
    "1578": {
      "branch": 55,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8812,
        8830
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1579": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8812,
        8868
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x639"
    },
    "1582": {
      "branch": 55,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8812,
        8868
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1583": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8812,
        8868
      ],
      "op": "POP",
      "path": "6"
    },
    "1584": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8834,
        8868
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x639"
    },
    "1587": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8851,
        8855
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1588": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8857,
        8867
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1589": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8834,
        8850
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC6B"
    },
    "1592": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        8834,
        8868
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1593": {
      "branch": 56,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8834,
        8868
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1594": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A0"
    },
    "1597": {
      "branch": 56,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1598": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1600": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1607": {
      "op": "SHL"
    },
    "1608": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1609": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1612": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1614": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1615": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "ADD",
      "path": "6"
    },
    "1616": {
      "op": "MSTORE"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1621": {
      "op": "DUP3"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1659": {
      "op": "DUP3"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1683": {
      "op": "SHL"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1686": {
      "op": "DUP3"
    },
    "1687": {
      "op": "ADD"
    },
    "1688": {
      "op": "MSTORE"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1691": {
      "op": "ADD"
    },
    "1692": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "1695": {
      "op": "JUMP"
    },
    "1696": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8791,
        8944
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1697": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8989,
        8996
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 13
    },
    "1698": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8989,
        9003
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1699": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8975,
        8978
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1700": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8975,
        8985
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1701": {
      "branch": 57,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8975,
        9003
      ],
      "op": "EQ",
      "path": "6"
    },
    "1702": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C1"
    },
    "1705": {
      "branch": 57,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1706": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1708": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1709": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1715": {
      "op": "SHL"
    },
    "1716": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1717": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1718": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1720": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "ADD",
      "path": "6"
    },
    "1721": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "1724": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1725": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x187C"
    },
    "1728": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        8954,
        9069
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1729": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8954,
        9069
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "SUB"
    },
    "1738": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9087,
        9103
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 14
    },
    "1739": {
      "branch": 58,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9087,
        9103
      ],
      "op": "AND",
      "path": "6"
    },
    "1740": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E7"
    },
    "1743": {
      "branch": 58,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1744": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1746": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1755": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1756": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1758": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "ADD",
      "path": "6"
    },
    "1759": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "1762": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1763": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x179D"
    },
    "1766": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9079,
        9145
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1767": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9079,
        9145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1768": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9175,
        9185
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1769": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9172
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1771": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9196,
        9733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1772": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9220,
        9223
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1773": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9220,
        9230
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1774": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9216,
        9217
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1775": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9216,
        9230
      ],
      "op": "LT",
      "path": "6"
    },
    "1776": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9196,
        9733
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1777": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9196,
        9733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x80E"
    },
    "1780": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9196,
        9733
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1781": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9251,
        9261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1783": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9267
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1784": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9268,
        9269
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1785": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1786": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1787": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1788": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "LT",
      "path": "6"
    },
    "1789": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x708"
    },
    "1792": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1793": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x708"
    },
    "1796": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DA"
    },
    "1799": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9264,
        9270
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1800": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1801": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1803": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "MUL",
      "path": "6"
    },
    "1804": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1806": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "ADD",
      "path": "6"
    },
    "1807": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "ADD",
      "path": "6"
    },
    "1808": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9264,
        9270
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1809": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9251,
        9270
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1810": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9251,
        9270
      ],
      "op": "POP",
      "path": "6"
    },
    "1811": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9284,
        9298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1813": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9308
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1814": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9309,
        9310
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1815": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1816": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1817": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1818": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "LT",
      "path": "6"
    },
    "1819": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x726"
    },
    "1822": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1823": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x726"
    },
    "1826": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DA"
    },
    "1829": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9301,
        9311
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1830": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1831": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1833": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1834": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1835": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "MUL",
      "path": "6"
    },
    "1836": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1837": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1838": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1839": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "ADD",
      "path": "6"
    },
    "1840": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1841": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "ADD",
      "path": "6"
    },
    "1842": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1843": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9326,
        9345
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1845": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1846": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1847": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1848": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9357
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1850": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1851": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1852": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1854": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1855": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1856": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9361
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1863": {
      "op": "SHL"
    },
    "1864": {
      "op": "SUB"
    },
    "1865": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "DUP15",
      "path": "6"
    },
    "1866": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "AND",
      "path": "6"
    },
    "1867": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1868": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1869": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1870": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1871": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1872": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1873": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1874": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1875": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1876": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9348,
        9367
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1877": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1878": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9301,
        9311
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1879": {
      "op": "POP"
    },
    "1880": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9406,
        9427
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 15
    },
    "1881": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9406,
        9427
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1882": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9406,
        9427
      ],
      "op": "LT",
      "path": "6"
    },
    "1883": {
      "branch": 59,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9406,
        9427
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1884": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x777"
    },
    "1887": {
      "branch": 59,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1888": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1890": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1899": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1900": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1902": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "ADD",
      "path": "6"
    },
    "1903": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "1906": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1907": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17E2"
    },
    "1910": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9381,
        9503
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1911": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9381,
        9503
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1912": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 16,
      "value": "0x0"
    },
    "1914": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1915": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1916": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1917": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9554
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1919": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1921": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1922": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1923": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1924": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1926": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1927": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1928": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1935": {
      "op": "SHL"
    },
    "1936": {
      "op": "SUB"
    },
    "1937": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1938": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "DUP16",
      "path": "6"
    },
    "1939": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "AND",
      "path": "6"
    },
    "1940": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1941": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1942": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1943": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1944": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1945": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1946": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1947": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9564
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1948": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9567,
        9587
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1949": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9567,
        9587
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1950": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9567,
        9587
      ],
      "op": "SUB",
      "path": "6"
    },
    "1951": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9587
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1952": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9587
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1953": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9619
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 17
    },
    "1954": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9619
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1955": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9619
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1956": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9619
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1957": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9619
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1958": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9619
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1959": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9629
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1960": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9629
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1961": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9629
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1962": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9629
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1963": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9629
      ],
      "op": "SUB",
      "path": "6"
    },
    "1964": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9629
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1965": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9605,
        9629
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1966": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "DUP14",
      "path": "6",
      "statement": 18
    },
    "1967": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "AND",
      "path": "6"
    },
    "1968": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1969": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1970": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1971": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1972": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1973": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1974": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9674
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1975": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1976": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1977": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9581,
        9587
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1978": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9581,
        9587
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1979": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9545,
        9558
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1980": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C6"
    },
    "1983": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1984": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9581,
        9587
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1985": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9581,
        9587
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1986": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1929"
    },
    "1989": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9657,
        9684
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1990": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1991": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1992": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1993": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9657,
        9684
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2002": {
      "op": "SHL"
    },
    "2003": {
      "op": "SUB"
    },
    "2004": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "DUP11",
      "path": "6",
      "statement": 19
    },
    "2005": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "AND",
      "path": "6"
    },
    "2006": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9706
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2008": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2009": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2010": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2011": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2013": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2014": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2015": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2016": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2018": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2019": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9712
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2020": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2021": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2022": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9716,
        9722
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2023": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9716,
        9722
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2024": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9706
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2025": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F3"
    },
    "2028": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2029": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9716,
        9722
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2030": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9716,
        9722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2031": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1929"
    },
    "2034": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9698,
        9722
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2035": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2036": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2037": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "POP",
      "path": "6"
    },
    "2038": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "POP",
      "path": "6"
    },
    "2039": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2040": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2041": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2042": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9698,
        9722
      ],
      "op": "POP",
      "path": "6"
    },
    "2043": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9237,
        9733
      ],
      "op": "POP",
      "path": "6"
    },
    "2044": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9237,
        9733
      ],
      "op": "POP",
      "path": "6"
    },
    "2045": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9237,
        9733
      ],
      "op": "POP",
      "path": "6"
    },
    "2046": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9232,
        9235
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 20
    },
    "2047": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9232,
        9235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x807"
    },
    "2050": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9232,
        9235
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2051": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9232,
        9235
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19A9"
    },
    "2054": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9232,
        9235
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2055": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9232,
        9235
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2056": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9232,
        9235
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2057": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9232,
        9235
      ],
      "op": "POP",
      "path": "6"
    },
    "2058": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9196,
        9733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6EB"
    },
    "2061": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9196,
        9733
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2062": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9196,
        9733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2063": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9196,
        9733
      ],
      "op": "POP",
      "path": "6"
    },
    "2064": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9778,
        9780
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 21
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "op": "SUB"
    },
    "2073": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "AND",
      "path": "6"
    },
    "2074": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9772,
        9776
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "AND",
      "path": "6"
    },
    "2084": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9762,
        9770
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "AND",
      "path": "6"
    },
    "2094": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "2127": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9782,
        9785
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2128": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9787,
        9794
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2129": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2131": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2132": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x85E"
    },
    "2135": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2136": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2137": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2138": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16C9"
    },
    "2141": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9748,
        9795
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2142": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2143": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2145": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2146": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2147": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2148": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "SUB",
      "path": "6"
    },
    "2149": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2150": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9748,
        9795
      ],
      "op": "LOG4",
      "path": "6"
    },
    "2151": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9806,
        9963
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 22,
      "value": "0x874"
    },
    "2154": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9855,
        9863
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2155": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9877,
        9881
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2156": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9895,
        9897
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2157": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9911,
        9914
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2158": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9928,
        9935
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2159": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9949,
        9953
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2160": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9806,
        9841
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE63"
    },
    "2163": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9806,
        9963
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2164": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9806,
        9963
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2165": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8781,
        9970
      ],
      "op": "POP",
      "path": "6"
    },
    "2166": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "POP",
      "path": "6"
    },
    "2167": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "POP",
      "path": "6"
    },
    "2168": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "POP",
      "path": "6"
    },
    "2169": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "POP",
      "path": "6"
    },
    "2170": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8595,
        9970
      ],
      "op": "POP",
      "path": "6"
    },
    "2171": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        8595,
        9970
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2172": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2173": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5653,
        5669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2175": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5725,
        5728
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 23
    },
    "2176": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5725,
        5735
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2177": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5706,
        5714
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2178": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5706,
        5721
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2179": {
      "branch": 60,
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5706,
        5735
      ],
      "op": "EQ",
      "path": "6"
    },
    "2180": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8E1"
    },
    "2183": {
      "branch": 60,
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2184": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2186": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2195": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2198": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2200": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2201": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "ADD",
      "path": "6"
    },
    "2202": {
      "op": "MSTORE"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2207": {
      "op": "DUP3"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "op": "MSTORE"
    },
    "2210": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2245": {
      "op": "DUP3"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "MSTORE"
    },
    "2248": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "2272": {
      "op": "JUMP"
    },
    "2273": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5685,
        5802
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2274": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5813,
        5843
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2276": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5860,
        5868
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2277": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5860,
        5875
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2278": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2287": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2288": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "GT",
      "path": "6"
    },
    "2289": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2290": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "2293": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2294": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "2297": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19F0"
    },
    "2300": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5846,
        5876
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2301": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2302": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2304": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2305": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2306": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2307": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2308": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2309": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2310": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2312": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "MUL",
      "path": "6"
    },
    "2313": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2315": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "ADD",
      "path": "6"
    },
    "2316": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2317": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "ADD",
      "path": "6"
    },
    "2318": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2320": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2321": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2322": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2323": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x926"
    },
    "2326": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2327": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2328": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2330": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "ADD",
      "path": "6"
    },
    "2331": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2333": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2334": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "MUL",
      "path": "6"
    },
    "2335": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2336": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2337": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2338": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "2339": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "ADD",
      "path": "6"
    },
    "2340": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2343": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5846,
        5876
      ],
      "op": "POP",
      "path": "6"
    },
    "2344": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5813,
        5876
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2345": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5813,
        5876
      ],
      "op": "POP",
      "path": "6"
    },
    "2346": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5892,
        5901
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2348": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6007
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2349": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5911,
        5919
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2350": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5911,
        5926
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2351": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5907,
        5908
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2352": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5907,
        5926
      ],
      "op": "LT",
      "path": "6"
    },
    "2353": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6007
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2354": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6007
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x99E"
    },
    "2357": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6007
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2358": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5966,
        5996
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0x971"
    },
    "2361": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5984
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2362": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5985,
        5986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2363": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2364": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2365": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2366": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "LT",
      "path": "6"
    },
    "2367": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94A"
    },
    "2370": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2371": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94A"
    },
    "2374": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DA"
    },
    "2377": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5976,
        5987
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2378": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2379": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2381": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "MUL",
      "path": "6"
    },
    "2382": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2384": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "ADD",
      "path": "6"
    },
    "2385": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "ADD",
      "path": "6"
    },
    "2386": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5976,
        5987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2387": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5992
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2388": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5993,
        5994
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2389": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2390": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2391": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2392": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "LT",
      "path": "6"
    },
    "2393": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x964"
    },
    "2396": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2397": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x964"
    },
    "2400": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DA"
    },
    "2403": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5989,
        5995
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2404": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2405": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2407": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "MUL",
      "path": "6"
    },
    "2408": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2410": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "ADD",
      "path": "6"
    },
    "2411": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "ADD",
      "path": "6"
    },
    "2412": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5989,
        5995
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2413": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5966,
        5975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F3"
    },
    "2416": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5966,
        5996
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2417": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5966,
        5996
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2418": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5960
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2419": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5961,
        5962
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2420": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2421": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2422": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2423": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "LT",
      "path": "6"
    },
    "2424": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x983"
    },
    "2427": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2428": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x983"
    },
    "2431": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DA"
    },
    "2434": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5947,
        5963
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2435": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2436": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2438": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2439": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2440": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "MUL",
      "path": "6"
    },
    "2441": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2442": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2443": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2444": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "ADD",
      "path": "6"
    },
    "2445": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5963
      ],
      "op": "ADD",
      "path": "6"
    },
    "2446": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5947,
        5996
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2447": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5928,
        5931
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0x997"
    },
    "2450": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5928,
        5931
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2451": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5928,
        5931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19A9"
    },
    "2454": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5928,
        5931
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2455": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5928,
        5931
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2456": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5928,
        5931
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2457": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5928,
        5931
      ],
      "op": "POP",
      "path": "6"
    },
    "2458": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6007
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x92C"
    },
    "2461": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6007
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2462": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6007
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6024,
        6037
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 26
    },
    "2465": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5518,
        6044
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "op": "POP"
    },
    "2468": {
      "op": "POP"
    },
    "2469": {
      "fn": "Loot.balanceOfBatch",
      "jump": "o",
      "offset": [
        5518,
        6044
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2470": {
      "fn": "Loot.balanceOf",
      "offset": [
        4714,
        4970
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2471": {
      "fn": "Loot.balanceOf",
      "offset": [
        4795,
        4802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2479": {
      "op": "SHL"
    },
    "2480": {
      "op": "SUB"
    },
    "2481": {
      "fn": "Loot.balanceOf",
      "offset": [
        4839,
        4860
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 27
    },
    "2482": {
      "branch": 61,
      "fn": "Loot.balanceOf",
      "offset": [
        4839,
        4860
      ],
      "op": "AND",
      "path": "6"
    },
    "2483": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9CE"
    },
    "2486": {
      "branch": 61,
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2487": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2489": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2498": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2499": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2501": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "ADD",
      "path": "6"
    },
    "2502": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "2505": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2506": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1752"
    },
    "2509": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        4818,
        4929
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2510": {
      "fn": "Loot.balanceOf",
      "offset": [
        4818,
        4929
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2511": {
      "op": "POP"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "AND",
      "path": "6",
      "statement": 28
    },
    "2521": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4954
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2523": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2524": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2525": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2526": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2528": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2529": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2530": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2531": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2533": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2534": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2535": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2536": {
      "fn": "Loot.balanceOf",
      "offset": [
        4946,
        4963
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2537": {
      "fn": "Loot.balanceOf",
      "jump": "o",
      "offset": [
        4714,
        4970
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2538": {
      "fn": "Loot.mint",
      "offset": [
        10289,
        10879
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2539": {
      "offset": [
        3917,
        3923
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "2541": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3923
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2543": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3923
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2544": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3923
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2545": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3923
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2546": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3923
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2549": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3923
      ],
      "op": "EXP",
      "path": "6"
    },
    "2550": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3923
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2551": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3923
      ],
      "op": "DIV",
      "path": "6"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2558": {
      "op": "SHL"
    },
    "2559": {
      "op": "SUB"
    },
    "2560": {
      "offset": [
        3917,
        3923
      ],
      "op": "AND",
      "path": "6"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2567": {
      "op": "SHL"
    },
    "2568": {
      "op": "SUB"
    },
    "2569": {
      "offset": [
        3917,
        3935
      ],
      "op": "AND",
      "path": "6"
    },
    "2570": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3935
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE7F43C68"
    },
    "2575": {
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2577": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2578": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2579": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2584": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "AND",
      "path": "6"
    },
    "2585": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2587": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "SHL",
      "path": "6"
    },
    "2588": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2589": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2590": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2592": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "ADD",
      "path": "6"
    },
    "2593": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2595": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2597": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2598": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2599": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2600": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "SUB",
      "path": "6"
    },
    "2601": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2602": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2603": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2604": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2605": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2606": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2607": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2608": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA38"
    },
    "2611": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2612": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2614": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2615": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2616": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2617": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "2618": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "GAS",
      "path": "6"
    },
    "2619": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2620": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2621": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2622": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2623": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA4C"
    },
    "2626": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2627": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2628": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2630": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2631": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2632": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2633": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2635": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2636": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2637": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "2638": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "2639": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "2640": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "2641": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2643": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2644": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2645": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2647": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "NOT",
      "path": "6"
    },
    "2648": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2650": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2651": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "ADD",
      "path": "6"
    },
    "2652": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "AND",
      "path": "6"
    },
    "2653": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2654": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "ADD",
      "path": "6"
    },
    "2655": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2656": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2658": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2659": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "POP",
      "path": "6"
    },
    "2660": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2661": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "ADD",
      "path": "6"
    },
    "2662": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2663": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA70"
    },
    "2666": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2667": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2668": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11A7"
    },
    "2671": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2672": {
      "fn": "Loot.mint",
      "offset": [
        3917,
        3937
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2679": {
      "op": "SHL"
    },
    "2680": {
      "op": "SUB"
    },
    "2681": {
      "offset": [
        3903,
        3937
      ],
      "op": "AND",
      "path": "6"
    },
    "2682": {
      "offset": [
        3903,
        3913
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "op": "SUB"
    },
    "2691": {
      "offset": [
        3903,
        3937
      ],
      "op": "AND",
      "path": "6"
    },
    "2692": {
      "branch": 62,
      "fn": "Loot.mint",
      "offset": [
        3903,
        3937
      ],
      "op": "EQ",
      "path": "6"
    },
    "2693": {
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA0"
    },
    "2696": {
      "branch": 62,
      "offset": [
        3882,
        4011
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2697": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2699": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "offset": [
        3882,
        4011
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2708": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2709": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2711": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "ADD",
      "path": "6"
    },
    "2712": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "2715": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2716": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x182C"
    },
    "2719": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        3882,
        4011
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2720": {
      "fn": "Loot.mint",
      "offset": [
        3882,
        4011
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2727": {
      "op": "SHL"
    },
    "2728": {
      "op": "SUB"
    },
    "2729": {
      "fn": "Loot.mint",
      "offset": [
        10449,
        10470
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 29
    },
    "2730": {
      "branch": 63,
      "fn": "Loot.mint",
      "offset": [
        10449,
        10470
      ],
      "op": "AND",
      "path": "6"
    },
    "2731": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC6"
    },
    "2734": {
      "branch": 63,
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2735": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2737": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2744": {
      "op": "SHL"
    },
    "2745": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2746": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2747": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2749": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "ADD",
      "path": "6"
    },
    "2750": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "2753": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2754": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C4"
    },
    "2757": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10441,
        10508
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2758": {
      "fn": "Loot.mint",
      "offset": [
        10441,
        10508
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2759": {
      "fn": "Loot.mint",
      "offset": [
        10519,
        10535
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2761": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 30
    },
    "2762": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2763": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2764": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10568
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2766": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2768": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2769": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2770": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2771": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2773": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2774": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2775": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10572
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "op": "SUB"
    },
    "2784": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2785": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "AND",
      "path": "6"
    },
    "2786": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2787": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2788": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2789": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2790": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2791": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2792": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2793": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2794": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2795": {
      "fn": "Loot.mint",
      "offset": [
        10538,
        10548
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2796": {
      "fn": "Loot.mint",
      "offset": [
        10538,
        10548
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2797": {
      "fn": "Loot.mint",
      "offset": [
        10585,
        10591
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2798": {
      "fn": "Loot.mint",
      "offset": [
        10585,
        10591
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2799": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2800": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAFA"
    },
    "2803": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2804": {
      "fn": "Loot.mint",
      "offset": [
        10585,
        10591
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2805": {
      "fn": "Loot.mint",
      "offset": [
        10585,
        10591
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2806": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1929"
    },
    "2809": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10559,
        10591
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2810": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2811": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2812": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2813": {
      "fn": "Loot.mint",
      "offset": [
        10559,
        10591
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2814": {
      "op": "POP"
    },
    "2815": {
      "op": "POP"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2822": {
      "op": "SHL"
    },
    "2823": {
      "op": "SUB"
    },
    "2824": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 31
    },
    "2825": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "AND",
      "path": "6"
    },
    "2826": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10609
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2828": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2829": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2830": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2831": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2833": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2834": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2835": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2836": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2838": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2839": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10618
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2840": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2841": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2842": {
      "fn": "Loot.mint",
      "offset": [
        10622,
        10628
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2843": {
      "fn": "Loot.mint",
      "offset": [
        10622,
        10628
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2844": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10609
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2845": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB27"
    },
    "2848": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2849": {
      "fn": "Loot.mint",
      "offset": [
        10622,
        10628
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2850": {
      "fn": "Loot.mint",
      "offset": [
        10622,
        10628
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2851": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1929"
    },
    "2854": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10601,
        10628
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2855": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2856": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2857": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2858": {
      "fn": "Loot.mint",
      "offset": [
        10601,
        10628
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2859": {
      "op": "POP"
    },
    "2860": {
      "op": "POP"
    },
    "2861": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 32,
      "value": "0x40"
    },
    "2863": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2864": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2865": {
      "op": "DUP6"
    },
    "2866": {
      "op": "DUP2"
    },
    "2867": {
      "op": "MSTORE"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2870": {
      "op": "DUP2"
    },
    "2871": {
      "op": "ADD"
    },
    "2872": {
      "op": "DUP6"
    },
    "2873": {
      "op": "SWAP1"
    },
    "2874": {
      "op": "MSTORE"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2881": {
      "op": "SHL"
    },
    "2882": {
      "op": "SUB"
    },
    "2883": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2884": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2885": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "AND",
      "path": "6"
    },
    "2886": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2887": {
      "fn": "Loot.mint",
      "offset": [
        10676,
        10677
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2889": {
      "fn": "Loot.mint",
      "offset": [
        10676,
        10677
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2890": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2891": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2892": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "AND",
      "path": "6"
    },
    "2893": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2894": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "2927": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2928": {
      "op": "ADD"
    },
    "2929": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2931": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2932": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2933": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2934": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "SUB",
      "path": "6"
    },
    "2935": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2936": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10700
      ],
      "op": "LOG4",
      "path": "6"
    },
    "2937": {
      "fn": "Loot.mint",
      "offset": [
        10711,
        10872
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 33,
      "value": "0x616"
    },
    "2940": {
      "fn": "Loot.mint",
      "offset": [
        10755,
        10763
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2941": {
      "fn": "Loot.mint",
      "offset": [
        10785,
        10786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2943": {
      "fn": "Loot.mint",
      "offset": [
        10801,
        10808
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2944": {
      "fn": "Loot.mint",
      "offset": [
        10822,
        10824
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2945": {
      "fn": "Loot.mint",
      "offset": [
        10838,
        10844
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2946": {
      "fn": "Loot.mint",
      "offset": [
        10858,
        10862
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2947": {
      "fn": "Loot.mint",
      "offset": [
        10711,
        10741
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFCE"
    },
    "2950": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10711,
        10872
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2951": {
      "offset": [
        1339,
        1359
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2952": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "2954": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2955": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2956": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "2959": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2960": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1941"
    },
    "2963": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        1339,
        1359
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2964": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2965": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6356,
        6366
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 34
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "op": "SUB"
    },
    "2974": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6356,
        6378
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2975": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6356,
        6378
      ],
      "op": "AND",
      "path": "6"
    },
    "2976": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6356,
        6378
      ],
      "op": "EQ",
      "path": "6"
    },
    "2977": {
      "branch": 64,
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6356,
        6378
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2978": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBFF"
    },
    "2981": {
      "branch": 64,
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2982": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2984": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2993": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2996": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2998": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2999": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "ADD",
      "path": "6"
    },
    "3000": {
      "op": "MSTORE"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3005": {
      "op": "DUP3"
    },
    "3006": {
      "op": "ADD"
    },
    "3007": {
      "op": "MSTORE"
    },
    "3008": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3043": {
      "op": "DUP3"
    },
    "3044": {
      "op": "ADD"
    },
    "3045": {
      "op": "MSTORE"
    },
    "3046": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3061": {
      "op": "DUP3"
    },
    "3062": {
      "op": "ADD"
    },
    "3063": {
      "op": "MSTORE"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "3070": {
      "op": "JUMP"
    },
    "3071": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6335,
        6445
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3072": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6475,
        6485
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 35
    },
    "3073": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3075": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3076": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3077": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3078": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6474
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3080": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3082": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3083": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3084": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3085": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3087": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3088": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3089": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6486
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3096": {
      "op": "SHL"
    },
    "3097": {
      "op": "SUB"
    },
    "3098": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3099": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "AND",
      "path": "6"
    },
    "3100": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3101": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3102": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3103": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3104": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3105": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3106": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3107": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3108": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3109": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3110": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3111": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3114": {
      "op": "NOT"
    },
    "3115": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "AND",
      "path": "6"
    },
    "3116": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3117": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3118": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3119": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3120": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3121": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "OR",
      "path": "6"
    },
    "3122": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3123": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3124": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6507
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3125": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 36
    },
    "3126": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3127": {
      "op": "SWAP1"
    },
    "3128": {
      "op": "DUP2"
    },
    "3129": {
      "op": "MSTORE"
    },
    "3130": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3131": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6456,
        6496
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3132": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6475,
        6485
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3133": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "3166": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3170": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3171": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3172": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3173": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "SUB",
      "path": "6"
    },
    "3174": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3175": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6522,
        6568
      ],
      "op": "LOG3",
      "path": "6"
    },
    "3176": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "POP",
      "path": "6"
    },
    "3177": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6229,
        6575
      ],
      "op": "POP",
      "path": "6"
    },
    "3178": {
      "fn": "Loot.setApprovalForAll",
      "jump": "o",
      "offset": [
        6229,
        6575
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3179": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6680,
        6874
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "op": "SUB"
    },
    "3188": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 37
    },
    "3189": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3190": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "AND",
      "path": "6"
    },
    "3191": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6803,
        6807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3193": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3194": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3195": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3196": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6848
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3198": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3200": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3201": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3202": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3203": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3205": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3206": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3207": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6857
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3208": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3209": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3210": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3211": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "AND",
      "path": "6"
    },
    "3212": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3213": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3214": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3215": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3216": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3217": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3218": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3219": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3220": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3222": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "AND",
      "path": "6"
    },
    "3223": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6830,
        6867
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3224": {
      "fn": "Loot.isApprovedForAll",
      "jump": "o",
      "offset": [
        6680,
        6874
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3225": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3232": {
      "op": "SHL"
    },
    "3233": {
      "op": "SUB"
    },
    "3234": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7562,
        7580
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 38
    },
    "3235": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7562,
        7580
      ],
      "op": "AND",
      "path": "6"
    },
    "3236": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7570,
        7580
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3237": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7562,
        7580
      ],
      "op": "EQ",
      "path": "6"
    },
    "3238": {
      "branch": 65,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7562,
        7580
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3239": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7562,
        7618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB5"
    },
    "3242": {
      "branch": 65,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7562,
        7618
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3243": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7562,
        7618
      ],
      "op": "POP",
      "path": "6"
    },
    "3244": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7584,
        7618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB5"
    },
    "3247": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7601,
        7605
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3248": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7607,
        7617
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3249": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7584,
        7600
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC6B"
    },
    "3252": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7584,
        7618
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3253": {
      "branch": 66,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7584,
        7618
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3254": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD13"
    },
    "3257": {
      "branch": 66,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3258": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3260": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3267": {
      "op": "SHL"
    },
    "3268": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3269": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3272": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3274": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3275": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "ADD",
      "path": "6"
    },
    "3276": {
      "op": "MSTORE"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3281": {
      "op": "DUP3"
    },
    "3282": {
      "op": "ADD"
    },
    "3283": {
      "op": "MSTORE"
    },
    "3284": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3319": {
      "op": "DUP3"
    },
    "3320": {
      "op": "ADD"
    },
    "3321": {
      "op": "MSTORE"
    },
    "3322": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3337": {
      "op": "DUP3"
    },
    "3338": {
      "op": "ADD"
    },
    "3339": {
      "op": "MSTORE"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3342": {
      "op": "ADD"
    },
    "3343": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "3346": {
      "op": "JUMP"
    },
    "3347": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7541,
        7685
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3354": {
      "op": "SHL"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7703,
        7719
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 39
    },
    "3357": {
      "branch": 67,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7703,
        7719
      ],
      "op": "AND",
      "path": "6"
    },
    "3358": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD39"
    },
    "3361": {
      "branch": 67,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3362": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3364": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3371": {
      "op": "SHL"
    },
    "3372": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3373": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3374": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3376": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "ADD",
      "path": "6"
    },
    "3377": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "3380": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3381": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x179D"
    },
    "3384": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7695,
        7761
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3385": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7695,
        7761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3386": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7772,
        7788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3388": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3389": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3390": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3391": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7843
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3393": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3395": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3396": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3397": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3398": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3400": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3401": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3402": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7847
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3412": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "AND",
      "path": "6"
    },
    "3413": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3414": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3415": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3416": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3417": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3418": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3419": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3420": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7834,
        7853
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3421": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7791,
        7801
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3422": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7791,
        7801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3423": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7884,
        7905
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 40
    },
    "3424": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7884,
        7905
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3425": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7884,
        7905
      ],
      "op": "LT",
      "path": "6"
    },
    "3426": {
      "branch": 68,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7884,
        7905
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3427": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD7E"
    },
    "3430": {
      "branch": 68,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3431": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3433": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3440": {
      "op": "SHL"
    },
    "3441": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3442": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3443": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3445": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "ADD",
      "path": "6"
    },
    "3446": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "3449": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3450": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17E2"
    },
    "3453": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7863,
        7973
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3454": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7863,
        7973
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3455": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 41,
      "value": "0x0"
    },
    "3457": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3458": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3459": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3460": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3462": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3464": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3465": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3466": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3467": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3469": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3470": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3471": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3478": {
      "op": "SHL"
    },
    "3479": {
      "op": "SUB"
    },
    "3480": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3481": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "DUP13",
      "path": "6"
    },
    "3482": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "AND",
      "path": "6"
    },
    "3483": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3484": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3485": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3486": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3487": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3488": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3489": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3490": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8026
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3491": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8029,
        8049
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3492": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8029,
        8049
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3493": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8029,
        8049
      ],
      "op": "SUB",
      "path": "6"
    },
    "3494": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8049
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3495": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8049
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3496": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8077
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 42
    },
    "3497": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8077
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3498": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3499": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8077
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3500": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8077
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3501": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8077
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3502": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8087
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3503": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3504": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8087
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3505": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3506": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8087
      ],
      "op": "SUB",
      "path": "6"
    },
    "3507": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3508": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8063,
        8087
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3509": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "DUP11",
      "path": "6",
      "statement": 43
    },
    "3510": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "AND",
      "path": "6"
    },
    "3511": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3512": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3513": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3514": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3515": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3516": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3517": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8124
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3518": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3519": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3520": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8043,
        8049
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3521": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8043,
        8049
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3522": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8007,
        8020
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3523": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDCD"
    },
    "3526": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3527": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8043,
        8049
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3528": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8043,
        8049
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3529": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1929"
    },
    "3532": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8107,
        8134
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3533": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3534": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3535": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3536": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8107,
        8134
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3537": {
      "op": "POP"
    },
    "3538": {
      "op": "POP"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3545": {
      "op": "SHL"
    },
    "3546": {
      "op": "SUB"
    },
    "3547": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 44
    },
    "3548": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "AND",
      "path": "6"
    },
    "3549": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8152
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3551": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3552": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3553": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3554": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3556": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3557": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3558": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3559": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3561": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3562": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8156
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3563": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3564": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3565": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8160,
        8166
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3566": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8160,
        8166
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3567": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8152
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3568": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDFA"
    },
    "3571": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3572": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8160,
        8166
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3573": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8160,
        8166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3574": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1929"
    },
    "3577": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8144,
        8166
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3578": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3579": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3580": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3581": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8144,
        8166
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 45,
      "value": "0x40"
    },
    "3586": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3587": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3588": {
      "op": "DUP7"
    },
    "3589": {
      "op": "DUP2"
    },
    "3590": {
      "op": "MSTORE"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3593": {
      "op": "DUP2"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "op": "DUP7"
    },
    "3596": {
      "op": "SWAP1"
    },
    "3597": {
      "op": "MSTORE"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3604": {
      "op": "SHL"
    },
    "3605": {
      "op": "SUB"
    },
    "3606": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3607": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3608": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "AND",
      "path": "6"
    },
    "3609": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3610": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3611": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3612": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "AND",
      "path": "6"
    },
    "3613": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3614": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3615": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3616": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "AND",
      "path": "6"
    },
    "3617": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3618": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "3651": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3652": {
      "op": "ADD"
    },
    "3653": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3655": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3656": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3657": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3658": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "SUB",
      "path": "6"
    },
    "3659": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3660": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8182,
        8228
      ],
      "op": "LOG4",
      "path": "6"
    },
    "3661": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8239,
        8307
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 46,
      "value": "0xE5A"
    },
    "3664": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8270,
        8278
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3665": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8280,
        8284
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3666": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8286,
        8288
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3667": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8290,
        8292
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3668": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8294,
        8300
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3669": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8302,
        8306
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3670": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8239,
        8269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFCE"
    },
    "3673": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8239,
        8307
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3674": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8239,
        8307
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3675": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7531,
        8314
      ],
      "op": "POP",
      "path": "6"
    },
    "3676": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7531,
        8314
      ],
      "op": "POP",
      "path": "6"
    },
    "3677": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "POP",
      "path": "6"
    },
    "3678": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "POP",
      "path": "6"
    },
    "3679": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "POP",
      "path": "6"
    },
    "3680": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "POP",
      "path": "6"
    },
    "3681": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7370,
        8314
      ],
      "op": "POP",
      "path": "6"
    },
    "3682": {
      "fn": "Loot.safeTransferFrom",
      "jump": "o",
      "offset": [
        7370,
        8314
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3683": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        12843,
        13789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3690": {
      "op": "SHL"
    },
    "3691": {
      "op": "SUB"
    },
    "3692": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13075,
        13088
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3693": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13075,
        13088
      ],
      "op": "AND",
      "path": "6"
    },
    "3694": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3695": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "3",
      "statement": 47
    },
    "3696": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13071,
        13783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x874"
    },
    "3699": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13071,
        13783
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3700": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3702": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3703": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3710": {
      "op": "SHL"
    },
    "3711": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3712": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3719": {
      "op": "SHL"
    },
    "3720": {
      "op": "SUB"
    },
    "3721": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13169
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3722": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13169
      ],
      "op": "AND",
      "path": "6"
    },
    "3723": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13169
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3724": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13169
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBC197C81"
    },
    "3729": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13169
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3730": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA7"
    },
    "3733": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3734": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13191,
        13199
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3735": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13191,
        13199
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3736": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13221,
        13225
      ],
      "op": "DUP10",
      "path": "6"
    },
    "3737": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13221,
        13225
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3738": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13247,
        13250
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3739": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13247,
        13250
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3740": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13272,
        13279
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3741": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13272,
        13279
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3742": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13301,
        13305
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3743": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13301,
        13305
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3744": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3746": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "ADD",
      "path": "6"
    },
    "3747": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1613"
    },
    "3750": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13126,
        13323
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3751": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3752": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3754": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3756": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3757": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3758": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3759": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "SUB",
      "path": "6"
    },
    "3760": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3761": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3763": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3764": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3765": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3766": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3767": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3768": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3769": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC1"
    },
    "3772": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3773": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3775": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3776": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3777": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3778": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "POP",
      "path": "6"
    },
    "3779": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "GAS",
      "path": "6"
    },
    "3780": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "CALL",
      "path": "6"
    },
    "3781": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3782": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "POP",
      "path": "6"
    },
    "3783": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "POP",
      "path": "6"
    },
    "3784": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "POP",
      "path": "6"
    },
    "3785": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3786": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3787": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEF1"
    },
    "3790": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3791": {
      "op": "POP"
    },
    "3792": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3794": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3795": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3796": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3798": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3799": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3800": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3801": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "ADD",
      "path": "6"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3804": {
      "op": "NOT"
    },
    "3805": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "AND",
      "path": "6"
    },
    "3806": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3807": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "ADD",
      "path": "6"
    },
    "3808": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3809": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3810": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3811": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEEE"
    },
    "3814": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3815": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3816": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "ADD",
      "path": "6"
    },
    "3817": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3818": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1555"
    },
    "3821": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13126,
        13323
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3822": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3823": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3825": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13126,
        13323
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3826": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF9E"
    },
    "3829": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3830": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEFD"
    },
    "3833": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A06"
    },
    "3836": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3837": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3838": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3839": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8C379A0"
    },
    "3844": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "EQ",
      "path": "6"
    },
    "3845": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3846": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF37"
    },
    "3849": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3850": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "POP",
      "path": "6"
    },
    "3851": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF12"
    },
    "3854": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A22"
    },
    "3857": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3858": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3859": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3860": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF1D"
    },
    "3863": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3864": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "POP",
      "path": "6"
    },
    "3865": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF39"
    },
    "3868": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3869": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3870": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13649,
        13655
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 48
    },
    "3871": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3873": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3880": {
      "op": "SHL"
    },
    "3881": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3882": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3883": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3885": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "ADD",
      "path": "6"
    },
    "3886": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "3889": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3890": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3891": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13642,
        13656
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F7"
    },
    "3894": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13642,
        13656
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3895": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3896": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "POP",
      "path": "6"
    },
    "3897": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3898": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13696,
        13758
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 49,
      "value": "0x40"
    },
    "3900": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13696,
        13758
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3907": {
      "op": "SHL"
    },
    "3908": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13696,
        13758
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3909": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13696,
        13758
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3912": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13696,
        13758
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3914": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13696,
        13758
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3915": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13696,
        13758
      ],
      "op": "ADD",
      "path": "6"
    },
    "3916": {
      "op": "MSTORE"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3921": {
      "op": "DUP3"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "MSTORE"
    },
    "3924": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3959": {
      "op": "DUP3"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3985": {
      "op": "SHL"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3988": {
      "op": "DUP3"
    },
    "3989": {
      "op": "ADD"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13696,
        13758
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "3997": {
      "op": "JUMP"
    },
    "3998": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13106,
        13773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4005": {
      "op": "SHL"
    },
    "4006": {
      "op": "SUB"
    },
    "4007": {
      "op": "NOT"
    },
    "4008": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13405,
        13465
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4009": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13405,
        13465
      ],
      "op": "AND",
      "path": "6"
    },
    "4010": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4017": {
      "op": "SHL"
    },
    "4018": {
      "branch": 69,
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13405,
        13465
      ],
      "op": "EQ",
      "path": "6"
    },
    "4019": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13380,
        13575
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE5A"
    },
    "4022": {
      "branch": 69,
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13380,
        13575
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4023": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 50,
      "value": "0x40"
    },
    "4025": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4032": {
      "op": "SHL"
    },
    "4033": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4034": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4035": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4037": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "ADD",
      "path": "6"
    },
    "4038": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "4041": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4042": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13506,
        13556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x170A"
    },
    "4045": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13506,
        13556
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4046": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        11966,
        12837
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4053": {
      "op": "SHL"
    },
    "4054": {
      "op": "SUB"
    },
    "4055": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12173,
        12186
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4056": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12173,
        12186
      ],
      "op": "AND",
      "path": "6"
    },
    "4057": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4058": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4059": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12169,
        12831
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x874"
    },
    "4062": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12169,
        12831
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4063": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4065": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4066": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4073": {
      "op": "SHL"
    },
    "4074": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4075": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4082": {
      "op": "SHL"
    },
    "4083": {
      "op": "SUB"
    },
    "4084": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12262
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4085": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12262
      ],
      "op": "AND",
      "path": "6"
    },
    "4086": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4087": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12262
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF23A6E61"
    },
    "4092": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12262
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4093": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1012"
    },
    "4096": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4097": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12284,
        12292
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4098": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12284,
        12292
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4099": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12314,
        12318
      ],
      "op": "DUP10",
      "path": "6"
    },
    "4100": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12314,
        12318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4101": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12340,
        12342
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4102": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12340,
        12342
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4103": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12364,
        12370
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4104": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12364,
        12370
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4105": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12392,
        12396
      ],
      "op": "DUP9",
      "path": "6"
    },
    "4106": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12392,
        12396
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4107": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4109": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "ADD",
      "path": "6"
    },
    "4110": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1671"
    },
    "4113": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12224,
        12414
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4114": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4115": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4117": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4119": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4120": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4121": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4122": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "SUB",
      "path": "6"
    },
    "4123": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4124": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4126": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4127": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4128": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4129": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4130": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4131": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4132": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102C"
    },
    "4135": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4136": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4138": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4139": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4140": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4141": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "POP",
      "path": "6"
    },
    "4142": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "GAS",
      "path": "6"
    },
    "4143": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "CALL",
      "path": "6"
    },
    "4144": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4145": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "POP",
      "path": "6"
    },
    "4146": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "POP",
      "path": "6"
    },
    "4147": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "POP",
      "path": "6"
    },
    "4148": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4149": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4150": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x105C"
    },
    "4153": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4154": {
      "op": "POP"
    },
    "4155": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4157": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4158": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4159": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4161": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4162": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4163": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4164": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "ADD",
      "path": "6"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4167": {
      "op": "NOT"
    },
    "4168": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "AND",
      "path": "6"
    },
    "4169": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4170": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "ADD",
      "path": "6"
    },
    "4171": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4172": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4173": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4174": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1059"
    },
    "4177": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4178": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4179": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "ADD",
      "path": "6"
    },
    "4180": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4181": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1555"
    },
    "4184": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12224,
        12414
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4185": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4186": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4188": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12224,
        12414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4189": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12204,
        12821
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1068"
    },
    "4192": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12204,
        12821
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4193": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12204,
        12821
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEFD"
    },
    "4196": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12204,
        12821
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A06"
    },
    "4199": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12204,
        12821
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4200": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12204,
        12821
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4207": {
      "op": "SHL"
    },
    "4208": {
      "op": "SUB"
    },
    "4209": {
      "op": "NOT"
    },
    "4210": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12475,
        12530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4211": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12475,
        12530
      ],
      "op": "AND",
      "path": "6"
    },
    "4212": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4219": {
      "op": "SHL"
    },
    "4220": {
      "branch": 70,
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12475,
        12530
      ],
      "op": "EQ",
      "path": "6"
    },
    "4221": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12471,
        12623
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE5A"
    },
    "4224": {
      "branch": 70,
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12471,
        12623
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4225": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 51,
      "value": "0x40"
    },
    "4227": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4234": {
      "op": "SHL"
    },
    "4235": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4236": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4237": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4239": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "ADD",
      "path": "6"
    },
    "4240": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "4243": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4244": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12554,
        12604
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x170A"
    },
    "4247": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12554,
        12604
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4248": {
      "op": "JUMPDEST"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4251": {
      "op": "DUP3"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4254": {
      "op": "DUP4"
    },
    "4255": {
      "op": "ADD"
    },
    "4256": {
      "op": "SLT"
    },
    "4257": {
      "op": "PUSH2",
      "value": "0x10A9"
    },
    "4260": {
      "op": "JUMPI"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4263": {
      "op": "DUP1"
    },
    "4264": {
      "op": "REVERT"
    },
    "4265": {
      "op": "JUMPDEST"
    },
    "4266": {
      "op": "DUP2"
    },
    "4267": {
      "op": "CALLDATALOAD"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4270": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4273": {
      "op": "DUP3"
    },
    "4274": {
      "op": "PUSH2",
      "value": "0x1905"
    },
    "4277": {
      "jump": "i",
      "op": "JUMP"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4281": {
      "op": "MLOAD"
    },
    "4282": {
      "op": "PUSH2",
      "value": "0x10C3"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "DUP3"
    },
    "4287": {
      "op": "PUSH2",
      "value": "0x197C"
    },
    "4290": {
      "jump": "i",
      "op": "JUMP"
    },
    "4291": {
      "op": "JUMPDEST"
    },
    "4292": {
      "op": "DUP4"
    },
    "4293": {
      "op": "DUP2"
    },
    "4294": {
      "op": "MSTORE"
    },
    "4295": {
      "op": "DUP3"
    },
    "4296": {
      "op": "DUP2"
    },
    "4297": {
      "op": "ADD"
    },
    "4298": {
      "op": "SWAP2"
    },
    "4299": {
      "op": "POP"
    },
    "4300": {
      "op": "DUP6"
    },
    "4301": {
      "op": "DUP4"
    },
    "4302": {
      "op": "ADD"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4305": {
      "op": "DUP6"
    },
    "4306": {
      "op": "SWAP1"
    },
    "4307": {
      "op": "SHL"
    },
    "4308": {
      "op": "DUP8"
    },
    "4309": {
      "op": "ADD"
    },
    "4310": {
      "op": "DUP5"
    },
    "4311": {
      "op": "ADD"
    },
    "4312": {
      "op": "DUP9"
    },
    "4313": {
      "op": "LT"
    },
    "4314": {
      "op": "ISZERO"
    },
    "4315": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4318": {
      "op": "JUMPI"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4321": {
      "op": "DUP1"
    },
    "4322": {
      "op": "REVERT"
    },
    "4323": {
      "op": "JUMPDEST"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "DUP6"
    },
    "4328": {
      "op": "DUP2"
    },
    "4329": {
      "op": "LT"
    },
    "4330": {
      "op": "ISZERO"
    },
    "4331": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4334": {
      "op": "JUMPI"
    },
    "4335": {
      "op": "DUP2"
    },
    "4336": {
      "op": "CALLDATALOAD"
    },
    "4337": {
      "op": "DUP5"
    },
    "4338": {
      "op": "MSTORE"
    },
    "4339": {
      "op": "SWAP3"
    },
    "4340": {
      "op": "DUP5"
    },
    "4341": {
      "op": "ADD"
    },
    "4342": {
      "op": "SWAP3"
    },
    "4343": {
      "op": "SWAP1"
    },
    "4344": {
      "op": "DUP5"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "SWAP1"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "PUSH2",
      "value": "0x10E6"
    },
    "4353": {
      "op": "JUMP"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "POP"
    },
    "4356": {
      "op": "SWAP1"
    },
    "4357": {
      "op": "SWAP8"
    },
    "4358": {
      "op": "SWAP7"
    },
    "4359": {
      "op": "POP"
    },
    "4360": {
      "op": "POP"
    },
    "4361": {
      "op": "POP"
    },
    "4362": {
      "op": "POP"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "op": "POP"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "jump": "o",
      "op": "JUMP"
    },
    "4367": {
      "op": "JUMPDEST"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4370": {
      "op": "DUP3"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4373": {
      "op": "DUP4"
    },
    "4374": {
      "op": "ADD"
    },
    "4375": {
      "op": "SLT"
    },
    "4376": {
      "op": "PUSH2",
      "value": "0x1120"
    },
    "4379": {
      "op": "JUMPI"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4382": {
      "op": "DUP1"
    },
    "4383": {
      "op": "REVERT"
    },
    "4384": {
      "op": "JUMPDEST"
    },
    "4385": {
      "op": "DUP2"
    },
    "4386": {
      "op": "CALLDATALOAD"
    },
    "4387": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4396": {
      "op": "DUP2"
    },
    "4397": {
      "op": "GT"
    },
    "4398": {
      "op": "ISZERO"
    },
    "4399": {
      "op": "PUSH2",
      "value": "0x113A"
    },
    "4402": {
      "op": "JUMPI"
    },
    "4403": {
      "op": "PUSH2",
      "value": "0x113A"
    },
    "4406": {
      "op": "PUSH2",
      "value": "0x19F0"
    },
    "4409": {
      "jump": "i",
      "op": "JUMP"
    },
    "4410": {
      "op": "JUMPDEST"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4413": {
      "op": "MLOAD"
    },
    "4414": {
      "op": "PUSH2",
      "value": "0x1151"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4419": {
      "op": "DUP4"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4423": {
      "op": "NOT"
    },
    "4424": {
      "op": "AND"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "DUP3"
    },
    "4429": {
      "op": "PUSH2",
      "value": "0x197C"
    },
    "4432": {
      "jump": "i",
      "op": "JUMP"
    },
    "4433": {
      "op": "JUMPDEST"
    },
    "4434": {
      "op": "DUP2"
    },
    "4435": {
      "op": "DUP2"
    },
    "4436": {
      "op": "MSTORE"
    },
    "4437": {
      "op": "DUP5"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4440": {
      "op": "DUP4"
    },
    "4441": {
      "op": "DUP7"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "op": "ADD"
    },
    "4444": {
      "op": "GT"
    },
    "4445": {
      "op": "ISZERO"
    },
    "4446": {
      "op": "PUSH2",
      "value": "0x1166"
    },
    "4449": {
      "op": "JUMPI"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4452": {
      "op": "DUP1"
    },
    "4453": {
      "op": "REVERT"
    },
    "4454": {
      "op": "JUMPDEST"
    },
    "4455": {
      "op": "DUP2"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4458": {
      "op": "DUP6"
    },
    "4459": {
      "op": "ADD"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4462": {
      "op": "DUP4"
    },
    "4463": {
      "op": "ADD"
    },
    "4464": {
      "op": "CALLDATACOPY"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4467": {
      "op": "SWAP2"
    },
    "4468": {
      "op": "DUP2"
    },
    "4469": {
      "op": "ADD"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4472": {
      "op": "ADD"
    },
    "4473": {
      "op": "SWAP2"
    },
    "4474": {
      "op": "SWAP1"
    },
    "4475": {
      "op": "SWAP2"
    },
    "4476": {
      "op": "MSTORE"
    },
    "4477": {
      "op": "SWAP4"
    },
    "4478": {
      "op": "SWAP3"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "op": "POP"
    },
    "4481": {
      "op": "POP"
    },
    "4482": {
      "jump": "o",
      "op": "JUMP"
    },
    "4483": {
      "op": "JUMPDEST"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4488": {
      "op": "DUP3"
    },
    "4489": {
      "op": "DUP5"
    },
    "4490": {
      "op": "SUB"
    },
    "4491": {
      "op": "SLT"
    },
    "4492": {
      "op": "ISZERO"
    },
    "4493": {
      "op": "PUSH2",
      "value": "0x1195"
    },
    "4496": {
      "op": "JUMPI"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4499": {
      "op": "DUP1"
    },
    "4500": {
      "op": "REVERT"
    },
    "4501": {
      "op": "JUMPDEST"
    },
    "4502": {
      "op": "DUP2"
    },
    "4503": {
      "op": "CALLDATALOAD"
    },
    "4504": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "4507": {
      "op": "DUP2"
    },
    "4508": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4511": {
      "jump": "i",
      "op": "JUMP"
    },
    "4512": {
      "op": "JUMPDEST"
    },
    "4513": {
      "op": "SWAP4"
    },
    "4514": {
      "op": "SWAP3"
    },
    "4515": {
      "op": "POP"
    },
    "4516": {
      "op": "POP"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "jump": "o",
      "op": "JUMP"
    },
    "4519": {
      "op": "JUMPDEST"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4524": {
      "op": "DUP3"
    },
    "4525": {
      "op": "DUP5"
    },
    "4526": {
      "op": "SUB"
    },
    "4527": {
      "op": "SLT"
    },
    "4528": {
      "op": "ISZERO"
    },
    "4529": {
      "op": "PUSH2",
      "value": "0x11B9"
    },
    "4532": {
      "op": "JUMPI"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4535": {
      "op": "DUP1"
    },
    "4536": {
      "op": "REVERT"
    },
    "4537": {
      "op": "JUMPDEST"
    },
    "4538": {
      "op": "DUP2"
    },
    "4539": {
      "op": "MLOAD"
    },
    "4540": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "4543": {
      "op": "DUP2"
    },
    "4544": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4547": {
      "jump": "i",
      "op": "JUMP"
    },
    "4548": {
      "op": "JUMPDEST"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4551": {
      "op": "DUP1"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4554": {
      "op": "DUP4"
    },
    "4555": {
      "op": "DUP6"
    },
    "4556": {
      "op": "SUB"
    },
    "4557": {
      "op": "SLT"
    },
    "4558": {
      "op": "ISZERO"
    },
    "4559": {
      "op": "PUSH2",
      "value": "0x11D7"
    },
    "4562": {
      "op": "JUMPI"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4565": {
      "op": "DUP1"
    },
    "4566": {
      "op": "REVERT"
    },
    "4567": {
      "op": "JUMPDEST"
    },
    "4568": {
      "op": "DUP3"
    },
    "4569": {
      "op": "CALLDATALOAD"
    },
    "4570": {
      "op": "PUSH2",
      "value": "0x11E2"
    },
    "4573": {
      "op": "DUP2"
    },
    "4574": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4577": {
      "jump": "i",
      "op": "JUMP"
    },
    "4578": {
      "op": "JUMPDEST"
    },
    "4579": {
      "op": "SWAP2"
    },
    "4580": {
      "op": "POP"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4583": {
      "op": "DUP4"
    },
    "4584": {
      "op": "ADD"
    },
    "4585": {
      "op": "CALLDATALOAD"
    },
    "4586": {
      "op": "PUSH2",
      "value": "0x11F2"
    },
    "4589": {
      "op": "DUP2"
    },
    "4590": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4593": {
      "jump": "i",
      "op": "JUMP"
    },
    "4594": {
      "op": "JUMPDEST"
    },
    "4595": {
      "op": "DUP1"
    },
    "4596": {
      "op": "SWAP2"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "SWAP3"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "SWAP3"
    },
    "4602": {
      "op": "SWAP1"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "jump": "o",
      "op": "JUMP"
    },
    "4605": {
      "op": "JUMPDEST"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4608": {
      "op": "DUP1"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4611": {
      "op": "DUP1"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4616": {
      "op": "DUP7"
    },
    "4617": {
      "op": "DUP9"
    },
    "4618": {
      "op": "SUB"
    },
    "4619": {
      "op": "SLT"
    },
    "4620": {
      "op": "ISZERO"
    },
    "4621": {
      "op": "PUSH2",
      "value": "0x1215"
    },
    "4624": {
      "op": "JUMPI"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4627": {
      "op": "DUP1"
    },
    "4628": {
      "op": "REVERT"
    },
    "4629": {
      "op": "JUMPDEST"
    },
    "4630": {
      "op": "DUP6"
    },
    "4631": {
      "op": "CALLDATALOAD"
    },
    "4632": {
      "op": "PUSH2",
      "value": "0x1220"
    },
    "4635": {
      "op": "DUP2"
    },
    "4636": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4639": {
      "jump": "i",
      "op": "JUMP"
    },
    "4640": {
      "op": "JUMPDEST"
    },
    "4641": {
      "op": "SWAP5"
    },
    "4642": {
      "op": "POP"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4645": {
      "op": "DUP7"
    },
    "4646": {
      "op": "ADD"
    },
    "4647": {
      "op": "CALLDATALOAD"
    },
    "4648": {
      "op": "PUSH2",
      "value": "0x1230"
    },
    "4651": {
      "op": "DUP2"
    },
    "4652": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4655": {
      "jump": "i",
      "op": "JUMP"
    },
    "4656": {
      "op": "JUMPDEST"
    },
    "4657": {
      "op": "SWAP4"
    },
    "4658": {
      "op": "POP"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4661": {
      "op": "DUP7"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "CALLDATALOAD"
    },
    "4664": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4673": {
      "op": "DUP1"
    },
    "4674": {
      "op": "DUP3"
    },
    "4675": {
      "op": "GT"
    },
    "4676": {
      "op": "ISZERO"
    },
    "4677": {
      "op": "PUSH2",
      "value": "0x124D"
    },
    "4680": {
      "op": "JUMPI"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4683": {
      "op": "DUP1"
    },
    "4684": {
      "op": "REVERT"
    },
    "4685": {
      "op": "JUMPDEST"
    },
    "4686": {
      "op": "PUSH2",
      "value": "0x1259"
    },
    "4689": {
      "op": "DUP10"
    },
    "4690": {
      "op": "DUP4"
    },
    "4691": {
      "op": "DUP11"
    },
    "4692": {
      "op": "ADD"
    },
    "4693": {
      "op": "PUSH2",
      "value": "0x1098"
    },
    "4696": {
      "jump": "i",
      "op": "JUMP"
    },
    "4697": {
      "op": "JUMPDEST"
    },
    "4698": {
      "op": "SWAP5"
    },
    "4699": {
      "op": "POP"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4702": {
      "op": "DUP9"
    },
    "4703": {
      "op": "ADD"
    },
    "4704": {
      "op": "CALLDATALOAD"
    },
    "4705": {
      "op": "SWAP2"
    },
    "4706": {
      "op": "POP"
    },
    "4707": {
      "op": "DUP1"
    },
    "4708": {
      "op": "DUP3"
    },
    "4709": {
      "op": "GT"
    },
    "4710": {
      "op": "ISZERO"
    },
    "4711": {
      "op": "PUSH2",
      "value": "0x126F"
    },
    "4714": {
      "op": "JUMPI"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4717": {
      "op": "DUP1"
    },
    "4718": {
      "op": "REVERT"
    },
    "4719": {
      "op": "JUMPDEST"
    },
    "4720": {
      "op": "PUSH2",
      "value": "0x127B"
    },
    "4723": {
      "op": "DUP10"
    },
    "4724": {
      "op": "DUP4"
    },
    "4725": {
      "op": "DUP11"
    },
    "4726": {
      "op": "ADD"
    },
    "4727": {
      "op": "PUSH2",
      "value": "0x1098"
    },
    "4730": {
      "jump": "i",
      "op": "JUMP"
    },
    "4731": {
      "op": "JUMPDEST"
    },
    "4732": {
      "op": "SWAP4"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4736": {
      "op": "DUP9"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "CALLDATALOAD"
    },
    "4739": {
      "op": "SWAP2"
    },
    "4740": {
      "op": "POP"
    },
    "4741": {
      "op": "DUP1"
    },
    "4742": {
      "op": "DUP3"
    },
    "4743": {
      "op": "GT"
    },
    "4744": {
      "op": "ISZERO"
    },
    "4745": {
      "op": "PUSH2",
      "value": "0x1291"
    },
    "4748": {
      "op": "JUMPI"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4751": {
      "op": "DUP1"
    },
    "4752": {
      "op": "REVERT"
    },
    "4753": {
      "op": "JUMPDEST"
    },
    "4754": {
      "op": "POP"
    },
    "4755": {
      "op": "PUSH2",
      "value": "0x129E"
    },
    "4758": {
      "op": "DUP9"
    },
    "4759": {
      "op": "DUP3"
    },
    "4760": {
      "op": "DUP10"
    },
    "4761": {
      "op": "ADD"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4765": {
      "jump": "i",
      "op": "JUMP"
    },
    "4766": {
      "op": "JUMPDEST"
    },
    "4767": {
      "op": "SWAP2"
    },
    "4768": {
      "op": "POP"
    },
    "4769": {
      "op": "POP"
    },
    "4770": {
      "op": "SWAP3"
    },
    "4771": {
      "op": "SWAP6"
    },
    "4772": {
      "op": "POP"
    },
    "4773": {
      "op": "SWAP3"
    },
    "4774": {
      "op": "SWAP6"
    },
    "4775": {
      "op": "SWAP1"
    },
    "4776": {
      "op": "SWAP4"
    },
    "4777": {
      "op": "POP"
    },
    "4778": {
      "jump": "o",
      "op": "JUMP"
    },
    "4779": {
      "op": "JUMPDEST"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4782": {
      "op": "DUP1"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4785": {
      "op": "DUP1"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4790": {
      "op": "DUP7"
    },
    "4791": {
      "op": "DUP9"
    },
    "4792": {
      "op": "SUB"
    },
    "4793": {
      "op": "SLT"
    },
    "4794": {
      "op": "ISZERO"
    },
    "4795": {
      "op": "PUSH2",
      "value": "0x12C3"
    },
    "4798": {
      "op": "JUMPI"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4801": {
      "op": "DUP1"
    },
    "4802": {
      "op": "REVERT"
    },
    "4803": {
      "op": "JUMPDEST"
    },
    "4804": {
      "op": "DUP6"
    },
    "4805": {
      "op": "CALLDATALOAD"
    },
    "4806": {
      "op": "PUSH2",
      "value": "0x12CE"
    },
    "4809": {
      "op": "DUP2"
    },
    "4810": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4813": {
      "jump": "i",
      "op": "JUMP"
    },
    "4814": {
      "op": "JUMPDEST"
    },
    "4815": {
      "op": "SWAP5"
    },
    "4816": {
      "op": "POP"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4819": {
      "op": "DUP7"
    },
    "4820": {
      "op": "ADD"
    },
    "4821": {
      "op": "CALLDATALOAD"
    },
    "4822": {
      "op": "PUSH2",
      "value": "0x12DE"
    },
    "4825": {
      "op": "DUP2"
    },
    "4826": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4829": {
      "jump": "i",
      "op": "JUMP"
    },
    "4830": {
      "op": "JUMPDEST"
    },
    "4831": {
      "op": "SWAP4"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4835": {
      "op": "DUP7"
    },
    "4836": {
      "op": "ADD"
    },
    "4837": {
      "op": "CALLDATALOAD"
    },
    "4838": {
      "op": "SWAP3"
    },
    "4839": {
      "op": "POP"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4842": {
      "op": "DUP7"
    },
    "4843": {
      "op": "ADD"
    },
    "4844": {
      "op": "CALLDATALOAD"
    },
    "4845": {
      "op": "SWAP2"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4849": {
      "op": "DUP7"
    },
    "4850": {
      "op": "ADD"
    },
    "4851": {
      "op": "CALLDATALOAD"
    },
    "4852": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4861": {
      "op": "DUP2"
    },
    "4862": {
      "op": "GT"
    },
    "4863": {
      "op": "ISZERO"
    },
    "4864": {
      "op": "PUSH2",
      "value": "0x1308"
    },
    "4867": {
      "op": "JUMPI"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4870": {
      "op": "DUP1"
    },
    "4871": {
      "op": "REVERT"
    },
    "4872": {
      "op": "JUMPDEST"
    },
    "4873": {
      "op": "PUSH2",
      "value": "0x129E"
    },
    "4876": {
      "op": "DUP9"
    },
    "4877": {
      "op": "DUP3"
    },
    "4878": {
      "op": "DUP10"
    },
    "4879": {
      "op": "ADD"
    },
    "4880": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4883": {
      "jump": "i",
      "op": "JUMP"
    },
    "4884": {
      "op": "JUMPDEST"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4887": {
      "op": "DUP1"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4890": {
      "op": "DUP1"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4893": {
      "op": "DUP6"
    },
    "4894": {
      "op": "DUP8"
    },
    "4895": {
      "op": "SUB"
    },
    "4896": {
      "op": "SLT"
    },
    "4897": {
      "op": "ISZERO"
    },
    "4898": {
      "op": "PUSH2",
      "value": "0x132A"
    },
    "4901": {
      "op": "JUMPI"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4904": {
      "op": "DUP1"
    },
    "4905": {
      "op": "REVERT"
    },
    "4906": {
      "op": "JUMPDEST"
    },
    "4907": {
      "op": "DUP5"
    },
    "4908": {
      "op": "CALLDATALOAD"
    },
    "4909": {
      "op": "PUSH2",
      "value": "0x1335"
    },
    "4912": {
      "op": "DUP2"
    },
    "4913": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "4916": {
      "jump": "i",
      "op": "JUMP"
    },
    "4917": {
      "op": "JUMPDEST"
    },
    "4918": {
      "op": "SWAP4"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4922": {
      "op": "DUP6"
    },
    "4923": {
      "op": "ADD"
    },
    "4924": {
      "op": "CALLDATALOAD"
    },
    "4925": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4934": {
      "op": "DUP1"
    },
    "4935": {
      "op": "DUP3"
    },
    "4936": {
      "op": "GT"
    },
    "4937": {
      "op": "ISZERO"
    },
    "4938": {
      "op": "PUSH2",
      "value": "0x1352"
    },
    "4941": {
      "op": "JUMPI"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4944": {
      "op": "DUP1"
    },
    "4945": {
      "op": "REVERT"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "PUSH2",
      "value": "0x135E"
    },
    "4950": {
      "op": "DUP9"
    },
    "4951": {
      "op": "DUP4"
    },
    "4952": {
      "op": "DUP10"
    },
    "4953": {
      "op": "ADD"
    },
    "4954": {
      "op": "PUSH2",
      "value": "0x1098"
    },
    "4957": {
      "jump": "i",
      "op": "JUMP"
    },
    "4958": {
      "op": "JUMPDEST"
    },
    "4959": {
      "op": "SWAP5"
    },
    "4960": {
      "op": "POP"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4963": {
      "op": "DUP8"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "op": "CALLDATALOAD"
    },
    "4966": {
      "op": "SWAP2"
    },
    "4967": {
      "op": "POP"
    },
    "4968": {
      "op": "DUP1"
    },
    "4969": {
      "op": "DUP3"
    },
    "4970": {
      "op": "GT"
    },
    "4971": {
      "op": "ISZERO"
    },
    "4972": {
      "op": "PUSH2",
      "value": "0x1374"
    },
    "4975": {
      "op": "JUMPI"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4978": {
      "op": "DUP1"
    },
    "4979": {
      "op": "REVERT"
    },
    "4980": {
      "op": "JUMPDEST"
    },
    "4981": {
      "op": "PUSH2",
      "value": "0x1380"
    },
    "4984": {
      "op": "DUP9"
    },
    "4985": {
      "op": "DUP4"
    },
    "4986": {
      "op": "DUP10"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "op": "PUSH2",
      "value": "0x1098"
    },
    "4991": {
      "jump": "i",
      "op": "JUMP"
    },
    "4992": {
      "op": "JUMPDEST"
    },
    "4993": {
      "op": "SWAP4"
    },
    "4994": {
      "op": "POP"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4997": {
      "op": "DUP8"
    },
    "4998": {
      "op": "ADD"
    },
    "4999": {
      "op": "CALLDATALOAD"
    },
    "5000": {
      "op": "SWAP2"
    },
    "5001": {
      "op": "POP"
    },
    "5002": {
      "op": "DUP1"
    },
    "5003": {
      "op": "DUP3"
    },
    "5004": {
      "op": "GT"
    },
    "5005": {
      "op": "ISZERO"
    },
    "5006": {
      "op": "PUSH2",
      "value": "0x1396"
    },
    "5009": {
      "op": "JUMPI"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5012": {
      "op": "DUP1"
    },
    "5013": {
      "op": "REVERT"
    },
    "5014": {
      "op": "JUMPDEST"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "op": "PUSH2",
      "value": "0x13A3"
    },
    "5019": {
      "op": "DUP8"
    },
    "5020": {
      "op": "DUP3"
    },
    "5021": {
      "op": "DUP9"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "5026": {
      "jump": "i",
      "op": "JUMP"
    },
    "5027": {
      "op": "JUMPDEST"
    },
    "5028": {
      "op": "SWAP2"
    },
    "5029": {
      "op": "POP"
    },
    "5030": {
      "op": "POP"
    },
    "5031": {
      "op": "SWAP3"
    },
    "5032": {
      "op": "SWAP6"
    },
    "5033": {
      "op": "SWAP2"
    },
    "5034": {
      "op": "SWAP5"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "op": "SWAP3"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "jump": "o",
      "op": "JUMP"
    },
    "5039": {
      "op": "JUMPDEST"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5042": {
      "op": "DUP1"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5045": {
      "op": "DUP4"
    },
    "5046": {
      "op": "DUP6"
    },
    "5047": {
      "op": "SUB"
    },
    "5048": {
      "op": "SLT"
    },
    "5049": {
      "op": "ISZERO"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x13C2"
    },
    "5053": {
      "op": "JUMPI"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5056": {
      "op": "DUP1"
    },
    "5057": {
      "op": "REVERT"
    },
    "5058": {
      "op": "JUMPDEST"
    },
    "5059": {
      "op": "DUP3"
    },
    "5060": {
      "op": "CALLDATALOAD"
    },
    "5061": {
      "op": "PUSH2",
      "value": "0x13CD"
    },
    "5064": {
      "op": "DUP2"
    },
    "5065": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "5068": {
      "jump": "i",
      "op": "JUMP"
    },
    "5069": {
      "op": "JUMPDEST"
    },
    "5070": {
      "op": "SWAP2"
    },
    "5071": {
      "op": "POP"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5074": {
      "op": "DUP4"
    },
    "5075": {
      "op": "ADD"
    },
    "5076": {
      "op": "CALLDATALOAD"
    },
    "5077": {
      "op": "DUP1"
    },
    "5078": {
      "op": "ISZERO"
    },
    "5079": {
      "op": "ISZERO"
    },
    "5080": {
      "op": "DUP2"
    },
    "5081": {
      "op": "EQ"
    },
    "5082": {
      "op": "PUSH2",
      "value": "0x11F2"
    },
    "5085": {
      "op": "JUMPI"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5088": {
      "op": "DUP1"
    },
    "5089": {
      "op": "REVERT"
    },
    "5090": {
      "op": "JUMPDEST"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5093": {
      "op": "DUP1"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5096": {
      "op": "DUP4"
    },
    "5097": {
      "op": "DUP6"
    },
    "5098": {
      "op": "SUB"
    },
    "5099": {
      "op": "SLT"
    },
    "5100": {
      "op": "ISZERO"
    },
    "5101": {
      "op": "PUSH2",
      "value": "0x13F5"
    },
    "5104": {
      "op": "JUMPI"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5107": {
      "op": "DUP1"
    },
    "5108": {
      "op": "REVERT"
    },
    "5109": {
      "op": "JUMPDEST"
    },
    "5110": {
      "op": "DUP3"
    },
    "5111": {
      "op": "CALLDATALOAD"
    },
    "5112": {
      "op": "PUSH2",
      "value": "0x1400"
    },
    "5115": {
      "op": "DUP2"
    },
    "5116": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "5119": {
      "jump": "i",
      "op": "JUMP"
    },
    "5120": {
      "op": "JUMPDEST"
    },
    "5121": {
      "op": "SWAP5"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5124": {
      "op": "SWAP4"
    },
    "5125": {
      "op": "SWAP1"
    },
    "5126": {
      "op": "SWAP4"
    },
    "5127": {
      "op": "ADD"
    },
    "5128": {
      "op": "CALLDATALOAD"
    },
    "5129": {
      "op": "SWAP4"
    },
    "5130": {
      "op": "POP"
    },
    "5131": {
      "op": "POP"
    },
    "5132": {
      "op": "POP"
    },
    "5133": {
      "jump": "o",
      "op": "JUMP"
    },
    "5134": {
      "op": "JUMPDEST"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5137": {
      "op": "DUP1"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5140": {
      "op": "DUP1"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5143": {
      "op": "DUP6"
    },
    "5144": {
      "op": "DUP8"
    },
    "5145": {
      "op": "SUB"
    },
    "5146": {
      "op": "SLT"
    },
    "5147": {
      "op": "ISZERO"
    },
    "5148": {
      "op": "PUSH2",
      "value": "0x1424"
    },
    "5151": {
      "op": "JUMPI"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5154": {
      "op": "DUP1"
    },
    "5155": {
      "op": "REVERT"
    },
    "5156": {
      "op": "JUMPDEST"
    },
    "5157": {
      "op": "DUP5"
    },
    "5158": {
      "op": "CALLDATALOAD"
    },
    "5159": {
      "op": "PUSH2",
      "value": "0x142F"
    },
    "5162": {
      "op": "DUP2"
    },
    "5163": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "5166": {
      "jump": "i",
      "op": "JUMP"
    },
    "5167": {
      "op": "JUMPDEST"
    },
    "5168": {
      "op": "SWAP4"
    },
    "5169": {
      "op": "POP"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5172": {
      "op": "DUP6"
    },
    "5173": {
      "op": "ADD"
    },
    "5174": {
      "op": "CALLDATALOAD"
    },
    "5175": {
      "op": "SWAP3"
    },
    "5176": {
      "op": "POP"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5179": {
      "op": "DUP6"
    },
    "5180": {
      "op": "ADD"
    },
    "5181": {
      "op": "CALLDATALOAD"
    },
    "5182": {
      "op": "SWAP2"
    },
    "5183": {
      "op": "POP"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5186": {
      "op": "DUP6"
    },
    "5187": {
      "op": "ADD"
    },
    "5188": {
      "op": "CALLDATALOAD"
    },
    "5189": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5198": {
      "op": "DUP2"
    },
    "5199": {
      "op": "GT"
    },
    "5200": {
      "op": "ISZERO"
    },
    "5201": {
      "op": "PUSH2",
      "value": "0x1459"
    },
    "5204": {
      "op": "JUMPI"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5207": {
      "op": "DUP1"
    },
    "5208": {
      "op": "REVERT"
    },
    "5209": {
      "op": "JUMPDEST"
    },
    "5210": {
      "op": "PUSH2",
      "value": "0x13A3"
    },
    "5213": {
      "op": "DUP8"
    },
    "5214": {
      "op": "DUP3"
    },
    "5215": {
      "op": "DUP9"
    },
    "5216": {
      "op": "ADD"
    },
    "5217": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "5220": {
      "jump": "i",
      "op": "JUMP"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5224": {
      "op": "DUP1"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5227": {
      "op": "DUP4"
    },
    "5228": {
      "op": "DUP6"
    },
    "5229": {
      "op": "SUB"
    },
    "5230": {
      "op": "SLT"
    },
    "5231": {
      "op": "ISZERO"
    },
    "5232": {
      "op": "PUSH2",
      "value": "0x1478"
    },
    "5235": {
      "op": "JUMPI"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5238": {
      "op": "DUP1"
    },
    "5239": {
      "op": "REVERT"
    },
    "5240": {
      "op": "JUMPDEST"
    },
    "5241": {
      "op": "DUP3"
    },
    "5242": {
      "op": "CALLDATALOAD"
    },
    "5243": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5252": {
      "op": "DUP1"
    },
    "5253": {
      "op": "DUP3"
    },
    "5254": {
      "op": "GT"
    },
    "5255": {
      "op": "ISZERO"
    },
    "5256": {
      "op": "PUSH2",
      "value": "0x1490"
    },
    "5259": {
      "op": "JUMPI"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5262": {
      "op": "DUP1"
    },
    "5263": {
      "op": "REVERT"
    },
    "5264": {
      "op": "JUMPDEST"
    },
    "5265": {
      "op": "DUP2"
    },
    "5266": {
      "op": "DUP6"
    },
    "5267": {
      "op": "ADD"
    },
    "5268": {
      "op": "SWAP2"
    },
    "5269": {
      "op": "POP"
    },
    "5270": {
      "op": "DUP6"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5273": {
      "op": "DUP4"
    },
    "5274": {
      "op": "ADD"
    },
    "5275": {
      "op": "SLT"
    },
    "5276": {
      "op": "PUSH2",
      "value": "0x14A4"
    },
    "5279": {
      "op": "JUMPI"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5282": {
      "op": "DUP1"
    },
    "5283": {
      "op": "REVERT"
    },
    "5284": {
      "op": "JUMPDEST"
    },
    "5285": {
      "op": "DUP2"
    },
    "5286": {
      "op": "CALLDATALOAD"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5289": {
      "op": "PUSH2",
      "value": "0x14B1"
    },
    "5292": {
      "op": "DUP3"
    },
    "5293": {
      "op": "PUSH2",
      "value": "0x1905"
    },
    "5296": {
      "jump": "i",
      "op": "JUMP"
    },
    "5297": {
      "op": "JUMPDEST"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5300": {
      "op": "MLOAD"
    },
    "5301": {
      "op": "PUSH2",
      "value": "0x14BE"
    },
    "5304": {
      "op": "DUP3"
    },
    "5305": {
      "op": "DUP3"
    },
    "5306": {
      "op": "PUSH2",
      "value": "0x197C"
    },
    "5309": {
      "jump": "i",
      "op": "JUMP"
    },
    "5310": {
      "op": "JUMPDEST"
    },
    "5311": {
      "op": "DUP4"
    },
    "5312": {
      "op": "DUP2"
    },
    "5313": {
      "op": "MSTORE"
    },
    "5314": {
      "op": "DUP3"
    },
    "5315": {
      "op": "DUP2"
    },
    "5316": {
      "op": "ADD"
    },
    "5317": {
      "op": "SWAP2"
    },
    "5318": {
      "op": "POP"
    },
    "5319": {
      "op": "DUP6"
    },
    "5320": {
      "op": "DUP4"
    },
    "5321": {
      "op": "ADD"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5324": {
      "op": "DUP6"
    },
    "5325": {
      "op": "SWAP1"
    },
    "5326": {
      "op": "SHL"
    },
    "5327": {
      "op": "DUP8"
    },
    "5328": {
      "op": "ADD"
    },
    "5329": {
      "op": "DUP5"
    },
    "5330": {
      "op": "ADD"
    },
    "5331": {
      "op": "DUP12"
    },
    "5332": {
      "op": "LT"
    },
    "5333": {
      "op": "ISZERO"
    },
    "5334": {
      "op": "PUSH2",
      "value": "0x14DE"
    },
    "5337": {
      "op": "JUMPI"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5340": {
      "op": "DUP1"
    },
    "5341": {
      "op": "REVERT"
    },
    "5342": {
      "op": "JUMPDEST"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5345": {
      "op": "SWAP7"
    },
    "5346": {
      "op": "POP"
    },
    "5347": {
      "op": "JUMPDEST"
    },
    "5348": {
      "op": "DUP5"
    },
    "5349": {
      "op": "DUP8"
    },
    "5350": {
      "op": "LT"
    },
    "5351": {
      "op": "ISZERO"
    },
    "5352": {
      "op": "PUSH2",
      "value": "0x150A"
    },
    "5355": {
      "op": "JUMPI"
    },
    "5356": {
      "op": "DUP1"
    },
    "5357": {
      "op": "CALLDATALOAD"
    },
    "5358": {
      "op": "PUSH2",
      "value": "0x14F6"
    },
    "5361": {
      "op": "DUP2"
    },
    "5362": {
      "op": "PUSH2",
      "value": "0x1AAC"
    },
    "5365": {
      "jump": "i",
      "op": "JUMP"
    },
    "5366": {
      "op": "JUMPDEST"
    },
    "5367": {
      "op": "DUP4"
    },
    "5368": {
      "op": "MSTORE"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5371": {
      "op": "SWAP7"
    },
    "5372": {
      "op": "SWAP1"
    },
    "5373": {
      "op": "SWAP7"
    },
    "5374": {
      "op": "ADD"
    },
    "5375": {
      "op": "SWAP6"
    },
    "5376": {
      "op": "SWAP2"
    },
    "5377": {
      "op": "DUP4"
    },
    "5378": {
      "op": "ADD"
    },
    "5379": {
      "op": "SWAP2"
    },
    "5380": {
      "op": "DUP4"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "op": "PUSH2",
      "value": "0x14E3"
    },
    "5385": {
      "op": "JUMP"
    },
    "5386": {
      "op": "JUMPDEST"
    },
    "5387": {
      "op": "POP"
    },
    "5388": {
      "op": "SWAP7"
    },
    "5389": {
      "op": "POP"
    },
    "5390": {
      "op": "POP"
    },
    "5391": {
      "op": "DUP7"
    },
    "5392": {
      "op": "ADD"
    },
    "5393": {
      "op": "CALLDATALOAD"
    },
    "5394": {
      "op": "SWAP3"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "DUP1"
    },
    "5398": {
      "op": "DUP3"
    },
    "5399": {
      "op": "GT"
    },
    "5400": {
      "op": "ISZERO"
    },
    "5401": {
      "op": "PUSH2",
      "value": "0x1521"
    },
    "5404": {
      "op": "JUMPI"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5407": {
      "op": "DUP1"
    },
    "5408": {
      "op": "REVERT"
    },
    "5409": {
      "op": "JUMPDEST"
    },
    "5410": {
      "op": "POP"
    },
    "5411": {
      "op": "PUSH2",
      "value": "0x152E"
    },
    "5414": {
      "op": "DUP6"
    },
    "5415": {
      "op": "DUP3"
    },
    "5416": {
      "op": "DUP7"
    },
    "5417": {
      "op": "ADD"
    },
    "5418": {
      "op": "PUSH2",
      "value": "0x1098"
    },
    "5421": {
      "jump": "i",
      "op": "JUMP"
    },
    "5422": {
      "op": "JUMPDEST"
    },
    "5423": {
      "op": "SWAP2"
    },
    "5424": {
      "op": "POP"
    },
    "5425": {
      "op": "POP"
    },
    "5426": {
      "op": "SWAP3"
    },
    "5427": {
      "op": "POP"
    },
    "5428": {
      "op": "SWAP3"
    },
    "5429": {
      "op": "SWAP1"
    },
    "5430": {
      "op": "POP"
    },
    "5431": {
      "jump": "o",
      "op": "JUMP"
    },
    "5432": {
      "op": "JUMPDEST"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5437": {
      "op": "DUP3"
    },
    "5438": {
      "op": "DUP5"
    },
    "5439": {
      "op": "SUB"
    },
    "5440": {
      "op": "SLT"
    },
    "5441": {
      "op": "ISZERO"
    },
    "5442": {
      "op": "PUSH2",
      "value": "0x154A"
    },
    "5445": {
      "op": "JUMPI"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5448": {
      "op": "DUP1"
    },
    "5449": {
      "op": "REVERT"
    },
    "5450": {
      "op": "JUMPDEST"
    },
    "5451": {
      "op": "DUP2"
    },
    "5452": {
      "op": "CALLDATALOAD"
    },
    "5453": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "5456": {
      "op": "DUP2"
    },
    "5457": {
      "op": "PUSH2",
      "value": "0x1AC4"
    },
    "5460": {
      "jump": "i",
      "op": "JUMP"
    },
    "5461": {
      "op": "JUMPDEST"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5466": {
      "op": "DUP3"
    },
    "5467": {
      "op": "DUP5"
    },
    "5468": {
      "op": "SUB"
    },
    "5469": {
      "op": "SLT"
    },
    "5470": {
      "op": "ISZERO"
    },
    "5471": {
      "op": "PUSH2",
      "value": "0x1567"
    },
    "5474": {
      "op": "JUMPI"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5477": {
      "op": "DUP1"
    },
    "5478": {
      "op": "REVERT"
    },
    "5479": {
      "op": "JUMPDEST"
    },
    "5480": {
      "op": "DUP2"
    },
    "5481": {
      "op": "MLOAD"
    },
    "5482": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "5485": {
      "op": "DUP2"
    },
    "5486": {
      "op": "PUSH2",
      "value": "0x1AC4"
    },
    "5489": {
      "jump": "i",
      "op": "JUMP"
    },
    "5490": {
      "op": "JUMPDEST"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5495": {
      "op": "DUP3"
    },
    "5496": {
      "op": "DUP5"
    },
    "5497": {
      "op": "SUB"
    },
    "5498": {
      "op": "SLT"
    },
    "5499": {
      "op": "ISZERO"
    },
    "5500": {
      "op": "PUSH2",
      "value": "0x1584"
    },
    "5503": {
      "op": "JUMPI"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5506": {
      "op": "DUP1"
    },
    "5507": {
      "op": "REVERT"
    },
    "5508": {
      "op": "JUMPDEST"
    },
    "5509": {
      "op": "POP"
    },
    "5510": {
      "op": "CALLDATALOAD"
    },
    "5511": {
      "op": "SWAP2"
    },
    "5512": {
      "op": "SWAP1"
    },
    "5513": {
      "op": "POP"
    },
    "5514": {
      "jump": "o",
      "op": "JUMP"
    },
    "5515": {
      "op": "JUMPDEST"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5518": {
      "op": "DUP2"
    },
    "5519": {
      "op": "MLOAD"
    },
    "5520": {
      "op": "DUP1"
    },
    "5521": {
      "op": "DUP5"
    },
    "5522": {
      "op": "MSTORE"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5525": {
      "op": "DUP1"
    },
    "5526": {
      "op": "DUP6"
    },
    "5527": {
      "op": "ADD"
    },
    "5528": {
      "op": "SWAP5"
    },
    "5529": {
      "op": "POP"
    },
    "5530": {
      "op": "DUP1"
    },
    "5531": {
      "op": "DUP5"
    },
    "5532": {
      "op": "ADD"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5535": {
      "op": "JUMPDEST"
    },
    "5536": {
      "op": "DUP4"
    },
    "5537": {
      "op": "DUP2"
    },
    "5538": {
      "op": "LT"
    },
    "5539": {
      "op": "ISZERO"
    },
    "5540": {
      "op": "PUSH2",
      "value": "0x15BB"
    },
    "5543": {
      "op": "JUMPI"
    },
    "5544": {
      "op": "DUP2"
    },
    "5545": {
      "op": "MLOAD"
    },
    "5546": {
      "op": "DUP8"
    },
    "5547": {
      "op": "MSTORE"
    },
    "5548": {
      "op": "SWAP6"
    },
    "5549": {
      "op": "DUP3"
    },
    "5550": {
      "op": "ADD"
    },
    "5551": {
      "op": "SWAP6"
    },
    "5552": {
      "op": "SWAP1"
    },
    "5553": {
      "op": "DUP3"
    },
    "5554": {
      "op": "ADD"
    },
    "5555": {
      "op": "SWAP1"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5558": {
      "op": "ADD"
    },
    "5559": {
      "op": "PUSH2",
      "value": "0x159F"
    },
    "5562": {
      "op": "JUMP"
    },
    "5563": {
      "op": "JUMPDEST"
    },
    "5564": {
      "op": "POP"
    },
    "5565": {
      "op": "SWAP5"
    },
    "5566": {
      "op": "SWAP6"
    },
    "5567": {
      "op": "SWAP5"
    },
    "5568": {
      "op": "POP"
    },
    "5569": {
      "op": "POP"
    },
    "5570": {
      "op": "POP"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "POP"
    },
    "5573": {
      "jump": "o",
      "op": "JUMP"
    },
    "5574": {
      "op": "JUMPDEST"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5577": {
      "op": "DUP2"
    },
    "5578": {
      "op": "MLOAD"
    },
    "5579": {
      "op": "DUP1"
    },
    "5580": {
      "op": "DUP5"
    },
    "5581": {
      "op": "MSTORE"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5584": {
      "op": "JUMPDEST"
    },
    "5585": {
      "op": "DUP2"
    },
    "5586": {
      "op": "DUP2"
    },
    "5587": {
      "op": "LT"
    },
    "5588": {
      "op": "ISZERO"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x15EC"
    },
    "5592": {
      "op": "JUMPI"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5595": {
      "op": "DUP2"
    },
    "5596": {
      "op": "DUP6"
    },
    "5597": {
      "op": "ADD"
    },
    "5598": {
      "op": "DUP2"
    },
    "5599": {
      "op": "ADD"
    },
    "5600": {
      "op": "MLOAD"
    },
    "5601": {
      "op": "DUP7"
    },
    "5602": {
      "op": "DUP4"
    },
    "5603": {
      "op": "ADD"
    },
    "5604": {
      "op": "DUP3"
    },
    "5605": {
      "op": "ADD"
    },
    "5606": {
      "op": "MSTORE"
    },
    "5607": {
      "op": "ADD"
    },
    "5608": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "5611": {
      "op": "JUMP"
    },
    "5612": {
      "op": "JUMPDEST"
    },
    "5613": {
      "op": "DUP2"
    },
    "5614": {
      "op": "DUP2"
    },
    "5615": {
      "op": "GT"
    },
    "5616": {
      "op": "ISZERO"
    },
    "5617": {
      "op": "PUSH2",
      "value": "0x15FE"
    },
    "5620": {
      "op": "JUMPI"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5625": {
      "op": "DUP4"
    },
    "5626": {
      "op": "DUP8"
    },
    "5627": {
      "op": "ADD"
    },
    "5628": {
      "op": "ADD"
    },
    "5629": {
      "op": "MSTORE"
    },
    "5630": {
      "op": "JUMPDEST"
    },
    "5631": {
      "op": "POP"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5634": {
      "op": "ADD"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5637": {
      "op": "NOT"
    },
    "5638": {
      "op": "AND"
    },
    "5639": {
      "op": "SWAP3"
    },
    "5640": {
      "op": "SWAP1"
    },
    "5641": {
      "op": "SWAP3"
    },
    "5642": {
      "op": "ADD"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5645": {
      "op": "ADD"
    },
    "5646": {
      "op": "SWAP3"
    },
    "5647": {
      "op": "SWAP2"
    },
    "5648": {
      "op": "POP"
    },
    "5649": {
      "op": "POP"
    },
    "5650": {
      "jump": "o",
      "op": "JUMP"
    },
    "5651": {
      "op": "JUMPDEST"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5658": {
      "op": "SHL"
    },
    "5659": {
      "op": "SUB"
    },
    "5660": {
      "op": "DUP7"
    },
    "5661": {
      "op": "DUP2"
    },
    "5662": {
      "op": "AND"
    },
    "5663": {
      "op": "DUP3"
    },
    "5664": {
      "op": "MSTORE"
    },
    "5665": {
      "op": "DUP6"
    },
    "5666": {
      "op": "AND"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5669": {
      "op": "DUP3"
    },
    "5670": {
      "op": "ADD"
    },
    "5671": {
      "op": "MSTORE"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5676": {
      "op": "DUP3"
    },
    "5677": {
      "op": "ADD"
    },
    "5678": {
      "op": "DUP2"
    },
    "5679": {
      "op": "SWAP1"
    },
    "5680": {
      "op": "MSTORE"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5683": {
      "op": "SWAP1"
    },
    "5684": {
      "op": "PUSH2",
      "value": "0x163F"
    },
    "5687": {
      "op": "SWAP1"
    },
    "5688": {
      "op": "DUP4"
    },
    "5689": {
      "op": "ADD"
    },
    "5690": {
      "op": "DUP7"
    },
    "5691": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5694": {
      "jump": "i",
      "op": "JUMP"
    },
    "5695": {
      "op": "JUMPDEST"
    },
    "5696": {
      "op": "DUP3"
    },
    "5697": {
      "op": "DUP2"
    },
    "5698": {
      "op": "SUB"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5701": {
      "op": "DUP5"
    },
    "5702": {
      "op": "ADD"
    },
    "5703": {
      "op": "MSTORE"
    },
    "5704": {
      "op": "PUSH2",
      "value": "0x1651"
    },
    "5707": {
      "op": "DUP2"
    },
    "5708": {
      "op": "DUP7"
    },
    "5709": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5712": {
      "jump": "i",
      "op": "JUMP"
    },
    "5713": {
      "op": "JUMPDEST"
    },
    "5714": {
      "op": "SWAP1"
    },
    "5715": {
      "op": "POP"
    },
    "5716": {
      "op": "DUP3"
    },
    "5717": {
      "op": "DUP2"
    },
    "5718": {
      "op": "SUB"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5721": {
      "op": "DUP5"
    },
    "5722": {
      "op": "ADD"
    },
    "5723": {
      "op": "MSTORE"
    },
    "5724": {
      "op": "PUSH2",
      "value": "0x1665"
    },
    "5727": {
      "op": "DUP2"
    },
    "5728": {
      "op": "DUP6"
    },
    "5729": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "5732": {
      "jump": "i",
      "op": "JUMP"
    },
    "5733": {
      "op": "JUMPDEST"
    },
    "5734": {
      "op": "SWAP9"
    },
    "5735": {
      "op": "SWAP8"
    },
    "5736": {
      "op": "POP"
    },
    "5737": {
      "op": "POP"
    },
    "5738": {
      "op": "POP"
    },
    "5739": {
      "op": "POP"
    },
    "5740": {
      "op": "POP"
    },
    "5741": {
      "op": "POP"
    },
    "5742": {
      "op": "POP"
    },
    "5743": {
      "op": "POP"
    },
    "5744": {
      "jump": "o",
      "op": "JUMP"
    },
    "5745": {
      "op": "JUMPDEST"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5752": {
      "op": "SHL"
    },
    "5753": {
      "op": "SUB"
    },
    "5754": {
      "op": "DUP7"
    },
    "5755": {
      "op": "DUP2"
    },
    "5756": {
      "op": "AND"
    },
    "5757": {
      "op": "DUP3"
    },
    "5758": {
      "op": "MSTORE"
    },
    "5759": {
      "op": "DUP6"
    },
    "5760": {
      "op": "AND"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5763": {
      "op": "DUP3"
    },
    "5764": {
      "op": "ADD"
    },
    "5765": {
      "op": "MSTORE"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5768": {
      "op": "DUP2"
    },
    "5769": {
      "op": "ADD"
    },
    "5770": {
      "op": "DUP5"
    },
    "5771": {
      "op": "SWAP1"
    },
    "5772": {
      "op": "MSTORE"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5775": {
      "op": "DUP2"
    },
    "5776": {
      "op": "ADD"
    },
    "5777": {
      "op": "DUP4"
    },
    "5778": {
      "op": "SWAP1"
    },
    "5779": {
      "op": "MSTORE"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5784": {
      "op": "DUP3"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "op": "DUP2"
    },
    "5787": {
      "op": "SWAP1"
    },
    "5788": {
      "op": "MSTORE"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5791": {
      "op": "SWAP1"
    },
    "5792": {
      "op": "PUSH2",
      "value": "0x16AB"
    },
    "5795": {
      "op": "SWAP1"
    },
    "5796": {
      "op": "DUP4"
    },
    "5797": {
      "op": "ADD"
    },
    "5798": {
      "op": "DUP5"
    },
    "5799": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "5802": {
      "jump": "i",
      "op": "JUMP"
    },
    "5803": {
      "op": "JUMPDEST"
    },
    "5804": {
      "op": "SWAP8"
    },
    "5805": {
      "op": "SWAP7"
    },
    "5806": {
      "op": "POP"
    },
    "5807": {
      "op": "POP"
    },
    "5808": {
      "op": "POP"
    },
    "5809": {
      "op": "POP"
    },
    "5810": {
      "op": "POP"
    },
    "5811": {
      "op": "POP"
    },
    "5812": {
      "op": "POP"
    },
    "5813": {
      "jump": "o",
      "op": "JUMP"
    },
    "5814": {
      "op": "JUMPDEST"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5817": {
      "op": "DUP2"
    },
    "5818": {
      "op": "MSTORE"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5821": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5826": {
      "op": "DUP4"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "op": "DUP5"
    },
    "5829": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5832": {
      "jump": "i",
      "op": "JUMP"
    },
    "5833": {
      "op": "JUMPDEST"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5836": {
      "op": "DUP2"
    },
    "5837": {
      "op": "MSTORE"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5840": {
      "op": "PUSH2",
      "value": "0x16DC"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5845": {
      "op": "DUP4"
    },
    "5846": {
      "op": "ADD"
    },
    "5847": {
      "op": "DUP6"
    },
    "5848": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5851": {
      "jump": "i",
      "op": "JUMP"
    },
    "5852": {
      "op": "JUMPDEST"
    },
    "5853": {
      "op": "DUP3"
    },
    "5854": {
      "op": "DUP2"
    },
    "5855": {
      "op": "SUB"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5858": {
      "op": "DUP5"
    },
    "5859": {
      "op": "ADD"
    },
    "5860": {
      "op": "MSTORE"
    },
    "5861": {
      "op": "PUSH2",
      "value": "0x16EE"
    },
    "5864": {
      "op": "DUP2"
    },
    "5865": {
      "op": "DUP6"
    },
    "5866": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5869": {
      "jump": "i",
      "op": "JUMP"
    },
    "5870": {
      "op": "JUMPDEST"
    },
    "5871": {
      "op": "SWAP6"
    },
    "5872": {
      "op": "SWAP5"
    },
    "5873": {
      "op": "POP"
    },
    "5874": {
      "op": "POP"
    },
    "5875": {
      "op": "POP"
    },
    "5876": {
      "op": "POP"
    },
    "5877": {
      "op": "POP"
    },
    "5878": {
      "jump": "o",
      "op": "JUMP"
    },
    "5879": {
      "op": "JUMPDEST"
    },
    "5880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5882": {
      "op": "DUP2"
    },
    "5883": {
      "op": "MSTORE"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5886": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5891": {
      "op": "DUP4"
    },
    "5892": {
      "op": "ADD"
    },
    "5893": {
      "op": "DUP5"
    },
    "5894": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "5897": {
      "jump": "i",
      "op": "JUMP"
    },
    "5898": {
      "op": "JUMPDEST"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5901": {
      "op": "DUP1"
    },
    "5902": {
      "op": "DUP3"
    },
    "5903": {
      "op": "MSTORE"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5906": {
      "op": "SWAP1"
    },
    "5907": {
      "op": "DUP3"
    },
    "5908": {
      "op": "ADD"
    },
    "5909": {
      "op": "MSTORE"
    },
    "5910": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5945": {
      "op": "DUP3"
    },
    "5946": {
      "op": "ADD"
    },
    "5947": {
      "op": "MSTORE"
    },
    "5948": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5959": {
      "op": "SHL"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5962": {
      "op": "DUP3"
    },
    "5963": {
      "op": "ADD"
    },
    "5964": {
      "op": "MSTORE"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5967": {
      "op": "ADD"
    },
    "5968": {
      "op": "SWAP1"
    },
    "5969": {
      "jump": "o",
      "op": "JUMP"
    },
    "5970": {
      "op": "JUMPDEST"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5973": {
      "op": "DUP1"
    },
    "5974": {
      "op": "DUP3"
    },
    "5975": {
      "op": "MSTORE"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "5978": {
      "op": "SWAP1"
    },
    "5979": {
      "op": "DUP3"
    },
    "5980": {
      "op": "ADD"
    },
    "5981": {
      "op": "MSTORE"
    },
    "5982": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6017": {
      "op": "DUP3"
    },
    "6018": {
      "op": "ADD"
    },
    "6019": {
      "op": "MSTORE"
    },
    "6020": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6034": {
      "op": "SHL"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6037": {
      "op": "DUP3"
    },
    "6038": {
      "op": "ADD"
    },
    "6039": {
      "op": "MSTORE"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6042": {
      "op": "ADD"
    },
    "6043": {
      "op": "SWAP1"
    },
    "6044": {
      "jump": "o",
      "op": "JUMP"
    },
    "6045": {
      "op": "JUMPDEST"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6048": {
      "op": "DUP1"
    },
    "6049": {
      "op": "DUP3"
    },
    "6050": {
      "op": "MSTORE"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6053": {
      "op": "SWAP1"
    },
    "6054": {
      "op": "DUP3"
    },
    "6055": {
      "op": "ADD"
    },
    "6056": {
      "op": "MSTORE"
    },
    "6057": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6092": {
      "op": "DUP3"
    },
    "6093": {
      "op": "ADD"
    },
    "6094": {
      "op": "MSTORE"
    },
    "6095": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6103": {
      "op": "SHL"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6106": {
      "op": "DUP3"
    },
    "6107": {
      "op": "ADD"
    },
    "6108": {
      "op": "MSTORE"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6111": {
      "op": "ADD"
    },
    "6112": {
      "op": "SWAP1"
    },
    "6113": {
      "jump": "o",
      "op": "JUMP"
    },
    "6114": {
      "op": "JUMPDEST"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6117": {
      "op": "DUP1"
    },
    "6118": {
      "op": "DUP3"
    },
    "6119": {
      "op": "MSTORE"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6122": {
      "op": "SWAP1"
    },
    "6123": {
      "op": "DUP3"
    },
    "6124": {
      "op": "ADD"
    },
    "6125": {
      "op": "MSTORE"
    },
    "6126": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6161": {
      "op": "DUP3"
    },
    "6162": {
      "op": "ADD"
    },
    "6163": {
      "op": "MSTORE"
    },
    "6164": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "6177": {
      "op": "SHL"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6180": {
      "op": "DUP3"
    },
    "6181": {
      "op": "ADD"
    },
    "6182": {
      "op": "MSTORE"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6185": {
      "op": "ADD"
    },
    "6186": {
      "op": "SWAP1"
    },
    "6187": {
      "jump": "o",
      "op": "JUMP"
    },
    "6188": {
      "op": "JUMPDEST"
    },
    "6189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6191": {
      "op": "DUP1"
    },
    "6192": {
      "op": "DUP3"
    },
    "6193": {
      "op": "MSTORE"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6196": {
      "op": "SWAP1"
    },
    "6197": {
      "op": "DUP3"
    },
    "6198": {
      "op": "ADD"
    },
    "6199": {
      "op": "MSTORE"
    },
    "6200": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206F7261636C65206F70657261746F72206D617920706572"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6235": {
      "op": "DUP3"
    },
    "6236": {
      "op": "ADD"
    },
    "6237": {
      "op": "MSTORE"
    },
    "6238": {
      "op": "PUSH16",
      "value": "0x3337B936903A3434B99030B1BA34B7B7"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "6257": {
      "op": "SHL"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6260": {
      "op": "DUP3"
    },
    "6261": {
      "op": "ADD"
    },
    "6262": {
      "op": "MSTORE"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6265": {
      "op": "ADD"
    },
    "6266": {
      "op": "SWAP1"
    },
    "6267": {
      "jump": "o",
      "op": "JUMP"
    },
    "6268": {
      "op": "JUMPDEST"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6271": {
      "op": "DUP1"
    },
    "6272": {
      "op": "DUP3"
    },
    "6273": {
      "op": "MSTORE"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6276": {
      "op": "SWAP1"
    },
    "6277": {
      "op": "DUP3"
    },
    "6278": {
      "op": "ADD"
    },
    "6279": {
      "op": "MSTORE"
    },
    "6280": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6315": {
      "op": "DUP3"
    },
    "6316": {
      "op": "ADD"
    },
    "6317": {
      "op": "MSTORE"
    },
    "6318": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "6329": {
      "op": "SHL"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6332": {
      "op": "DUP3"
    },
    "6333": {
      "op": "ADD"
    },
    "6334": {
      "op": "MSTORE"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6337": {
      "op": "ADD"
    },
    "6338": {
      "op": "SWAP1"
    },
    "6339": {
      "jump": "o",
      "op": "JUMP"
    },
    "6340": {
      "op": "JUMPDEST"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6343": {
      "op": "DUP1"
    },
    "6344": {
      "op": "DUP3"
    },
    "6345": {
      "op": "MSTORE"
    },
    "6346": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6348": {
      "op": "SWAP1"
    },
    "6349": {
      "op": "DUP3"
    },
    "6350": {
      "op": "ADD"
    },
    "6351": {
      "op": "MSTORE"
    },
    "6352": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6387": {
      "op": "DUP3"
    },
    "6388": {
      "op": "ADD"
    },
    "6389": {
      "op": "MSTORE"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6394": {
      "op": "SHL"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6397": {
      "op": "DUP3"
    },
    "6398": {
      "op": "ADD"
    },
    "6399": {
      "op": "MSTORE"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6402": {
      "op": "ADD"
    },
    "6403": {
      "op": "SWAP1"
    },
    "6404": {
      "jump": "o",
      "op": "JUMP"
    },
    "6405": {
      "op": "JUMPDEST"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6408": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6417": {
      "op": "DUP3"
    },
    "6418": {
      "op": "GT"
    },
    "6419": {
      "op": "ISZERO"
    },
    "6420": {
      "op": "PUSH2",
      "value": "0x191F"
    },
    "6423": {
      "op": "JUMPI"
    },
    "6424": {
      "op": "PUSH2",
      "value": "0x191F"
    },
    "6427": {
      "op": "PUSH2",
      "value": "0x19F0"
    },
    "6430": {
      "jump": "i",
      "op": "JUMP"
    },
    "6431": {
      "op": "JUMPDEST"
    },
    "6432": {
      "op": "POP"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6435": {
      "op": "SHL"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6438": {
      "op": "ADD"
    },
    "6439": {
      "op": "SWAP1"
    },
    "6440": {
      "jump": "o",
      "op": "JUMP"
    },
    "6441": {
      "op": "JUMPDEST"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6444": {
      "op": "DUP3"
    },
    "6445": {
      "op": "NOT"
    },
    "6446": {
      "op": "DUP3"
    },
    "6447": {
      "op": "GT"
    },
    "6448": {
      "op": "ISZERO"
    },
    "6449": {
      "op": "PUSH2",
      "value": "0x193C"
    },
    "6452": {
      "op": "JUMPI"
    },
    "6453": {
      "op": "PUSH2",
      "value": "0x193C"
    },
    "6456": {
      "op": "PUSH2",
      "value": "0x19C4"
    },
    "6459": {
      "jump": "i",
      "op": "JUMP"
    },
    "6460": {
      "op": "JUMPDEST"
    },
    "6461": {
      "op": "POP"
    },
    "6462": {
      "op": "ADD"
    },
    "6463": {
      "op": "SWAP1"
    },
    "6464": {
      "jump": "o",
      "op": "JUMP"
    },
    "6465": {
      "op": "JUMPDEST"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6468": {
      "op": "DUP2"
    },
    "6469": {
      "op": "DUP2"
    },
    "6470": {
      "op": "SHR"
    },
    "6471": {
      "op": "SWAP1"
    },
    "6472": {
      "op": "DUP3"
    },
    "6473": {
      "op": "AND"
    },
    "6474": {
      "op": "DUP1"
    },
    "6475": {
      "op": "PUSH2",
      "value": "0x1955"
    },
    "6478": {
      "op": "JUMPI"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6481": {
      "op": "DUP3"
    },
    "6482": {
      "op": "AND"
    },
    "6483": {
      "op": "SWAP2"
    },
    "6484": {
      "op": "POP"
    },
    "6485": {
      "op": "JUMPDEST"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6488": {
      "op": "DUP3"
    },
    "6489": {
      "op": "LT"
    },
    "6490": {
      "op": "DUP2"
    },
    "6491": {
      "op": "EQ"
    },
    "6492": {
      "op": "ISZERO"
    },
    "6493": {
      "op": "PUSH2",
      "value": "0x1976"
    },
    "6496": {
      "op": "JUMPI"
    },
    "6497": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6504": {
      "op": "SHL"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6507": {
      "op": "MSTORE"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6510": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6512": {
      "op": "MSTORE"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6517": {
      "op": "REVERT"
    },
    "6518": {
      "op": "JUMPDEST"
    },
    "6519": {
      "op": "POP"
    },
    "6520": {
      "op": "SWAP2"
    },
    "6521": {
      "op": "SWAP1"
    },
    "6522": {
      "op": "POP"
    },
    "6523": {
      "jump": "o",
      "op": "JUMP"
    },
    "6524": {
      "op": "JUMPDEST"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6527": {
      "op": "DUP3"
    },
    "6528": {
      "op": "ADD"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6531": {
      "op": "NOT"
    },
    "6532": {
      "op": "AND"
    },
    "6533": {
      "op": "DUP2"
    },
    "6534": {
      "op": "ADD"
    },
    "6535": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6544": {
      "op": "DUP2"
    },
    "6545": {
      "op": "GT"
    },
    "6546": {
      "op": "DUP3"
    },
    "6547": {
      "op": "DUP3"
    },
    "6548": {
      "op": "LT"
    },
    "6549": {
      "op": "OR"
    },
    "6550": {
      "op": "ISZERO"
    },
    "6551": {
      "op": "PUSH2",
      "value": "0x19A2"
    },
    "6554": {
      "op": "JUMPI"
    },
    "6555": {
      "op": "PUSH2",
      "value": "0x19A2"
    },
    "6558": {
      "op": "PUSH2",
      "value": "0x19F0"
    },
    "6561": {
      "jump": "i",
      "op": "JUMP"
    },
    "6562": {
      "op": "JUMPDEST"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6565": {
      "op": "MSTORE"
    },
    "6566": {
      "op": "POP"
    },
    "6567": {
      "op": "POP"
    },
    "6568": {
      "jump": "o",
      "op": "JUMP"
    },
    "6569": {
      "op": "JUMPDEST"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6574": {
      "op": "NOT"
    },
    "6575": {
      "op": "DUP3"
    },
    "6576": {
      "op": "EQ"
    },
    "6577": {
      "op": "ISZERO"
    },
    "6578": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "6581": {
      "op": "JUMPI"
    },
    "6582": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "6585": {
      "op": "PUSH2",
      "value": "0x19C4"
    },
    "6588": {
      "jump": "i",
      "op": "JUMP"
    },
    "6589": {
      "op": "JUMPDEST"
    },
    "6590": {
      "op": "POP"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6593": {
      "op": "ADD"
    },
    "6594": {
      "op": "SWAP1"
    },
    "6595": {
      "jump": "o",
      "op": "JUMP"
    },
    "6596": {
      "op": "JUMPDEST"
    },
    "6597": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6604": {
      "op": "SHL"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6607": {
      "op": "MSTORE"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6612": {
      "op": "MSTORE"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6617": {
      "op": "REVERT"
    },
    "6618": {
      "op": "JUMPDEST"
    },
    "6619": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6624": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6626": {
      "op": "SHL"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6629": {
      "op": "MSTORE"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6634": {
      "op": "MSTORE"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6639": {
      "op": "REVERT"
    },
    "6640": {
      "op": "JUMPDEST"
    },
    "6641": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6648": {
      "op": "SHL"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6651": {
      "op": "MSTORE"
    },
    "6652": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6656": {
      "op": "MSTORE"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6661": {
      "op": "REVERT"
    },
    "6662": {
      "op": "JUMPDEST"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6667": {
      "op": "RETURNDATASIZE"
    },
    "6668": {
      "op": "GT"
    },
    "6669": {
      "op": "ISZERO"
    },
    "6670": {
      "op": "PUSH2",
      "value": "0x1A1F"
    },
    "6673": {
      "op": "JUMPI"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6678": {
      "op": "DUP1"
    },
    "6679": {
      "op": "RETURNDATACOPY"
    },
    "6680": {
      "op": "POP"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6683": {
      "op": "MLOAD"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6686": {
      "op": "SHR"
    },
    "6687": {
      "op": "JUMPDEST"
    },
    "6688": {
      "op": "SWAP1"
    },
    "6689": {
      "jump": "o",
      "op": "JUMP"
    },
    "6690": {
      "op": "JUMPDEST"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6695": {
      "op": "RETURNDATASIZE"
    },
    "6696": {
      "op": "LT"
    },
    "6697": {
      "op": "ISZERO"
    },
    "6698": {
      "op": "PUSH2",
      "value": "0x1A30"
    },
    "6701": {
      "op": "JUMPI"
    },
    "6702": {
      "op": "SWAP1"
    },
    "6703": {
      "jump": "o",
      "op": "JUMP"
    },
    "6704": {
      "op": "JUMPDEST"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6707": {
      "op": "MLOAD"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6710": {
      "op": "NOT"
    },
    "6711": {
      "op": "RETURNDATASIZE"
    },
    "6712": {
      "op": "DUP2"
    },
    "6713": {
      "op": "ADD"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6716": {
      "op": "DUP4"
    },
    "6717": {
      "op": "RETURNDATACOPY"
    },
    "6718": {
      "op": "DUP2"
    },
    "6719": {
      "op": "MLOAD"
    },
    "6720": {
      "op": "RETURNDATASIZE"
    },
    "6721": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6730": {
      "op": "DUP2"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6733": {
      "op": "DUP5"
    },
    "6734": {
      "op": "ADD"
    },
    "6735": {
      "op": "GT"
    },
    "6736": {
      "op": "DUP2"
    },
    "6737": {
      "op": "DUP5"
    },
    "6738": {
      "op": "GT"
    },
    "6739": {
      "op": "OR"
    },
    "6740": {
      "op": "ISZERO"
    },
    "6741": {
      "op": "PUSH2",
      "value": "0x1A60"
    },
    "6744": {
      "op": "JUMPI"
    },
    "6745": {
      "op": "POP"
    },
    "6746": {
      "op": "POP"
    },
    "6747": {
      "op": "POP"
    },
    "6748": {
      "op": "POP"
    },
    "6749": {
      "op": "POP"
    },
    "6750": {
      "op": "SWAP1"
    },
    "6751": {
      "jump": "o",
      "op": "JUMP"
    },
    "6752": {
      "op": "JUMPDEST"
    },
    "6753": {
      "op": "DUP3"
    },
    "6754": {
      "op": "DUP6"
    },
    "6755": {
      "op": "ADD"
    },
    "6756": {
      "op": "SWAP2"
    },
    "6757": {
      "op": "POP"
    },
    "6758": {
      "op": "DUP2"
    },
    "6759": {
      "op": "MLOAD"
    },
    "6760": {
      "op": "DUP2"
    },
    "6761": {
      "op": "DUP2"
    },
    "6762": {
      "op": "GT"
    },
    "6763": {
      "op": "ISZERO"
    },
    "6764": {
      "op": "PUSH2",
      "value": "0x1A78"
    },
    "6767": {
      "op": "JUMPI"
    },
    "6768": {
      "op": "POP"
    },
    "6769": {
      "op": "POP"
    },
    "6770": {
      "op": "POP"
    },
    "6771": {
      "op": "POP"
    },
    "6772": {
      "op": "POP"
    },
    "6773": {
      "op": "POP"
    },
    "6774": {
      "op": "SWAP1"
    },
    "6775": {
      "jump": "o",
      "op": "JUMP"
    },
    "6776": {
      "op": "JUMPDEST"
    },
    "6777": {
      "op": "DUP5"
    },
    "6778": {
      "op": "RETURNDATASIZE"
    },
    "6779": {
      "op": "DUP8"
    },
    "6780": {
      "op": "ADD"
    },
    "6781": {
      "op": "ADD"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6784": {
      "op": "DUP3"
    },
    "6785": {
      "op": "DUP6"
    },
    "6786": {
      "op": "ADD"
    },
    "6787": {
      "op": "ADD"
    },
    "6788": {
      "op": "GT"
    },
    "6789": {
      "op": "ISZERO"
    },
    "6790": {
      "op": "PUSH2",
      "value": "0x1A92"
    },
    "6793": {
      "op": "JUMPI"
    },
    "6794": {
      "op": "POP"
    },
    "6795": {
      "op": "POP"
    },
    "6796": {
      "op": "POP"
    },
    "6797": {
      "op": "POP"
    },
    "6798": {
      "op": "POP"
    },
    "6799": {
      "op": "POP"
    },
    "6800": {
      "op": "SWAP1"
    },
    "6801": {
      "jump": "o",
      "op": "JUMP"
    },
    "6802": {
      "op": "JUMPDEST"
    },
    "6803": {
      "op": "PUSH2",
      "value": "0x1AA1"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6808": {
      "op": "DUP3"
    },
    "6809": {
      "op": "DUP7"
    },
    "6810": {
      "op": "ADD"
    },
    "6811": {
      "op": "ADD"
    },
    "6812": {
      "op": "DUP8"
    },
    "6813": {
      "op": "PUSH2",
      "value": "0x197C"
    },
    "6816": {
      "jump": "i",
      "op": "JUMP"
    },
    "6817": {
      "op": "JUMPDEST"
    },
    "6818": {
      "op": "POP"
    },
    "6819": {
      "op": "SWAP1"
    },
    "6820": {
      "op": "SWAP6"
    },
    "6821": {
      "op": "SWAP5"
    },
    "6822": {
      "op": "POP"
    },
    "6823": {
      "op": "POP"
    },
    "6824": {
      "op": "POP"
    },
    "6825": {
      "op": "POP"
    },
    "6826": {
      "op": "POP"
    },
    "6827": {
      "jump": "o",
      "op": "JUMP"
    },
    "6828": {
      "op": "JUMPDEST"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6835": {
      "op": "SHL"
    },
    "6836": {
      "op": "SUB"
    },
    "6837": {
      "op": "DUP2"
    },
    "6838": {
      "op": "AND"
    },
    "6839": {
      "op": "DUP2"
    },
    "6840": {
      "op": "EQ"
    },
    "6841": {
      "op": "PUSH2",
      "value": "0x1AC1"
    },
    "6844": {
      "op": "JUMPI"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6847": {
      "op": "DUP1"
    },
    "6848": {
      "op": "REVERT"
    },
    "6849": {
      "op": "JUMPDEST"
    },
    "6850": {
      "op": "POP"
    },
    "6851": {
      "jump": "o",
      "op": "JUMP"
    },
    "6852": {
      "op": "JUMPDEST"
    },
    "6853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6857": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6859": {
      "op": "SHL"
    },
    "6860": {
      "op": "SUB"
    },
    "6861": {
      "op": "NOT"
    },
    "6862": {
      "op": "DUP2"
    },
    "6863": {
      "op": "AND"
    },
    "6864": {
      "op": "DUP2"
    },
    "6865": {
      "op": "EQ"
    },
    "6866": {
      "op": "PUSH2",
      "value": "0x1AC1"
    },
    "6869": {
      "op": "JUMPI"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6872": {
      "op": "DUP1"
    },
    "6873": {
      "op": "REVERT"
    }
  },
  "sha1": "be6a1e4914bacd8ab11ddec499d7fada4e559156",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IOracle.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * Modified version of OpenZeppelin's ERC1155 implementation\n * https://eips.ethereum.org/EIPS/eip-1155\n * https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155\n */\ncontract Loot is ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Total balance of user\n    mapping(address => uint256) private _balance;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    // Contract name (used for marketplaces)\n    string public name;\n\n    // Contract symbol (used for marketplaces)\n    string public symbol;\n\n    // The Oracle contract\n    IOracle oracle;\n\n    // Items\n    enum Item {\n        // Ear\n        EARRING,\n        // Eyes\n        BIG_SHADES,\n        BLUE_EYE_SHADOW,\n        CLASSIC_SHADES,\n        CLOWN_EYES_BLUE,\n        CLOWN_EYES_GREEN,\n        EYE_MASK,\n        EYE_PATCH,\n        GREEN_EYE_SHADOW,\n        HORNED_RIM_GLASSES,\n        NERD_GLASSES,\n        PURPLE_EYE_SHADOW,\n        REGULAR_SHADES,\n        SMALL_SHADES,\n        THREE_D_GLASSES,\n        VR,\n        WELDING_GOGGLES,\n        // Face\n        MOLE,\n        ROSY_CHEEKS,\n        SPOTS,\n        VAMPIRE_HAIR,\n        // Facial_hair\n        BIG_BEARD,\n        CHINSTRAP,\n        FRONT_BEARD,\n        FRONT_BEARD_DARK,\n        GOAT,\n        HANDLEBARS,\n        LUXURIOUS_BEARD,\n        MUSTACHE,\n        MUTTONCHOPS,\n        NORMAL_BEARD,\n        NORMAL_BEARD_BLACK,\n        SHADOW_BEARD,\n        // Head\n        BANDANA,\n        BEANIE,\n        BLONDE_BOB,\n        BLONDE_SHORT,\n        CAP,\n        CAP_FORWARD,\n        CLOWN_HAIR_GREEN,\n        COWBOY_HAT,\n        CRAZY_HAIR,\n        DARK_HAIR,\n        DO_RAG,\n        FEDORA,\n        FRUMPY_HAIR,\n        HALF_SHAVED,\n        HEADBAND,\n        HOODIE,\n        KNITTED_CAP,\n        MESSY_HAIR,\n        MOHAWK,\n        MOHAWK_DARK,\n        MOHAWK_THIN,\n        ORANGE_SIDE,\n        PEAK_SPIKE,\n        PIGTAILS,\n        PILOT_HELMET,\n        PINK_WITH_HAT,\n        POLICE_CAP,\n        PURPLE_HAIR,\n        RED_MOHAWK,\n        SHAVED_HEAD,\n        STRAIGHT_HAIR,\n        STRAIGHT_HAIR_BLONDE,\n        STRAIGHT_HAIR_DARK,\n        STRINGY_HAIR,\n        TASSLE_HAT,\n        TIARA,\n        TOP_HAT,\n        WILD_BLONDE,\n        WILD_HAIR,\n        WILD_WHITE_HAIR,\n        // Mouth\n        BLACK_LIPSTICK,\n        BUCK_TEETH,\n        FROWN,\n        HOT_LIPSTICK,\n        MEDICAL_MASK,\n        PURPLE_LIPSTICK,\n        SMILE,\n        // Neck\n        CHOKER,\n        GOLD_CHAIN,\n        SILVER_CHAIN,\n        // Nose\n        CLOWN_NOSE,\n        // Smoke\n        CIGARETTE,\n        PIPE,\n        VAPE,\n        // Species\n        ALIEN,\n        APE,\n        HUMAN,\n        ZOMBIE\n    }\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        string memory uri_,\n        address oracleAddress\n    ) {\n        name = name_;\n        symbol = symbol_;\n        _uri = uri_;\n        oracle = IOracle(oracleAddress);\n    }\n\n    /**\n     * @dev Modifier that only oracle operators may call\n     */\n    modifier onlyOracleOperator() {\n        require(\n            msg.sender == oracle.getOperator(),\n            \"Only the oracle operator may perform this action\"\n        );\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns the URI for token type `id`.\n     */\n    function uri(uint256) public view override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev Returns the total balance of `account`\n     * @notice May not query the zero address\n     */\n    function balanceOf(address account)\n        public\n        view\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        return _balance[account];\n    }\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     * @notice May not query the zero address\n     */\n    function balanceOf(address account, uint256 id)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev Batched version of balanceOf.\n     * @notice May not query the zero address\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        override\n        returns (uint256[] memory)\n    {\n        require(\n            accounts.length == ids.length,\n            \"ERC1155: accounts and ids length mismatch\"\n        );\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.\n     * @notice `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        override\n    {\n        require(\n            msg.sender != operator,\n            \"ERC1155: setting approval status for self\"\n        );\n\n        _operatorApprovals[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer `account`'s tokens.\n     */\n    function isApprovedForAll(address account, address operator)\n        public\n        view\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev Transfers amount tokens of token type `id` from `from` to `to`.\n     * @notice May not query the zero address\n     * @notice If the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.\n     * @notice `from` must have a balance of tokens of type `id` of at least `amount`.\n     * @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public override {\n        require(\n            from == msg.sender || isApprovedForAll(from, msg.sender),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = msg.sender;\n\n        uint256 fromBalance = _balances[id][from];\n        require(\n            fromBalance >= amount,\n            \"ERC1155: insufficient balance for transfer\"\n        );\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n            _balance[from] -= amount;\n        }\n        _balances[id][to] += amount;\n        _balance[to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev Batched version of safeTransferFrom.\n     * @notice `ids` and `amounts` must have the same length.\n     * @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public override {\n        require(\n            from == msg.sender || isApprovedForAll(from, msg.sender),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = msg.sender;\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(\n                fromBalance >= amount,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n                _balance[from] -= amount;\n            }\n            _balances[id][to] += amount;\n            _balance[from] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            from,\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     * @notice `account` cannot be the zero address.\n     * @notice If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public onlyOracleOperator {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = msg.sender;\n\n        _balances[id][account] += amount;\n        _balance[account] += amount;\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(\n            operator,\n            address(0),\n            account,\n            id,\n            amount,\n            data\n        );\n    }\n\n    /**\n     * @dev Batched version of _mint.\n     * @notice `ids` and `amounts` must have the same length.\n     * @notice - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public onlyOracleOperator {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n\n        address operator = msg.sender;\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n            _balance[to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            address(0),\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155Received(\n                    operator,\n                    from,\n                    id,\n                    amount,\n                    data\n                )\n            returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155BatchReceived(\n                    operator,\n                    from,\n                    ids,\n                    amounts,\n                    data\n                )\n            returns (bytes4 response) {\n                if (\n                    response != IERC1155Receiver.onERC1155BatchReceived.selector\n                ) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n}\n",
  "sourceMap": "660:13131:6:-:0;;;3509:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3656:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;3678:16:6;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;3704:11:6;;;;:4;;:11;;;;;:::i;:::-;-1:-1:-1;3725:6:6;:31;;-1:-1:-1;;;;;;3725:31:6;-1:-1:-1;;;;;3725:31:6;;;;;;;;;;-1:-1:-1;660:13131:6;;-1:-1:-1;;660:13131:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:13131:6;;;-1:-1:-1;660:13131:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:8;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:8;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:8;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:8:o;904:934::-;1031:6;1039;1047;1055;1108:3;1096:9;1087:7;1083:23;1079:33;1076:2;;;1125:1;1122;1115:12;1076:2;1152:16;;-1:-1:-1;;;;;1217:14:8;;;1214:2;;;1244:1;1241;1234:12;1214:2;1267:61;1320:7;1311:6;1300:9;1296:22;1267:61;:::i;:::-;1257:71;;1374:2;1363:9;1359:18;1353:25;1337:41;;1403:2;1393:8;1390:16;1387:2;;;1419:1;1416;1409:12;1387:2;1442:63;1497:7;1486:8;1475:9;1471:24;1442:63;:::i;:::-;1432:73;;1551:2;1540:9;1536:18;1530:25;1514:41;;1580:2;1570:8;1567:16;1564:2;;;1596:1;1593;1586:12;1564:2;;1619:63;1674:7;1663:8;1652:9;1648:24;1619:63;:::i;:::-;1725:2;1710:18;;1704:25;1609:73;;-1:-1:-1;1704:25:8;-1:-1:-1;;;;;;1758:31:8;;1748:42;;1738:2;;1804:1;1801;1794:12;1738:2;1066:772;;;;-1:-1:-1;1066:772:8;;-1:-1:-1;;1066:772:8:o;1843:380::-;1922:1;1918:12;;;;1965;;;1986:2;;2040:4;2032:6;2028:17;2018:27;;1986:2;2093;2085:6;2082:14;2062:18;2059:38;2056:2;;;2139:10;2134:3;2130:20;2127:1;2120:31;2174:4;2171:1;2164:15;2202:4;2199:1;2192:15;2056:2;;1898:325;;;:::o;2228:127::-;2289:10;2284:3;2280:20;2277:1;2270:31;2320:4;2317:1;2310:15;2344:4;2341:1;2334:15;2260:95;660:13131:6;;;;;;",
  "sourcePath": "contracts/Loot.sol",
  "type": "contract"
}