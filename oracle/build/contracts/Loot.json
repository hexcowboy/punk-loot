{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mintBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155.sol",
    "1": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155Receiver.sol",
    "2": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "4": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Address.sol",
    "5": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/ERC165.sol",
    "6": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/IERC165.sol",
    "7": "contracts/Loot.sol",
    "9": "interfaces/IOracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/Loot.sol",
    "exportedSymbols": {
      "Address": [
        1601
      ],
      "ERC165": [
        1625
      ],
      "IERC1155": [
        1248
      ],
      "IERC1155MetadataURI": [
        1304
      ],
      "IERC1155Receiver": [
        1289
      ],
      "IERC165": [
        1663
      ],
      "IOracle": [
        1633
      ],
      "Loot": [
        948
      ]
    },
    "id": 949,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "interfaces/IOracle.sol",
        "file": "../interfaces/IOracle.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 949,
        "sourceUnit": 1634,
        "src": "58:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 949,
        "sourceUnit": 1249,
        "src": "94:60:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 949,
        "sourceUnit": 1290,
        "src": "155:68:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 949,
        "sourceUnit": 1305,
        "src": "224:82:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 949,
        "sourceUnit": 1602,
        "src": "307:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 949,
        "sourceUnit": 1626,
        "src": "359:64:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1625,
              "src": "677:6:7"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "677:6:7"
          },
          {
            "baseName": {
              "id": 11,
              "name": "IERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1248,
              "src": "685:8:7"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "685:8:7"
          },
          {
            "baseName": {
              "id": 13,
              "name": "IERC1155MetadataURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1304,
              "src": "695:19:7"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "695:19:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "425:234:7",
          "text": " @dev Implementation of the basic standard multi-token.\n Modified version of OpenZeppelin's ERC1155 implementation\n https://eips.ethereum.org/EIPS/eip-1155\n https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155"
        },
        "fullyImplemented": true,
        "id": 948,
        "linearizedBaseContracts": [
          948,
          1304,
          1248,
          1625,
          1663
        ],
        "name": "Loot",
        "nameLocation": "669:4:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 17,
            "libraryName": {
              "id": 15,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1601,
              "src": "727:7:7"
            },
            "nodeType": "UsingForDirective",
            "src": "721:26:7",
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "739:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "_balance",
            "nameLocation": "818:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 948,
            "src": "782:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "790:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "782:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "801:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "938:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 948,
            "src": "882:65:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 22,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "882:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 25,
                "keyType": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "901:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1057:18:7",
            "nodeType": "VariableDeclaration",
            "scope": 948,
            "src": "1004:71:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1012:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1004:44:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 31,
                "keyType": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1031:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1023:24:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 30,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1042:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "1211:4:7",
            "nodeType": "VariableDeclaration",
            "scope": 948,
            "src": "1196:19:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 34,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1196:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 37,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "1281:4:7",
            "nodeType": "VariableDeclaration",
            "scope": 948,
            "src": "1267:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 36,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1267:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 39,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "1353:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 948,
            "src": "1339:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 38,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1339:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 42,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "1408:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 948,
            "src": "1393:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IOracle_$1633",
              "typeString": "contract IOracle"
            },
            "typeName": {
              "id": 41,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40,
                "name": "IOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1633,
                "src": "1393:7:7"
              },
              "referencedDeclaration": 1633,
              "src": "1393:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$1633",
                "typeString": "contract IOracle"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Loot.Item",
            "id": 134,
            "members": [
              {
                "id": 43,
                "name": "EARRING",
                "nameLocation": "1469:7:7",
                "nodeType": "EnumValue",
                "src": "1469:7:7"
              },
              {
                "id": 44,
                "name": "BIG_SHADES",
                "nameLocation": "1502:10:7",
                "nodeType": "EnumValue",
                "src": "1502:10:7"
              },
              {
                "id": 45,
                "name": "BLUE_EYE_SHADOW",
                "nameLocation": "1522:15:7",
                "nodeType": "EnumValue",
                "src": "1522:15:7"
              },
              {
                "id": 46,
                "name": "CLASSIC_SHADES",
                "nameLocation": "1547:14:7",
                "nodeType": "EnumValue",
                "src": "1547:14:7"
              },
              {
                "id": 47,
                "name": "CLOWN_EYES_BLUE",
                "nameLocation": "1571:15:7",
                "nodeType": "EnumValue",
                "src": "1571:15:7"
              },
              {
                "id": 48,
                "name": "CLOWN_EYES_GREEN",
                "nameLocation": "1596:16:7",
                "nodeType": "EnumValue",
                "src": "1596:16:7"
              },
              {
                "id": 49,
                "name": "EYE_MASK",
                "nameLocation": "1622:8:7",
                "nodeType": "EnumValue",
                "src": "1622:8:7"
              },
              {
                "id": 50,
                "name": "EYE_PATCH",
                "nameLocation": "1640:9:7",
                "nodeType": "EnumValue",
                "src": "1640:9:7"
              },
              {
                "id": 51,
                "name": "GREEN_EYE_SHADOW",
                "nameLocation": "1659:16:7",
                "nodeType": "EnumValue",
                "src": "1659:16:7"
              },
              {
                "id": 52,
                "name": "HORNED_RIM_GLASSES",
                "nameLocation": "1685:18:7",
                "nodeType": "EnumValue",
                "src": "1685:18:7"
              },
              {
                "id": 53,
                "name": "NERD_GLASSES",
                "nameLocation": "1713:12:7",
                "nodeType": "EnumValue",
                "src": "1713:12:7"
              },
              {
                "id": 54,
                "name": "PURPLE_EYE_SHADOW",
                "nameLocation": "1735:17:7",
                "nodeType": "EnumValue",
                "src": "1735:17:7"
              },
              {
                "id": 55,
                "name": "REGULAR_SHADES",
                "nameLocation": "1762:14:7",
                "nodeType": "EnumValue",
                "src": "1762:14:7"
              },
              {
                "id": 56,
                "name": "SMALL_SHADES",
                "nameLocation": "1786:12:7",
                "nodeType": "EnumValue",
                "src": "1786:12:7"
              },
              {
                "id": 57,
                "name": "THREE_D_GLASSES",
                "nameLocation": "1808:15:7",
                "nodeType": "EnumValue",
                "src": "1808:15:7"
              },
              {
                "id": 58,
                "name": "VR",
                "nameLocation": "1833:2:7",
                "nodeType": "EnumValue",
                "src": "1833:2:7"
              },
              {
                "id": 59,
                "name": "WELDING_GOGGLES",
                "nameLocation": "1845:15:7",
                "nodeType": "EnumValue",
                "src": "1845:15:7"
              },
              {
                "id": 60,
                "name": "MOLE",
                "nameLocation": "1886:4:7",
                "nodeType": "EnumValue",
                "src": "1886:4:7"
              },
              {
                "id": 61,
                "name": "ROSY_CHEEKS",
                "nameLocation": "1900:11:7",
                "nodeType": "EnumValue",
                "src": "1900:11:7"
              },
              {
                "id": 62,
                "name": "SPOTS",
                "nameLocation": "1921:5:7",
                "nodeType": "EnumValue",
                "src": "1921:5:7"
              },
              {
                "id": 63,
                "name": "VAMPIRE_HAIR",
                "nameLocation": "1936:12:7",
                "nodeType": "EnumValue",
                "src": "1936:12:7"
              },
              {
                "id": 64,
                "name": "BIG_BEARD",
                "nameLocation": "1981:9:7",
                "nodeType": "EnumValue",
                "src": "1981:9:7"
              },
              {
                "id": 65,
                "name": "CHINSTRAP",
                "nameLocation": "2000:9:7",
                "nodeType": "EnumValue",
                "src": "2000:9:7"
              },
              {
                "id": 66,
                "name": "FRONT_BEARD",
                "nameLocation": "2019:11:7",
                "nodeType": "EnumValue",
                "src": "2019:11:7"
              },
              {
                "id": 67,
                "name": "FRONT_BEARD_DARK",
                "nameLocation": "2040:16:7",
                "nodeType": "EnumValue",
                "src": "2040:16:7"
              },
              {
                "id": 68,
                "name": "GOAT",
                "nameLocation": "2066:4:7",
                "nodeType": "EnumValue",
                "src": "2066:4:7"
              },
              {
                "id": 69,
                "name": "HANDLEBARS",
                "nameLocation": "2080:10:7",
                "nodeType": "EnumValue",
                "src": "2080:10:7"
              },
              {
                "id": 70,
                "name": "LUXURIOUS_BEARD",
                "nameLocation": "2100:15:7",
                "nodeType": "EnumValue",
                "src": "2100:15:7"
              },
              {
                "id": 71,
                "name": "MUSTACHE",
                "nameLocation": "2125:8:7",
                "nodeType": "EnumValue",
                "src": "2125:8:7"
              },
              {
                "id": 72,
                "name": "MUTTONCHOPS",
                "nameLocation": "2143:11:7",
                "nodeType": "EnumValue",
                "src": "2143:11:7"
              },
              {
                "id": 73,
                "name": "NORMAL_BEARD",
                "nameLocation": "2164:12:7",
                "nodeType": "EnumValue",
                "src": "2164:12:7"
              },
              {
                "id": 74,
                "name": "NORMAL_BEARD_BLACK",
                "nameLocation": "2186:18:7",
                "nodeType": "EnumValue",
                "src": "2186:18:7"
              },
              {
                "id": 75,
                "name": "SHADOW_BEARD",
                "nameLocation": "2214:12:7",
                "nodeType": "EnumValue",
                "src": "2214:12:7"
              },
              {
                "id": 76,
                "name": "BANDANA",
                "nameLocation": "2252:7:7",
                "nodeType": "EnumValue",
                "src": "2252:7:7"
              },
              {
                "id": 77,
                "name": "BEANIE",
                "nameLocation": "2269:6:7",
                "nodeType": "EnumValue",
                "src": "2269:6:7"
              },
              {
                "id": 78,
                "name": "BLONDE_BOB",
                "nameLocation": "2285:10:7",
                "nodeType": "EnumValue",
                "src": "2285:10:7"
              },
              {
                "id": 79,
                "name": "BLONDE_SHORT",
                "nameLocation": "2305:12:7",
                "nodeType": "EnumValue",
                "src": "2305:12:7"
              },
              {
                "id": 80,
                "name": "CAP",
                "nameLocation": "2327:3:7",
                "nodeType": "EnumValue",
                "src": "2327:3:7"
              },
              {
                "id": 81,
                "name": "CAP_FORWARD",
                "nameLocation": "2340:11:7",
                "nodeType": "EnumValue",
                "src": "2340:11:7"
              },
              {
                "id": 82,
                "name": "CLOWN_HAIR_GREEN",
                "nameLocation": "2361:16:7",
                "nodeType": "EnumValue",
                "src": "2361:16:7"
              },
              {
                "id": 83,
                "name": "COWBOY_HAT",
                "nameLocation": "2387:10:7",
                "nodeType": "EnumValue",
                "src": "2387:10:7"
              },
              {
                "id": 84,
                "name": "CRAZY_HAIR",
                "nameLocation": "2407:10:7",
                "nodeType": "EnumValue",
                "src": "2407:10:7"
              },
              {
                "id": 85,
                "name": "DARK_HAIR",
                "nameLocation": "2427:9:7",
                "nodeType": "EnumValue",
                "src": "2427:9:7"
              },
              {
                "id": 86,
                "name": "DO_RAG",
                "nameLocation": "2446:6:7",
                "nodeType": "EnumValue",
                "src": "2446:6:7"
              },
              {
                "id": 87,
                "name": "FEDORA",
                "nameLocation": "2462:6:7",
                "nodeType": "EnumValue",
                "src": "2462:6:7"
              },
              {
                "id": 88,
                "name": "FRUMPY_HAIR",
                "nameLocation": "2478:11:7",
                "nodeType": "EnumValue",
                "src": "2478:11:7"
              },
              {
                "id": 89,
                "name": "HALF_SHAVED",
                "nameLocation": "2499:11:7",
                "nodeType": "EnumValue",
                "src": "2499:11:7"
              },
              {
                "id": 90,
                "name": "HEADBAND",
                "nameLocation": "2520:8:7",
                "nodeType": "EnumValue",
                "src": "2520:8:7"
              },
              {
                "id": 91,
                "name": "HOODIE",
                "nameLocation": "2538:6:7",
                "nodeType": "EnumValue",
                "src": "2538:6:7"
              },
              {
                "id": 92,
                "name": "KNITTED_CAP",
                "nameLocation": "2554:11:7",
                "nodeType": "EnumValue",
                "src": "2554:11:7"
              },
              {
                "id": 93,
                "name": "MESSY_HAIR",
                "nameLocation": "2575:10:7",
                "nodeType": "EnumValue",
                "src": "2575:10:7"
              },
              {
                "id": 94,
                "name": "MOHAWK",
                "nameLocation": "2595:6:7",
                "nodeType": "EnumValue",
                "src": "2595:6:7"
              },
              {
                "id": 95,
                "name": "MOHAWK_DARK",
                "nameLocation": "2611:11:7",
                "nodeType": "EnumValue",
                "src": "2611:11:7"
              },
              {
                "id": 96,
                "name": "MOHAWK_THIN",
                "nameLocation": "2632:11:7",
                "nodeType": "EnumValue",
                "src": "2632:11:7"
              },
              {
                "id": 97,
                "name": "ORANGE_SIDE",
                "nameLocation": "2653:11:7",
                "nodeType": "EnumValue",
                "src": "2653:11:7"
              },
              {
                "id": 98,
                "name": "PEAK_SPIKE",
                "nameLocation": "2674:10:7",
                "nodeType": "EnumValue",
                "src": "2674:10:7"
              },
              {
                "id": 99,
                "name": "PIGTAILS",
                "nameLocation": "2694:8:7",
                "nodeType": "EnumValue",
                "src": "2694:8:7"
              },
              {
                "id": 100,
                "name": "PILOT_HELMET",
                "nameLocation": "2712:12:7",
                "nodeType": "EnumValue",
                "src": "2712:12:7"
              },
              {
                "id": 101,
                "name": "PINK_WITH_HAT",
                "nameLocation": "2734:13:7",
                "nodeType": "EnumValue",
                "src": "2734:13:7"
              },
              {
                "id": 102,
                "name": "POLICE_CAP",
                "nameLocation": "2757:10:7",
                "nodeType": "EnumValue",
                "src": "2757:10:7"
              },
              {
                "id": 103,
                "name": "PURPLE_HAIR",
                "nameLocation": "2777:11:7",
                "nodeType": "EnumValue",
                "src": "2777:11:7"
              },
              {
                "id": 104,
                "name": "RED_MOHAWK",
                "nameLocation": "2798:10:7",
                "nodeType": "EnumValue",
                "src": "2798:10:7"
              },
              {
                "id": 105,
                "name": "SHAVED_HEAD",
                "nameLocation": "2818:11:7",
                "nodeType": "EnumValue",
                "src": "2818:11:7"
              },
              {
                "id": 106,
                "name": "STRAIGHT_HAIR",
                "nameLocation": "2839:13:7",
                "nodeType": "EnumValue",
                "src": "2839:13:7"
              },
              {
                "id": 107,
                "name": "STRAIGHT_HAIR_BLONDE",
                "nameLocation": "2862:20:7",
                "nodeType": "EnumValue",
                "src": "2862:20:7"
              },
              {
                "id": 108,
                "name": "STRAIGHT_HAIR_DARK",
                "nameLocation": "2892:18:7",
                "nodeType": "EnumValue",
                "src": "2892:18:7"
              },
              {
                "id": 109,
                "name": "STRINGY_HAIR",
                "nameLocation": "2920:12:7",
                "nodeType": "EnumValue",
                "src": "2920:12:7"
              },
              {
                "id": 110,
                "name": "TASSLE_HAT",
                "nameLocation": "2942:10:7",
                "nodeType": "EnumValue",
                "src": "2942:10:7"
              },
              {
                "id": 111,
                "name": "TIARA",
                "nameLocation": "2962:5:7",
                "nodeType": "EnumValue",
                "src": "2962:5:7"
              },
              {
                "id": 112,
                "name": "TOP_HAT",
                "nameLocation": "2977:7:7",
                "nodeType": "EnumValue",
                "src": "2977:7:7"
              },
              {
                "id": 113,
                "name": "WILD_BLONDE",
                "nameLocation": "2994:11:7",
                "nodeType": "EnumValue",
                "src": "2994:11:7"
              },
              {
                "id": 114,
                "name": "WILD_HAIR",
                "nameLocation": "3015:9:7",
                "nodeType": "EnumValue",
                "src": "3015:9:7"
              },
              {
                "id": 115,
                "name": "WILD_WHITE_HAIR",
                "nameLocation": "3034:15:7",
                "nodeType": "EnumValue",
                "src": "3034:15:7"
              },
              {
                "id": 116,
                "name": "BLACK_LIPSTICK",
                "nameLocation": "3076:14:7",
                "nodeType": "EnumValue",
                "src": "3076:14:7"
              },
              {
                "id": 117,
                "name": "BUCK_TEETH",
                "nameLocation": "3100:10:7",
                "nodeType": "EnumValue",
                "src": "3100:10:7"
              },
              {
                "id": 118,
                "name": "FROWN",
                "nameLocation": "3120:5:7",
                "nodeType": "EnumValue",
                "src": "3120:5:7"
              },
              {
                "id": 119,
                "name": "HOT_LIPSTICK",
                "nameLocation": "3135:12:7",
                "nodeType": "EnumValue",
                "src": "3135:12:7"
              },
              {
                "id": 120,
                "name": "MEDICAL_MASK",
                "nameLocation": "3157:12:7",
                "nodeType": "EnumValue",
                "src": "3157:12:7"
              },
              {
                "id": 121,
                "name": "PURPLE_LIPSTICK",
                "nameLocation": "3179:15:7",
                "nodeType": "EnumValue",
                "src": "3179:15:7"
              },
              {
                "id": 122,
                "name": "SMILE",
                "nameLocation": "3204:5:7",
                "nodeType": "EnumValue",
                "src": "3204:5:7"
              },
              {
                "id": 123,
                "name": "CHOKER",
                "nameLocation": "3235:6:7",
                "nodeType": "EnumValue",
                "src": "3235:6:7"
              },
              {
                "id": 124,
                "name": "GOLD_CHAIN",
                "nameLocation": "3251:10:7",
                "nodeType": "EnumValue",
                "src": "3251:10:7"
              },
              {
                "id": 125,
                "name": "SILVER_CHAIN",
                "nameLocation": "3271:12:7",
                "nodeType": "EnumValue",
                "src": "3271:12:7"
              },
              {
                "id": 126,
                "name": "CLOWN_NOSE",
                "nameLocation": "3309:10:7",
                "nodeType": "EnumValue",
                "src": "3309:10:7"
              },
              {
                "id": 127,
                "name": "CIGARETTE",
                "nameLocation": "3346:9:7",
                "nodeType": "EnumValue",
                "src": "3346:9:7"
              },
              {
                "id": 128,
                "name": "PIPE",
                "nameLocation": "3365:4:7",
                "nodeType": "EnumValue",
                "src": "3365:4:7"
              },
              {
                "id": 129,
                "name": "VAPE",
                "nameLocation": "3379:4:7",
                "nodeType": "EnumValue",
                "src": "3379:4:7"
              },
              {
                "id": 130,
                "name": "ALIEN",
                "nameLocation": "3412:5:7",
                "nodeType": "EnumValue",
                "src": "3412:5:7"
              },
              {
                "id": 131,
                "name": "APE",
                "nameLocation": "3427:3:7",
                "nodeType": "EnumValue",
                "src": "3427:3:7"
              },
              {
                "id": 132,
                "name": "HUMAN",
                "nameLocation": "3440:5:7",
                "nodeType": "EnumValue",
                "src": "3440:5:7"
              },
              {
                "id": 133,
                "name": "ZOMBIE",
                "nameLocation": "3455:6:7",
                "nodeType": "EnumValue",
                "src": "3455:6:7"
              }
            ],
            "name": "Item",
            "nameLocation": "1439:4:7",
            "nodeType": "EnumDefinition",
            "src": "1434:2033:7"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "3848:117:7",
              "statements": [
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 146,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "3858:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 147,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3865:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3858:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "3858:12:7"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 150,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "3880:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3889:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3880:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3880:16:7"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 154,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3906:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 155,
                      "name": "uri_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "3913:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3906:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:11:7"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3927:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1633",
                        "typeString": "contract IOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 160,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "3944:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 159,
                        "name": "IOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1633,
                        "src": "3936:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOracle_$1633_$",
                          "typeString": "type(contract IOracle)"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3936:22:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOracle_$1633",
                        "typeString": "contract IOracle"
                      }
                    },
                    "src": "3927:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOracle_$1633",
                      "typeString": "contract IOracle"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "3927:31:7"
                }
              ]
            },
            "documentation": {
              "id": 135,
              "nodeType": "StructuredDocumentation",
              "src": "3473:233:7",
              "text": " @param name_         The name of the token\n @param symbol_       The symbol of the token\n @param uri_          The URI for token metadata\n @param oracleAddress The address where the Oracle resides"
            },
            "id": 165,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "3746:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3732:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "3775:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3761:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "3806:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3792:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "oracleAddress",
                  "nameLocation": "3828:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3820:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3820:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3722:125:7"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3848:0:7"
            },
            "scope": 948,
            "src": "3711:254:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "4074:157:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4105:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4105:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 171,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "4119:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOracle_$1633",
                                "typeString": "contract IOracle"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1632,
                            "src": "4119:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4119:20:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4105:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865204f7261636c65206f70657261746f72206d617920706572666f726d207468697320616374696f6e",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4153:50:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_647c2a8014ac7adb9924f7e39e4fa6fbf81e9bbb92e620e777617fd300cd6378",
                          "typeString": "literal_string \"Only the Oracle operator may perform this action\""
                        },
                        "value": "Only the Oracle operator may perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_647c2a8014ac7adb9924f7e39e4fa6fbf81e9bbb92e620e777617fd300cd6378",
                          "typeString": "literal_string \"Only the Oracle operator may perform this action\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4084:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4084:129:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "4084:129:7"
                },
                {
                  "id": 178,
                  "nodeType": "PlaceholderStatement",
                  "src": "4223:1:7"
                }
              ]
            },
            "documentation": {
              "id": 166,
              "nodeType": "StructuredDocumentation",
              "src": "3971:68:7",
              "text": " @dev Modifier that only Oracle operators may call"
            },
            "id": 180,
            "name": "onlyOracleOperator",
            "nameLocation": "4053:18:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4071:2:7"
            },
            "src": "4044:187:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1624,
              1662
            ],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "4434:197:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 191,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4463:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 193,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1248,
                                "src": "4483:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$1248_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$1248_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 192,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4478:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4478:14:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1248",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4478:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4463:41:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 197,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4520:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 199,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "4540:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1304_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1304_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 198,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4535:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4535:25:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1304",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4535:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4520:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4463:109:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 206,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "4612:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 204,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4588:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Loot_$948_$",
                            "typeString": "type(contract super Loot)"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1624,
                        "src": "4588:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4588:36:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4463:161:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "4444:180:7"
                }
              ]
            },
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "4237:56:7",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4307:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 187,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 185,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1625,
                  "src": "4390:6:7"
                },
                {
                  "id": 186,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1663,
                  "src": "4398:7:7"
                }
              ],
              "src": "4381:25:7"
            },
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4332:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4325:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4325:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4324:20:7"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4424:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4424:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4423:6:7"
            },
            "scope": 948,
            "src": "4298:333:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1303
            ],
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "4769:28:7",
              "statements": [
                {
                  "expression": {
                    "id": 220,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "4786:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 219,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "4779:11:7"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "4637:60:7",
              "text": " @dev Returns the URI for token type `id`."
            },
            "functionSelector": "0e89341c",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "4711:3:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 216,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4736:8:7"
            },
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4715:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4715:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4714:9:7"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4754:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4754:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4753:15:7"
            },
            "scope": 948,
            "src": "4702:95:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "5010:162:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 232,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "5041:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5060:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5052:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 233,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5052:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5052:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5041:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5076:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5020:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5020:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "5020:111:7"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 241,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5148:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 243,
                    "indexExpression": {
                      "id": 242,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "5157:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5148:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 244,
                  "nodeType": "Return",
                  "src": "5141:24:7"
                }
              ]
            },
            "documentation": {
              "id": 224,
              "nodeType": "StructuredDocumentation",
              "src": "4803:108:7",
              "text": " @dev Returns the total balance of `account`\n @notice May not query the zero address"
            },
            "functionSelector": "70a08231",
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4925:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4943:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "4935:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4935:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4934:17:7"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "4997:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4997:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4996:9:7"
            },
            "scope": 948,
            "src": "4916:256:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1186
            ],
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "5443:167:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "5474:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5493:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5485:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 259,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5485:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5485:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5474:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5509:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5453:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5453:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "5453:111:7"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 267,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "5581:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "id": 268,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5591:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5581:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 271,
                    "indexExpression": {
                      "id": 270,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "5595:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5581:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 256,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "5574:29:7"
                }
              ]
            },
            "documentation": {
              "id": 247,
              "nodeType": "StructuredDocumentation",
              "src": "5178:137:7",
              "text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n @notice May not query the zero address"
            },
            "functionSelector": "00fdd58e",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5329:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 253,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5404:8:7"
            },
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5347:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "5339:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5339:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5364:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "5356:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5356:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5338:29:7"
            },
            "returnParameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "5430:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5430:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5429:9:7"
            },
            "scope": 948,
            "src": "5320:290:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1199
            ],
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "5877:369:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 289,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "5908:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5908:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 291,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "5927:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5927:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5908:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5951:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5887:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5887:117:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5887:117:7"
                },
                {
                  "assignments": [
                    301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "6032:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "6015:30:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6015:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 300,
                        "nodeType": "ArrayTypeName",
                        "src": "6015:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 308,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 305,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "6062:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6062:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6048:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6052:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 303,
                        "nodeType": "ArrayTypeName",
                        "src": "6052:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6048:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6015:63:7"
                },
                {
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "6135:74:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 320,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "6149:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 322,
                            "indexExpression": {
                              "id": 321,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "6163:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6149:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 324,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 278,
                                  "src": "6178:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 326,
                                "indexExpression": {
                                  "id": 325,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 310,
                                  "src": "6187:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6178:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 327,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "6191:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 329,
                                "indexExpression": {
                                  "id": 328,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 310,
                                  "src": "6195:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6191:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 323,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                246,
                                274
                              ],
                              "referencedDeclaration": 274,
                              "src": "6168:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6168:30:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6149:49:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 332,
                        "nodeType": "ExpressionStatement",
                        "src": "6149:49:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 313,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "6109:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 314,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "6113:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6113:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6109:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 334,
                  "initializationExpression": {
                    "assignments": [
                      310
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6102:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "6094:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6094:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 312,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6106:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6094:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6130:3:7",
                      "subExpression": {
                        "id": 317,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "6132:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 319,
                    "nodeType": "ExpressionStatement",
                    "src": "6130:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "6089:120:7"
                },
                {
                  "expression": {
                    "id": 335,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 301,
                    "src": "6226:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 287,
                  "id": 336,
                  "nodeType": "Return",
                  "src": "6219:20:7"
                }
              ]
            },
            "documentation": {
              "id": 275,
              "nodeType": "StructuredDocumentation",
              "src": "5616:99:7",
              "text": " @dev Batched version of balanceOf.\n @notice May not query the zero address"
            },
            "functionSelector": "4e1273f4",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "5729:14:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 283,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5829:8:7"
            },
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "5761:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "5744:25:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 276,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5744:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 277,
                    "nodeType": "ArrayTypeName",
                    "src": "5744:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "5788:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "5771:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 279,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5771:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 280,
                    "nodeType": "ArrayTypeName",
                    "src": "5771:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5743:49:7"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "5855:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 284,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5855:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 285,
                    "nodeType": "ArrayTypeName",
                    "src": "5855:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5854:18:7"
            },
            "scope": 948,
            "src": "5720:526:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1207
            ],
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "6527:250:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 348,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6558:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6558:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 350,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "6572:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6558:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6594:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6537:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6537:110:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "6537:110:7"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 355,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "6658:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 359,
                        "indexExpression": {
                          "expression": {
                            "id": 356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6677:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6677:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6658:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 360,
                      "indexExpression": {
                        "id": 358,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6689:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6658:40:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 361,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "6701:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6658:51:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "6658:51:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 365,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6739:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6739:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 367,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6751:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 368,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "6761:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 364,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "6724:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6724:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "EmitStatement",
                  "src": "6719:51:7"
                }
              ]
            },
            "documentation": {
              "id": 339,
              "nodeType": "StructuredDocumentation",
              "src": "6252:174:7",
              "text": " @dev Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.\n @notice `operator` cannot be the caller."
            },
            "functionSelector": "a22cb465",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "6440:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 345,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6514:8:7"
            },
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6466:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "6458:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "6481:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "6476:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6476:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6457:33:7"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6527:0:7"
            },
            "scope": 948,
            "src": "6431:346:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1217
            ],
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "7015:61:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 383,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "7032:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 385,
                      "indexExpression": {
                        "id": 384,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "7051:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7032:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 387,
                    "indexExpression": {
                      "id": 386,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "7060:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7032:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 382,
                  "id": 388,
                  "nodeType": "Return",
                  "src": "7025:44:7"
                }
              ]
            },
            "documentation": {
              "id": 373,
              "nodeType": "StructuredDocumentation",
              "src": "6783:94:7",
              "text": " @dev Returns true if `operator` is approved to transfer `account`'s tokens."
            },
            "functionSelector": "e985e9c5",
            "id": 390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "6891:16:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6979:8:7"
            },
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6916:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "6908:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6908:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6933:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "6925:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6925:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6907:35:7"
            },
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "7005:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7005:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7004:6:7"
            },
            "scope": 948,
            "src": "6882:194:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1231
            ],
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "7733:783:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 406,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "7764:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 407,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7772:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7772:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7764:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 411,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 393,
                              "src": "7803:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 412,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7809:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7809:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 410,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "7786:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7786:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7764:56:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7834:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7743:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7743:144:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "7743:144:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 420,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "7905:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7919:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7911:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 421,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7911:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7911:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7905:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7923:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7897:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7897:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "7897:66:7"
                },
                {
                  "assignments": [
                    430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 430,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "7982:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "7974:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 429,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7974:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "expression": {
                      "id": 431,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "7993:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7993:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7974:29:7"
                },
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "8022:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "8014:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8014:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 436,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "8036:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 438,
                      "indexExpression": {
                        "id": 437,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "8046:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8036:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 440,
                    "indexExpression": {
                      "id": 439,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "8050:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8036:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8014:41:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 443,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "8086:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 444,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "8101:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8086:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8121:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8065:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8065:110:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "8065:110:7"
                },
                {
                  "id": 465,
                  "nodeType": "UncheckedBlock",
                  "src": "8185:115:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 449,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "8209:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 452,
                            "indexExpression": {
                              "id": 450,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "8219:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8209:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 453,
                          "indexExpression": {
                            "id": 451,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "8223:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8209:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 454,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "8231:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 455,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "8245:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8231:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8209:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 458,
                      "nodeType": "ExpressionStatement",
                      "src": "8209:42:7"
                    },
                    {
                      "expression": {
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 459,
                            "name": "_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "8265:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 461,
                          "indexExpression": {
                            "id": 460,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "8274:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8265:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 462,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "8283:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8265:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 464,
                      "nodeType": "ExpressionStatement",
                      "src": "8265:24:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 466,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "8309:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 469,
                        "indexExpression": {
                          "id": 467,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "8319:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8309:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 470,
                      "indexExpression": {
                        "id": 468,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "8323:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8309:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 471,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "8330:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8309:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "8309:27:7"
                },
                {
                  "expression": {
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 474,
                        "name": "_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "8346:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 476,
                      "indexExpression": {
                        "id": 475,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "8355:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8346:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 477,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "8362:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8346:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "8346:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 481,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "8399:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 482,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "8409:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 483,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "8415:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 484,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "8419:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 485,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "8423:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 480,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "8384:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8384:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 487,
                  "nodeType": "EmitStatement",
                  "src": "8379:51:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 489,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "8472:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 490,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "8482:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 491,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "8488:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 492,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "8492:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 493,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "8496:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 494,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "8504:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 488,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "8441:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8441:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "8441:68:7"
                }
              ]
            },
            "documentation": {
              "id": 391,
              "nodeType": "StructuredDocumentation",
              "src": "7082:485:7",
              "text": " @dev Transfers amount tokens of token type `id` from `from` to `to`.\n @notice May not query the zero address\n @notice If the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.\n @notice `from` must have a balance of tokens of type `id` of at least `amount`.\n @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value."
            },
            "functionSelector": "f242432a",
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "7581:16:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 403,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7724:8:7"
            },
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7615:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7607:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7607:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7637:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7629:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7629:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "7657:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7649:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7649:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7677:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7669:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7669:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7706:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "7693:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7693:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7597:119:7"
            },
            "returnParameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7733:0:7"
            },
            "scope": 948,
            "src": "7572:944:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1247
            ],
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "8983:1189:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 516,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "9014:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 517,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9022:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9022:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9014:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 521,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "9053:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 522,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9059:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9059:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 520,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "9036:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9036:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9014:56:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9084:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8993:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8993:153:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "8993:153:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 530,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "9177:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9177:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 532,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "9191:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9191:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9177:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9219:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9156:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9156:115:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "9156:115:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 539,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "9289:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9303:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9295:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 540,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9295:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9295:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9289:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9307:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9281:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9281:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "9281:66:7"
                },
                {
                  "assignments": [
                    549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 549,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9366:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 641,
                      "src": "9358:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 548,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9358:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 552,
                  "initialValue": {
                    "expression": {
                      "id": 550,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "9377:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "9377:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9358:29:7"
                },
                {
                  "body": {
                    "id": 622,
                    "nodeType": "Block",
                    "src": "9439:496:7",
                    "statements": [
                      {
                        "assignments": [
                          565
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 565,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "9461:2:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 622,
                            "src": "9453:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 564,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9453:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 569,
                        "initialValue": {
                          "baseExpression": {
                            "id": 566,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "9466:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 568,
                          "indexExpression": {
                            "id": 567,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "9470:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9466:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9453:19:7"
                      },
                      {
                        "assignments": [
                          571
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 571,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "9494:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 622,
                            "src": "9486:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 570,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9486:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 575,
                        "initialValue": {
                          "baseExpression": {
                            "id": 572,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "9503:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 574,
                          "indexExpression": {
                            "id": 573,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "9511:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9503:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9486:27:7"
                      },
                      {
                        "assignments": [
                          577
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 577,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "9536:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 622,
                            "src": "9528:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 576,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9528:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 583,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 578,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "9550:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 580,
                            "indexExpression": {
                              "id": 579,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 565,
                              "src": "9560:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9550:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 582,
                          "indexExpression": {
                            "id": 581,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "9564:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9550:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9528:41:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 585,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 577,
                                "src": "9608:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 586,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 571,
                                "src": "9623:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9608:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9647:44:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 584,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9583:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9583:122:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 590,
                        "nodeType": "ExpressionStatement",
                        "src": "9583:122:7"
                      },
                      {
                        "id": 607,
                        "nodeType": "UncheckedBlock",
                        "src": "9719:127:7",
                        "statements": [
                          {
                            "expression": {
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 591,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "9747:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 594,
                                  "indexExpression": {
                                    "id": 592,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 565,
                                    "src": "9757:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9747:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 595,
                                "indexExpression": {
                                  "id": 593,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 501,
                                  "src": "9761:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "9747:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 596,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 577,
                                  "src": "9769:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 597,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 571,
                                  "src": "9783:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9769:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9747:42:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 600,
                            "nodeType": "ExpressionStatement",
                            "src": "9747:42:7"
                          },
                          {
                            "expression": {
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 601,
                                  "name": "_balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "9807:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 603,
                                "indexExpression": {
                                  "id": 602,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 501,
                                  "src": "9816:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "9807:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "id": 604,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 571,
                                "src": "9825:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9807:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 606,
                            "nodeType": "ExpressionStatement",
                            "src": "9807:24:7"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 608,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "9859:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 611,
                              "indexExpression": {
                                "id": 609,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 565,
                                "src": "9869:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9859:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 612,
                            "indexExpression": {
                              "id": 610,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "9873:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9859:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 613,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "9880:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9859:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 615,
                        "nodeType": "ExpressionStatement",
                        "src": "9859:27:7"
                      },
                      {
                        "expression": {
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 616,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "9900:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 618,
                            "indexExpression": {
                              "id": 617,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "9909:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9900:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 619,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "9918:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9900:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "9900:24:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 557,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "9418:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 558,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "9422:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9422:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9418:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 623,
                  "initializationExpression": {
                    "assignments": [
                      554
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 554,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9411:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 623,
                        "src": "9403:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9403:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 556,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9415:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9403:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "9434:3:7",
                      "subExpression": {
                        "id": 561,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "9436:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 563,
                    "nodeType": "ExpressionStatement",
                    "src": "9434:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "9398:537:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 625,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "9964:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 626,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "9974:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 627,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "9980:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 628,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "9984:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 629,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "9989:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 624,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1160,
                      "src": "9950:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9950:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 631,
                  "nodeType": "EmitStatement",
                  "src": "9945:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 633,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "10057:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 634,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "10079:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 635,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "10097:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 636,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "10113:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 637,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "10130:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 638,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "10151:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 632,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "10008:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10008:157:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "10008:157:7"
                }
              ]
            },
            "documentation": {
              "id": 499,
              "nodeType": "StructuredDocumentation",
              "src": "8522:270:7",
              "text": " @dev Batched version of safeTransferFrom.\n @notice `ids` and `amounts` must have the same length.\n @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value."
            },
            "functionSelector": "2eb2c2d6",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "8806:21:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 513,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8974:8:7"
            },
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8845:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8837:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8837:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8867:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8859:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8859:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "8896:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8879:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 504,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8879:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 505,
                    "nodeType": "ArrayTypeName",
                    "src": "8879:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "8926:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8909:24:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 507,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8909:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 508,
                    "nodeType": "ArrayTypeName",
                    "src": "8909:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8956:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "8943:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8943:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8827:139:7"
            },
            "returnParameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8983:0:7"
            },
            "scope": 948,
            "src": "8797:1375:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 708,
              "nodeType": "Block",
              "src": "10633:448:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 657,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "10651:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10670:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10662:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 658,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10662:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10662:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10651:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10674:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10643:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10643:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "10643:67:7"
                },
                {
                  "assignments": [
                    667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 667,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10729:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "10721:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10721:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "expression": {
                      "id": 668,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "10740:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "10740:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10721:29:7"
                },
                {
                  "expression": {
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 671,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "10761:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 674,
                        "indexExpression": {
                          "id": 672,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "10771:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10761:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 675,
                      "indexExpression": {
                        "id": 673,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "10775:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10761:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 676,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "10787:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10761:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "10761:32:7"
                },
                {
                  "expression": {
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 679,
                        "name": "_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "10803:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 681,
                      "indexExpression": {
                        "id": 680,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "10812:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10803:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 682,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "10824:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10803:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "10803:27:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "10860:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10878:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10870:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10870:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10870:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 691,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "10882:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 692,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "10891:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 693,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "10895:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 685,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "10845:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10845:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "EmitStatement",
                  "src": "10840:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 697,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "10957:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10987:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10979:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10979:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10979:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 702,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "11003:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 703,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "11024:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 704,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "11040:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 705,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "11060:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 696,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "10913:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10913:161:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "10913:161:7"
                }
              ]
            },
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "10178:308:7",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n @notice `account` cannot be the zero address.\n @notice If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "functionSelector": "731133e9",
            "id": 709,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 654,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 653,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 180,
                  "src": "10614:18:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "10614:18:7"
              }
            ],
            "name": "mint",
            "nameLocation": "10500:4:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10522:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "10514:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10514:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10547:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "10539:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10539:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10567:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "10559:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10559:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10596:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 709,
                  "src": "10583:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10583:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10504:102:7"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10633:0:7"
            },
            "scope": 948,
            "src": "10491:590:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "11524:638:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 726,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "11542:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11556:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11548:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 727,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11548:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11548:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11542:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11560:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 725,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11534:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11534:62:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "11534:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 736,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "11627:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11627:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 738,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "11641:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11641:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11627:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11669:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11606:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11606:115:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "11606:115:7"
                },
                {
                  "assignments": [
                    745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 745,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11740:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 805,
                      "src": "11732:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 744,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11732:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 748,
                  "initialValue": {
                    "expression": {
                      "id": 746,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "11751:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "11751:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11732:29:7"
                },
                {
                  "body": {
                    "id": 780,
                    "nodeType": "Block",
                    "src": "11813:100:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 760,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "11827:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 765,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 761,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 715,
                                  "src": "11837:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 763,
                                "indexExpression": {
                                  "id": 762,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 750,
                                  "src": "11841:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11837:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11827:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 766,
                            "indexExpression": {
                              "id": 764,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 712,
                              "src": "11845:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11827:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 767,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "11852:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 769,
                            "indexExpression": {
                              "id": 768,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 750,
                              "src": "11860:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11852:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11827:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 771,
                        "nodeType": "ExpressionStatement",
                        "src": "11827:35:7"
                      },
                      {
                        "expression": {
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 772,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "11876:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 774,
                            "indexExpression": {
                              "id": 773,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 712,
                              "src": "11885:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11876:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 775,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "11892:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 777,
                            "indexExpression": {
                              "id": 776,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 750,
                              "src": "11900:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11892:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11876:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "11876:26:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 753,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "11792:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 754,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "11796:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11796:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11792:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 781,
                  "initializationExpression": {
                    "assignments": [
                      750
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11785:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 781,
                        "src": "11777:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11777:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 752,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11789:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11777:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11808:3:7",
                      "subExpression": {
                        "id": 757,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "11808:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 759,
                    "nodeType": "ExpressionStatement",
                    "src": "11808:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "11772:141:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 783,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "11942:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11960:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11952:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11952:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11952:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 788,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "11964:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 789,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "11968:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 790,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "11973:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 782,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1160,
                      "src": "11928:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11928:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "EmitStatement",
                  "src": "11923:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 794,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "12041:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12071:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12063:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12063:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12063:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 799,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "12087:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "12103:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 801,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "12120:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 802,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "12141:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 793,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "11992:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11992:163:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "11992:163:7"
                }
              ]
            },
            "documentation": {
              "id": 710,
              "nodeType": "StructuredDocumentation",
              "src": "11087:270:7",
              "text": " @dev Batched version of _mint.\n @notice `ids` and `amounts` must have the same length.\n @notice - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "functionSelector": "1f7fdffa",
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 723,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 722,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 180,
                  "src": "11505:18:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "11505:18:7"
              }
            ],
            "name": "mintBatch",
            "nameLocation": "11371:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11398:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11390:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11390:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11427:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11410:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 713,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11410:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 714,
                    "nodeType": "ArrayTypeName",
                    "src": "11410:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11457:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11440:24:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 716,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11440:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 717,
                    "nodeType": "ArrayTypeName",
                    "src": "11440:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11487:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11474:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11474:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11380:117:7"
            },
            "returnParameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11524:0:7"
            },
            "scope": 948,
            "src": "11362:800:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "12361:678:7",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 821,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "12375:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1324,
                      "src": "12375:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12375:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 867,
                  "nodeType": "IfStatement",
                  "src": "12371:662:7",
                  "trueBody": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "12392:641:7",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 848,
                              "nodeType": "Block",
                              "src": "12655:184:7",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 841,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 837,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 835,
                                      "src": "12677:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 838,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1289,
                                          "src": "12689:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1289_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 839,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1270,
                                        "src": "12689:34:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12689:43:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12677:55:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 847,
                                  "nodeType": "IfStatement",
                                  "src": "12673:152:7",
                                  "trueBody": {
                                    "id": 846,
                                    "nodeType": "Block",
                                    "src": "12734:91:7",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 843,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12763:42:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 842,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12756:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 844,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12756:50:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 845,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12756:50:7"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 849,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 836,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 835,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "12645:8:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 849,
                                  "src": "12638:15:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 834,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12638:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12637:17:7"
                            },
                            "src": "12629:210:7"
                          },
                          {
                            "block": {
                              "id": 857,
                              "nodeType": "Block",
                              "src": "12874:47:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 854,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 851,
                                        "src": "12899:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 853,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "12892:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12892:14:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 856,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12892:14:7"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 858,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 852,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 851,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12866:6:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 858,
                                  "src": "12852:20:7",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 850,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12852:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12851:22:7"
                            },
                            "src": "12840:81:7"
                          },
                          {
                            "block": {
                              "id": 863,
                              "nodeType": "Block",
                              "src": "12928:95:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 860,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12953:54:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 859,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "12946:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12946:62:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 862,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12946:62:7"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 864,
                            "nodeType": "TryCatchClause",
                            "src": "12922:101:7"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 828,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "12486:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 829,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "12516:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 830,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "12542:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 831,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 816,
                              "src": "12566:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 832,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "12594:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 825,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 812,
                                  "src": "12443:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 824,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1289,
                                "src": "12426:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1289_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12426:20:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$1289",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1270,
                            "src": "12426:38:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12426:190:7",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 865,
                        "nodeType": "TryStatement",
                        "src": "12406:617:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "12177:30:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12225:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12217:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12217:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12251:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12243:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12243:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12273:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12265:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12265:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "12293:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12285:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12285:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12313:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12305:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12305:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12342:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "12329:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12329:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12207:145:7"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12361:0:7"
            },
            "scope": 948,
            "src": "12168:871:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 933,
              "nodeType": "Block",
              "src": "13263:728:7",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 886,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "13277:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1324,
                      "src": "13277:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13277:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "nodeType": "IfStatement",
                  "src": "13273:712:7",
                  "trueBody": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "13294:691:7",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 913,
                              "nodeType": "Block",
                              "src": "13564:227:7",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 906,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 902,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 900,
                                      "src": "13607:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 903,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1289,
                                          "src": "13619:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1289_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 904,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1288,
                                        "src": "13619:39:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 905,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13619:48:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13607:60:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 912,
                                  "nodeType": "IfStatement",
                                  "src": "13582:195:7",
                                  "trueBody": {
                                    "id": 911,
                                    "nodeType": "Block",
                                    "src": "13686:91:7",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 908,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13715:42:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 907,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13708:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 909,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13708:50:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 910,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13708:50:7"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 914,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 901,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 900,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13554:8:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 914,
                                  "src": "13547:15:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 899,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13547:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13546:17:7"
                            },
                            "src": "13538:253:7"
                          },
                          {
                            "block": {
                              "id": 922,
                              "nodeType": "Block",
                              "src": "13826:47:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 919,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 916,
                                        "src": "13851:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 918,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13844:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 920,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13844:14:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 921,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13844:14:7"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 923,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 917,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 916,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13818:6:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 923,
                                  "src": "13804:20:7",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 915,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13804:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13803:22:7"
                            },
                            "src": "13792:81:7"
                          },
                          {
                            "block": {
                              "id": 928,
                              "nodeType": "Block",
                              "src": "13880:95:7",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 925,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13905:54:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 924,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13898:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13898:62:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 927,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13898:62:7"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 929,
                            "nodeType": "TryCatchClause",
                            "src": "13874:101:7"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 893,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "13393:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 894,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "13423:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 895,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "13449:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 896,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 881,
                              "src": "13474:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 897,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 883,
                              "src": "13503:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 890,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 875,
                                  "src": "13345:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 889,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1289,
                                "src": "13328:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1289_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13328:20:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$1289",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1288,
                            "src": "13328:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13328:197:7",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 930,
                        "nodeType": "TryStatement",
                        "src": "13308:667:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 934,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "13054:35:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13107:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "13099:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13099:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13133:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "13125:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13125:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13155:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "13147:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13147:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13184:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "13167:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 876,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13167:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 877,
                    "nodeType": "ArrayTypeName",
                    "src": "13167:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13214:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "13197:24:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 879,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13197:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 880,
                    "nodeType": "ArrayTypeName",
                    "src": "13197:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13244:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "13231:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13231:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13089:165:7"
            },
            "returnParameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13263:0:7"
            },
            "scope": 948,
            "src": "13045:946:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 946,
              "nodeType": "Block",
              "src": "14139:28:7",
              "statements": [
                {
                  "expression": {
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 942,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "14149:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 943,
                      "name": "uri_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "14156:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "14149:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "14149:11:7"
                }
              ]
            },
            "documentation": {
              "id": 935,
              "nodeType": "StructuredDocumentation",
              "src": "13997:75:7",
              "text": " @dev Allows the URI to be changed by the Oracle operator"
            },
            "functionSelector": "02fe5305",
            "id": 947,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 940,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 939,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 180,
                  "src": "14120:18:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "14120:18:7"
              }
            ],
            "name": "setURI",
            "nameLocation": "14086:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "14107:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 947,
                  "src": "14093:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14093:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14092:20:7"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14139:0:7"
            },
            "scope": 948,
            "src": "14077:90:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 949,
        "src": "660:13509:7",
        "usedErrors": []
      }
    ],
    "src": "33:14137:7"
  },
  "bytecode": "",
  "bytecodeSha1": "37c51df4928154ee41a900d48f846685c2385a66",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "Loot",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Loot._doSafeBatchTransferAcceptanceCheck": {
          "70": [
            13607,
            13667,
            false
          ]
        },
        "Loot._doSafeTransferAcceptanceCheck": {
          "71": [
            12677,
            12732,
            false
          ]
        },
        "Loot.balanceOf": {
          "53": [
            5474,
            5495,
            true
          ],
          "62": [
            5041,
            5062,
            true
          ]
        },
        "Loot.balanceOfBatch": {
          "61": [
            5908,
            5937,
            true
          ]
        },
        "Loot.mint": {
          "63": [
            4105,
            4139,
            true
          ],
          "64": [
            10651,
            10672,
            true
          ]
        },
        "Loot.mintBatch": {
          "54": [
            11542,
            11558,
            true
          ],
          "55": [
            11627,
            11655,
            true
          ]
        },
        "Loot.safeBatchTransferFrom": {
          "56": [
            9014,
            9032,
            true
          ],
          "57": [
            9036,
            9070,
            true
          ],
          "58": [
            9177,
            9205,
            true
          ],
          "59": [
            9289,
            9305,
            true
          ],
          "60": [
            9608,
            9629,
            true
          ]
        },
        "Loot.safeTransferFrom": {
          "66": [
            7764,
            7782,
            true
          ],
          "67": [
            7786,
            7820,
            true
          ],
          "68": [
            7905,
            7921,
            true
          ],
          "69": [
            8086,
            8107,
            true
          ]
        },
        "Loot.setApprovalForAll": {
          "65": [
            6558,
            6580,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "4": {
        "Address.isContract": {
          "48": [
            1073,
            1088
          ]
        }
      },
      "5": {
        "ERC165.supportsInterface": {
          "3": [
            864,
            911
          ]
        }
      },
      "6": {},
      "7": {
        "Loot._doSafeBatchTransferAcceptanceCheck": {
          "49": [
            13844,
            13858
          ],
          "50": [
            13898,
            13960
          ],
          "51": [
            13708,
            13758
          ]
        },
        "Loot._doSafeTransferAcceptanceCheck": {
          "52": [
            12756,
            12806
          ]
        },
        "Loot.balanceOf": {
          "0": [
            5453,
            5564
          ],
          "1": [
            5574,
            5603
          ],
          "28": [
            5020,
            5131
          ],
          "29": [
            5141,
            5165
          ]
        },
        "Loot.balanceOfBatch": {
          "24": [
            5887,
            6004
          ],
          "25": [
            6149,
            6198
          ],
          "26": [
            6130,
            6133
          ],
          "27": [
            6219,
            6239
          ]
        },
        "Loot.isApprovedForAll": {
          "38": [
            7025,
            7069
          ]
        },
        "Loot.mint": {
          "30": [
            10643,
            10710
          ],
          "31": [
            10761,
            10793
          ],
          "32": [
            10803,
            10830
          ],
          "33": [
            10840,
            10902
          ],
          "34": [
            10913,
            11074
          ]
        },
        "Loot.mintBatch": {
          "6": [
            11534,
            11596
          ],
          "7": [
            11606,
            11721
          ],
          "8": [
            11827,
            11862
          ],
          "9": [
            11876,
            11902
          ],
          "10": [
            11808,
            11811
          ],
          "11": [
            11923,
            11981
          ],
          "12": [
            11992,
            12155
          ]
        },
        "Loot.safeBatchTransferFrom": {
          "13": [
            8993,
            9146
          ],
          "14": [
            9156,
            9271
          ],
          "15": [
            9281,
            9347
          ],
          "16": [
            9583,
            9705
          ],
          "17": [
            9747,
            9789
          ],
          "18": [
            9807,
            9831
          ],
          "19": [
            9859,
            9886
          ],
          "20": [
            9900,
            9924
          ],
          "21": [
            9434,
            9437
          ],
          "22": [
            9945,
            9997
          ],
          "23": [
            10008,
            10165
          ]
        },
        "Loot.safeTransferFrom": {
          "39": [
            7743,
            7887
          ],
          "40": [
            7897,
            7963
          ],
          "41": [
            8065,
            8175
          ],
          "42": [
            8209,
            8251
          ],
          "43": [
            8265,
            8289
          ],
          "44": [
            8309,
            8336
          ],
          "45": [
            8346,
            8368
          ],
          "46": [
            8379,
            8430
          ],
          "47": [
            8441,
            8509
          ]
        },
        "Loot.setApprovalForAll": {
          "35": [
            6537,
            6647
          ],
          "36": [
            6658,
            6709
          ],
          "37": [
            6719,
            6770
          ]
        },
        "Loot.setURI": {
          "4": [
            14149,
            14160
          ]
        },
        "Loot.supportsInterface": {
          "2": [
            4444,
            4624
          ]
        },
        "Loot.uri": {
          "5": [
            4779,
            4790
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.1/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC165",
    "IOracle"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f45760003560e01c80634e1273f41161009757806395d89b411161006657806395d89b4114610216578063a22cb4651461021e578063e985e9c514610231578063f242432a1461024457600080fd5b80634e1273f4146101a557806370a08231146101c5578063731133e9146101d85780637dc0d1d0146101eb57600080fd5b806306fdde03116100d357806306fdde03146101575780630e89341c1461016c5780631f7fdffa1461017f5780632eb2c2d61461019257600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806302fe530514610142575b600080fd5b61010c6101073660046115b6565b610257565b6040519081526020015b60405180910390f35b61013261012d36600461170c565b6102b0565b6040519015158152602001610116565b610155610150366004611746565b610302565b005b61015f6103cf565b604051610116919061191c565b61015f61017a366004611797565b61045d565b61015561018d3660046114e8565b6104f1565b6101556101a03660046113d1565b61074e565b6101b86101b3366004611639565b6109ad565b60405161011691906118db565b61010c6101d336600461135e565b610ad7565b6101556101e63660046115e2565b610b1b565b6006546101fe906001600160a01b031681565b6040516001600160a01b039091168152602001610116565b61015f610cb8565b61015561022c366004611583565b610cc5565b61013261023f366004611398565b610d9c565b61015561025236600461147f565b610dca565b60006001600160a01b0383166102885760405162461bcd60e51b815260040161027f90611977565b60405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102e157506001600160e01b031982166303a24d0760e21b145b806102fc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600660009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561035057600080fd5b505afa158015610364573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610388919061137b565b6001600160a01b0316336001600160a01b0316146103b85760405162461bcd60e51b815260040161027f906119c2565b80516103cb9060039060208401906111c9565b5050565b600480546103dc90611b66565b80601f016020809104026020016040519081016040528092919081815260200182805461040890611b66565b80156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b505050505081565b60606003805461046c90611b66565b80601f016020809104026020016040519081016040528092919081815260200182805461049890611b66565b80156104e55780601f106104ba576101008083540402835291602001916104e5565b820191906000526020600020905b8154815290600101906020018083116104c857829003601f168201915b50505050509050919050565b600660009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561053f57600080fd5b505afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610577919061137b565b6001600160a01b0316336001600160a01b0316146105a75760405162461bcd60e51b815260040161027f906119c2565b6001600160a01b0384166105cd5760405162461bcd60e51b815260040161027f90611ae9565b81518351146105ee5760405162461bcd60e51b815260040161027f90611aa1565b3360005b84518110156106df5783818151811061060d5761060d611bff565b60200260200101516001600087848151811061062b5761062b611bff565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106739190611b4e565b9250508190555083818151811061068c5761068c611bff565b6020026020010151600080886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106c79190611b4e565b909155508190506106d781611bce565b9150506105f2565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107309291906118ee565b60405180910390a461074781600087878787610f94565b5050505050565b6001600160a01b03851633148061076a575061076a8533610d9c565b6107d15760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161027f565b81518351146107f25760405162461bcd60e51b815260040161027f90611aa1565b6001600160a01b0384166108185760405162461bcd60e51b815260040161027f90611a12565b3360005b845181101561093f57600085828151811061083957610839611bff565b60200260200101519050600085838151811061085757610857611bff565b60209081029190910181015160008481526001835260408082206001600160a01b038e1683529093529190912054909150818110156108a85760405162461bcd60e51b815260040161027f90611a57565b60008381526001602090815260408083206001600160a01b03808f1685528184528285208787039055848452828520805488900390558d168452909152812080548492906108f7908490611b4e565b90915550506001600160a01b038a1660009081526020819052604081208054849290610924908490611b4e565b925050819055505050508061093890611bce565b905061081c565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161098f9291906118ee565b60405180910390a46109a5818787878787610f94565b505050505050565b60608151835114610a125760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161027f565b6000835167ffffffffffffffff811115610a2e57610a2e611c15565b604051908082528060200260200182016040528015610a57578160200160208202803683370190505b50905060005b8451811015610acf57610aa2858281518110610a7b57610a7b611bff565b6020026020010151858381518110610a9557610a95611bff565b6020026020010151610257565b828281518110610ab457610ab4611bff565b6020908102919091010152610ac881611bce565b9050610a5d565b509392505050565b60006001600160a01b038216610aff5760405162461bcd60e51b815260040161027f90611977565b506001600160a01b031660009081526020819052604090205490565b600660009054906101000a90046001600160a01b03166001600160a01b031663e7f43c686040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6957600080fd5b505afa158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba1919061137b565b6001600160a01b0316336001600160a01b031614610bd15760405162461bcd60e51b815260040161027f906119c2565b6001600160a01b038416610bf75760405162461bcd60e51b815260040161027f90611ae9565b60008381526001602090815260408083206001600160a01b0388168452909152812080543392859291610c2b908490611b4e565b90915550506001600160a01b03851660009081526020819052604081208054859290610c58908490611b4e565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610747816000878787876110ff565b600580546103dc90611b66565b336001600160a01b0383161415610d305760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161027f565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038516331480610de65750610de68533610d9c565b610e445760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161027f565b6001600160a01b038416610e6a5760405162461bcd60e51b815260040161027f90611a12565b60008381526001602090815260408083206001600160a01b0389168452909152902054339083811015610eaf5760405162461bcd60e51b815260040161027f90611a57565b60008581526001602090815260408083206001600160a01b03808c168552818452828520898703905584845282852080548a900390558a16845290915281208054869290610efe908490611b4e565b90915550506001600160a01b03861660009081526020819052604081208054869290610f2b908490611b4e565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610f8b8288888888886110ff565b50505050505050565b6001600160a01b0384163b156109a55760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610fd89089908990889088908890600401611838565b602060405180830381600087803b158015610ff257600080fd5b505af1925050508015611022575060408051601f3d908101601f1916820190925261101f91810190611729565b60015b6110cf5761102e611c2b565b806308c379a014156110685750611043611c47565b8061104e575061106a565b8060405162461bcd60e51b815260040161027f919061191c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161027f565b6001600160e01b0319811663bc197c8160e01b14610f8b5760405162461bcd60e51b815260040161027f9061192f565b6001600160a01b0384163b156109a55760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111439089908990889088908890600401611896565b602060405180830381600087803b15801561115d57600080fd5b505af192505050801561118d575060408051601f3d908101601f1916820190925261118a91810190611729565b60015b6111995761102e611c2b565b6001600160e01b0319811663f23a6e6160e01b14610f8b5760405162461bcd60e51b815260040161027f9061192f565b8280546111d590611b66565b90600052602060002090601f0160209004810192826111f7576000855561123d565b82601f1061121057805160ff191683800117855561123d565b8280016001018555821561123d579182015b8281111561123d578251825591602001919060010190611222565b5061124992915061124d565b5090565b5b80821115611249576000815560010161124e565b600067ffffffffffffffff83111561127c5761127c611c15565b604051611293601f8501601f191660200182611ba1565b8091508381528484840111156112a857600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126112d157600080fd5b813560206112de82611b2a565b6040516112eb8282611ba1565b8381528281019150858301600585901b8701840188101561130b57600080fd5b60005b8581101561132a5781358452928401929084019060010161130e565b5090979650505050505050565b600082601f83011261134857600080fd5b61135783833560208501611262565b9392505050565b60006020828403121561137057600080fd5b813561135781611cd1565b60006020828403121561138d57600080fd5b815161135781611cd1565b600080604083850312156113ab57600080fd5b82356113b681611cd1565b915060208301356113c681611cd1565b809150509250929050565b600080600080600060a086880312156113e957600080fd5b85356113f481611cd1565b9450602086013561140481611cd1565b9350604086013567ffffffffffffffff8082111561142157600080fd5b61142d89838a016112c0565b9450606088013591508082111561144357600080fd5b61144f89838a016112c0565b9350608088013591508082111561146557600080fd5b5061147288828901611337565b9150509295509295909350565b600080600080600060a0868803121561149757600080fd5b85356114a281611cd1565b945060208601356114b281611cd1565b93506040860135925060608601359150608086013567ffffffffffffffff8111156114dc57600080fd5b61147288828901611337565b600080600080608085870312156114fe57600080fd5b843561150981611cd1565b9350602085013567ffffffffffffffff8082111561152657600080fd5b611532888389016112c0565b9450604087013591508082111561154857600080fd5b611554888389016112c0565b9350606087013591508082111561156a57600080fd5b5061157787828801611337565b91505092959194509250565b6000806040838503121561159657600080fd5b82356115a181611cd1565b9150602083013580151581146113c657600080fd5b600080604083850312156115c957600080fd5b82356115d481611cd1565b946020939093013593505050565b600080600080608085870312156115f857600080fd5b843561160381611cd1565b93506020850135925060408501359150606085013567ffffffffffffffff81111561162d57600080fd5b61157787828801611337565b6000806040838503121561164c57600080fd5b823567ffffffffffffffff8082111561166457600080fd5b818501915085601f83011261167857600080fd5b8135602061168582611b2a565b6040516116928282611ba1565b8381528281019150858301600585901b870184018b10156116b257600080fd5b600096505b848710156116de5780356116ca81611cd1565b8352600196909601959183019183016116b7565b50965050860135925050808211156116f557600080fd5b50611702858286016112c0565b9150509250929050565b60006020828403121561171e57600080fd5b813561135781611ce9565b60006020828403121561173b57600080fd5b815161135781611ce9565b60006020828403121561175857600080fd5b813567ffffffffffffffff81111561176f57600080fd5b8201601f8101841361178057600080fd5b61178f84823560208401611262565b949350505050565b6000602082840312156117a957600080fd5b5035919050565b600081518084526020808501945080840160005b838110156117e0578151875295820195908201906001016117c4565b509495945050505050565b6000815180845260005b81811015611811576020818501810151868301820152016117f5565b81811115611823576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611864908301866117b0565b828103606084015261187681866117b0565b9050828103608084015261188a81856117eb565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906118d0908301846117eb565b979650505050505050565b60208152600061135760208301846117b0565b60408152600061190160408301856117b0565b828103602084015261191381856117b0565b95945050505050565b60208152600061135760208301846117eb565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201526a65726f206164647265737360a81b606082015260800190565b60208082526030908201527f4f6e6c7920746865204f7261636c65206f70657261746f72206d61792070657260408201526f3337b936903a3434b99030b1ba34b7b760811b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b600067ffffffffffffffff821115611b4457611b44611c15565b5060051b60200190565b60008219821115611b6157611b61611be9565b500190565b600181811c90821680611b7a57607f821691505b60208210811415611b9b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611bc757611bc7611c15565b6040525050565b6000600019821415611be257611be2611be9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611c445760046000803e5060005160e01c5b90565b600060443d1015611c555790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611c8557505050505090565b8285019150815181811115611c9d5750505050505090565b843d8701016020828501011115611cb75750505050505090565b611cc660208286010187611ba1565b509095945050505050565b6001600160a01b0381168114611ce657600080fd5b50565b6001600160e01b031981168114611ce657600080fdfea2646970667358221220ac183ee649cb3f0d84d8d7a5cd27570caafaba3dd29cdd01adc748efef647b2564736f6c63430008060033",
  "deployedSourceMap": "660:13509:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5320:290;;;;;;:::i;:::-;;:::i;:::-;;;17647:25:10;;;17635:2;17620:18;5320:290:7;;;;;;;;4298:333;;;;;;:::i;:::-;;:::i;:::-;;;12090:14:10;;12083:22;12065:41;;12053:2;12038:18;4298:333:7;12020:92:10;14077:90:7;;;;;;:::i;:::-;;:::i;:::-;;1267:18;;;:::i;:::-;;;;;;;:::i;4702:95::-;;;;;;:::i;:::-;;:::i;11362:800::-;;;;;;:::i;:::-;;:::i;8797:1375::-;;;;;;:::i;:::-;;:::i;5720:526::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4916:256::-;;;;;;:::i;:::-;;:::i;10491:590::-;;;;;;:::i;:::-;;:::i;1393:21::-;;;;;-1:-1:-1;;;;;1393:21:7;;;;;;-1:-1:-1;;;;;12297:32:10;;;12279:51;;12267:2;12252:18;1393:21:7;12234:102:10;1339:20:7;;;:::i;6431:346::-;;;;;;:::i;:::-;;:::i;6882:194::-;;;;;;:::i;:::-;;:::i;7572:944::-;;;;;;:::i;:::-;;:::i;5320:290::-;5430:7;-1:-1:-1;;;;;5474:21:7;;5453:111;;;;-1:-1:-1;;;5453:111:7;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;5581:13:7;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5581:22:7;;;;;;;;;;;;5320:290::o;4298:333::-;4424:4;-1:-1:-1;;;;;;4463:41:7;;-1:-1:-1;;;4463:41:7;;:109;;-1:-1:-1;;;;;;;4520:52:7;;-1:-1:-1;;;4520:52:7;4463:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:5;;;4588:36:7;4444:180;4298:333;-1:-1:-1;;4298:333:7:o;14077:90::-;4119:6;;;;;;;;;-1:-1:-1;;;;;4119:6:7;-1:-1:-1;;;;;4119:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4105:34:7;:10;-1:-1:-1;;;;;4105:34:7;;4084:129;;;;-1:-1:-1;;;4084:129:7;;;;;;;:::i;:::-;14149:11;;::::1;::::0;:4:::1;::::0;:11:::1;::::0;::::1;::::0;::::1;:::i;:::-;;14077:90:::0;:::o;1267:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4702:95::-;4754:13;4786:4;4779:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4702:95;;;:::o;11362:800::-;4119:6;;;;;;;;;-1:-1:-1;;;;;4119:6:7;-1:-1:-1;;;;;4119:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4105:34:7;:10;-1:-1:-1;;;;;4105:34:7;;4084:129;;;;-1:-1:-1;;;4084:129:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;11542:16:7;::::1;11534:62;;;;-1:-1:-1::0;;;11534:62:7::1;;;;;;;:::i;:::-;11641:7;:14;11627:3;:10;:28;11606:115;;;;-1:-1:-1::0;;;11606:115:7::1;;;;;;;:::i;:::-;11751:10;11732:16;11772:141;11796:3;:10;11792:1;:14;11772:141;;;11852:7;11860:1;11852:10;;;;;;;;:::i;:::-;;;;;;;11827:9;:17;11837:3;11841:1;11837:6;;;;;;;;:::i;:::-;;;;;;;11827:17;;;;;;;;;;;:21;11845:2;-1:-1:-1::0;;;;;11827:21:7::1;-1:-1:-1::0;;;;;11827:21:7::1;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;11892:7;11900:1;11892:10;;;;;;;;:::i;:::-;;;;;;;11876:8;:12:::0;11885:2:::1;-1:-1:-1::0;;;;;11876:12:7::1;-1:-1:-1::0;;;;;11876:12:7::1;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;11808:3:7;;-1:-1:-1;11808:3:7::1;::::0;::::1;:::i;:::-;;;;11772:141;;;;11964:2;-1:-1:-1::0;;;;;11928:53:7::1;11960:1;-1:-1:-1::0;;;;;11928:53:7::1;11942:8;-1:-1:-1::0;;;;;11928:53:7::1;;11968:3;11973:7;11928:53;;;;;;;:::i;:::-;;;;;;;;11992:163;12041:8;12071:1;12087:2;12103:3;12120:7;12141:4;11992:35;:163::i;:::-;11524:638;11362:800:::0;;;;:::o;8797:1375::-;-1:-1:-1;;;;;9014:18:7;;9022:10;9014:18;;:56;;;9036:34;9053:4;9059:10;9036:16;:34::i;:::-;8993:153;;;;-1:-1:-1;;;8993:153:7;;15242:2:10;8993:153:7;;;15224:21:10;15281:2;15261:18;;;15254:30;15320:34;15300:18;;;15293:62;-1:-1:-1;;;15371:18:10;;;15364:48;15429:19;;8993:153:7;15214:240:10;8993:153:7;9191:7;:14;9177:3;:10;:28;9156:115;;;;-1:-1:-1;;;9156:115:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;9289:16:7;;9281:66;;;;-1:-1:-1;;;9281:66:7;;;;;;;:::i;:::-;9377:10;9358:16;9398:537;9422:3;:10;9418:1;:14;9398:537;;;9453:10;9466:3;9470:1;9466:6;;;;;;;;:::i;:::-;;;;;;;9453:19;;9486:14;9503:7;9511:1;9503:10;;;;;;;;:::i;:::-;;;;;;;;;;;;9528:19;9550:13;;;:9;:13;;;;;;-1:-1:-1;;;;;9550:19:7;;;;;;;;;;;;9503:10;;-1:-1:-1;9608:21:7;;;;9583:122;;;;-1:-1:-1;;;9583:122:7;;;;;;;:::i;:::-;9747:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9747:19:7;;;;;;;;;;;9769:20;;;9747:42;;9807:14;;;;;;:24;;;;;;;9859:17;;;;;;;;;:27;;9783:6;;9747:13;9859:27;;9783:6;;9859:27;:::i;:::-;;;;-1:-1:-1;;;;;;;9900:14:7;;:8;:14;;;;;;;;;;:24;;9918:6;;9900:8;:24;;9918:6;;9900:24;:::i;:::-;;;;;;;;9439:496;;;9434:3;;;;:::i;:::-;;;9398:537;;;;9980:2;-1:-1:-1;;;;;9950:47:7;9974:4;-1:-1:-1;;;;;9950:47:7;9964:8;-1:-1:-1;;;;;9950:47:7;;9984:3;9989:7;9950:47;;;;;;;:::i;:::-;;;;;;;;10008:157;10057:8;10079:4;10097:2;10113:3;10130:7;10151:4;10008:35;:157::i;:::-;8983:1189;8797:1375;;;;;:::o;5720:526::-;5855:16;5927:3;:10;5908:8;:15;:29;5887:117;;;;-1:-1:-1;;;5887:117:7;;16482:2:10;5887:117:7;;;16464:21:10;16521:2;16501:18;;;16494:30;16560:34;16540:18;;;16533:62;-1:-1:-1;;;16611:18:10;;;16604:39;16660:19;;5887:117:7;16454:231:10;5887:117:7;6015:30;6062:8;:15;6048:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6048:30:7;;6015:63;;6094:9;6089:120;6113:8;:15;6109:1;:19;6089:120;;;6168:30;6178:8;6187:1;6178:11;;;;;;;;:::i;:::-;;;;;;;6191:3;6195:1;6191:6;;;;;;;;:::i;:::-;;;;;;;6168:9;:30::i;:::-;6149:13;6163:1;6149:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;6130:3;;;:::i;:::-;;;6089:120;;;-1:-1:-1;6226:13:7;5720:526;-1:-1:-1;;;5720:526:7:o;4916:256::-;4997:7;-1:-1:-1;;;;;5041:21:7;;5020:111;;;;-1:-1:-1;;;5020:111:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5148:17:7;:8;:17;;;;;;;;;;;;4916:256::o;10491:590::-;4119:6;;;;;;;;;-1:-1:-1;;;;;4119:6:7;-1:-1:-1;;;;;4119:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4105:34:7;:10;-1:-1:-1;;;;;4105:34:7;;4084:129;;;;-1:-1:-1;;;4084:129:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;10651:21:7;::::1;10643:67;;;;-1:-1:-1::0;;;10643:67:7::1;;;;;;;:::i;:::-;10721:16;10761:13:::0;;;:9:::1;:13;::::0;;;;;;;-1:-1:-1;;;;;10761:22:7;::::1;::::0;;;;;;;:32;;10740:10:::1;::::0;10787:6;;10761:22;:32:::1;::::0;10787:6;;10761:32:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;10803:17:7;::::1;:8;:17:::0;;;::::1;::::0;;;;;;:27;;10824:6;;10803:8;:27:::1;::::0;10824:6;;10803:27:::1;:::i;:::-;::::0;;;-1:-1:-1;;10845:57:7::1;::::0;;17857:25:10;;;17913:2;17898:18;;17891:34;;;-1:-1:-1;;;;;10845:57:7;;::::1;::::0;10878:1:::1;::::0;10845:57;;::::1;::::0;::::1;::::0;17830:18:10;10845:57:7::1;;;;;;;10913:161;10957:8;10987:1;11003:7;11024:2;11040:6;11060:4;10913:30;:161::i;1339:20::-:0;;;;;;;:::i;6431:346::-;6558:10;-1:-1:-1;;;;;6558:22:7;;;;6537:110;;;;-1:-1:-1;;;6537:110:7;;16072:2:10;6537:110:7;;;16054:21:10;16111:2;16091:18;;;16084:30;16150:34;16130:18;;;16123:62;-1:-1:-1;;;16201:18:10;;;16194:39;16250:19;;6537:110:7;16044:231:10;6537:110:7;6677:10;6658:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;6658:40:7;;;;;;;;;;;;:51;;-1:-1:-1;;6658:51:7;;;;;;;;;;6724:46;;12065:41:10;;;6658:40:7;;6677:10;6724:46;;12038:18:10;6724:46:7;;;;;;;6431:346;;:::o;6882:194::-;-1:-1:-1;;;;;7032:27:7;;;7005:4;7032:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;6882:194::o;7572:944::-;-1:-1:-1;;;;;7764:18:7;;7772:10;7764:18;;:56;;;7786:34;7803:4;7809:10;7786:16;:34::i;:::-;7743:144;;;;-1:-1:-1;;;7743:144:7;;14009:2:10;7743:144:7;;;13991:21:10;14048:2;14028:18;;;14021:30;14087:34;14067:18;;;14060:62;-1:-1:-1;;;14138:18:10;;;14131:39;14187:19;;7743:144:7;13981:231:10;7743:144:7;-1:-1:-1;;;;;7905:16:7;;7897:66;;;;-1:-1:-1;;;7897:66:7;;;;;;;:::i;:::-;7974:16;8036:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8036:19:7;;;;;;;;;;7993:10;;8086:21;;;;8065:110;;;;-1:-1:-1;;;8065:110:7;;;;;;;:::i;:::-;8209:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8209:19:7;;;;;;;;;;;8231:20;;;8209:42;;8265:14;;;;;;:24;;;;;;;8309:17;;;;;;;;;:27;;8245:6;;8209:13;8309:27;;8245:6;;8309:27;:::i;:::-;;;;-1:-1:-1;;;;;;;8346:12:7;;:8;:12;;;;;;;;;;:22;;8362:6;;8346:8;:22;;8362:6;;8346:22;:::i;:::-;;;;-1:-1:-1;;8384:46:7;;;17857:25:10;;;17913:2;17898:18;;17891:34;;;-1:-1:-1;;;;;8384:46:7;;;;;;;;;;;;;;17830:18:10;8384:46:7;;;;;;;8441:68;8472:8;8482:4;8488:2;8492;8496:6;8504:4;8441:30;:68::i;:::-;7733:783;;7572:944;;;;;:::o;13045:946::-;-1:-1:-1;;;;;13277:13:7;;1034:20:4;1080:8;13273:712:7;;13328:197;;-1:-1:-1;;;13328:197:7;;-1:-1:-1;;;;;13328:43:7;;;;;:197;;13393:8;;13423:4;;13449:3;;13474:7;;13503:4;;13328:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13328:197:7;;;;;;;;-1:-1:-1;;13328:197:7;;;;;;;;;;;;:::i;:::-;;;13308:667;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;13851:6;13844:14;;-1:-1:-1;;;13844:14:7;;;;;;;;:::i;13308:667::-;;;13898:62;;-1:-1:-1;;;13898:62:7;;12767:2:10;13898:62:7;;;12749:21:10;12806:2;12786:18;;;12779:30;12845:34;12825:18;;;12818:62;-1:-1:-1;;;12896:18:10;;;12889:50;12956:19;;13898:62:7;12739:242:10;13308:667:7;-1:-1:-1;;;;;;13607:60:7;;-1:-1:-1;;;13607:60:7;13582:195;;13708:50;;-1:-1:-1;;;13708:50:7;;;;;;;:::i;12168:871::-;-1:-1:-1;;;;;12375:13:7;;1034:20:4;1080:8;12371:662:7;;12426:190;;-1:-1:-1;;;12426:190:7;;-1:-1:-1;;;;;12426:38:7;;;;;:190;;12486:8;;12516:4;;12542:2;;12566:6;;12594:4;;12426:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12426:190:7;;;;;;;;-1:-1:-1;;12426:190:7;;;;;;;;;;;;:::i;:::-;;;12406:617;;;;:::i;:::-;-1:-1:-1;;;;;;12677:55:7;;-1:-1:-1;;;12677:55:7;12673:152;;12756:50;;-1:-1:-1;;;12756:50:7;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:468:10;78:5;112:18;104:6;101:30;98:2;;;134:18;;:::i;:::-;183:2;177:9;195:69;252:2;231:15;;-1:-1:-1;;227:29:10;258:4;223:40;177:9;195:69;:::i;:::-;282:6;273:15;;312:6;304;297:22;352:3;343:6;338:3;334:16;331:25;328:2;;;369:1;366;359:12;328:2;419:6;414:3;407:4;399:6;395:17;382:44;474:1;467:4;458:6;450;446:19;442:30;435:41;;88:394;;;;;:::o;487:735::-;541:5;594:3;587:4;579:6;575:17;571:27;561:2;;612:1;609;602:12;561:2;648:6;635:20;674:4;697:43;737:2;697:43;:::i;:::-;769:2;763:9;781:31;809:2;801:6;781:31;:::i;:::-;847:18;;;881:15;;;;-1:-1:-1;916:15:10;;;966:1;962:10;;;950:23;;946:32;;943:41;-1:-1:-1;940:2:10;;;997:1;994;987:12;940:2;1019:1;1029:163;1043:2;1040:1;1037:9;1029:163;;;1100:17;;1088:30;;1138:12;;;;1170;;;;1061:1;1054:9;1029:163;;;-1:-1:-1;1210:6:10;;551:671;-1:-1:-1;;;;;;;551:671:10:o;1227:220::-;1269:5;1322:3;1315:4;1307:6;1303:17;1299:27;1289:2;;1340:1;1337;1330:12;1289:2;1362:79;1437:3;1428:6;1415:20;1408:4;1400:6;1396:17;1362:79;:::i;:::-;1353:88;1279:168;-1:-1:-1;;;1279:168:10:o;1452:247::-;1511:6;1564:2;1552:9;1543:7;1539:23;1535:32;1532:2;;;1580:1;1577;1570:12;1532:2;1619:9;1606:23;1638:31;1663:5;1638:31;:::i;1704:251::-;1774:6;1827:2;1815:9;1806:7;1802:23;1798:32;1795:2;;;1843:1;1840;1833:12;1795:2;1875:9;1869:16;1894:31;1919:5;1894:31;:::i;1960:388::-;2028:6;2036;2089:2;2077:9;2068:7;2064:23;2060:32;2057:2;;;2105:1;2102;2095:12;2057:2;2144:9;2131:23;2163:31;2188:5;2163:31;:::i;:::-;2213:5;-1:-1:-1;2270:2:10;2255:18;;2242:32;2283:33;2242:32;2283:33;:::i;:::-;2335:7;2325:17;;;2047:301;;;;;:::o;2353:1071::-;2507:6;2515;2523;2531;2539;2592:3;2580:9;2571:7;2567:23;2563:33;2560:2;;;2609:1;2606;2599:12;2560:2;2648:9;2635:23;2667:31;2692:5;2667:31;:::i;:::-;2717:5;-1:-1:-1;2774:2:10;2759:18;;2746:32;2787:33;2746:32;2787:33;:::i;:::-;2839:7;-1:-1:-1;2897:2:10;2882:18;;2869:32;2920:18;2950:14;;;2947:2;;;2977:1;2974;2967:12;2947:2;3000:61;3053:7;3044:6;3033:9;3029:22;3000:61;:::i;:::-;2990:71;;3114:2;3103:9;3099:18;3086:32;3070:48;;3143:2;3133:8;3130:16;3127:2;;;3159:1;3156;3149:12;3127:2;3182:63;3237:7;3226:8;3215:9;3211:24;3182:63;:::i;:::-;3172:73;;3298:3;3287:9;3283:19;3270:33;3254:49;;3328:2;3318:8;3315:16;3312:2;;;3344:1;3341;3334:12;3312:2;;3367:51;3410:7;3399:8;3388:9;3384:24;3367:51;:::i;:::-;3357:61;;;2550:874;;;;;;;;:::o;3429:734::-;3533:6;3541;3549;3557;3565;3618:3;3606:9;3597:7;3593:23;3589:33;3586:2;;;3635:1;3632;3625:12;3586:2;3674:9;3661:23;3693:31;3718:5;3693:31;:::i;:::-;3743:5;-1:-1:-1;3800:2:10;3785:18;;3772:32;3813:33;3772:32;3813:33;:::i;:::-;3865:7;-1:-1:-1;3919:2:10;3904:18;;3891:32;;-1:-1:-1;3970:2:10;3955:18;;3942:32;;-1:-1:-1;4025:3:10;4010:19;;3997:33;4053:18;4042:30;;4039:2;;;4085:1;4082;4075:12;4039:2;4108:49;4149:7;4140:6;4129:9;4125:22;4108:49;:::i;4168:929::-;4313:6;4321;4329;4337;4390:3;4378:9;4369:7;4365:23;4361:33;4358:2;;;4407:1;4404;4397:12;4358:2;4446:9;4433:23;4465:31;4490:5;4465:31;:::i;:::-;4515:5;-1:-1:-1;4571:2:10;4556:18;;4543:32;4594:18;4624:14;;;4621:2;;;4651:1;4648;4641:12;4621:2;4674:61;4727:7;4718:6;4707:9;4703:22;4674:61;:::i;:::-;4664:71;;4788:2;4777:9;4773:18;4760:32;4744:48;;4817:2;4807:8;4804:16;4801:2;;;4833:1;4830;4823:12;4801:2;4856:63;4911:7;4900:8;4889:9;4885:24;4856:63;:::i;:::-;4846:73;;4972:2;4961:9;4957:18;4944:32;4928:48;;5001:2;4991:8;4988:16;4985:2;;;5017:1;5014;5007:12;4985:2;;5040:51;5083:7;5072:8;5061:9;5057:24;5040:51;:::i;:::-;5030:61;;;4348:749;;;;;;;:::o;5102:416::-;5167:6;5175;5228:2;5216:9;5207:7;5203:23;5199:32;5196:2;;;5244:1;5241;5234:12;5196:2;5283:9;5270:23;5302:31;5327:5;5302:31;:::i;:::-;5352:5;-1:-1:-1;5409:2:10;5394:18;;5381:32;5451:15;;5444:23;5432:36;;5422:2;;5482:1;5479;5472:12;5523:315;5591:6;5599;5652:2;5640:9;5631:7;5627:23;5623:32;5620:2;;;5668:1;5665;5658:12;5620:2;5707:9;5694:23;5726:31;5751:5;5726:31;:::i;:::-;5776:5;5828:2;5813:18;;;;5800:32;;-1:-1:-1;;;5610:228:10:o;5843:592::-;5938:6;5946;5954;5962;6015:3;6003:9;5994:7;5990:23;5986:33;5983:2;;;6032:1;6029;6022:12;5983:2;6071:9;6058:23;6090:31;6115:5;6090:31;:::i;:::-;6140:5;-1:-1:-1;6192:2:10;6177:18;;6164:32;;-1:-1:-1;6243:2:10;6228:18;;6215:32;;-1:-1:-1;6298:2:10;6283:18;;6270:32;6325:18;6314:30;;6311:2;;;6357:1;6354;6347:12;6311:2;6380:49;6421:7;6412:6;6401:9;6397:22;6380:49;:::i;6440:1288::-;6558:6;6566;6619:2;6607:9;6598:7;6594:23;6590:32;6587:2;;;6635:1;6632;6625:12;6587:2;6675:9;6662:23;6704:18;6745:2;6737:6;6734:14;6731:2;;;6761:1;6758;6751:12;6731:2;6799:6;6788:9;6784:22;6774:32;;6844:7;6837:4;6833:2;6829:13;6825:27;6815:2;;6866:1;6863;6856:12;6815:2;6902;6889:16;6924:4;6947:43;6987:2;6947:43;:::i;:::-;7019:2;7013:9;7031:31;7059:2;7051:6;7031:31;:::i;:::-;7097:18;;;7131:15;;;;-1:-1:-1;7166:11:10;;;7208:1;7204:10;;;7196:19;;7192:28;;7189:41;-1:-1:-1;7186:2:10;;;7243:1;7240;7233:12;7186:2;7265:1;7256:10;;7275:238;7289:2;7286:1;7283:9;7275:238;;;7360:3;7347:17;7377:31;7402:5;7377:31;:::i;:::-;7421:18;;7307:1;7300:9;;;;;7459:12;;;;7491;;7275:238;;;-1:-1:-1;7532:6:10;-1:-1:-1;;7576:18:10;;7563:32;;-1:-1:-1;;7607:16:10;;;7604:2;;;7636:1;7633;7626:12;7604:2;;7659:63;7714:7;7703:8;7692:9;7688:24;7659:63;:::i;:::-;7649:73;;;6577:1151;;;;;:::o;7733:245::-;7791:6;7844:2;7832:9;7823:7;7819:23;7815:32;7812:2;;;7860:1;7857;7850:12;7812:2;7899:9;7886:23;7918:30;7942:5;7918:30;:::i;7983:249::-;8052:6;8105:2;8093:9;8084:7;8080:23;8076:32;8073:2;;;8121:1;8118;8111:12;8073:2;8153:9;8147:16;8172:30;8196:5;8172:30;:::i;8237:450::-;8306:6;8359:2;8347:9;8338:7;8334:23;8330:32;8327:2;;;8375:1;8372;8365:12;8327:2;8415:9;8402:23;8448:18;8440:6;8437:30;8434:2;;;8480:1;8477;8470:12;8434:2;8503:22;;8556:4;8548:13;;8544:27;-1:-1:-1;8534:2:10;;8585:1;8582;8575:12;8534:2;8608:73;8673:7;8668:2;8655:16;8650:2;8646;8642:11;8608:73;:::i;:::-;8598:83;8317:370;-1:-1:-1;;;;8317:370:10:o;8692:180::-;8751:6;8804:2;8792:9;8783:7;8779:23;8775:32;8772:2;;;8820:1;8817;8810:12;8772:2;-1:-1:-1;8843:23:10;;8762:110;-1:-1:-1;8762:110:10:o;8877:435::-;8930:3;8968:5;8962:12;8995:6;8990:3;8983:19;9021:4;9050:2;9045:3;9041:12;9034:19;;9087:2;9080:5;9076:14;9108:1;9118:169;9132:6;9129:1;9126:13;9118:169;;;9193:13;;9181:26;;9227:12;;;;9262:15;;;;9154:1;9147:9;9118:169;;;-1:-1:-1;9303:3:10;;8938:374;-1:-1:-1;;;;;8938:374:10:o;9317:471::-;9358:3;9396:5;9390:12;9423:6;9418:3;9411:19;9448:1;9458:162;9472:6;9469:1;9466:13;9458:162;;;9534:4;9590:13;;;9586:22;;9580:29;9562:11;;;9558:20;;9551:59;9487:12;9458:162;;;9638:6;9635:1;9632:13;9629:2;;;9704:1;9697:4;9688:6;9683:3;9679:16;9675:27;9668:38;9629:2;-1:-1:-1;9770:2:10;9749:15;-1:-1:-1;;9745:29:10;9736:39;;;;9777:4;9732:50;;9366:422;-1:-1:-1;;9366:422:10:o;9793:826::-;-1:-1:-1;;;;;10190:15:10;;;10172:34;;10242:15;;10237:2;10222:18;;10215:43;10152:3;10289:2;10274:18;;10267:31;;;10115:4;;10321:57;;10358:19;;10350:6;10321:57;:::i;:::-;10426:9;10418:6;10414:22;10409:2;10398:9;10394:18;10387:50;10460:44;10497:6;10489;10460:44;:::i;:::-;10446:58;;10553:9;10545:6;10541:22;10535:3;10524:9;10520:19;10513:51;10581:32;10606:6;10598;10581:32;:::i;:::-;10573:40;10124:495;-1:-1:-1;;;;;;;;10124:495:10:o;10624:560::-;-1:-1:-1;;;;;10921:15:10;;;10903:34;;10973:15;;10968:2;10953:18;;10946:43;11020:2;11005:18;;10998:34;;;11063:2;11048:18;;11041:34;;;10883:3;11106;11091:19;;11084:32;;;10846:4;;11133:45;;11158:19;;11150:6;11133:45;:::i;:::-;11125:53;10855:329;-1:-1:-1;;;;;;;10855:329:10:o;11189:261::-;11368:2;11357:9;11350:21;11331:4;11388:56;11440:2;11429:9;11425:18;11417:6;11388:56;:::i;11455:465::-;11712:2;11701:9;11694:21;11675:4;11738:56;11790:2;11779:9;11775:18;11767:6;11738:56;:::i;:::-;11842:9;11834:6;11830:22;11825:2;11814:9;11810:18;11803:50;11870:44;11907:6;11899;11870:44;:::i;:::-;11862:52;11684:236;-1:-1:-1;;;;;11684:236:10:o;12341:219::-;12490:2;12479:9;12472:21;12453:4;12510:44;12550:2;12539:9;12535:18;12527:6;12510:44;:::i;12986:404::-;13188:2;13170:21;;;13227:2;13207:18;;;13200:30;13266:34;13261:2;13246:18;;13239:62;-1:-1:-1;;;13332:2:10;13317:18;;13310:38;13380:3;13365:19;;13160:230::o;13395:407::-;13597:2;13579:21;;;13636:2;13616:18;;;13609:30;13675:34;13670:2;13655:18;;13648:62;-1:-1:-1;;;13741:2:10;13726:18;;13719:41;13792:3;13777:19;;13569:233::o;14217:412::-;14419:2;14401:21;;;14458:2;14438:18;;;14431:30;14497:34;14492:2;14477:18;;14470:62;-1:-1:-1;;;14563:2:10;14548:18;;14541:46;14619:3;14604:19;;14391:238::o;14634:401::-;14836:2;14818:21;;;14875:2;14855:18;;;14848:30;14914:34;14909:2;14894:18;;14887:62;-1:-1:-1;;;14980:2:10;14965:18;;14958:35;15025:3;15010:19;;14808:227::o;15459:406::-;15661:2;15643:21;;;15700:2;15680:18;;;15673:30;15739:34;15734:2;15719:18;;15712:62;-1:-1:-1;;;15805:2:10;15790:18;;15783:40;15855:3;15840:19;;15633:232::o;16690:404::-;16892:2;16874:21;;;16931:2;16911:18;;;16904:30;16970:34;16965:2;16950:18;;16943:62;-1:-1:-1;;;17036:2:10;17021:18;;17014:38;17084:3;17069:19;;16864:230::o;17099:397::-;17301:2;17283:21;;;17340:2;17320:18;;;17313:30;17379:34;17374:2;17359:18;;17352:62;-1:-1:-1;;;17445:2:10;17430:18;;17423:31;17486:3;17471:19;;17273:223::o;17936:183::-;17996:4;18029:18;18021:6;18018:30;18015:2;;;18051:18;;:::i;:::-;-1:-1:-1;18096:1:10;18092:14;18108:4;18088:25;;18005:114::o;18124:128::-;18164:3;18195:1;18191:6;18188:1;18185:13;18182:2;;;18201:18;;:::i;:::-;-1:-1:-1;18237:9:10;;18172:80::o;18257:380::-;18336:1;18332:12;;;;18379;;;18400:2;;18454:4;18446:6;18442:17;18432:27;;18400:2;18507;18499:6;18496:14;18476:18;18473:38;18470:2;;;18553:10;18548:3;18544:20;18541:1;18534:31;18588:4;18585:1;18578:15;18616:4;18613:1;18606:15;18470:2;;18312:325;;;:::o;18642:249::-;18752:2;18733:13;;-1:-1:-1;;18729:27:10;18717:40;;18787:18;18772:34;;18808:22;;;18769:62;18766:2;;;18834:18;;:::i;:::-;18870:2;18863:22;-1:-1:-1;;18689:202:10:o;18896:135::-;18935:3;-1:-1:-1;;18956:17:10;;18953:2;;;18976:18;;:::i;:::-;-1:-1:-1;19023:1:10;19012:13;;18943:88::o;19036:127::-;19097:10;19092:3;19088:20;19085:1;19078:31;19128:4;19125:1;19118:15;19152:4;19149:1;19142:15;19168:127;19229:10;19224:3;19220:20;19217:1;19210:31;19260:4;19257:1;19250:15;19284:4;19281:1;19274:15;19300:127;19361:10;19356:3;19352:20;19349:1;19342:31;19392:4;19389:1;19382:15;19416:4;19413:1;19406:15;19432:179;19467:3;19509:1;19491:16;19488:23;19485:2;;;19555:1;19552;19549;19534:23;-1:-1:-1;19592:1:10;19586:8;19581:3;19577:18;19485:2;19475:136;:::o;19616:671::-;19655:3;19697:4;19679:16;19676:26;19673:2;;;19663:624;:::o;19673:2::-;19739;19733:9;-1:-1:-1;;19804:16:10;19800:25;;19797:1;19733:9;19776:50;19855:4;19849:11;19879:16;19914:18;19985:2;19978:4;19970:6;19966:17;19963:25;19958:2;19950:6;19947:14;19944:45;19941:2;;;19992:5;;;;;19663:624;:::o;19941:2::-;20029:6;20023:4;20019:17;20008:28;;20065:3;20059:10;20092:2;20084:6;20081:14;20078:2;;;20098:5;;;;;;19663:624;:::o;20078:2::-;20182;20163:16;20157:4;20153:27;20149:36;20142:4;20133:6;20128:3;20124:16;20120:27;20117:69;20114:2;;;20189:5;;;;;;19663:624;:::o;20114:2::-;20205:57;20256:4;20247:6;20239;20235:19;20231:30;20225:4;20205:57;:::i;:::-;-1:-1:-1;20278:3:10;;19663:624;-1:-1:-1;;;;;19663:624:10:o;20292:131::-;-1:-1:-1;;;;;20367:31:10;;20357:42;;20347:2;;20413:1;20410;20403:12;20347:2;20337:86;:::o;20428:131::-;-1:-1:-1;;;;;;20502:32:10;;20492:43;;20482:2;;20549:1;20546;20539:12",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. Modified version of OpenZeppelin's ERC1155 implementation https://eips.ethereum.org/EIPS/eip-1155 https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155",
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "Returns the total balance of `account`",
        "notice": "May not query the zero address"
      },
      "balanceOf(address,uint256)": {
        "details": "Returns the amount of tokens of token type `id` owned by `account`.",
        "notice": "May not query the zero address"
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Batched version of balanceOf.",
        "notice": "May not query the zero address"
      },
      "constructor": {
        "params": {
          "name_": "The name of the token",
          "oracleAddress": "The address where the Oracle resides",
          "symbol_": "The symbol of the token",
          "uri_": "The URI for token metadata"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns true if `operator` is approved to transfer `account`'s tokens."
      },
      "mint(address,uint256,uint256,bytes)": {
        "details": "Creates `amount` tokens of token type `id`, and assigns them to `account`.",
        "notice": "`account` cannot be the zero address.If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
      },
      "mintBatch(address,uint256[],uint256[],bytes)": {
        "details": "Batched version of _mint.",
        "notice": "`ids` and `amounts` must have the same length.- If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Batched version of safeTransferFrom.",
        "notice": "`ids` and `amounts` must have the same length.If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers amount tokens of token type `id` from `from` to `to`.",
        "notice": "May not query the zero addressIf the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.`from` must have a balance of tokens of type `id` of at least `amount`.If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.",
        "notice": "`operator` cannot be the caller."
      },
      "setURI(string)": {
        "details": "Allows the URI to be changed by the Oracle operator"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "Returns the URI for token type `id`."
      }
    },
    "version": 1
  },
  "offset": [
    660,
    14169
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B6 JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x191C JUMP JUMPDEST PUSH2 0x15F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1797 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH2 0x155 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x135E JUMP JUMPDEST PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E2 JUMP JUMPDEST PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x15F PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1583 JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x155 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x147F JUMP JUMPDEST PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2E1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x2FC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE7F43C68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x364 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x19C2 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3CB SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x11C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x3DC SWAP1 PUSH2 0x1B66 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x408 SWAP1 PUSH2 0x1B66 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x455 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x455 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x438 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46C SWAP1 PUSH2 0x1B66 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x1B66 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE7F43C68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6DF JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x60D JUMPI PUSH2 0x60D PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x62B JUMPI PUSH2 0x62B PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x68C JUMPI PUSH2 0x68C PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x6D7 DUP2 PUSH2 0x1BCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5F2 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0x18EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x747 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF94 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x76A JUMPI POP PUSH2 0x76A DUP6 CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1A12 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x839 JUMPI PUSH2 0x839 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x857 JUMPI PUSH2 0x857 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE DUP5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP9 SWAP1 SUB SWAP1 SSTORE DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8F7 SWAP1 DUP5 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x924 SWAP1 DUP5 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x938 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST SWAP1 POP PUSH2 0x81C JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x98F SWAP3 SWAP2 SWAP1 PUSH2 0x18EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9A5 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF94 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2E JUMPI PUSH2 0xA2E PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA57 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH2 0xAA2 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA7B JUMPI PUSH2 0xA7B PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA95 JUMPI PUSH2 0xA95 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x257 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAB4 JUMPI PUSH2 0xAB4 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xAC8 DUP2 PUSH2 0x1BCE JUMP JUMPDEST SWAP1 POP PUSH2 0xA5D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1977 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE7F43C68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLER SWAP3 DUP6 SWAP3 SWAP2 PUSH2 0xC2B SWAP1 DUP5 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xC58 SWAP1 DUP5 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x747 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x3DC SWAP1 PUSH2 0x1B66 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xDE6 JUMPI POP PUSH2 0xDE6 DUP6 CALLER PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xE44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD CALLER SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND DUP6 MSTORE DUP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP10 DUP8 SUB SWAP1 SSTORE DUP5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP11 SWAP1 SUB SWAP1 SSTORE DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xEFE SWAP1 DUP5 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xF2B SWAP1 DUP5 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF8B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x10FF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xFD8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1022 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x101F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10CF JUMPI PUSH2 0x102E PUSH2 0x1C2B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x1068 JUMPI POP PUSH2 0x1043 PUSH2 0x1C47 JUMP JUMPDEST DUP1 PUSH2 0x104E JUMPI POP PUSH2 0x106A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x191C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1143 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x118D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x118A SWAP2 DUP2 ADD SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1199 JUMPI PUSH2 0x102E PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x11D5 SWAP1 PUSH2 0x1B66 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x11F7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x123D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1210 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x123D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x123D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x123D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1222 JUMP JUMPDEST POP PUSH2 0x1249 SWAP3 SWAP2 POP PUSH2 0x124D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1249 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x124E JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x127C JUMPI PUSH2 0x127C PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1293 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1BA1 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x12DE DUP3 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12EB DUP3 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x130B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x132A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x130E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1357 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1357 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1357 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13B6 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x13C6 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13F4 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1404 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142D DUP10 DUP4 DUP11 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144F DUP10 DUP4 DUP11 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1472 DUP9 DUP3 DUP10 ADD PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x14A2 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x14B2 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1472 DUP9 DUP3 DUP10 ADD PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1509 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1532 DUP9 DUP4 DUP10 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1554 DUP9 DUP4 DUP10 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1577 DUP8 DUP3 DUP9 ADD PUSH2 0x1337 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15A1 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15D4 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1603 DUP2 PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x162D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1577 DUP8 DUP3 DUP9 ADD PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1685 DUP3 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1692 DUP3 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x16DE JUMPI DUP1 CALLDATALOAD PUSH2 0x16CA DUP2 PUSH2 0x1CD1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x16B7 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x16F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1702 DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1357 DUP2 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1357 DUP2 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x178F DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1262 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17E0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17C4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1811 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x17F5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1823 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1864 SWAP1 DUP4 ADD DUP7 PUSH2 0x17B0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1876 DUP2 DUP7 PUSH2 0x17B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x188A DUP2 DUP6 PUSH2 0x17EB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x18D0 SWAP1 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1357 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1901 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1913 DUP2 DUP6 PUSH2 0x17B0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1357 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865204F7261636C65206F70657261746F72206D617920706572 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x3337B936903A3434B99030B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B44 JUMPI PUSH2 0x1B44 PUSH2 0x1C15 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B61 PUSH2 0x1BE9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B7A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1BC7 JUMPI PUSH2 0x1BC7 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1BE2 JUMPI PUSH2 0x1BE2 PUSH2 0x1BE9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1C55 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1C85 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C9D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1CB7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1CC6 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1BA1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1CE6 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC XOR RETURNDATACOPY 0xE6 0x49 0xCB EXTCODEHASH 0xD DUP5 0xD8 0xD7 0xA5 0xCD 0x27 JUMPI 0xC 0xAA STATICCALL 0xBA RETURNDATASIZE 0xD2 SWAP13 0xDD ADD 0xAD 0xC7 0x48 0xEF 0xEF PUSH5 0x7B2564736F PUSH13 0x63430008060033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF4"
    },
    "25": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4E1273F4"
    },
    "38": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x216"
    },
    "64": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA22CB465"
    },
    "71": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "75": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE985E9C5"
    },
    "82": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x231"
    },
    "86": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF242432A"
    },
    "93": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "97": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "101": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "REVERT",
      "path": "7"
    },
    "102": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "104": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4E1273F4"
    },
    "109": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A5"
    },
    "113": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C5"
    },
    "124": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x731133E9"
    },
    "131": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D8"
    },
    "135": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x7DC0D1D0"
    },
    "142": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EB"
    },
    "146": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "150": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "REVERT",
      "path": "7"
    },
    "151": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "GT",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "169": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x157"
    },
    "173": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE89341C"
    },
    "180": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16C"
    },
    "184": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1F7FDFFA"
    },
    "191": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17F"
    },
    "195": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2EB2C2D6"
    },
    "202": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x192"
    },
    "206": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "210": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "REVERT",
      "path": "7"
    },
    "211": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "212": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "213": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFDD58E"
    },
    "217": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "218": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF9"
    },
    "221": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "222": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1FFC9A7"
    },
    "228": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "229": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11F"
    },
    "232": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "233": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2FE5305"
    },
    "239": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "EQ",
      "path": "7"
    },
    "240": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x142"
    },
    "243": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "244": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "DUP1",
      "path": "7"
    },
    "248": {
      "first_revert": true,
      "fn": null,
      "offset": [
        660,
        14169
      ],
      "op": "REVERT",
      "path": "7"
    },
    "249": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "250": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10C"
    },
    "253": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x107"
    },
    "256": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "257": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "259": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15B6"
    },
    "262": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5320,
        5610
      ],
      "op": "JUMP",
      "path": "7"
    },
    "263": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "264": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x257"
    },
    "267": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5320,
        5610
      ],
      "op": "JUMP",
      "path": "7"
    },
    "268": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "269": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "271": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "272": {
      "op": "SWAP1"
    },
    "273": {
      "op": "DUP2"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "277": {
      "op": "ADD"
    },
    "278": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "279": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "281": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "282": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "DUP1",
      "path": "7"
    },
    "283": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "284": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "SUB",
      "path": "7"
    },
    "285": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "286": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "RETURN",
      "path": "7"
    },
    "287": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "288": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x132"
    },
    "291": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12D"
    },
    "294": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "295": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "297": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x170C"
    },
    "300": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        4298,
        4631
      ],
      "op": "JUMP",
      "path": "7"
    },
    "301": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "302": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B0"
    },
    "305": {
      "fn": "Loot.supportsInterface",
      "jump": "i",
      "offset": [
        4298,
        4631
      ],
      "op": "JUMP",
      "path": "7"
    },
    "306": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "307": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "309": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "310": {
      "op": "SWAP1"
    },
    "311": {
      "op": "ISZERO"
    },
    "312": {
      "op": "ISZERO"
    },
    "313": {
      "op": "DUP2"
    },
    "314": {
      "op": "MSTORE"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "317": {
      "op": "ADD"
    },
    "318": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116"
    },
    "321": {
      "op": "JUMP"
    },
    "322": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "323": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x155"
    },
    "326": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x150"
    },
    "329": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "330": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "332": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1746"
    },
    "335": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        14077,
        14167
      ],
      "op": "JUMP",
      "path": "7"
    },
    "336": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "337": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x302"
    },
    "340": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        14077,
        14167
      ],
      "op": "JUMP",
      "path": "7"
    },
    "341": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "342": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "STOP",
      "path": "7"
    },
    "343": {
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "344": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15F"
    },
    "347": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CF"
    },
    "350": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "351": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "352": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "354": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "355": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116"
    },
    "358": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "359": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "360": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x191C"
    },
    "363": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "364": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "365": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15F"
    },
    "368": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17A"
    },
    "371": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "372": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "374": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1797"
    },
    "377": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4702,
        4797
      ],
      "op": "JUMP",
      "path": "7"
    },
    "378": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "379": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x45D"
    },
    "382": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4702,
        4797
      ],
      "op": "JUMP",
      "path": "7"
    },
    "383": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "384": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x155"
    },
    "387": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18D"
    },
    "390": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "391": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "393": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14E8"
    },
    "396": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11362,
        12162
      ],
      "op": "JUMP",
      "path": "7"
    },
    "397": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "398": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F1"
    },
    "401": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11362,
        12162
      ],
      "op": "JUMP",
      "path": "7"
    },
    "402": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "403": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x155"
    },
    "406": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0"
    },
    "409": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "410": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "412": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13D1"
    },
    "415": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        8797,
        10172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "416": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "417": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x74E"
    },
    "420": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        8797,
        10172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "421": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "422": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B8"
    },
    "425": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B3"
    },
    "428": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "429": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "431": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1639"
    },
    "434": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5720,
        6246
      ],
      "op": "JUMP",
      "path": "7"
    },
    "435": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "436": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9AD"
    },
    "439": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5720,
        6246
      ],
      "op": "JUMP",
      "path": "7"
    },
    "440": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "441": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "443": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "444": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116"
    },
    "447": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "448": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "449": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18DB"
    },
    "452": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        5720,
        6246
      ],
      "op": "JUMP",
      "path": "7"
    },
    "453": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "454": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10C"
    },
    "457": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3"
    },
    "460": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "461": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "463": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x135E"
    },
    "466": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        4916,
        5172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "467": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "468": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAD7"
    },
    "471": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        4916,
        5172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "472": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "473": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x155"
    },
    "476": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E6"
    },
    "479": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "480": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "482": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15E2"
    },
    "485": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10491,
        11081
      ],
      "op": "JUMP",
      "path": "7"
    },
    "486": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "487": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB1B"
    },
    "490": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10491,
        11081
      ],
      "op": "JUMP",
      "path": "7"
    },
    "491": {
      "offset": [
        1393,
        1414
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "492": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "494": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "495": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FE"
    },
    "498": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "505": {
      "op": "SHL"
    },
    "506": {
      "op": "SUB"
    },
    "507": {
      "offset": [
        1393,
        1414
      ],
      "op": "AND",
      "path": "7"
    },
    "508": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "DUP2",
      "path": "7"
    },
    "509": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "JUMP",
      "path": "7"
    },
    "510": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "511": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "513": {
      "fn": "Loot.mint",
      "offset": [
        1393,
        1414
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "SUB"
    },
    "522": {
      "op": "SWAP1"
    },
    "523": {
      "op": "SWAP2"
    },
    "524": {
      "op": "AND"
    },
    "525": {
      "op": "DUP2"
    },
    "526": {
      "op": "MSTORE"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "529": {
      "op": "ADD"
    },
    "530": {
      "offset": [
        1393,
        1414
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116"
    },
    "533": {
      "op": "JUMP"
    },
    "534": {
      "offset": [
        1339,
        1359
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "535": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15F"
    },
    "538": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCB8"
    },
    "541": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        1339,
        1359
      ],
      "op": "JUMP",
      "path": "7"
    },
    "542": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "543": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x155"
    },
    "546": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "549": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "550": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "552": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1583"
    },
    "555": {
      "fn": "Loot.setApprovalForAll",
      "jump": "i",
      "offset": [
        6431,
        6777
      ],
      "op": "JUMP",
      "path": "7"
    },
    "556": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "557": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC5"
    },
    "560": {
      "fn": "Loot.setApprovalForAll",
      "jump": "i",
      "offset": [
        6431,
        6777
      ],
      "op": "JUMP",
      "path": "7"
    },
    "561": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "562": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x132"
    },
    "565": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23F"
    },
    "568": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "569": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "571": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1398"
    },
    "574": {
      "fn": "Loot.isApprovedForAll",
      "jump": "i",
      "offset": [
        6882,
        7076
      ],
      "op": "JUMP",
      "path": "7"
    },
    "575": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "576": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9C"
    },
    "579": {
      "fn": "Loot.isApprovedForAll",
      "jump": "i",
      "offset": [
        6882,
        7076
      ],
      "op": "JUMP",
      "path": "7"
    },
    "580": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "581": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x155"
    },
    "584": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x252"
    },
    "587": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "588": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "590": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x147F"
    },
    "593": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7572,
        8516
      ],
      "op": "JUMP",
      "path": "7"
    },
    "594": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "595": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDCA"
    },
    "598": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7572,
        8516
      ],
      "op": "JUMP",
      "path": "7"
    },
    "599": {
      "fn": "Loot.balanceOf",
      "offset": [
        5320,
        5610
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "600": {
      "fn": "Loot.balanceOf",
      "offset": [
        5430,
        5437
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "op": "SUB"
    },
    "610": {
      "fn": "Loot.balanceOf",
      "offset": [
        5474,
        5495
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 0
    },
    "611": {
      "branch": 53,
      "fn": "Loot.balanceOf",
      "offset": [
        5474,
        5495
      ],
      "op": "AND",
      "path": "7"
    },
    "612": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x288"
    },
    "615": {
      "branch": 53,
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "616": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "618": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "DUP2",
      "path": "7"
    },
    "627": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "628": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "630": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "ADD",
      "path": "7"
    },
    "631": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "634": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "635": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1977"
    },
    "638": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5453,
        5564
      ],
      "op": "JUMP",
      "path": "7"
    },
    "639": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "640": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "642": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "643": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "DUP1",
      "path": "7"
    },
    "644": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "645": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "SUB",
      "path": "7"
    },
    "646": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "647": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "648": {
      "fn": "Loot.balanceOf",
      "offset": [
        5453,
        5564
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x0"
    },
    "652": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "653": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "DUP2",
      "path": "7"
    },
    "654": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "655": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5590
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "657": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "659": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "660": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "DUP2",
      "path": "7"
    },
    "661": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "662": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "664": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "DUP1",
      "path": "7"
    },
    "665": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "DUP4",
      "path": "7"
    },
    "666": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5594
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "op": "SUB"
    },
    "675": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "676": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "677": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "678": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "AND",
      "path": "7"
    },
    "679": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "DUP4",
      "path": "7"
    },
    "680": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "681": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "682": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "683": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "684": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "685": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "686": {
      "fn": "Loot.balanceOf",
      "offset": [
        5581,
        5603
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "687": {
      "fn": "Loot.balanceOf",
      "jump": "o",
      "offset": [
        5320,
        5610
      ],
      "op": "JUMP",
      "path": "7"
    },
    "688": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "689": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4424,
        4428
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "SUB"
    },
    "699": {
      "op": "NOT"
    },
    "700": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4504
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 2
    },
    "701": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4504
      ],
      "op": "AND",
      "path": "7"
    },
    "702": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "707": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "709": {
      "op": "SHL"
    },
    "710": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4504
      ],
      "op": "EQ",
      "path": "7"
    },
    "711": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4504
      ],
      "op": "DUP1",
      "path": "7"
    },
    "712": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4572
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E1"
    },
    "715": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4572
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "723": {
      "op": "SHL"
    },
    "724": {
      "op": "SUB"
    },
    "725": {
      "op": "NOT"
    },
    "726": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4520,
        4572
      ],
      "op": "DUP3",
      "path": "7"
    },
    "727": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4520,
        4572
      ],
      "op": "AND",
      "path": "7"
    },
    "728": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4520,
        4572
      ],
      "op": "EQ",
      "path": "7"
    },
    "737": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4572
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "738": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4624
      ],
      "op": "DUP1",
      "path": "7"
    },
    "739": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FC"
    },
    "742": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4463,
        4624
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "743": {
      "op": "POP"
    },
    "744": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "749": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "751": {
      "op": "SHL"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "op": "NOT"
    },
    "761": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 3
    },
    "762": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "5"
    },
    "763": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "5"
    },
    "764": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4588,
        4624
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "765": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4444,
        4624
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "766": {
      "fn": "Loot.supportsInterface",
      "offset": [
        4298,
        4631
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "fn": "Loot.supportsInterface",
      "jump": "o",
      "offset": [
        4298,
        4631
      ],
      "op": "JUMP",
      "path": "7"
    },
    "770": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "771": {
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "773": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "775": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "776": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4125
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "777": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "778": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "781": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4125
      ],
      "op": "EXP",
      "path": "7"
    },
    "782": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "783": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4125
      ],
      "op": "DIV",
      "path": "7"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "790": {
      "op": "SHL"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "offset": [
        4119,
        4125
      ],
      "op": "AND",
      "path": "7"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "op": "SUB"
    },
    "801": {
      "offset": [
        4119,
        4137
      ],
      "op": "AND",
      "path": "7"
    },
    "802": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4137
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE7F43C68"
    },
    "807": {
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "809": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "810": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "811": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "816": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "817": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "819": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "SHL",
      "path": "7"
    },
    "820": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "821": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "822": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "824": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "825": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "827": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "829": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "830": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "831": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP4",
      "path": "7"
    },
    "832": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "SUB",
      "path": "7"
    },
    "833": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "834": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP7",
      "path": "7"
    },
    "835": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "836": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "837": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "838": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "839": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "840": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x350"
    },
    "843": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "844": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "846": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "847": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "REVERT",
      "path": "7"
    },
    "848": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "849": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "850": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "GAS",
      "path": "7"
    },
    "851": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "852": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "853": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "854": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "855": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x364"
    },
    "858": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "859": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "860": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "862": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "863": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "864": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "865": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "867": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "REVERT",
      "path": "7"
    },
    "868": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "869": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "870": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "871": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "872": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "873": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "875": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "876": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "877": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "879": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "NOT",
      "path": "7"
    },
    "880": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "882": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP3",
      "path": "7"
    },
    "883": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "884": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "885": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP3",
      "path": "7"
    },
    "886": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "887": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "888": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "890": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "891": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "892": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "893": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "894": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "895": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x388"
    },
    "898": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "899": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "900": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x137B"
    },
    "903": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMP",
      "path": "7"
    },
    "904": {
      "fn": "Loot.setURI",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "911": {
      "op": "SHL"
    },
    "912": {
      "op": "SUB"
    },
    "913": {
      "offset": [
        4105,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "914": {
      "offset": [
        4105,
        4115
      ],
      "op": "CALLER",
      "path": "7"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "921": {
      "op": "SHL"
    },
    "922": {
      "op": "SUB"
    },
    "923": {
      "offset": [
        4105,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "924": {
      "fn": "Loot.setURI",
      "offset": [
        4105,
        4139
      ],
      "op": "EQ",
      "path": "7"
    },
    "925": {
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B8"
    },
    "928": {
      "offset": [
        4084,
        4213
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "929": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "931": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "938": {
      "op": "SHL"
    },
    "939": {
      "offset": [
        4084,
        4213
      ],
      "op": "DUP2",
      "path": "7"
    },
    "940": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "941": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "943": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "ADD",
      "path": "7"
    },
    "944": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "947": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "948": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C2"
    },
    "951": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        4084,
        4213
      ],
      "op": "JUMP",
      "path": "7"
    },
    "952": {
      "fn": "Loot.setURI",
      "offset": [
        4084,
        4213
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "953": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 4
    },
    "954": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "955": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CB"
    },
    "958": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "959": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "961": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "962": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "964": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "DUP5",
      "path": "7"
    },
    "965": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "ADD",
      "path": "7"
    },
    "966": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "967": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11C9"
    },
    "970": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        14149,
        14160
      ],
      "op": "JUMP",
      "path": "7"
    },
    "971": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "972": {
      "fn": "Loot.setURI",
      "offset": [
        14149,
        14160
      ],
      "op": "POP",
      "path": "7"
    },
    "973": {
      "fn": "Loot.setURI",
      "offset": [
        14077,
        14167
      ],
      "op": "POP",
      "path": "7"
    },
    "974": {
      "fn": "Loot.setURI",
      "jump": "o",
      "offset": [
        14077,
        14167
      ],
      "op": "JUMP",
      "path": "7"
    },
    "975": {
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "976": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "978": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "979": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "980": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DC"
    },
    "983": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "984": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B66"
    },
    "987": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "988": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "989": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "990": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "992": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "993": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "995": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "996": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "997": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DIV",
      "path": "7"
    },
    "998": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MUL",
      "path": "7"
    },
    "999": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1001": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1002": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1004": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1005": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1006": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1007": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1008": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1010": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1011": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1012": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1013": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1014": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1015": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1016": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1017": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1018": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1020": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1021": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1022": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1023": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1024": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x408"
    },
    "1027": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1028": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B66"
    },
    "1031": {
      "fn": "Loot.setURI",
      "jump": "i",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1032": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1033": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1034": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1035": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x455"
    },
    "1038": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1039": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1040": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1042": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "LT",
      "path": "7"
    },
    "1043": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x42A"
    },
    "1046": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1047": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1050": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1051": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1052": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1053": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DIV",
      "path": "7"
    },
    "1054": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MUL",
      "path": "7"
    },
    "1055": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1056": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1057": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1058": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1060": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1061": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1062": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x455"
    },
    "1065": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1066": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1067": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1068": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1069": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1070": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1071": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1073": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1074": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1076": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1078": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1079": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1080": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1081": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1082": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1083": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1084": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1085": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1086": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1088": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1089": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1090": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1092": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1093": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1094": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1095": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "GT",
      "path": "7"
    },
    "1096": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x438"
    },
    "1099": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1100": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1101": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1102": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SUB",
      "path": "7"
    },
    "1103": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1105": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "AND",
      "path": "7"
    },
    "1106": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1107": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "ADD",
      "path": "7"
    },
    "1108": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1109": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1110": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "7"
    },
    "1111": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "7"
    },
    "1112": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "7"
    },
    "1113": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "7"
    },
    "1114": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "POP",
      "path": "7"
    },
    "1115": {
      "fn": "Loot.setURI",
      "offset": [
        1267,
        1285
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1116": {
      "fn": "Loot.setURI",
      "jump": "o",
      "offset": [
        1267,
        1285
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1117": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1118": {
      "fn": "Loot.uri",
      "offset": [
        4754,
        4767
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1120": {
      "fn": "Loot.uri",
      "offset": [
        4786,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x3"
    },
    "1122": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1123": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1124": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x46C"
    },
    "1127": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1128": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B66"
    },
    "1131": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1132": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1133": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1134": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1136": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1137": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1139": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1140": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1141": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DIV",
      "path": "7"
    },
    "1142": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "MUL",
      "path": "7"
    },
    "1143": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1145": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1146": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1148": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1149": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1150": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1151": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1152": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1154": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1155": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1156": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1157": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1158": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1159": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1160": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1161": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1162": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1164": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1165": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1166": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1167": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1168": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x498"
    },
    "1171": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1172": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B66"
    },
    "1175": {
      "fn": "Loot.uri",
      "jump": "i",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1176": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1177": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1178": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1179": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4E5"
    },
    "1182": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1183": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1184": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1186": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "LT",
      "path": "7"
    },
    "1187": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4BA"
    },
    "1190": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1191": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1194": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1195": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1196": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1197": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DIV",
      "path": "7"
    },
    "1198": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "MUL",
      "path": "7"
    },
    "1199": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1200": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1201": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1202": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1204": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1205": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1206": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4E5"
    },
    "1209": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1210": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1211": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1212": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1213": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1214": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1215": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1217": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1218": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1220": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1222": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1223": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1224": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1225": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1226": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1227": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1228": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1229": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1230": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1232": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1233": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1234": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1236": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1237": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1238": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1239": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "GT",
      "path": "7"
    },
    "1240": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C8"
    },
    "1243": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1244": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1245": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1246": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SUB",
      "path": "7"
    },
    "1247": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1249": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "AND",
      "path": "7"
    },
    "1250": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1251": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "ADD",
      "path": "7"
    },
    "1252": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1253": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1254": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "POP",
      "path": "7"
    },
    "1255": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "POP",
      "path": "7"
    },
    "1256": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "POP",
      "path": "7"
    },
    "1257": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "POP",
      "path": "7"
    },
    "1258": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "POP",
      "path": "7"
    },
    "1259": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1260": {
      "fn": "Loot.uri",
      "offset": [
        4779,
        4790
      ],
      "op": "POP",
      "path": "7"
    },
    "1261": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1262": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1263": {
      "fn": "Loot.uri",
      "offset": [
        4702,
        4797
      ],
      "op": "POP",
      "path": "7"
    },
    "1264": {
      "fn": "Loot.uri",
      "jump": "o",
      "offset": [
        4702,
        4797
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1265": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1266": {
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1268": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1270": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1271": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4125
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1272": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1273": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1276": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4125
      ],
      "op": "EXP",
      "path": "7"
    },
    "1277": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1278": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4125
      ],
      "op": "DIV",
      "path": "7"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "op": "SUB"
    },
    "1287": {
      "offset": [
        4119,
        4125
      ],
      "op": "AND",
      "path": "7"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "op": "SUB"
    },
    "1296": {
      "offset": [
        4119,
        4137
      ],
      "op": "AND",
      "path": "7"
    },
    "1297": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4137
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE7F43C68"
    },
    "1302": {
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1304": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1305": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1306": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1311": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "1312": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "1314": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "SHL",
      "path": "7"
    },
    "1315": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1316": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1317": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1319": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "1320": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1322": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1324": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1325": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1326": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1327": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "SUB",
      "path": "7"
    },
    "1328": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1329": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1330": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1331": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1332": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1333": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1334": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1335": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x53F"
    },
    "1338": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1339": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1341": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1342": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1343": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1344": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "1345": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "GAS",
      "path": "7"
    },
    "1346": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "1347": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1348": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1349": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1350": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x553"
    },
    "1353": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1354": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1355": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1357": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1358": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1359": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1360": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1362": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1363": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1364": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "1365": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "1366": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "1367": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "1368": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1370": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1371": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1372": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1374": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "NOT",
      "path": "7"
    },
    "1375": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1377": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1378": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "1379": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "1380": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1381": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "1382": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1383": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1385": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1386": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "1387": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1388": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "1389": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1390": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x577"
    },
    "1393": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1394": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1395": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x137B"
    },
    "1398": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1399": {
      "fn": "Loot.mintBatch",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "offset": [
        4105,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "1409": {
      "offset": [
        4105,
        4115
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "offset": [
        4105,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "1419": {
      "fn": "Loot.mintBatch",
      "offset": [
        4105,
        4139
      ],
      "op": "EQ",
      "path": "7"
    },
    "1420": {
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5A7"
    },
    "1423": {
      "offset": [
        4084,
        4213
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1424": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1426": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "offset": [
        4084,
        4213
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1435": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1436": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1438": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "ADD",
      "path": "7"
    },
    "1439": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "1442": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1443": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C2"
    },
    "1446": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        4084,
        4213
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1447": {
      "fn": "Loot.mintBatch",
      "offset": [
        4084,
        4213
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "fn": "Loot.mintBatch",
      "offset": [
        11542,
        11558
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 6
    },
    "1457": {
      "branch": 54,
      "fn": "Loot.mintBatch",
      "offset": [
        11542,
        11558
      ],
      "op": "AND",
      "path": "7"
    },
    "1458": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5CD"
    },
    "1461": {
      "branch": 54,
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1462": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1464": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1473": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1474": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1476": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "ADD",
      "path": "7"
    },
    "1477": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "1480": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1481": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AE9"
    },
    "1484": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11534,
        11596
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1485": {
      "fn": "Loot.mintBatch",
      "offset": [
        11534,
        11596
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1486": {
      "fn": "Loot.mintBatch",
      "offset": [
        11641,
        11648
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 7
    },
    "1487": {
      "fn": "Loot.mintBatch",
      "offset": [
        11641,
        11655
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1488": {
      "fn": "Loot.mintBatch",
      "offset": [
        11627,
        11630
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1489": {
      "fn": "Loot.mintBatch",
      "offset": [
        11627,
        11637
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1490": {
      "branch": 55,
      "fn": "Loot.mintBatch",
      "offset": [
        11627,
        11655
      ],
      "op": "EQ",
      "path": "7"
    },
    "1491": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5EE"
    },
    "1494": {
      "branch": 55,
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1495": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1497": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1504": {
      "op": "SHL"
    },
    "1505": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1506": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1507": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1509": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "ADD",
      "path": "7"
    },
    "1510": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "1513": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1514": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AA1"
    },
    "1517": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11606,
        11721
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1518": {
      "fn": "Loot.mintBatch",
      "offset": [
        11606,
        11721
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1519": {
      "fn": "Loot.mintBatch",
      "offset": [
        11751,
        11761
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1520": {
      "fn": "Loot.mintBatch",
      "offset": [
        11732,
        11748
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1522": {
      "fn": "Loot.mintBatch",
      "offset": [
        11772,
        11913
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1523": {
      "fn": "Loot.mintBatch",
      "offset": [
        11796,
        11799
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1524": {
      "fn": "Loot.mintBatch",
      "offset": [
        11796,
        11806
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1525": {
      "fn": "Loot.mintBatch",
      "offset": [
        11792,
        11793
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1526": {
      "fn": "Loot.mintBatch",
      "offset": [
        11792,
        11806
      ],
      "op": "LT",
      "path": "7"
    },
    "1527": {
      "fn": "Loot.mintBatch",
      "offset": [
        11772,
        11913
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1528": {
      "fn": "Loot.mintBatch",
      "offset": [
        11772,
        11913
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6DF"
    },
    "1531": {
      "fn": "Loot.mintBatch",
      "offset": [
        11772,
        11913
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1532": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11859
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 8
    },
    "1533": {
      "fn": "Loot.mintBatch",
      "offset": [
        11860,
        11861
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1534": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1535": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1536": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1537": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "LT",
      "path": "7"
    },
    "1538": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x60D"
    },
    "1541": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1542": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x60D"
    },
    "1545": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "1548": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11852,
        11862
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1549": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1550": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1552": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "MUL",
      "path": "7"
    },
    "1553": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1555": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "ADD",
      "path": "7"
    },
    "1556": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "ADD",
      "path": "7"
    },
    "1557": {
      "fn": "Loot.mintBatch",
      "offset": [
        11852,
        11862
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1558": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11836
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1560": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1562": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11840
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1563": {
      "fn": "Loot.mintBatch",
      "offset": [
        11841,
        11842
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1564": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1565": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1566": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1567": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "LT",
      "path": "7"
    },
    "1568": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x62B"
    },
    "1571": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1572": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x62B"
    },
    "1575": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "1578": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11837,
        11843
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1579": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1580": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1582": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "MUL",
      "path": "7"
    },
    "1583": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1585": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "ADD",
      "path": "7"
    },
    "1586": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "ADD",
      "path": "7"
    },
    "1587": {
      "fn": "Loot.mintBatch",
      "offset": [
        11837,
        11843
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1588": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1589": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1590": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1592": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "ADD",
      "path": "7"
    },
    "1593": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1594": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1595": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1596": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1598": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "ADD",
      "path": "7"
    },
    "1599": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1601": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11844
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1602": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1604": {
      "fn": "Loot.mintBatch",
      "offset": [
        11845,
        11847
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1611": {
      "op": "SHL"
    },
    "1612": {
      "op": "SUB"
    },
    "1613": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "AND",
      "path": "7"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "AND",
      "path": "7"
    },
    "1623": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1624": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1625": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1627": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "ADD",
      "path": "7"
    },
    "1628": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1629": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1630": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1631": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1633": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "ADD",
      "path": "7"
    },
    "1634": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1636": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1637": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1639": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1640": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1641": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1642": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x673"
    },
    "1645": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1646": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1647": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4E"
    },
    "1650": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11827,
        11862
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1651": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1652": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1653": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "POP",
      "path": "7"
    },
    "1654": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "POP",
      "path": "7"
    },
    "1655": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1656": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1657": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1658": {
      "fn": "Loot.mintBatch",
      "offset": [
        11827,
        11862
      ],
      "op": "POP",
      "path": "7"
    },
    "1659": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11899
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 9
    },
    "1660": {
      "fn": "Loot.mintBatch",
      "offset": [
        11900,
        11901
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1661": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1662": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1663": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1664": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "LT",
      "path": "7"
    },
    "1665": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x68C"
    },
    "1668": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1669": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x68C"
    },
    "1672": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "1675": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11892,
        11902
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1676": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1677": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1679": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "MUL",
      "path": "7"
    },
    "1680": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1682": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "ADD",
      "path": "7"
    },
    "1683": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "ADD",
      "path": "7"
    },
    "1684": {
      "fn": "Loot.mintBatch",
      "offset": [
        11892,
        11902
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1685": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11884
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1687": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1688": {
      "fn": "Loot.mintBatch",
      "offset": [
        11885,
        11887
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1695": {
      "op": "SHL"
    },
    "1696": {
      "op": "SUB"
    },
    "1697": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "AND",
      "path": "7"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "AND",
      "path": "7"
    },
    "1707": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1708": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1709": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1711": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "ADD",
      "path": "7"
    },
    "1712": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1713": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1714": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1715": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1717": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "ADD",
      "path": "7"
    },
    "1718": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1720": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1721": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11888
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1723": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1724": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1725": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1726": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6C7"
    },
    "1729": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1730": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1731": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4E"
    },
    "1734": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11876,
        11902
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1735": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1736": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1737": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1738": {
      "fn": "Loot.mintBatch",
      "offset": [
        11876,
        11902
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1739": {
      "op": "POP"
    },
    "1740": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 10
    },
    "1741": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D7"
    },
    "1746": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1747": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BCE"
    },
    "1750": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11808,
        11811
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1751": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1752": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1753": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "POP",
      "path": "7"
    },
    "1754": {
      "fn": "Loot.mintBatch",
      "offset": [
        11808,
        11811
      ],
      "op": "POP",
      "path": "7"
    },
    "1755": {
      "fn": "Loot.mintBatch",
      "offset": [
        11772,
        11913
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F2"
    },
    "1758": {
      "fn": "Loot.mintBatch",
      "offset": [
        11772,
        11913
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1759": {
      "fn": "Loot.mintBatch",
      "offset": [
        11772,
        11913
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1760": {
      "fn": "Loot.mintBatch",
      "offset": [
        11772,
        11913
      ],
      "op": "POP",
      "path": "7"
    },
    "1761": {
      "fn": "Loot.mintBatch",
      "offset": [
        11964,
        11966
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 11
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "AND",
      "path": "7"
    },
    "1771": {
      "fn": "Loot.mintBatch",
      "offset": [
        11960,
        11961
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1779": {
      "op": "SHL"
    },
    "1780": {
      "op": "SUB"
    },
    "1781": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "AND",
      "path": "7"
    },
    "1782": {
      "fn": "Loot.mintBatch",
      "offset": [
        11942,
        11950
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1789": {
      "op": "SHL"
    },
    "1790": {
      "op": "SUB"
    },
    "1791": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "AND",
      "path": "7"
    },
    "1792": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "1825": {
      "fn": "Loot.mintBatch",
      "offset": [
        11968,
        11971
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1826": {
      "fn": "Loot.mintBatch",
      "offset": [
        11973,
        11980
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1827": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1829": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1830": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x730"
    },
    "1833": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1834": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1835": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1836": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18EE"
    },
    "1839": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11928,
        11981
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1840": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1841": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1843": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1844": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1845": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1846": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "SUB",
      "path": "7"
    },
    "1847": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1848": {
      "fn": "Loot.mintBatch",
      "offset": [
        11928,
        11981
      ],
      "op": "LOG4",
      "path": "7"
    },
    "1849": {
      "fn": "Loot.mintBatch",
      "offset": [
        11992,
        12155
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 12,
      "value": "0x747"
    },
    "1852": {
      "fn": "Loot.mintBatch",
      "offset": [
        12041,
        12049
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1853": {
      "fn": "Loot.mintBatch",
      "offset": [
        12071,
        12072
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1855": {
      "fn": "Loot.mintBatch",
      "offset": [
        12087,
        12089
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1856": {
      "fn": "Loot.mintBatch",
      "offset": [
        12103,
        12106
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1857": {
      "fn": "Loot.mintBatch",
      "offset": [
        12120,
        12127
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1858": {
      "fn": "Loot.mintBatch",
      "offset": [
        12141,
        12145
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1859": {
      "fn": "Loot.mintBatch",
      "offset": [
        11992,
        12027
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF94"
    },
    "1862": {
      "fn": "Loot.mintBatch",
      "jump": "i",
      "offset": [
        11992,
        12155
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1863": {
      "fn": "Loot.mintBatch",
      "offset": [
        11992,
        12155
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1864": {
      "fn": "Loot.mintBatch",
      "offset": [
        11524,
        12162
      ],
      "op": "POP",
      "path": "7"
    },
    "1865": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "POP",
      "path": "7"
    },
    "1866": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "POP",
      "path": "7"
    },
    "1867": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "POP",
      "path": "7"
    },
    "1868": {
      "fn": "Loot.mintBatch",
      "offset": [
        11362,
        12162
      ],
      "op": "POP",
      "path": "7"
    },
    "1869": {
      "fn": "Loot.mintBatch",
      "jump": "o",
      "offset": [
        11362,
        12162
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1870": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9014,
        9032
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 13
    },
    "1880": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9014,
        9032
      ],
      "op": "AND",
      "path": "7"
    },
    "1881": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9022,
        9032
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1882": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9014,
        9032
      ],
      "op": "EQ",
      "path": "7"
    },
    "1883": {
      "branch": 56,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9014,
        9032
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1884": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9014,
        9070
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x76A"
    },
    "1887": {
      "branch": 56,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9014,
        9070
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1888": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9014,
        9070
      ],
      "op": "POP",
      "path": "7"
    },
    "1889": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9036,
        9070
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x76A"
    },
    "1892": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9053,
        9057
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1893": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9059,
        9069
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1894": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9036,
        9052
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9C"
    },
    "1897": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9036,
        9070
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1898": {
      "branch": 57,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9036,
        9070
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1899": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7D1"
    },
    "1902": {
      "branch": 57,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1903": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1905": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1912": {
      "op": "SHL"
    },
    "1913": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1914": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1917": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1919": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1920": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "ADD",
      "path": "7"
    },
    "1921": {
      "op": "MSTORE"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1926": {
      "op": "DUP3"
    },
    "1927": {
      "op": "ADD"
    },
    "1928": {
      "op": "MSTORE"
    },
    "1929": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "ADD"
    },
    "1966": {
      "op": "MSTORE"
    },
    "1967": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1991": {
      "op": "DUP3"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "op": "MSTORE"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "2000": {
      "op": "JUMP"
    },
    "2001": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8993,
        9146
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2002": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9191,
        9198
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 14
    },
    "2003": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9191,
        9205
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2004": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9177,
        9180
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2005": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9177,
        9187
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2006": {
      "branch": 58,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9177,
        9205
      ],
      "op": "EQ",
      "path": "7"
    },
    "2007": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7F2"
    },
    "2010": {
      "branch": 58,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2011": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2013": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2022": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2023": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2025": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "ADD",
      "path": "7"
    },
    "2026": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "2029": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2030": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AA1"
    },
    "2033": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9156,
        9271
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2034": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9156,
        9271
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9289,
        9305
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 15
    },
    "2044": {
      "branch": 59,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9289,
        9305
      ],
      "op": "AND",
      "path": "7"
    },
    "2045": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x818"
    },
    "2048": {
      "branch": 59,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2049": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2051": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2058": {
      "op": "SHL"
    },
    "2059": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2060": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2061": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2063": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "ADD",
      "path": "7"
    },
    "2064": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "2067": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2068": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A12"
    },
    "2071": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9281,
        9347
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2072": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9281,
        9347
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2073": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9377,
        9387
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2074": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2076": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9398,
        9935
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2077": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9422,
        9425
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2078": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9422,
        9432
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2079": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9418,
        9419
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2080": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9418,
        9432
      ],
      "op": "LT",
      "path": "7"
    },
    "2081": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9398,
        9935
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2082": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9398,
        9935
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x93F"
    },
    "2085": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9398,
        9935
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2086": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9453,
        9463
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2088": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9469
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2089": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9470,
        9471
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2090": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2091": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2092": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2093": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "LT",
      "path": "7"
    },
    "2094": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x839"
    },
    "2097": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2098": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x839"
    },
    "2101": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "2104": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9466,
        9472
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2105": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2106": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2108": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "MUL",
      "path": "7"
    },
    "2109": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2111": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "ADD",
      "path": "7"
    },
    "2112": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "ADD",
      "path": "7"
    },
    "2113": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9466,
        9472
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2114": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9453,
        9472
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2115": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9453,
        9472
      ],
      "op": "POP",
      "path": "7"
    },
    "2116": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9486,
        9500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2118": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9510
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2119": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9511,
        9512
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2120": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2121": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2122": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2123": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "LT",
      "path": "7"
    },
    "2124": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x857"
    },
    "2127": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2128": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x857"
    },
    "2131": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "2134": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9503,
        9513
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2135": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2136": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2138": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2139": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2140": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "MUL",
      "path": "7"
    },
    "2141": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2142": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2143": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2144": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "ADD",
      "path": "7"
    },
    "2145": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2146": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "ADD",
      "path": "7"
    },
    "2147": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2148": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9528,
        9547
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2150": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2151": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2152": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2153": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9559
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2155": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2156": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2157": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2159": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2160": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2161": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9563
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "op": "SUB"
    },
    "2170": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "DUP15",
      "path": "7"
    },
    "2171": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "AND",
      "path": "7"
    },
    "2172": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2173": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2174": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2175": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2176": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2177": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2178": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2179": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2180": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2181": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9550,
        9569
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2182": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2183": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9503,
        9513
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9608,
        9629
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 16
    },
    "2186": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9608,
        9629
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2187": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9608,
        9629
      ],
      "op": "LT",
      "path": "7"
    },
    "2188": {
      "branch": 60,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9608,
        9629
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2189": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8A8"
    },
    "2192": {
      "branch": 60,
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2193": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2195": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2204": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2205": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2207": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "ADD",
      "path": "7"
    },
    "2208": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "2211": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2212": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A57"
    },
    "2215": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9583,
        9705
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2216": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9583,
        9705
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2217": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x0"
    },
    "2219": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2220": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2221": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2222": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9756
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2224": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2226": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2227": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2228": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2229": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2231": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2232": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2233": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2240": {
      "op": "SHL"
    },
    "2241": {
      "op": "SUB"
    },
    "2242": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2243": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "DUP16",
      "path": "7"
    },
    "2244": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "AND",
      "path": "7"
    },
    "2245": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2246": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2247": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2248": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2249": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2250": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2251": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2252": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9766
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2253": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9769,
        9789
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2254": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9769,
        9789
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2255": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9769,
        9789
      ],
      "op": "SUB",
      "path": "7"
    },
    "2256": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9789
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2257": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9789
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2258": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9821
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 18
    },
    "2259": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9821
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2260": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9821
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2261": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9821
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2262": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9821
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2263": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9821
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2264": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9831
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2265": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9831
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2266": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9831
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2267": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2268": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9831
      ],
      "op": "SUB",
      "path": "7"
    },
    "2269": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9831
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2270": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9807,
        9831
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2271": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "DUP14",
      "path": "7",
      "statement": 19
    },
    "2272": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "AND",
      "path": "7"
    },
    "2273": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2274": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2275": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2276": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2277": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2278": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2279": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9876
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2280": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2281": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2282": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9783,
        9789
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2283": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9783,
        9789
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2284": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9747,
        9760
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2285": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8F7"
    },
    "2288": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2289": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9783,
        9789
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2290": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9783,
        9789
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2291": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4E"
    },
    "2294": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9859,
        9886
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2295": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2296": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2297": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2298": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9859,
        9886
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "POP"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2307": {
      "op": "SHL"
    },
    "2308": {
      "op": "SUB"
    },
    "2309": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "DUP11",
      "path": "7",
      "statement": 20
    },
    "2310": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "AND",
      "path": "7"
    },
    "2311": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9908
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2313": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2314": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2315": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2316": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2318": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2319": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2320": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2321": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2323": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2324": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9914
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2325": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2326": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2327": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9918,
        9924
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2328": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9918,
        9924
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2329": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9908
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2330": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x924"
    },
    "2333": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2334": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9918,
        9924
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2335": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9918,
        9924
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2336": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4E"
    },
    "2339": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9900,
        9924
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2340": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2341": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2342": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "POP",
      "path": "7"
    },
    "2343": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "POP",
      "path": "7"
    },
    "2344": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2345": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2346": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2347": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9900,
        9924
      ],
      "op": "POP",
      "path": "7"
    },
    "2348": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9439,
        9935
      ],
      "op": "POP",
      "path": "7"
    },
    "2349": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9439,
        9935
      ],
      "op": "POP",
      "path": "7"
    },
    "2350": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9439,
        9935
      ],
      "op": "POP",
      "path": "7"
    },
    "2351": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9434,
        9437
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 21
    },
    "2352": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9434,
        9437
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x938"
    },
    "2355": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9434,
        9437
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2356": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9434,
        9437
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BCE"
    },
    "2359": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9434,
        9437
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2360": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9434,
        9437
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2361": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9434,
        9437
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2362": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9434,
        9437
      ],
      "op": "POP",
      "path": "7"
    },
    "2363": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9398,
        9935
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x81C"
    },
    "2366": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9398,
        9935
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2367": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9398,
        9935
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2368": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9398,
        9935
      ],
      "op": "POP",
      "path": "7"
    },
    "2369": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9980,
        9982
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 22
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2376": {
      "op": "SHL"
    },
    "2377": {
      "op": "SUB"
    },
    "2378": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "AND",
      "path": "7"
    },
    "2379": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9974,
        9978
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2386": {
      "op": "SHL"
    },
    "2387": {
      "op": "SUB"
    },
    "2388": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "AND",
      "path": "7"
    },
    "2389": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9964,
        9972
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2396": {
      "op": "SHL"
    },
    "2397": {
      "op": "SUB"
    },
    "2398": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "AND",
      "path": "7"
    },
    "2399": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "2432": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9984,
        9987
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2433": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9989,
        9996
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2434": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2436": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2437": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x98F"
    },
    "2440": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2441": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2442": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2443": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18EE"
    },
    "2446": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        9950,
        9997
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2447": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2448": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2450": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2451": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2452": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2453": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "SUB",
      "path": "7"
    },
    "2454": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2455": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        9950,
        9997
      ],
      "op": "LOG4",
      "path": "7"
    },
    "2456": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10008,
        10165
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 23,
      "value": "0x9A5"
    },
    "2459": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10057,
        10065
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2460": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10079,
        10083
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2461": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10097,
        10099
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2462": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10113,
        10116
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2463": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10130,
        10137
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2464": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10151,
        10155
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2465": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10008,
        10043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF94"
    },
    "2468": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        10008,
        10165
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2469": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        10008,
        10165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2470": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8983,
        10172
      ],
      "op": "POP",
      "path": "7"
    },
    "2471": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "POP",
      "path": "7"
    },
    "2472": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "POP",
      "path": "7"
    },
    "2473": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "POP",
      "path": "7"
    },
    "2474": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "POP",
      "path": "7"
    },
    "2475": {
      "fn": "Loot.safeBatchTransferFrom",
      "offset": [
        8797,
        10172
      ],
      "op": "POP",
      "path": "7"
    },
    "2476": {
      "fn": "Loot.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        8797,
        10172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2477": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2478": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5855,
        5871
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2480": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5927,
        5930
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 24
    },
    "2481": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5927,
        5937
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2482": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5908,
        5916
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2483": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5908,
        5923
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2484": {
      "branch": 61,
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5908,
        5937
      ],
      "op": "EQ",
      "path": "7"
    },
    "2485": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA12"
    },
    "2488": {
      "branch": 61,
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2489": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2491": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2498": {
      "op": "SHL"
    },
    "2499": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2500": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2503": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2505": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2506": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "ADD",
      "path": "7"
    },
    "2507": {
      "op": "MSTORE"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2512": {
      "op": "DUP3"
    },
    "2513": {
      "op": "ADD"
    },
    "2514": {
      "op": "MSTORE"
    },
    "2515": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2550": {
      "op": "DUP3"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2568": {
      "op": "DUP3"
    },
    "2569": {
      "op": "ADD"
    },
    "2570": {
      "op": "MSTORE"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2573": {
      "op": "ADD"
    },
    "2574": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "2577": {
      "op": "JUMP"
    },
    "2578": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5887,
        6004
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2579": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6015,
        6045
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2581": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6062,
        6070
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2582": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6062,
        6077
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2583": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2592": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2593": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "GT",
      "path": "7"
    },
    "2594": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2595": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2E"
    },
    "2598": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2599": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2E"
    },
    "2602": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C15"
    },
    "2605": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6048,
        6078
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2606": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2607": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2609": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2610": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2611": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2612": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2613": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2614": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2615": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2617": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "MUL",
      "path": "7"
    },
    "2618": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2620": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "ADD",
      "path": "7"
    },
    "2621": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2622": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "ADD",
      "path": "7"
    },
    "2623": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2625": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2626": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2627": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2628": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA57"
    },
    "2631": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2632": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2633": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2635": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "ADD",
      "path": "7"
    },
    "2636": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2638": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2639": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "MUL",
      "path": "7"
    },
    "2640": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2641": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2642": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2643": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "CALLDATACOPY",
      "path": "7"
    },
    "2644": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "ADD",
      "path": "7"
    },
    "2645": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2646": {
      "op": "POP"
    },
    "2647": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2648": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6048,
        6078
      ],
      "op": "POP",
      "path": "7"
    },
    "2649": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6015,
        6078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2650": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6015,
        6078
      ],
      "op": "POP",
      "path": "7"
    },
    "2651": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6094,
        6103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2653": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6089,
        6209
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2654": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6113,
        6121
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2655": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6113,
        6128
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2656": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6109,
        6110
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2657": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6109,
        6128
      ],
      "op": "LT",
      "path": "7"
    },
    "2658": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6089,
        6209
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2659": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6089,
        6209
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xACF"
    },
    "2662": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6089,
        6209
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2663": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6168,
        6198
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 25,
      "value": "0xAA2"
    },
    "2666": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6186
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2667": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6187,
        6188
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2668": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2669": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2670": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2671": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "LT",
      "path": "7"
    },
    "2672": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA7B"
    },
    "2675": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2676": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA7B"
    },
    "2679": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "2682": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6178,
        6189
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2683": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2684": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2686": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "MUL",
      "path": "7"
    },
    "2687": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2689": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "ADD",
      "path": "7"
    },
    "2690": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "ADD",
      "path": "7"
    },
    "2691": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6178,
        6189
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2692": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6194
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2693": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6195,
        6196
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2694": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2695": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2696": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2697": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "LT",
      "path": "7"
    },
    "2698": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA95"
    },
    "2701": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2702": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA95"
    },
    "2705": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "2708": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6191,
        6197
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2709": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2710": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2712": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "MUL",
      "path": "7"
    },
    "2713": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2715": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "ADD",
      "path": "7"
    },
    "2716": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "ADD",
      "path": "7"
    },
    "2717": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6191,
        6197
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2718": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6168,
        6177
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x257"
    },
    "2721": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6168,
        6198
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2722": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6168,
        6198
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2723": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6162
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2724": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6163,
        6164
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2725": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2726": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2727": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2728": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "LT",
      "path": "7"
    },
    "2729": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAB4"
    },
    "2732": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2733": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAB4"
    },
    "2736": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BFF"
    },
    "2739": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6149,
        6165
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2740": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2741": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2743": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2744": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2745": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "MUL",
      "path": "7"
    },
    "2746": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2747": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2748": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2749": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "ADD",
      "path": "7"
    },
    "2750": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6165
      ],
      "op": "ADD",
      "path": "7"
    },
    "2751": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6149,
        6198
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2752": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6130,
        6133
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 26,
      "value": "0xAC8"
    },
    "2755": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6130,
        6133
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2756": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6130,
        6133
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BCE"
    },
    "2759": {
      "fn": "Loot.balanceOfBatch",
      "jump": "i",
      "offset": [
        6130,
        6133
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2760": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6130,
        6133
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2761": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6130,
        6133
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2762": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6130,
        6133
      ],
      "op": "POP",
      "path": "7"
    },
    "2763": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6089,
        6209
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA5D"
    },
    "2766": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6089,
        6209
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2767": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6089,
        6209
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        6226,
        6239
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 27
    },
    "2770": {
      "fn": "Loot.balanceOfBatch",
      "offset": [
        5720,
        6246
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "fn": "Loot.balanceOfBatch",
      "jump": "o",
      "offset": [
        5720,
        6246
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2775": {
      "fn": "Loot.balanceOf",
      "offset": [
        4916,
        5172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2776": {
      "fn": "Loot.balanceOf",
      "offset": [
        4997,
        5004
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "SUB"
    },
    "2786": {
      "fn": "Loot.balanceOf",
      "offset": [
        5041,
        5062
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 28
    },
    "2787": {
      "branch": 62,
      "fn": "Loot.balanceOf",
      "offset": [
        5041,
        5062
      ],
      "op": "AND",
      "path": "7"
    },
    "2788": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAFF"
    },
    "2791": {
      "branch": 62,
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2792": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2794": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2795": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2803": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2804": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2806": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "ADD",
      "path": "7"
    },
    "2807": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "2810": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2811": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1977"
    },
    "2814": {
      "fn": "Loot.balanceOf",
      "jump": "i",
      "offset": [
        5020,
        5131
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2815": {
      "fn": "Loot.balanceOf",
      "offset": [
        5020,
        5131
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2816": {
      "op": "POP"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2823": {
      "op": "SHL"
    },
    "2824": {
      "op": "SUB"
    },
    "2825": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "AND",
      "path": "7",
      "statement": 29
    },
    "2826": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5156
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2828": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2829": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2830": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2831": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2833": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2834": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2835": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2836": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2838": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2839": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2840": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2841": {
      "fn": "Loot.balanceOf",
      "offset": [
        5148,
        5165
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2842": {
      "fn": "Loot.balanceOf",
      "jump": "o",
      "offset": [
        4916,
        5172
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2843": {
      "fn": "Loot.mint",
      "offset": [
        10491,
        11081
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2844": {
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2846": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2848": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2849": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4125
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2850": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2851": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "2854": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4125
      ],
      "op": "EXP",
      "path": "7"
    },
    "2855": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2856": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4125
      ],
      "op": "DIV",
      "path": "7"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2863": {
      "op": "SHL"
    },
    "2864": {
      "op": "SUB"
    },
    "2865": {
      "offset": [
        4119,
        4125
      ],
      "op": "AND",
      "path": "7"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2872": {
      "op": "SHL"
    },
    "2873": {
      "op": "SUB"
    },
    "2874": {
      "offset": [
        4119,
        4137
      ],
      "op": "AND",
      "path": "7"
    },
    "2875": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4137
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE7F43C68"
    },
    "2880": {
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2882": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2883": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2884": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "2889": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "2890": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "2892": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "SHL",
      "path": "7"
    },
    "2893": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2894": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2895": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2897": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "2898": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2900": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2902": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2903": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2904": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2905": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "SUB",
      "path": "7"
    },
    "2906": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2907": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2908": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2909": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "2910": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2911": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2912": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2913": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB69"
    },
    "2916": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2917": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2919": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2920": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2921": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2922": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "2923": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "GAS",
      "path": "7"
    },
    "2924": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "2925": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2926": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2927": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2928": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB7D"
    },
    "2931": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2932": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2933": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2935": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2936": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2937": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2938": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2940": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2941": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2942": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "2943": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "2944": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "2945": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "2946": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2948": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2949": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2950": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2952": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "NOT",
      "path": "7"
    },
    "2953": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2955": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2956": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "2957": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "2958": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2959": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "2960": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2961": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2963": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2964": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "POP",
      "path": "7"
    },
    "2965": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2966": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "ADD",
      "path": "7"
    },
    "2967": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2968": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBA1"
    },
    "2971": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2972": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2973": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x137B"
    },
    "2976": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2977": {
      "fn": "Loot.mint",
      "offset": [
        4119,
        4139
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "op": "SUB"
    },
    "2986": {
      "offset": [
        4105,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "2987": {
      "offset": [
        4105,
        4115
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2994": {
      "op": "SHL"
    },
    "2995": {
      "op": "SUB"
    },
    "2996": {
      "offset": [
        4105,
        4139
      ],
      "op": "AND",
      "path": "7"
    },
    "2997": {
      "branch": 63,
      "fn": "Loot.mint",
      "offset": [
        4105,
        4139
      ],
      "op": "EQ",
      "path": "7"
    },
    "2998": {
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBD1"
    },
    "3001": {
      "branch": 63,
      "offset": [
        4084,
        4213
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3002": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3004": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3005": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "offset": [
        4084,
        4213
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3013": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3014": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3016": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "ADD",
      "path": "7"
    },
    "3017": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "3020": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3021": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C2"
    },
    "3024": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        4084,
        4213
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3025": {
      "fn": "Loot.mint",
      "offset": [
        4084,
        4213
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3032": {
      "op": "SHL"
    },
    "3033": {
      "op": "SUB"
    },
    "3034": {
      "fn": "Loot.mint",
      "offset": [
        10651,
        10672
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 30
    },
    "3035": {
      "branch": 64,
      "fn": "Loot.mint",
      "offset": [
        10651,
        10672
      ],
      "op": "AND",
      "path": "7"
    },
    "3036": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBF7"
    },
    "3039": {
      "branch": 64,
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3040": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3042": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3051": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3052": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3054": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "ADD",
      "path": "7"
    },
    "3055": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "3058": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3059": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AE9"
    },
    "3062": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10643,
        10710
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3063": {
      "fn": "Loot.mint",
      "offset": [
        10643,
        10710
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3064": {
      "fn": "Loot.mint",
      "offset": [
        10721,
        10737
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3066": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 31
    },
    "3067": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3068": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3069": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10770
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3071": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3073": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3074": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3075": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3076": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3078": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3079": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3080": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10774
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3087": {
      "op": "SHL"
    },
    "3088": {
      "op": "SUB"
    },
    "3089": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3090": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "AND",
      "path": "7"
    },
    "3091": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3092": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3093": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3094": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3095": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3096": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3097": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3098": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3099": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3100": {
      "fn": "Loot.mint",
      "offset": [
        10740,
        10750
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3101": {
      "fn": "Loot.mint",
      "offset": [
        10740,
        10750
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3102": {
      "fn": "Loot.mint",
      "offset": [
        10787,
        10793
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3103": {
      "fn": "Loot.mint",
      "offset": [
        10787,
        10793
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3104": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10783
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3105": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC2B"
    },
    "3108": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3109": {
      "fn": "Loot.mint",
      "offset": [
        10787,
        10793
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3110": {
      "fn": "Loot.mint",
      "offset": [
        10787,
        10793
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3111": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4E"
    },
    "3114": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10761,
        10793
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3115": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3116": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3117": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3118": {
      "fn": "Loot.mint",
      "offset": [
        10761,
        10793
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3127": {
      "op": "SHL"
    },
    "3128": {
      "op": "SUB"
    },
    "3129": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 32
    },
    "3130": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "AND",
      "path": "7"
    },
    "3131": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10811
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3133": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3134": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3135": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3136": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3138": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3139": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3140": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3141": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3143": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3144": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10820
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3145": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3146": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3147": {
      "fn": "Loot.mint",
      "offset": [
        10824,
        10830
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3148": {
      "fn": "Loot.mint",
      "offset": [
        10824,
        10830
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3149": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10811
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3150": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC58"
    },
    "3153": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3154": {
      "fn": "Loot.mint",
      "offset": [
        10824,
        10830
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3155": {
      "fn": "Loot.mint",
      "offset": [
        10824,
        10830
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3156": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4E"
    },
    "3159": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10803,
        10830
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3160": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3161": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3162": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3163": {
      "fn": "Loot.mint",
      "offset": [
        10803,
        10830
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3164": {
      "op": "POP"
    },
    "3165": {
      "op": "POP"
    },
    "3166": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x40"
    },
    "3168": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3169": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3170": {
      "op": "DUP6"
    },
    "3171": {
      "op": "DUP2"
    },
    "3172": {
      "op": "MSTORE"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3175": {
      "op": "DUP2"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "DUP6"
    },
    "3178": {
      "op": "SWAP1"
    },
    "3179": {
      "op": "MSTORE"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "op": "SUB"
    },
    "3188": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3189": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3190": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "AND",
      "path": "7"
    },
    "3191": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3192": {
      "fn": "Loot.mint",
      "offset": [
        10878,
        10879
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3194": {
      "fn": "Loot.mint",
      "offset": [
        10878,
        10879
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3195": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3196": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3197": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "AND",
      "path": "7"
    },
    "3198": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3199": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "3232": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3233": {
      "op": "ADD"
    },
    "3234": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3236": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3237": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3238": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3239": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "SUB",
      "path": "7"
    },
    "3240": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3241": {
      "fn": "Loot.mint",
      "offset": [
        10845,
        10902
      ],
      "op": "LOG4",
      "path": "7"
    },
    "3242": {
      "fn": "Loot.mint",
      "offset": [
        10913,
        11074
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 34,
      "value": "0x747"
    },
    "3245": {
      "fn": "Loot.mint",
      "offset": [
        10957,
        10965
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3246": {
      "fn": "Loot.mint",
      "offset": [
        10987,
        10988
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3248": {
      "fn": "Loot.mint",
      "offset": [
        11003,
        11010
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3249": {
      "fn": "Loot.mint",
      "offset": [
        11024,
        11026
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3250": {
      "fn": "Loot.mint",
      "offset": [
        11040,
        11046
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3251": {
      "fn": "Loot.mint",
      "offset": [
        11060,
        11064
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3252": {
      "fn": "Loot.mint",
      "offset": [
        10913,
        10943
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10FF"
    },
    "3255": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        10913,
        11074
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3256": {
      "offset": [
        1339,
        1359
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3257": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "3259": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3260": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3261": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DC"
    },
    "3264": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3265": {
      "fn": "Loot.mint",
      "offset": [
        1339,
        1359
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B66"
    },
    "3268": {
      "fn": "Loot.mint",
      "jump": "i",
      "offset": [
        1339,
        1359
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3269": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3270": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6558,
        6568
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 35
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3277": {
      "op": "SHL"
    },
    "3278": {
      "op": "SUB"
    },
    "3279": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6558,
        6580
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3280": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6558,
        6580
      ],
      "op": "AND",
      "path": "7"
    },
    "3281": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6558,
        6580
      ],
      "op": "EQ",
      "path": "7"
    },
    "3282": {
      "branch": 65,
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6558,
        6580
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3283": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD30"
    },
    "3286": {
      "branch": 65,
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3287": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3289": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3296": {
      "op": "SHL"
    },
    "3297": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3298": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3301": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3303": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3304": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "ADD",
      "path": "7"
    },
    "3305": {
      "op": "MSTORE"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3310": {
      "op": "DUP3"
    },
    "3311": {
      "op": "ADD"
    },
    "3312": {
      "op": "MSTORE"
    },
    "3313": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3348": {
      "op": "DUP3"
    },
    "3349": {
      "op": "ADD"
    },
    "3350": {
      "op": "MSTORE"
    },
    "3351": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3363": {
      "op": "SHL"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3366": {
      "op": "DUP3"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "MSTORE"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3371": {
      "op": "ADD"
    },
    "3372": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "3375": {
      "op": "JUMP"
    },
    "3376": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6537,
        6647
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3377": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6677,
        6687
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 36
    },
    "3378": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3380": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3381": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3382": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3383": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6676
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3385": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3387": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3388": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3389": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3390": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3392": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3393": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3394": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6688
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3401": {
      "op": "SHL"
    },
    "3402": {
      "op": "SUB"
    },
    "3403": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3404": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "AND",
      "path": "7"
    },
    "3405": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3406": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3407": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3408": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3409": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3410": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3411": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3412": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3413": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3414": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3415": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3416": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3419": {
      "op": "NOT"
    },
    "3420": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "AND",
      "path": "7"
    },
    "3421": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3422": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3423": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3424": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3425": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3426": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "OR",
      "path": "7"
    },
    "3427": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3428": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3429": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6709
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3430": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 37
    },
    "3431": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3432": {
      "op": "SWAP1"
    },
    "3433": {
      "op": "DUP2"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3436": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6658,
        6698
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3437": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6677,
        6687
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3438": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "3471": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3472": {
      "op": "ADD"
    },
    "3473": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3475": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3476": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3477": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3478": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "SUB",
      "path": "7"
    },
    "3479": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3480": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6724,
        6770
      ],
      "op": "LOG3",
      "path": "7"
    },
    "3481": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "POP",
      "path": "7"
    },
    "3482": {
      "fn": "Loot.setApprovalForAll",
      "offset": [
        6431,
        6777
      ],
      "op": "POP",
      "path": "7"
    },
    "3483": {
      "fn": "Loot.setApprovalForAll",
      "jump": "o",
      "offset": [
        6431,
        6777
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3484": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        6882,
        7076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3491": {
      "op": "SHL"
    },
    "3492": {
      "op": "SUB"
    },
    "3493": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 38
    },
    "3494": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3495": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "AND",
      "path": "7"
    },
    "3496": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7005,
        7009
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3498": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3499": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3500": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3501": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3503": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3505": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3506": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3507": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3508": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3510": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3511": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3512": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7059
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3513": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3514": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3515": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3516": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "AND",
      "path": "7"
    },
    "3517": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3518": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3519": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3520": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3521": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3522": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3523": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3524": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3525": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3527": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "AND",
      "path": "7"
    },
    "3528": {
      "fn": "Loot.isApprovedForAll",
      "offset": [
        7032,
        7069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3529": {
      "fn": "Loot.isApprovedForAll",
      "jump": "o",
      "offset": [
        6882,
        7076
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3530": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "op": "SUB"
    },
    "3539": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7764,
        7782
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 39
    },
    "3540": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7764,
        7782
      ],
      "op": "AND",
      "path": "7"
    },
    "3541": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7772,
        7782
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3542": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7764,
        7782
      ],
      "op": "EQ",
      "path": "7"
    },
    "3543": {
      "branch": 66,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7764,
        7782
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3544": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7764,
        7820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDE6"
    },
    "3547": {
      "branch": 66,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7764,
        7820
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3548": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7764,
        7820
      ],
      "op": "POP",
      "path": "7"
    },
    "3549": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7786,
        7820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDE6"
    },
    "3552": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7803,
        7807
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3553": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7809,
        7819
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3554": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7786,
        7802
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9C"
    },
    "3557": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7786,
        7820
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3558": {
      "branch": 67,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7786,
        7820
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3559": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE44"
    },
    "3562": {
      "branch": 67,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3563": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3565": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3572": {
      "op": "SHL"
    },
    "3573": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3574": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3577": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3579": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3580": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "ADD",
      "path": "7"
    },
    "3581": {
      "op": "MSTORE"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3586": {
      "op": "DUP3"
    },
    "3587": {
      "op": "ADD"
    },
    "3588": {
      "op": "MSTORE"
    },
    "3589": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3624": {
      "op": "DUP3"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "MSTORE"
    },
    "3627": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "3639": {
      "op": "SHL"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3642": {
      "op": "DUP3"
    },
    "3643": {
      "op": "ADD"
    },
    "3644": {
      "op": "MSTORE"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3647": {
      "op": "ADD"
    },
    "3648": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "3651": {
      "op": "JUMP"
    },
    "3652": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7743,
        7887
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3659": {
      "op": "SHL"
    },
    "3660": {
      "op": "SUB"
    },
    "3661": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7905,
        7921
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 40
    },
    "3662": {
      "branch": 68,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7905,
        7921
      ],
      "op": "AND",
      "path": "7"
    },
    "3663": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE6A"
    },
    "3666": {
      "branch": 68,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3667": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3669": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3670": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3676": {
      "op": "SHL"
    },
    "3677": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3678": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3679": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3681": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "ADD",
      "path": "7"
    },
    "3682": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "3685": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3686": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A12"
    },
    "3689": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        7897,
        7963
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3690": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7897,
        7963
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3691": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7974,
        7990
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3693": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3694": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3695": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3696": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8045
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3698": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3700": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3701": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3702": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3703": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3705": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3706": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3707": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8049
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3714": {
      "op": "SHL"
    },
    "3715": {
      "op": "SUB"
    },
    "3716": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3717": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "AND",
      "path": "7"
    },
    "3718": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3719": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3720": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3721": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3722": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3723": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3724": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3725": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8036,
        8055
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3726": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7993,
        8003
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3727": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7993,
        8003
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3728": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8086,
        8107
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 41
    },
    "3729": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8086,
        8107
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3730": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8086,
        8107
      ],
      "op": "LT",
      "path": "7"
    },
    "3731": {
      "branch": 69,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8086,
        8107
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3732": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEAF"
    },
    "3735": {
      "branch": 69,
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3736": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3738": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3739": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3745": {
      "op": "SHL"
    },
    "3746": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3747": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3748": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3750": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "ADD",
      "path": "7"
    },
    "3751": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "3754": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3755": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A57"
    },
    "3758": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8065,
        8175
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3759": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8065,
        8175
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3760": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 42,
      "value": "0x0"
    },
    "3762": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3763": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3764": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3765": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8218
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3767": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3769": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3770": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3771": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3772": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3774": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3775": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3776": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3783": {
      "op": "SHL"
    },
    "3784": {
      "op": "SUB"
    },
    "3785": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3786": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3787": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "AND",
      "path": "7"
    },
    "3788": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3789": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3790": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3791": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3792": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3793": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3794": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3795": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8228
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3796": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8231,
        8251
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3797": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8231,
        8251
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3798": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8231,
        8251
      ],
      "op": "SUB",
      "path": "7"
    },
    "3799": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8251
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3800": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8251
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3801": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8279
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 43
    },
    "3802": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8279
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3803": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8279
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3804": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8279
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3805": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8279
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3806": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8279
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3807": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8289
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3808": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8289
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3809": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8289
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3810": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3811": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8289
      ],
      "op": "SUB",
      "path": "7"
    },
    "3812": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3813": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8265,
        8289
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3814": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "DUP11",
      "path": "7",
      "statement": 44
    },
    "3815": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "AND",
      "path": "7"
    },
    "3816": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3817": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3818": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3819": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3820": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3821": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3822": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8326
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3823": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3824": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3825": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8245,
        8251
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3826": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8245,
        8251
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3827": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8209,
        8222
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3828": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEFE"
    },
    "3831": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3832": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8245,
        8251
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3833": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8245,
        8251
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3834": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4E"
    },
    "3837": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8309,
        8336
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3838": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3839": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3840": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3841": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8309,
        8336
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3842": {
      "op": "POP"
    },
    "3843": {
      "op": "POP"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3850": {
      "op": "SHL"
    },
    "3851": {
      "op": "SUB"
    },
    "3852": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 45
    },
    "3853": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "AND",
      "path": "7"
    },
    "3854": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8354
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3856": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3857": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3858": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3859": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3861": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3862": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3863": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3864": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3866": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3867": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8358
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3868": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3869": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3870": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8362,
        8368
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3871": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8362,
        8368
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3872": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8354
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3873": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF2B"
    },
    "3876": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3877": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8362,
        8368
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3878": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8362,
        8368
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3879": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4E"
    },
    "3882": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8346,
        8368
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3883": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3884": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3885": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3886": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8346,
        8368
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3887": {
      "op": "POP"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 46,
      "value": "0x40"
    },
    "3891": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3892": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3893": {
      "op": "DUP7"
    },
    "3894": {
      "op": "DUP2"
    },
    "3895": {
      "op": "MSTORE"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3898": {
      "op": "DUP2"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "op": "DUP7"
    },
    "3901": {
      "op": "SWAP1"
    },
    "3902": {
      "op": "MSTORE"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3909": {
      "op": "SHL"
    },
    "3910": {
      "op": "SUB"
    },
    "3911": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3912": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3913": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "AND",
      "path": "7"
    },
    "3914": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3915": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3916": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3917": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "AND",
      "path": "7"
    },
    "3918": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3919": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3920": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3921": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "AND",
      "path": "7"
    },
    "3922": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3923": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "3956": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3957": {
      "op": "ADD"
    },
    "3958": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3960": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3961": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3962": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3963": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "SUB",
      "path": "7"
    },
    "3964": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3965": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8384,
        8430
      ],
      "op": "LOG4",
      "path": "7"
    },
    "3966": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8441,
        8509
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 47,
      "value": "0xF8B"
    },
    "3969": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8472,
        8480
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3970": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8482,
        8486
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3971": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8488,
        8490
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3972": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8492,
        8494
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3973": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8496,
        8502
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3974": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8504,
        8508
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3975": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8441,
        8471
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10FF"
    },
    "3978": {
      "fn": "Loot.safeTransferFrom",
      "jump": "i",
      "offset": [
        8441,
        8509
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3979": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        8441,
        8509
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3980": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7733,
        8516
      ],
      "op": "POP",
      "path": "7"
    },
    "3981": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7733,
        8516
      ],
      "op": "POP",
      "path": "7"
    },
    "3982": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "POP",
      "path": "7"
    },
    "3983": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "POP",
      "path": "7"
    },
    "3984": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "POP",
      "path": "7"
    },
    "3985": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "POP",
      "path": "7"
    },
    "3986": {
      "fn": "Loot.safeTransferFrom",
      "offset": [
        7572,
        8516
      ],
      "op": "POP",
      "path": "7"
    },
    "3987": {
      "fn": "Loot.safeTransferFrom",
      "jump": "o",
      "offset": [
        7572,
        8516
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3988": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13045,
        13991
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3995": {
      "op": "SHL"
    },
    "3996": {
      "op": "SUB"
    },
    "3997": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13277,
        13290
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3998": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13277,
        13290
      ],
      "op": "AND",
      "path": "7"
    },
    "3999": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "4000": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "4",
      "statement": 48
    },
    "4001": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13273,
        13985
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9A5"
    },
    "4004": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13273,
        13985
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4005": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4007": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4008": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4015": {
      "op": "SHL"
    },
    "4016": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4017": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4024": {
      "op": "SHL"
    },
    "4025": {
      "op": "SUB"
    },
    "4026": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13371
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4027": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13371
      ],
      "op": "AND",
      "path": "7"
    },
    "4028": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13371
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4029": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13371
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xBC197C81"
    },
    "4034": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13371
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4035": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFD8"
    },
    "4038": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4039": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13393,
        13401
      ],
      "op": "DUP10",
      "path": "7"
    },
    "4040": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13393,
        13401
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4041": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13423,
        13427
      ],
      "op": "DUP10",
      "path": "7"
    },
    "4042": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13423,
        13427
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4043": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13449,
        13452
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4044": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13449,
        13452
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4045": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13474,
        13481
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4046": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13474,
        13481
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4047": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13503,
        13507
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4048": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13503,
        13507
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4049": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4051": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "ADD",
      "path": "7"
    },
    "4052": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1838"
    },
    "4055": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13328,
        13525
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4056": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4057": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4059": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4061": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4062": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4063": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4064": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "SUB",
      "path": "7"
    },
    "4065": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4066": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4068": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4069": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4070": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "4071": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4072": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4073": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4074": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFF2"
    },
    "4077": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4078": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4080": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4081": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "REVERT",
      "path": "7"
    },
    "4082": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4083": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "POP",
      "path": "7"
    },
    "4084": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "GAS",
      "path": "7"
    },
    "4085": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "CALL",
      "path": "7"
    },
    "4086": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4087": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "POP",
      "path": "7"
    },
    "4088": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "POP",
      "path": "7"
    },
    "4089": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "POP",
      "path": "7"
    },
    "4090": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4091": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4092": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1022"
    },
    "4095": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4099": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4100": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4101": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4103": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4104": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4105": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4106": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "ADD",
      "path": "7"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4109": {
      "op": "NOT"
    },
    "4110": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "AND",
      "path": "7"
    },
    "4111": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4112": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "ADD",
      "path": "7"
    },
    "4113": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4114": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4115": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4116": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x101F"
    },
    "4119": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4120": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4121": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "ADD",
      "path": "7"
    },
    "4122": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4123": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1729"
    },
    "4126": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13328,
        13525
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4127": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4128": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4130": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13328,
        13525
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4131": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10CF"
    },
    "4134": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4135": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x102E"
    },
    "4138": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C2B"
    },
    "4141": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4142": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4143": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4144": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8C379A0"
    },
    "4149": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "EQ",
      "path": "7"
    },
    "4150": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4151": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1068"
    },
    "4154": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4155": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "POP",
      "path": "7"
    },
    "4156": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1043"
    },
    "4159": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C47"
    },
    "4162": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4163": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4164": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4165": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x104E"
    },
    "4168": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4169": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "POP",
      "path": "7"
    },
    "4170": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x106A"
    },
    "4173": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4174": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4175": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13851,
        13857
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 49
    },
    "4176": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4178": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4185": {
      "op": "SHL"
    },
    "4186": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4187": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4188": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4190": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "ADD",
      "path": "7"
    },
    "4191": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "4194": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4195": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4196": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13844,
        13858
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x191C"
    },
    "4199": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13844,
        13858
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4200": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4201": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "POP",
      "path": "7"
    },
    "4202": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4203": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13898,
        13960
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 50,
      "value": "0x40"
    },
    "4205": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13898,
        13960
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4212": {
      "op": "SHL"
    },
    "4213": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13898,
        13960
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4214": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13898,
        13960
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4217": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13898,
        13960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4219": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13898,
        13960
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4220": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13898,
        13960
      ],
      "op": "ADD",
      "path": "7"
    },
    "4221": {
      "op": "MSTORE"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4226": {
      "op": "DUP3"
    },
    "4227": {
      "op": "ADD"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4264": {
      "op": "DUP3"
    },
    "4265": {
      "op": "ADD"
    },
    "4266": {
      "op": "MSTORE"
    },
    "4267": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4290": {
      "op": "SHL"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13898,
        13960
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "4302": {
      "op": "JUMP"
    },
    "4303": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13308,
        13975
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4310": {
      "op": "SHL"
    },
    "4311": {
      "op": "SUB"
    },
    "4312": {
      "op": "NOT"
    },
    "4313": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13607,
        13667
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4314": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13607,
        13667
      ],
      "op": "AND",
      "path": "7"
    },
    "4315": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4322": {
      "op": "SHL"
    },
    "4323": {
      "branch": 70,
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13607,
        13667
      ],
      "op": "EQ",
      "path": "7"
    },
    "4324": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13582,
        13777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF8B"
    },
    "4327": {
      "branch": 70,
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13582,
        13777
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4328": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 51,
      "value": "0x40"
    },
    "4330": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4337": {
      "op": "SHL"
    },
    "4338": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4339": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4340": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4342": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "ADD",
      "path": "7"
    },
    "4343": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "4346": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4347": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        13708,
        13758
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x192F"
    },
    "4350": {
      "fn": "Loot._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13708,
        13758
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4351": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12168,
        13039
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4358": {
      "op": "SHL"
    },
    "4359": {
      "op": "SUB"
    },
    "4360": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12375,
        12388
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4361": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12375,
        12388
      ],
      "op": "AND",
      "path": "7"
    },
    "4362": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "4363": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4364": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12371,
        13033
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9A5"
    },
    "4367": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12371,
        13033
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4368": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4370": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4371": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4378": {
      "op": "SHL"
    },
    "4379": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4380": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4387": {
      "op": "SHL"
    },
    "4388": {
      "op": "SUB"
    },
    "4389": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12464
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4390": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12464
      ],
      "op": "AND",
      "path": "7"
    },
    "4391": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12464
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4392": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12464
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF23A6E61"
    },
    "4397": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12464
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4398": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1143"
    },
    "4401": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4402": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12486,
        12494
      ],
      "op": "DUP10",
      "path": "7"
    },
    "4403": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12486,
        12494
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4404": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12516,
        12520
      ],
      "op": "DUP10",
      "path": "7"
    },
    "4405": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12516,
        12520
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4406": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12542,
        12544
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4407": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12542,
        12544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4408": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12566,
        12572
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4409": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12566,
        12572
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4410": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12594,
        12598
      ],
      "op": "DUP9",
      "path": "7"
    },
    "4411": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12594,
        12598
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4412": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4414": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "ADD",
      "path": "7"
    },
    "4415": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1896"
    },
    "4418": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12426,
        12616
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4419": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4420": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4422": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4424": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4425": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4426": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4427": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "SUB",
      "path": "7"
    },
    "4428": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4429": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4431": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP8",
      "path": "7"
    },
    "4432": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4433": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "4434": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4435": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4436": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4437": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115D"
    },
    "4440": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4441": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4443": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4444": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "REVERT",
      "path": "7"
    },
    "4445": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4446": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "POP",
      "path": "7"
    },
    "4447": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "GAS",
      "path": "7"
    },
    "4448": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "CALL",
      "path": "7"
    },
    "4449": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4450": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "POP",
      "path": "7"
    },
    "4451": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "POP",
      "path": "7"
    },
    "4452": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "POP",
      "path": "7"
    },
    "4453": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4454": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4455": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118D"
    },
    "4458": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4459": {
      "op": "POP"
    },
    "4460": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4462": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4463": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4464": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4466": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "4467": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4468": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4469": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "ADD",
      "path": "7"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4472": {
      "op": "NOT"
    },
    "4473": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "AND",
      "path": "7"
    },
    "4474": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4475": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "ADD",
      "path": "7"
    },
    "4476": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4477": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4478": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4479": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118A"
    },
    "4482": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4483": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4484": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "ADD",
      "path": "7"
    },
    "4485": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4486": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1729"
    },
    "4489": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12426,
        12616
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4490": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4491": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4493": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12426,
        12616
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4494": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12406,
        13023
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1199"
    },
    "4497": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12406,
        13023
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4498": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12406,
        13023
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x102E"
    },
    "4501": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12406,
        13023
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C2B"
    },
    "4504": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12406,
        13023
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4505": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12406,
        13023
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4512": {
      "op": "SHL"
    },
    "4513": {
      "op": "SUB"
    },
    "4514": {
      "op": "NOT"
    },
    "4515": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12677,
        12732
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4516": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12677,
        12732
      ],
      "op": "AND",
      "path": "7"
    },
    "4517": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4524": {
      "op": "SHL"
    },
    "4525": {
      "branch": 71,
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12677,
        12732
      ],
      "op": "EQ",
      "path": "7"
    },
    "4526": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12673,
        12825
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF8B"
    },
    "4529": {
      "branch": 71,
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12673,
        12825
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4530": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 52,
      "value": "0x40"
    },
    "4532": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4539": {
      "op": "SHL"
    },
    "4540": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4541": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4542": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4544": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "ADD",
      "path": "7"
    },
    "4545": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "4548": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4549": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "offset": [
        12756,
        12806
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x192F"
    },
    "4552": {
      "fn": "Loot._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        12756,
        12806
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4553": {
      "op": "JUMPDEST"
    },
    "4554": {
      "op": "DUP3"
    },
    "4555": {
      "op": "DUP1"
    },
    "4556": {
      "op": "SLOAD"
    },
    "4557": {
      "op": "PUSH2",
      "value": "0x11D5"
    },
    "4560": {
      "op": "SWAP1"
    },
    "4561": {
      "op": "PUSH2",
      "value": "0x1B66"
    },
    "4564": {
      "jump": "i",
      "op": "JUMP"
    },
    "4565": {
      "op": "JUMPDEST"
    },
    "4566": {
      "op": "SWAP1"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4569": {
      "op": "MSTORE"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4574": {
      "op": "KECCAK256"
    },
    "4575": {
      "op": "SWAP1"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4578": {
      "op": "ADD"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4581": {
      "op": "SWAP1"
    },
    "4582": {
      "op": "DIV"
    },
    "4583": {
      "op": "DUP2"
    },
    "4584": {
      "op": "ADD"
    },
    "4585": {
      "op": "SWAP3"
    },
    "4586": {
      "op": "DUP3"
    },
    "4587": {
      "op": "PUSH2",
      "value": "0x11F7"
    },
    "4590": {
      "op": "JUMPI"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4593": {
      "op": "DUP6"
    },
    "4594": {
      "op": "SSTORE"
    },
    "4595": {
      "op": "PUSH2",
      "value": "0x123D"
    },
    "4598": {
      "op": "JUMP"
    },
    "4599": {
      "op": "JUMPDEST"
    },
    "4600": {
      "op": "DUP3"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4603": {
      "op": "LT"
    },
    "4604": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "4607": {
      "op": "JUMPI"
    },
    "4608": {
      "op": "DUP1"
    },
    "4609": {
      "op": "MLOAD"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4612": {
      "op": "NOT"
    },
    "4613": {
      "op": "AND"
    },
    "4614": {
      "op": "DUP4"
    },
    "4615": {
      "op": "DUP1"
    },
    "4616": {
      "op": "ADD"
    },
    "4617": {
      "op": "OR"
    },
    "4618": {
      "op": "DUP6"
    },
    "4619": {
      "op": "SSTORE"
    },
    "4620": {
      "op": "PUSH2",
      "value": "0x123D"
    },
    "4623": {
      "op": "JUMP"
    },
    "4624": {
      "op": "JUMPDEST"
    },
    "4625": {
      "op": "DUP3"
    },
    "4626": {
      "op": "DUP1"
    },
    "4627": {
      "op": "ADD"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4630": {
      "op": "ADD"
    },
    "4631": {
      "op": "DUP6"
    },
    "4632": {
      "op": "SSTORE"
    },
    "4633": {
      "op": "DUP3"
    },
    "4634": {
      "op": "ISZERO"
    },
    "4635": {
      "op": "PUSH2",
      "value": "0x123D"
    },
    "4638": {
      "op": "JUMPI"
    },
    "4639": {
      "op": "SWAP2"
    },
    "4640": {
      "op": "DUP3"
    },
    "4641": {
      "op": "ADD"
    },
    "4642": {
      "op": "JUMPDEST"
    },
    "4643": {
      "op": "DUP3"
    },
    "4644": {
      "op": "DUP2"
    },
    "4645": {
      "op": "GT"
    },
    "4646": {
      "op": "ISZERO"
    },
    "4647": {
      "op": "PUSH2",
      "value": "0x123D"
    },
    "4650": {
      "op": "JUMPI"
    },
    "4651": {
      "op": "DUP3"
    },
    "4652": {
      "op": "MLOAD"
    },
    "4653": {
      "op": "DUP3"
    },
    "4654": {
      "op": "SSTORE"
    },
    "4655": {
      "op": "SWAP2"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4658": {
      "op": "ADD"
    },
    "4659": {
      "op": "SWAP2"
    },
    "4660": {
      "op": "SWAP1"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4663": {
      "op": "ADD"
    },
    "4664": {
      "op": "SWAP1"
    },
    "4665": {
      "op": "PUSH2",
      "value": "0x1222"
    },
    "4668": {
      "op": "JUMP"
    },
    "4669": {
      "op": "JUMPDEST"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "op": "PUSH2",
      "value": "0x1249"
    },
    "4674": {
      "op": "SWAP3"
    },
    "4675": {
      "op": "SWAP2"
    },
    "4676": {
      "op": "POP"
    },
    "4677": {
      "op": "PUSH2",
      "value": "0x124D"
    },
    "4680": {
      "jump": "i",
      "op": "JUMP"
    },
    "4681": {
      "op": "JUMPDEST"
    },
    "4682": {
      "op": "POP"
    },
    "4683": {
      "op": "SWAP1"
    },
    "4684": {
      "jump": "o",
      "op": "JUMP"
    },
    "4685": {
      "op": "JUMPDEST"
    },
    "4686": {
      "op": "JUMPDEST"
    },
    "4687": {
      "op": "DUP1"
    },
    "4688": {
      "op": "DUP3"
    },
    "4689": {
      "op": "GT"
    },
    "4690": {
      "op": "ISZERO"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0x1249"
    },
    "4694": {
      "op": "JUMPI"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4697": {
      "op": "DUP2"
    },
    "4698": {
      "op": "SSTORE"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4701": {
      "op": "ADD"
    },
    "4702": {
      "op": "PUSH2",
      "value": "0x124E"
    },
    "4705": {
      "op": "JUMP"
    },
    "4706": {
      "op": "JUMPDEST"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4709": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4718": {
      "op": "DUP4"
    },
    "4719": {
      "op": "GT"
    },
    "4720": {
      "op": "ISZERO"
    },
    "4721": {
      "op": "PUSH2",
      "value": "0x127C"
    },
    "4724": {
      "op": "JUMPI"
    },
    "4725": {
      "op": "PUSH2",
      "value": "0x127C"
    },
    "4728": {
      "op": "PUSH2",
      "value": "0x1C15"
    },
    "4731": {
      "jump": "i",
      "op": "JUMP"
    },
    "4732": {
      "op": "JUMPDEST"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4735": {
      "op": "MLOAD"
    },
    "4736": {
      "op": "PUSH2",
      "value": "0x1293"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4741": {
      "op": "DUP6"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4745": {
      "op": "NOT"
    },
    "4746": {
      "op": "AND"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "op": "DUP3"
    },
    "4751": {
      "op": "PUSH2",
      "value": "0x1BA1"
    },
    "4754": {
      "jump": "i",
      "op": "JUMP"
    },
    "4755": {
      "op": "JUMPDEST"
    },
    "4756": {
      "op": "DUP1"
    },
    "4757": {
      "op": "SWAP2"
    },
    "4758": {
      "op": "POP"
    },
    "4759": {
      "op": "DUP4"
    },
    "4760": {
      "op": "DUP2"
    },
    "4761": {
      "op": "MSTORE"
    },
    "4762": {
      "op": "DUP5"
    },
    "4763": {
      "op": "DUP5"
    },
    "4764": {
      "op": "DUP5"
    },
    "4765": {
      "op": "ADD"
    },
    "4766": {
      "op": "GT"
    },
    "4767": {
      "op": "ISZERO"
    },
    "4768": {
      "op": "PUSH2",
      "value": "0x12A8"
    },
    "4771": {
      "op": "JUMPI"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4774": {
      "op": "DUP1"
    },
    "4775": {
      "op": "REVERT"
    },
    "4776": {
      "op": "JUMPDEST"
    },
    "4777": {
      "op": "DUP4"
    },
    "4778": {
      "op": "DUP4"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4781": {
      "op": "DUP4"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "CALLDATACOPY"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4788": {
      "op": "DUP6"
    },
    "4789": {
      "op": "DUP4"
    },
    "4790": {
      "op": "ADD"
    },
    "4791": {
      "op": "ADD"
    },
    "4792": {
      "op": "MSTORE"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "op": "SWAP4"
    },
    "4795": {
      "op": "SWAP3"
    },
    "4796": {
      "op": "POP"
    },
    "4797": {
      "op": "POP"
    },
    "4798": {
      "op": "POP"
    },
    "4799": {
      "jump": "o",
      "op": "JUMP"
    },
    "4800": {
      "op": "JUMPDEST"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4803": {
      "op": "DUP3"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4806": {
      "op": "DUP4"
    },
    "4807": {
      "op": "ADD"
    },
    "4808": {
      "op": "SLT"
    },
    "4809": {
      "op": "PUSH2",
      "value": "0x12D1"
    },
    "4812": {
      "op": "JUMPI"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4815": {
      "op": "DUP1"
    },
    "4816": {
      "op": "REVERT"
    },
    "4817": {
      "op": "JUMPDEST"
    },
    "4818": {
      "op": "DUP2"
    },
    "4819": {
      "op": "CALLDATALOAD"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4822": {
      "op": "PUSH2",
      "value": "0x12DE"
    },
    "4825": {
      "op": "DUP3"
    },
    "4826": {
      "op": "PUSH2",
      "value": "0x1B2A"
    },
    "4829": {
      "jump": "i",
      "op": "JUMP"
    },
    "4830": {
      "op": "JUMPDEST"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4833": {
      "op": "MLOAD"
    },
    "4834": {
      "op": "PUSH2",
      "value": "0x12EB"
    },
    "4837": {
      "op": "DUP3"
    },
    "4838": {
      "op": "DUP3"
    },
    "4839": {
      "op": "PUSH2",
      "value": "0x1BA1"
    },
    "4842": {
      "jump": "i",
      "op": "JUMP"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "DUP4"
    },
    "4845": {
      "op": "DUP2"
    },
    "4846": {
      "op": "MSTORE"
    },
    "4847": {
      "op": "DUP3"
    },
    "4848": {
      "op": "DUP2"
    },
    "4849": {
      "op": "ADD"
    },
    "4850": {
      "op": "SWAP2"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "op": "DUP6"
    },
    "4853": {
      "op": "DUP4"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4857": {
      "op": "DUP6"
    },
    "4858": {
      "op": "SWAP1"
    },
    "4859": {
      "op": "SHL"
    },
    "4860": {
      "op": "DUP8"
    },
    "4861": {
      "op": "ADD"
    },
    "4862": {
      "op": "DUP5"
    },
    "4863": {
      "op": "ADD"
    },
    "4864": {
      "op": "DUP9"
    },
    "4865": {
      "op": "LT"
    },
    "4866": {
      "op": "ISZERO"
    },
    "4867": {
      "op": "PUSH2",
      "value": "0x130B"
    },
    "4870": {
      "op": "JUMPI"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4873": {
      "op": "DUP1"
    },
    "4874": {
      "op": "REVERT"
    },
    "4875": {
      "op": "JUMPDEST"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4878": {
      "op": "JUMPDEST"
    },
    "4879": {
      "op": "DUP6"
    },
    "4880": {
      "op": "DUP2"
    },
    "4881": {
      "op": "LT"
    },
    "4882": {
      "op": "ISZERO"
    },
    "4883": {
      "op": "PUSH2",
      "value": "0x132A"
    },
    "4886": {
      "op": "JUMPI"
    },
    "4887": {
      "op": "DUP2"
    },
    "4888": {
      "op": "CALLDATALOAD"
    },
    "4889": {
      "op": "DUP5"
    },
    "4890": {
      "op": "MSTORE"
    },
    "4891": {
      "op": "SWAP3"
    },
    "4892": {
      "op": "DUP5"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "SWAP3"
    },
    "4895": {
      "op": "SWAP1"
    },
    "4896": {
      "op": "DUP5"
    },
    "4897": {
      "op": "ADD"
    },
    "4898": {
      "op": "SWAP1"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4901": {
      "op": "ADD"
    },
    "4902": {
      "op": "PUSH2",
      "value": "0x130E"
    },
    "4905": {
      "op": "JUMP"
    },
    "4906": {
      "op": "JUMPDEST"
    },
    "4907": {
      "op": "POP"
    },
    "4908": {
      "op": "SWAP1"
    },
    "4909": {
      "op": "SWAP8"
    },
    "4910": {
      "op": "SWAP7"
    },
    "4911": {
      "op": "POP"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "op": "POP"
    },
    "4914": {
      "op": "POP"
    },
    "4915": {
      "op": "POP"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "op": "POP"
    },
    "4918": {
      "jump": "o",
      "op": "JUMP"
    },
    "4919": {
      "op": "JUMPDEST"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4922": {
      "op": "DUP3"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4925": {
      "op": "DUP4"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "op": "SLT"
    },
    "4928": {
      "op": "PUSH2",
      "value": "0x1348"
    },
    "4931": {
      "op": "JUMPI"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4934": {
      "op": "DUP1"
    },
    "4935": {
      "op": "REVERT"
    },
    "4936": {
      "op": "JUMPDEST"
    },
    "4937": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "4940": {
      "op": "DUP4"
    },
    "4941": {
      "op": "DUP4"
    },
    "4942": {
      "op": "CALLDATALOAD"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4945": {
      "op": "DUP6"
    },
    "4946": {
      "op": "ADD"
    },
    "4947": {
      "op": "PUSH2",
      "value": "0x1262"
    },
    "4950": {
      "jump": "i",
      "op": "JUMP"
    },
    "4951": {
      "op": "JUMPDEST"
    },
    "4952": {
      "op": "SWAP4"
    },
    "4953": {
      "op": "SWAP3"
    },
    "4954": {
      "op": "POP"
    },
    "4955": {
      "op": "POP"
    },
    "4956": {
      "op": "POP"
    },
    "4957": {
      "jump": "o",
      "op": "JUMP"
    },
    "4958": {
      "op": "JUMPDEST"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4963": {
      "op": "DUP3"
    },
    "4964": {
      "op": "DUP5"
    },
    "4965": {
      "op": "SUB"
    },
    "4966": {
      "op": "SLT"
    },
    "4967": {
      "op": "ISZERO"
    },
    "4968": {
      "op": "PUSH2",
      "value": "0x1370"
    },
    "4971": {
      "op": "JUMPI"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4974": {
      "op": "DUP1"
    },
    "4975": {
      "op": "REVERT"
    },
    "4976": {
      "op": "JUMPDEST"
    },
    "4977": {
      "op": "DUP2"
    },
    "4978": {
      "op": "CALLDATALOAD"
    },
    "4979": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "4982": {
      "op": "DUP2"
    },
    "4983": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "4986": {
      "jump": "i",
      "op": "JUMP"
    },
    "4987": {
      "op": "JUMPDEST"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4992": {
      "op": "DUP3"
    },
    "4993": {
      "op": "DUP5"
    },
    "4994": {
      "op": "SUB"
    },
    "4995": {
      "op": "SLT"
    },
    "4996": {
      "op": "ISZERO"
    },
    "4997": {
      "op": "PUSH2",
      "value": "0x138D"
    },
    "5000": {
      "op": "JUMPI"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5003": {
      "op": "DUP1"
    },
    "5004": {
      "op": "REVERT"
    },
    "5005": {
      "op": "JUMPDEST"
    },
    "5006": {
      "op": "DUP2"
    },
    "5007": {
      "op": "MLOAD"
    },
    "5008": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "5011": {
      "op": "DUP2"
    },
    "5012": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5015": {
      "jump": "i",
      "op": "JUMP"
    },
    "5016": {
      "op": "JUMPDEST"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5019": {
      "op": "DUP1"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5022": {
      "op": "DUP4"
    },
    "5023": {
      "op": "DUP6"
    },
    "5024": {
      "op": "SUB"
    },
    "5025": {
      "op": "SLT"
    },
    "5026": {
      "op": "ISZERO"
    },
    "5027": {
      "op": "PUSH2",
      "value": "0x13AB"
    },
    "5030": {
      "op": "JUMPI"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5033": {
      "op": "DUP1"
    },
    "5034": {
      "op": "REVERT"
    },
    "5035": {
      "op": "JUMPDEST"
    },
    "5036": {
      "op": "DUP3"
    },
    "5037": {
      "op": "CALLDATALOAD"
    },
    "5038": {
      "op": "PUSH2",
      "value": "0x13B6"
    },
    "5041": {
      "op": "DUP2"
    },
    "5042": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5045": {
      "jump": "i",
      "op": "JUMP"
    },
    "5046": {
      "op": "JUMPDEST"
    },
    "5047": {
      "op": "SWAP2"
    },
    "5048": {
      "op": "POP"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5051": {
      "op": "DUP4"
    },
    "5052": {
      "op": "ADD"
    },
    "5053": {
      "op": "CALLDATALOAD"
    },
    "5054": {
      "op": "PUSH2",
      "value": "0x13C6"
    },
    "5057": {
      "op": "DUP2"
    },
    "5058": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5061": {
      "jump": "i",
      "op": "JUMP"
    },
    "5062": {
      "op": "JUMPDEST"
    },
    "5063": {
      "op": "DUP1"
    },
    "5064": {
      "op": "SWAP2"
    },
    "5065": {
      "op": "POP"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "SWAP3"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "op": "SWAP3"
    },
    "5070": {
      "op": "SWAP1"
    },
    "5071": {
      "op": "POP"
    },
    "5072": {
      "jump": "o",
      "op": "JUMP"
    },
    "5073": {
      "op": "JUMPDEST"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5076": {
      "op": "DUP1"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5079": {
      "op": "DUP1"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5084": {
      "op": "DUP7"
    },
    "5085": {
      "op": "DUP9"
    },
    "5086": {
      "op": "SUB"
    },
    "5087": {
      "op": "SLT"
    },
    "5088": {
      "op": "ISZERO"
    },
    "5089": {
      "op": "PUSH2",
      "value": "0x13E9"
    },
    "5092": {
      "op": "JUMPI"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5095": {
      "op": "DUP1"
    },
    "5096": {
      "op": "REVERT"
    },
    "5097": {
      "op": "JUMPDEST"
    },
    "5098": {
      "op": "DUP6"
    },
    "5099": {
      "op": "CALLDATALOAD"
    },
    "5100": {
      "op": "PUSH2",
      "value": "0x13F4"
    },
    "5103": {
      "op": "DUP2"
    },
    "5104": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5107": {
      "jump": "i",
      "op": "JUMP"
    },
    "5108": {
      "op": "JUMPDEST"
    },
    "5109": {
      "op": "SWAP5"
    },
    "5110": {
      "op": "POP"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5113": {
      "op": "DUP7"
    },
    "5114": {
      "op": "ADD"
    },
    "5115": {
      "op": "CALLDATALOAD"
    },
    "5116": {
      "op": "PUSH2",
      "value": "0x1404"
    },
    "5119": {
      "op": "DUP2"
    },
    "5120": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5123": {
      "jump": "i",
      "op": "JUMP"
    },
    "5124": {
      "op": "JUMPDEST"
    },
    "5125": {
      "op": "SWAP4"
    },
    "5126": {
      "op": "POP"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5129": {
      "op": "DUP7"
    },
    "5130": {
      "op": "ADD"
    },
    "5131": {
      "op": "CALLDATALOAD"
    },
    "5132": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5141": {
      "op": "DUP1"
    },
    "5142": {
      "op": "DUP3"
    },
    "5143": {
      "op": "GT"
    },
    "5144": {
      "op": "ISZERO"
    },
    "5145": {
      "op": "PUSH2",
      "value": "0x1421"
    },
    "5148": {
      "op": "JUMPI"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5151": {
      "op": "DUP1"
    },
    "5152": {
      "op": "REVERT"
    },
    "5153": {
      "op": "JUMPDEST"
    },
    "5154": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5157": {
      "op": "DUP10"
    },
    "5158": {
      "op": "DUP4"
    },
    "5159": {
      "op": "DUP11"
    },
    "5160": {
      "op": "ADD"
    },
    "5161": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "5164": {
      "jump": "i",
      "op": "JUMP"
    },
    "5165": {
      "op": "JUMPDEST"
    },
    "5166": {
      "op": "SWAP5"
    },
    "5167": {
      "op": "POP"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5170": {
      "op": "DUP9"
    },
    "5171": {
      "op": "ADD"
    },
    "5172": {
      "op": "CALLDATALOAD"
    },
    "5173": {
      "op": "SWAP2"
    },
    "5174": {
      "op": "POP"
    },
    "5175": {
      "op": "DUP1"
    },
    "5176": {
      "op": "DUP3"
    },
    "5177": {
      "op": "GT"
    },
    "5178": {
      "op": "ISZERO"
    },
    "5179": {
      "op": "PUSH2",
      "value": "0x1443"
    },
    "5182": {
      "op": "JUMPI"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5185": {
      "op": "DUP1"
    },
    "5186": {
      "op": "REVERT"
    },
    "5187": {
      "op": "JUMPDEST"
    },
    "5188": {
      "op": "PUSH2",
      "value": "0x144F"
    },
    "5191": {
      "op": "DUP10"
    },
    "5192": {
      "op": "DUP4"
    },
    "5193": {
      "op": "DUP11"
    },
    "5194": {
      "op": "ADD"
    },
    "5195": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "5198": {
      "jump": "i",
      "op": "JUMP"
    },
    "5199": {
      "op": "JUMPDEST"
    },
    "5200": {
      "op": "SWAP4"
    },
    "5201": {
      "op": "POP"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5204": {
      "op": "DUP9"
    },
    "5205": {
      "op": "ADD"
    },
    "5206": {
      "op": "CALLDATALOAD"
    },
    "5207": {
      "op": "SWAP2"
    },
    "5208": {
      "op": "POP"
    },
    "5209": {
      "op": "DUP1"
    },
    "5210": {
      "op": "DUP3"
    },
    "5211": {
      "op": "GT"
    },
    "5212": {
      "op": "ISZERO"
    },
    "5213": {
      "op": "PUSH2",
      "value": "0x1465"
    },
    "5216": {
      "op": "JUMPI"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5219": {
      "op": "DUP1"
    },
    "5220": {
      "op": "REVERT"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "POP"
    },
    "5223": {
      "op": "PUSH2",
      "value": "0x1472"
    },
    "5226": {
      "op": "DUP9"
    },
    "5227": {
      "op": "DUP3"
    },
    "5228": {
      "op": "DUP10"
    },
    "5229": {
      "op": "ADD"
    },
    "5230": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "5233": {
      "jump": "i",
      "op": "JUMP"
    },
    "5234": {
      "op": "JUMPDEST"
    },
    "5235": {
      "op": "SWAP2"
    },
    "5236": {
      "op": "POP"
    },
    "5237": {
      "op": "POP"
    },
    "5238": {
      "op": "SWAP3"
    },
    "5239": {
      "op": "SWAP6"
    },
    "5240": {
      "op": "POP"
    },
    "5241": {
      "op": "SWAP3"
    },
    "5242": {
      "op": "SWAP6"
    },
    "5243": {
      "op": "SWAP1"
    },
    "5244": {
      "op": "SWAP4"
    },
    "5245": {
      "op": "POP"
    },
    "5246": {
      "jump": "o",
      "op": "JUMP"
    },
    "5247": {
      "op": "JUMPDEST"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5250": {
      "op": "DUP1"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5253": {
      "op": "DUP1"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5258": {
      "op": "DUP7"
    },
    "5259": {
      "op": "DUP9"
    },
    "5260": {
      "op": "SUB"
    },
    "5261": {
      "op": "SLT"
    },
    "5262": {
      "op": "ISZERO"
    },
    "5263": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5266": {
      "op": "JUMPI"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5269": {
      "op": "DUP1"
    },
    "5270": {
      "op": "REVERT"
    },
    "5271": {
      "op": "JUMPDEST"
    },
    "5272": {
      "op": "DUP6"
    },
    "5273": {
      "op": "CALLDATALOAD"
    },
    "5274": {
      "op": "PUSH2",
      "value": "0x14A2"
    },
    "5277": {
      "op": "DUP2"
    },
    "5278": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5281": {
      "jump": "i",
      "op": "JUMP"
    },
    "5282": {
      "op": "JUMPDEST"
    },
    "5283": {
      "op": "SWAP5"
    },
    "5284": {
      "op": "POP"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5287": {
      "op": "DUP7"
    },
    "5288": {
      "op": "ADD"
    },
    "5289": {
      "op": "CALLDATALOAD"
    },
    "5290": {
      "op": "PUSH2",
      "value": "0x14B2"
    },
    "5293": {
      "op": "DUP2"
    },
    "5294": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5297": {
      "jump": "i",
      "op": "JUMP"
    },
    "5298": {
      "op": "JUMPDEST"
    },
    "5299": {
      "op": "SWAP4"
    },
    "5300": {
      "op": "POP"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5303": {
      "op": "DUP7"
    },
    "5304": {
      "op": "ADD"
    },
    "5305": {
      "op": "CALLDATALOAD"
    },
    "5306": {
      "op": "SWAP3"
    },
    "5307": {
      "op": "POP"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5310": {
      "op": "DUP7"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "CALLDATALOAD"
    },
    "5313": {
      "op": "SWAP2"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5317": {
      "op": "DUP7"
    },
    "5318": {
      "op": "ADD"
    },
    "5319": {
      "op": "CALLDATALOAD"
    },
    "5320": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5329": {
      "op": "DUP2"
    },
    "5330": {
      "op": "GT"
    },
    "5331": {
      "op": "ISZERO"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x14DC"
    },
    "5335": {
      "op": "JUMPI"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5338": {
      "op": "DUP1"
    },
    "5339": {
      "op": "REVERT"
    },
    "5340": {
      "op": "JUMPDEST"
    },
    "5341": {
      "op": "PUSH2",
      "value": "0x1472"
    },
    "5344": {
      "op": "DUP9"
    },
    "5345": {
      "op": "DUP3"
    },
    "5346": {
      "op": "DUP10"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "5351": {
      "jump": "i",
      "op": "JUMP"
    },
    "5352": {
      "op": "JUMPDEST"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5355": {
      "op": "DUP1"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5358": {
      "op": "DUP1"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5361": {
      "op": "DUP6"
    },
    "5362": {
      "op": "DUP8"
    },
    "5363": {
      "op": "SUB"
    },
    "5364": {
      "op": "SLT"
    },
    "5365": {
      "op": "ISZERO"
    },
    "5366": {
      "op": "PUSH2",
      "value": "0x14FE"
    },
    "5369": {
      "op": "JUMPI"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5372": {
      "op": "DUP1"
    },
    "5373": {
      "op": "REVERT"
    },
    "5374": {
      "op": "JUMPDEST"
    },
    "5375": {
      "op": "DUP5"
    },
    "5376": {
      "op": "CALLDATALOAD"
    },
    "5377": {
      "op": "PUSH2",
      "value": "0x1509"
    },
    "5380": {
      "op": "DUP2"
    },
    "5381": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5384": {
      "jump": "i",
      "op": "JUMP"
    },
    "5385": {
      "op": "JUMPDEST"
    },
    "5386": {
      "op": "SWAP4"
    },
    "5387": {
      "op": "POP"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5390": {
      "op": "DUP6"
    },
    "5391": {
      "op": "ADD"
    },
    "5392": {
      "op": "CALLDATALOAD"
    },
    "5393": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5402": {
      "op": "DUP1"
    },
    "5403": {
      "op": "DUP3"
    },
    "5404": {
      "op": "GT"
    },
    "5405": {
      "op": "ISZERO"
    },
    "5406": {
      "op": "PUSH2",
      "value": "0x1526"
    },
    "5409": {
      "op": "JUMPI"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5412": {
      "op": "DUP1"
    },
    "5413": {
      "op": "REVERT"
    },
    "5414": {
      "op": "JUMPDEST"
    },
    "5415": {
      "op": "PUSH2",
      "value": "0x1532"
    },
    "5418": {
      "op": "DUP9"
    },
    "5419": {
      "op": "DUP4"
    },
    "5420": {
      "op": "DUP10"
    },
    "5421": {
      "op": "ADD"
    },
    "5422": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "5425": {
      "jump": "i",
      "op": "JUMP"
    },
    "5426": {
      "op": "JUMPDEST"
    },
    "5427": {
      "op": "SWAP5"
    },
    "5428": {
      "op": "POP"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5431": {
      "op": "DUP8"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "CALLDATALOAD"
    },
    "5434": {
      "op": "SWAP2"
    },
    "5435": {
      "op": "POP"
    },
    "5436": {
      "op": "DUP1"
    },
    "5437": {
      "op": "DUP3"
    },
    "5438": {
      "op": "GT"
    },
    "5439": {
      "op": "ISZERO"
    },
    "5440": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5443": {
      "op": "JUMPI"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5446": {
      "op": "DUP1"
    },
    "5447": {
      "op": "REVERT"
    },
    "5448": {
      "op": "JUMPDEST"
    },
    "5449": {
      "op": "PUSH2",
      "value": "0x1554"
    },
    "5452": {
      "op": "DUP9"
    },
    "5453": {
      "op": "DUP4"
    },
    "5454": {
      "op": "DUP10"
    },
    "5455": {
      "op": "ADD"
    },
    "5456": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "5459": {
      "jump": "i",
      "op": "JUMP"
    },
    "5460": {
      "op": "JUMPDEST"
    },
    "5461": {
      "op": "SWAP4"
    },
    "5462": {
      "op": "POP"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5465": {
      "op": "DUP8"
    },
    "5466": {
      "op": "ADD"
    },
    "5467": {
      "op": "CALLDATALOAD"
    },
    "5468": {
      "op": "SWAP2"
    },
    "5469": {
      "op": "POP"
    },
    "5470": {
      "op": "DUP1"
    },
    "5471": {
      "op": "DUP3"
    },
    "5472": {
      "op": "GT"
    },
    "5473": {
      "op": "ISZERO"
    },
    "5474": {
      "op": "PUSH2",
      "value": "0x156A"
    },
    "5477": {
      "op": "JUMPI"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5480": {
      "op": "DUP1"
    },
    "5481": {
      "op": "REVERT"
    },
    "5482": {
      "op": "JUMPDEST"
    },
    "5483": {
      "op": "POP"
    },
    "5484": {
      "op": "PUSH2",
      "value": "0x1577"
    },
    "5487": {
      "op": "DUP8"
    },
    "5488": {
      "op": "DUP3"
    },
    "5489": {
      "op": "DUP9"
    },
    "5490": {
      "op": "ADD"
    },
    "5491": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "5494": {
      "jump": "i",
      "op": "JUMP"
    },
    "5495": {
      "op": "JUMPDEST"
    },
    "5496": {
      "op": "SWAP2"
    },
    "5497": {
      "op": "POP"
    },
    "5498": {
      "op": "POP"
    },
    "5499": {
      "op": "SWAP3"
    },
    "5500": {
      "op": "SWAP6"
    },
    "5501": {
      "op": "SWAP2"
    },
    "5502": {
      "op": "SWAP5"
    },
    "5503": {
      "op": "POP"
    },
    "5504": {
      "op": "SWAP3"
    },
    "5505": {
      "op": "POP"
    },
    "5506": {
      "jump": "o",
      "op": "JUMP"
    },
    "5507": {
      "op": "JUMPDEST"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5510": {
      "op": "DUP1"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5513": {
      "op": "DUP4"
    },
    "5514": {
      "op": "DUP6"
    },
    "5515": {
      "op": "SUB"
    },
    "5516": {
      "op": "SLT"
    },
    "5517": {
      "op": "ISZERO"
    },
    "5518": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5521": {
      "op": "JUMPI"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5524": {
      "op": "DUP1"
    },
    "5525": {
      "op": "REVERT"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "DUP3"
    },
    "5528": {
      "op": "CALLDATALOAD"
    },
    "5529": {
      "op": "PUSH2",
      "value": "0x15A1"
    },
    "5532": {
      "op": "DUP2"
    },
    "5533": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5536": {
      "jump": "i",
      "op": "JUMP"
    },
    "5537": {
      "op": "JUMPDEST"
    },
    "5538": {
      "op": "SWAP2"
    },
    "5539": {
      "op": "POP"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5542": {
      "op": "DUP4"
    },
    "5543": {
      "op": "ADD"
    },
    "5544": {
      "op": "CALLDATALOAD"
    },
    "5545": {
      "op": "DUP1"
    },
    "5546": {
      "op": "ISZERO"
    },
    "5547": {
      "op": "ISZERO"
    },
    "5548": {
      "op": "DUP2"
    },
    "5549": {
      "op": "EQ"
    },
    "5550": {
      "op": "PUSH2",
      "value": "0x13C6"
    },
    "5553": {
      "op": "JUMPI"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5556": {
      "op": "DUP1"
    },
    "5557": {
      "op": "REVERT"
    },
    "5558": {
      "op": "JUMPDEST"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5561": {
      "op": "DUP1"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5564": {
      "op": "DUP4"
    },
    "5565": {
      "op": "DUP6"
    },
    "5566": {
      "op": "SUB"
    },
    "5567": {
      "op": "SLT"
    },
    "5568": {
      "op": "ISZERO"
    },
    "5569": {
      "op": "PUSH2",
      "value": "0x15C9"
    },
    "5572": {
      "op": "JUMPI"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5575": {
      "op": "DUP1"
    },
    "5576": {
      "op": "REVERT"
    },
    "5577": {
      "op": "JUMPDEST"
    },
    "5578": {
      "op": "DUP3"
    },
    "5579": {
      "op": "CALLDATALOAD"
    },
    "5580": {
      "op": "PUSH2",
      "value": "0x15D4"
    },
    "5583": {
      "op": "DUP2"
    },
    "5584": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5587": {
      "jump": "i",
      "op": "JUMP"
    },
    "5588": {
      "op": "JUMPDEST"
    },
    "5589": {
      "op": "SWAP5"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5592": {
      "op": "SWAP4"
    },
    "5593": {
      "op": "SWAP1"
    },
    "5594": {
      "op": "SWAP4"
    },
    "5595": {
      "op": "ADD"
    },
    "5596": {
      "op": "CALLDATALOAD"
    },
    "5597": {
      "op": "SWAP4"
    },
    "5598": {
      "op": "POP"
    },
    "5599": {
      "op": "POP"
    },
    "5600": {
      "op": "POP"
    },
    "5601": {
      "jump": "o",
      "op": "JUMP"
    },
    "5602": {
      "op": "JUMPDEST"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5605": {
      "op": "DUP1"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5608": {
      "op": "DUP1"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5611": {
      "op": "DUP6"
    },
    "5612": {
      "op": "DUP8"
    },
    "5613": {
      "op": "SUB"
    },
    "5614": {
      "op": "SLT"
    },
    "5615": {
      "op": "ISZERO"
    },
    "5616": {
      "op": "PUSH2",
      "value": "0x15F8"
    },
    "5619": {
      "op": "JUMPI"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5622": {
      "op": "DUP1"
    },
    "5623": {
      "op": "REVERT"
    },
    "5624": {
      "op": "JUMPDEST"
    },
    "5625": {
      "op": "DUP5"
    },
    "5626": {
      "op": "CALLDATALOAD"
    },
    "5627": {
      "op": "PUSH2",
      "value": "0x1603"
    },
    "5630": {
      "op": "DUP2"
    },
    "5631": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5634": {
      "jump": "i",
      "op": "JUMP"
    },
    "5635": {
      "op": "JUMPDEST"
    },
    "5636": {
      "op": "SWAP4"
    },
    "5637": {
      "op": "POP"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5640": {
      "op": "DUP6"
    },
    "5641": {
      "op": "ADD"
    },
    "5642": {
      "op": "CALLDATALOAD"
    },
    "5643": {
      "op": "SWAP3"
    },
    "5644": {
      "op": "POP"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5647": {
      "op": "DUP6"
    },
    "5648": {
      "op": "ADD"
    },
    "5649": {
      "op": "CALLDATALOAD"
    },
    "5650": {
      "op": "SWAP2"
    },
    "5651": {
      "op": "POP"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5654": {
      "op": "DUP6"
    },
    "5655": {
      "op": "ADD"
    },
    "5656": {
      "op": "CALLDATALOAD"
    },
    "5657": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5666": {
      "op": "DUP2"
    },
    "5667": {
      "op": "GT"
    },
    "5668": {
      "op": "ISZERO"
    },
    "5669": {
      "op": "PUSH2",
      "value": "0x162D"
    },
    "5672": {
      "op": "JUMPI"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5675": {
      "op": "DUP1"
    },
    "5676": {
      "op": "REVERT"
    },
    "5677": {
      "op": "JUMPDEST"
    },
    "5678": {
      "op": "PUSH2",
      "value": "0x1577"
    },
    "5681": {
      "op": "DUP8"
    },
    "5682": {
      "op": "DUP3"
    },
    "5683": {
      "op": "DUP9"
    },
    "5684": {
      "op": "ADD"
    },
    "5685": {
      "op": "PUSH2",
      "value": "0x1337"
    },
    "5688": {
      "jump": "i",
      "op": "JUMP"
    },
    "5689": {
      "op": "JUMPDEST"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5692": {
      "op": "DUP1"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5695": {
      "op": "DUP4"
    },
    "5696": {
      "op": "DUP6"
    },
    "5697": {
      "op": "SUB"
    },
    "5698": {
      "op": "SLT"
    },
    "5699": {
      "op": "ISZERO"
    },
    "5700": {
      "op": "PUSH2",
      "value": "0x164C"
    },
    "5703": {
      "op": "JUMPI"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5706": {
      "op": "DUP1"
    },
    "5707": {
      "op": "REVERT"
    },
    "5708": {
      "op": "JUMPDEST"
    },
    "5709": {
      "op": "DUP3"
    },
    "5710": {
      "op": "CALLDATALOAD"
    },
    "5711": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5720": {
      "op": "DUP1"
    },
    "5721": {
      "op": "DUP3"
    },
    "5722": {
      "op": "GT"
    },
    "5723": {
      "op": "ISZERO"
    },
    "5724": {
      "op": "PUSH2",
      "value": "0x1664"
    },
    "5727": {
      "op": "JUMPI"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5730": {
      "op": "DUP1"
    },
    "5731": {
      "op": "REVERT"
    },
    "5732": {
      "op": "JUMPDEST"
    },
    "5733": {
      "op": "DUP2"
    },
    "5734": {
      "op": "DUP6"
    },
    "5735": {
      "op": "ADD"
    },
    "5736": {
      "op": "SWAP2"
    },
    "5737": {
      "op": "POP"
    },
    "5738": {
      "op": "DUP6"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5741": {
      "op": "DUP4"
    },
    "5742": {
      "op": "ADD"
    },
    "5743": {
      "op": "SLT"
    },
    "5744": {
      "op": "PUSH2",
      "value": "0x1678"
    },
    "5747": {
      "op": "JUMPI"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5750": {
      "op": "DUP1"
    },
    "5751": {
      "op": "REVERT"
    },
    "5752": {
      "op": "JUMPDEST"
    },
    "5753": {
      "op": "DUP2"
    },
    "5754": {
      "op": "CALLDATALOAD"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5757": {
      "op": "PUSH2",
      "value": "0x1685"
    },
    "5760": {
      "op": "DUP3"
    },
    "5761": {
      "op": "PUSH2",
      "value": "0x1B2A"
    },
    "5764": {
      "jump": "i",
      "op": "JUMP"
    },
    "5765": {
      "op": "JUMPDEST"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5768": {
      "op": "MLOAD"
    },
    "5769": {
      "op": "PUSH2",
      "value": "0x1692"
    },
    "5772": {
      "op": "DUP3"
    },
    "5773": {
      "op": "DUP3"
    },
    "5774": {
      "op": "PUSH2",
      "value": "0x1BA1"
    },
    "5777": {
      "jump": "i",
      "op": "JUMP"
    },
    "5778": {
      "op": "JUMPDEST"
    },
    "5779": {
      "op": "DUP4"
    },
    "5780": {
      "op": "DUP2"
    },
    "5781": {
      "op": "MSTORE"
    },
    "5782": {
      "op": "DUP3"
    },
    "5783": {
      "op": "DUP2"
    },
    "5784": {
      "op": "ADD"
    },
    "5785": {
      "op": "SWAP2"
    },
    "5786": {
      "op": "POP"
    },
    "5787": {
      "op": "DUP6"
    },
    "5788": {
      "op": "DUP4"
    },
    "5789": {
      "op": "ADD"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5792": {
      "op": "DUP6"
    },
    "5793": {
      "op": "SWAP1"
    },
    "5794": {
      "op": "SHL"
    },
    "5795": {
      "op": "DUP8"
    },
    "5796": {
      "op": "ADD"
    },
    "5797": {
      "op": "DUP5"
    },
    "5798": {
      "op": "ADD"
    },
    "5799": {
      "op": "DUP12"
    },
    "5800": {
      "op": "LT"
    },
    "5801": {
      "op": "ISZERO"
    },
    "5802": {
      "op": "PUSH2",
      "value": "0x16B2"
    },
    "5805": {
      "op": "JUMPI"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5808": {
      "op": "DUP1"
    },
    "5809": {
      "op": "REVERT"
    },
    "5810": {
      "op": "JUMPDEST"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5813": {
      "op": "SWAP7"
    },
    "5814": {
      "op": "POP"
    },
    "5815": {
      "op": "JUMPDEST"
    },
    "5816": {
      "op": "DUP5"
    },
    "5817": {
      "op": "DUP8"
    },
    "5818": {
      "op": "LT"
    },
    "5819": {
      "op": "ISZERO"
    },
    "5820": {
      "op": "PUSH2",
      "value": "0x16DE"
    },
    "5823": {
      "op": "JUMPI"
    },
    "5824": {
      "op": "DUP1"
    },
    "5825": {
      "op": "CALLDATALOAD"
    },
    "5826": {
      "op": "PUSH2",
      "value": "0x16CA"
    },
    "5829": {
      "op": "DUP2"
    },
    "5830": {
      "op": "PUSH2",
      "value": "0x1CD1"
    },
    "5833": {
      "jump": "i",
      "op": "JUMP"
    },
    "5834": {
      "op": "JUMPDEST"
    },
    "5835": {
      "op": "DUP4"
    },
    "5836": {
      "op": "MSTORE"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5839": {
      "op": "SWAP7"
    },
    "5840": {
      "op": "SWAP1"
    },
    "5841": {
      "op": "SWAP7"
    },
    "5842": {
      "op": "ADD"
    },
    "5843": {
      "op": "SWAP6"
    },
    "5844": {
      "op": "SWAP2"
    },
    "5845": {
      "op": "DUP4"
    },
    "5846": {
      "op": "ADD"
    },
    "5847": {
      "op": "SWAP2"
    },
    "5848": {
      "op": "DUP4"
    },
    "5849": {
      "op": "ADD"
    },
    "5850": {
      "op": "PUSH2",
      "value": "0x16B7"
    },
    "5853": {
      "op": "JUMP"
    },
    "5854": {
      "op": "JUMPDEST"
    },
    "5855": {
      "op": "POP"
    },
    "5856": {
      "op": "SWAP7"
    },
    "5857": {
      "op": "POP"
    },
    "5858": {
      "op": "POP"
    },
    "5859": {
      "op": "DUP7"
    },
    "5860": {
      "op": "ADD"
    },
    "5861": {
      "op": "CALLDATALOAD"
    },
    "5862": {
      "op": "SWAP3"
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "op": "DUP1"
    },
    "5866": {
      "op": "DUP3"
    },
    "5867": {
      "op": "GT"
    },
    "5868": {
      "op": "ISZERO"
    },
    "5869": {
      "op": "PUSH2",
      "value": "0x16F5"
    },
    "5872": {
      "op": "JUMPI"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5875": {
      "op": "DUP1"
    },
    "5876": {
      "op": "REVERT"
    },
    "5877": {
      "op": "JUMPDEST"
    },
    "5878": {
      "op": "POP"
    },
    "5879": {
      "op": "PUSH2",
      "value": "0x1702"
    },
    "5882": {
      "op": "DUP6"
    },
    "5883": {
      "op": "DUP3"
    },
    "5884": {
      "op": "DUP7"
    },
    "5885": {
      "op": "ADD"
    },
    "5886": {
      "op": "PUSH2",
      "value": "0x12C0"
    },
    "5889": {
      "jump": "i",
      "op": "JUMP"
    },
    "5890": {
      "op": "JUMPDEST"
    },
    "5891": {
      "op": "SWAP2"
    },
    "5892": {
      "op": "POP"
    },
    "5893": {
      "op": "POP"
    },
    "5894": {
      "op": "SWAP3"
    },
    "5895": {
      "op": "POP"
    },
    "5896": {
      "op": "SWAP3"
    },
    "5897": {
      "op": "SWAP1"
    },
    "5898": {
      "op": "POP"
    },
    "5899": {
      "jump": "o",
      "op": "JUMP"
    },
    "5900": {
      "op": "JUMPDEST"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5905": {
      "op": "DUP3"
    },
    "5906": {
      "op": "DUP5"
    },
    "5907": {
      "op": "SUB"
    },
    "5908": {
      "op": "SLT"
    },
    "5909": {
      "op": "ISZERO"
    },
    "5910": {
      "op": "PUSH2",
      "value": "0x171E"
    },
    "5913": {
      "op": "JUMPI"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5916": {
      "op": "DUP1"
    },
    "5917": {
      "op": "REVERT"
    },
    "5918": {
      "op": "JUMPDEST"
    },
    "5919": {
      "op": "DUP2"
    },
    "5920": {
      "op": "CALLDATALOAD"
    },
    "5921": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "5924": {
      "op": "DUP2"
    },
    "5925": {
      "op": "PUSH2",
      "value": "0x1CE9"
    },
    "5928": {
      "jump": "i",
      "op": "JUMP"
    },
    "5929": {
      "op": "JUMPDEST"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5934": {
      "op": "DUP3"
    },
    "5935": {
      "op": "DUP5"
    },
    "5936": {
      "op": "SUB"
    },
    "5937": {
      "op": "SLT"
    },
    "5938": {
      "op": "ISZERO"
    },
    "5939": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "5942": {
      "op": "JUMPI"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5945": {
      "op": "DUP1"
    },
    "5946": {
      "op": "REVERT"
    },
    "5947": {
      "op": "JUMPDEST"
    },
    "5948": {
      "op": "DUP2"
    },
    "5949": {
      "op": "MLOAD"
    },
    "5950": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "5953": {
      "op": "DUP2"
    },
    "5954": {
      "op": "PUSH2",
      "value": "0x1CE9"
    },
    "5957": {
      "jump": "i",
      "op": "JUMP"
    },
    "5958": {
      "op": "JUMPDEST"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5963": {
      "op": "DUP3"
    },
    "5964": {
      "op": "DUP5"
    },
    "5965": {
      "op": "SUB"
    },
    "5966": {
      "op": "SLT"
    },
    "5967": {
      "op": "ISZERO"
    },
    "5968": {
      "op": "PUSH2",
      "value": "0x1758"
    },
    "5971": {
      "op": "JUMPI"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5974": {
      "op": "DUP1"
    },
    "5975": {
      "op": "REVERT"
    },
    "5976": {
      "op": "JUMPDEST"
    },
    "5977": {
      "op": "DUP2"
    },
    "5978": {
      "op": "CALLDATALOAD"
    },
    "5979": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5988": {
      "op": "DUP2"
    },
    "5989": {
      "op": "GT"
    },
    "5990": {
      "op": "ISZERO"
    },
    "5991": {
      "op": "PUSH2",
      "value": "0x176F"
    },
    "5994": {
      "op": "JUMPI"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5997": {
      "op": "DUP1"
    },
    "5998": {
      "op": "REVERT"
    },
    "5999": {
      "op": "JUMPDEST"
    },
    "6000": {
      "op": "DUP3"
    },
    "6001": {
      "op": "ADD"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6004": {
      "op": "DUP2"
    },
    "6005": {
      "op": "ADD"
    },
    "6006": {
      "op": "DUP5"
    },
    "6007": {
      "op": "SGT"
    },
    "6008": {
      "op": "PUSH2",
      "value": "0x1780"
    },
    "6011": {
      "op": "JUMPI"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6014": {
      "op": "DUP1"
    },
    "6015": {
      "op": "REVERT"
    },
    "6016": {
      "op": "JUMPDEST"
    },
    "6017": {
      "op": "PUSH2",
      "value": "0x178F"
    },
    "6020": {
      "op": "DUP5"
    },
    "6021": {
      "op": "DUP3"
    },
    "6022": {
      "op": "CALLDATALOAD"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6025": {
      "op": "DUP5"
    },
    "6026": {
      "op": "ADD"
    },
    "6027": {
      "op": "PUSH2",
      "value": "0x1262"
    },
    "6030": {
      "jump": "i",
      "op": "JUMP"
    },
    "6031": {
      "op": "JUMPDEST"
    },
    "6032": {
      "op": "SWAP5"
    },
    "6033": {
      "op": "SWAP4"
    },
    "6034": {
      "op": "POP"
    },
    "6035": {
      "op": "POP"
    },
    "6036": {
      "op": "POP"
    },
    "6037": {
      "op": "POP"
    },
    "6038": {
      "jump": "o",
      "op": "JUMP"
    },
    "6039": {
      "op": "JUMPDEST"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6044": {
      "op": "DUP3"
    },
    "6045": {
      "op": "DUP5"
    },
    "6046": {
      "op": "SUB"
    },
    "6047": {
      "op": "SLT"
    },
    "6048": {
      "op": "ISZERO"
    },
    "6049": {
      "op": "PUSH2",
      "value": "0x17A9"
    },
    "6052": {
      "op": "JUMPI"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6055": {
      "op": "DUP1"
    },
    "6056": {
      "op": "REVERT"
    },
    "6057": {
      "op": "JUMPDEST"
    },
    "6058": {
      "op": "POP"
    },
    "6059": {
      "op": "CALLDATALOAD"
    },
    "6060": {
      "op": "SWAP2"
    },
    "6061": {
      "op": "SWAP1"
    },
    "6062": {
      "op": "POP"
    },
    "6063": {
      "jump": "o",
      "op": "JUMP"
    },
    "6064": {
      "op": "JUMPDEST"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6067": {
      "op": "DUP2"
    },
    "6068": {
      "op": "MLOAD"
    },
    "6069": {
      "op": "DUP1"
    },
    "6070": {
      "op": "DUP5"
    },
    "6071": {
      "op": "MSTORE"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6074": {
      "op": "DUP1"
    },
    "6075": {
      "op": "DUP6"
    },
    "6076": {
      "op": "ADD"
    },
    "6077": {
      "op": "SWAP5"
    },
    "6078": {
      "op": "POP"
    },
    "6079": {
      "op": "DUP1"
    },
    "6080": {
      "op": "DUP5"
    },
    "6081": {
      "op": "ADD"
    },
    "6082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6084": {
      "op": "JUMPDEST"
    },
    "6085": {
      "op": "DUP4"
    },
    "6086": {
      "op": "DUP2"
    },
    "6087": {
      "op": "LT"
    },
    "6088": {
      "op": "ISZERO"
    },
    "6089": {
      "op": "PUSH2",
      "value": "0x17E0"
    },
    "6092": {
      "op": "JUMPI"
    },
    "6093": {
      "op": "DUP2"
    },
    "6094": {
      "op": "MLOAD"
    },
    "6095": {
      "op": "DUP8"
    },
    "6096": {
      "op": "MSTORE"
    },
    "6097": {
      "op": "SWAP6"
    },
    "6098": {
      "op": "DUP3"
    },
    "6099": {
      "op": "ADD"
    },
    "6100": {
      "op": "SWAP6"
    },
    "6101": {
      "op": "SWAP1"
    },
    "6102": {
      "op": "DUP3"
    },
    "6103": {
      "op": "ADD"
    },
    "6104": {
      "op": "SWAP1"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6107": {
      "op": "ADD"
    },
    "6108": {
      "op": "PUSH2",
      "value": "0x17C4"
    },
    "6111": {
      "op": "JUMP"
    },
    "6112": {
      "op": "JUMPDEST"
    },
    "6113": {
      "op": "POP"
    },
    "6114": {
      "op": "SWAP5"
    },
    "6115": {
      "op": "SWAP6"
    },
    "6116": {
      "op": "SWAP5"
    },
    "6117": {
      "op": "POP"
    },
    "6118": {
      "op": "POP"
    },
    "6119": {
      "op": "POP"
    },
    "6120": {
      "op": "POP"
    },
    "6121": {
      "op": "POP"
    },
    "6122": {
      "jump": "o",
      "op": "JUMP"
    },
    "6123": {
      "op": "JUMPDEST"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6126": {
      "op": "DUP2"
    },
    "6127": {
      "op": "MLOAD"
    },
    "6128": {
      "op": "DUP1"
    },
    "6129": {
      "op": "DUP5"
    },
    "6130": {
      "op": "MSTORE"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6133": {
      "op": "JUMPDEST"
    },
    "6134": {
      "op": "DUP2"
    },
    "6135": {
      "op": "DUP2"
    },
    "6136": {
      "op": "LT"
    },
    "6137": {
      "op": "ISZERO"
    },
    "6138": {
      "op": "PUSH2",
      "value": "0x1811"
    },
    "6141": {
      "op": "JUMPI"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6144": {
      "op": "DUP2"
    },
    "6145": {
      "op": "DUP6"
    },
    "6146": {
      "op": "ADD"
    },
    "6147": {
      "op": "DUP2"
    },
    "6148": {
      "op": "ADD"
    },
    "6149": {
      "op": "MLOAD"
    },
    "6150": {
      "op": "DUP7"
    },
    "6151": {
      "op": "DUP4"
    },
    "6152": {
      "op": "ADD"
    },
    "6153": {
      "op": "DUP3"
    },
    "6154": {
      "op": "ADD"
    },
    "6155": {
      "op": "MSTORE"
    },
    "6156": {
      "op": "ADD"
    },
    "6157": {
      "op": "PUSH2",
      "value": "0x17F5"
    },
    "6160": {
      "op": "JUMP"
    },
    "6161": {
      "op": "JUMPDEST"
    },
    "6162": {
      "op": "DUP2"
    },
    "6163": {
      "op": "DUP2"
    },
    "6164": {
      "op": "GT"
    },
    "6165": {
      "op": "ISZERO"
    },
    "6166": {
      "op": "PUSH2",
      "value": "0x1823"
    },
    "6169": {
      "op": "JUMPI"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6174": {
      "op": "DUP4"
    },
    "6175": {
      "op": "DUP8"
    },
    "6176": {
      "op": "ADD"
    },
    "6177": {
      "op": "ADD"
    },
    "6178": {
      "op": "MSTORE"
    },
    "6179": {
      "op": "JUMPDEST"
    },
    "6180": {
      "op": "POP"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6183": {
      "op": "ADD"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6186": {
      "op": "NOT"
    },
    "6187": {
      "op": "AND"
    },
    "6188": {
      "op": "SWAP3"
    },
    "6189": {
      "op": "SWAP1"
    },
    "6190": {
      "op": "SWAP3"
    },
    "6191": {
      "op": "ADD"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6194": {
      "op": "ADD"
    },
    "6195": {
      "op": "SWAP3"
    },
    "6196": {
      "op": "SWAP2"
    },
    "6197": {
      "op": "POP"
    },
    "6198": {
      "op": "POP"
    },
    "6199": {
      "jump": "o",
      "op": "JUMP"
    },
    "6200": {
      "op": "JUMPDEST"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6207": {
      "op": "SHL"
    },
    "6208": {
      "op": "SUB"
    },
    "6209": {
      "op": "DUP7"
    },
    "6210": {
      "op": "DUP2"
    },
    "6211": {
      "op": "AND"
    },
    "6212": {
      "op": "DUP3"
    },
    "6213": {
      "op": "MSTORE"
    },
    "6214": {
      "op": "DUP6"
    },
    "6215": {
      "op": "AND"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6218": {
      "op": "DUP3"
    },
    "6219": {
      "op": "ADD"
    },
    "6220": {
      "op": "MSTORE"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6225": {
      "op": "DUP3"
    },
    "6226": {
      "op": "ADD"
    },
    "6227": {
      "op": "DUP2"
    },
    "6228": {
      "op": "SWAP1"
    },
    "6229": {
      "op": "MSTORE"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6232": {
      "op": "SWAP1"
    },
    "6233": {
      "op": "PUSH2",
      "value": "0x1864"
    },
    "6236": {
      "op": "SWAP1"
    },
    "6237": {
      "op": "DUP4"
    },
    "6238": {
      "op": "ADD"
    },
    "6239": {
      "op": "DUP7"
    },
    "6240": {
      "op": "PUSH2",
      "value": "0x17B0"
    },
    "6243": {
      "jump": "i",
      "op": "JUMP"
    },
    "6244": {
      "op": "JUMPDEST"
    },
    "6245": {
      "op": "DUP3"
    },
    "6246": {
      "op": "DUP2"
    },
    "6247": {
      "op": "SUB"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6250": {
      "op": "DUP5"
    },
    "6251": {
      "op": "ADD"
    },
    "6252": {
      "op": "MSTORE"
    },
    "6253": {
      "op": "PUSH2",
      "value": "0x1876"
    },
    "6256": {
      "op": "DUP2"
    },
    "6257": {
      "op": "DUP7"
    },
    "6258": {
      "op": "PUSH2",
      "value": "0x17B0"
    },
    "6261": {
      "jump": "i",
      "op": "JUMP"
    },
    "6262": {
      "op": "JUMPDEST"
    },
    "6263": {
      "op": "SWAP1"
    },
    "6264": {
      "op": "POP"
    },
    "6265": {
      "op": "DUP3"
    },
    "6266": {
      "op": "DUP2"
    },
    "6267": {
      "op": "SUB"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6270": {
      "op": "DUP5"
    },
    "6271": {
      "op": "ADD"
    },
    "6272": {
      "op": "MSTORE"
    },
    "6273": {
      "op": "PUSH2",
      "value": "0x188A"
    },
    "6276": {
      "op": "DUP2"
    },
    "6277": {
      "op": "DUP6"
    },
    "6278": {
      "op": "PUSH2",
      "value": "0x17EB"
    },
    "6281": {
      "jump": "i",
      "op": "JUMP"
    },
    "6282": {
      "op": "JUMPDEST"
    },
    "6283": {
      "op": "SWAP9"
    },
    "6284": {
      "op": "SWAP8"
    },
    "6285": {
      "op": "POP"
    },
    "6286": {
      "op": "POP"
    },
    "6287": {
      "op": "POP"
    },
    "6288": {
      "op": "POP"
    },
    "6289": {
      "op": "POP"
    },
    "6290": {
      "op": "POP"
    },
    "6291": {
      "op": "POP"
    },
    "6292": {
      "op": "POP"
    },
    "6293": {
      "jump": "o",
      "op": "JUMP"
    },
    "6294": {
      "op": "JUMPDEST"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6301": {
      "op": "SHL"
    },
    "6302": {
      "op": "SUB"
    },
    "6303": {
      "op": "DUP7"
    },
    "6304": {
      "op": "DUP2"
    },
    "6305": {
      "op": "AND"
    },
    "6306": {
      "op": "DUP3"
    },
    "6307": {
      "op": "MSTORE"
    },
    "6308": {
      "op": "DUP6"
    },
    "6309": {
      "op": "AND"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6312": {
      "op": "DUP3"
    },
    "6313": {
      "op": "ADD"
    },
    "6314": {
      "op": "MSTORE"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6317": {
      "op": "DUP2"
    },
    "6318": {
      "op": "ADD"
    },
    "6319": {
      "op": "DUP5"
    },
    "6320": {
      "op": "SWAP1"
    },
    "6321": {
      "op": "MSTORE"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6324": {
      "op": "DUP2"
    },
    "6325": {
      "op": "ADD"
    },
    "6326": {
      "op": "DUP4"
    },
    "6327": {
      "op": "SWAP1"
    },
    "6328": {
      "op": "MSTORE"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6333": {
      "op": "DUP3"
    },
    "6334": {
      "op": "ADD"
    },
    "6335": {
      "op": "DUP2"
    },
    "6336": {
      "op": "SWAP1"
    },
    "6337": {
      "op": "MSTORE"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6340": {
      "op": "SWAP1"
    },
    "6341": {
      "op": "PUSH2",
      "value": "0x18D0"
    },
    "6344": {
      "op": "SWAP1"
    },
    "6345": {
      "op": "DUP4"
    },
    "6346": {
      "op": "ADD"
    },
    "6347": {
      "op": "DUP5"
    },
    "6348": {
      "op": "PUSH2",
      "value": "0x17EB"
    },
    "6351": {
      "jump": "i",
      "op": "JUMP"
    },
    "6352": {
      "op": "JUMPDEST"
    },
    "6353": {
      "op": "SWAP8"
    },
    "6354": {
      "op": "SWAP7"
    },
    "6355": {
      "op": "POP"
    },
    "6356": {
      "op": "POP"
    },
    "6357": {
      "op": "POP"
    },
    "6358": {
      "op": "POP"
    },
    "6359": {
      "op": "POP"
    },
    "6360": {
      "op": "POP"
    },
    "6361": {
      "op": "POP"
    },
    "6362": {
      "jump": "o",
      "op": "JUMP"
    },
    "6363": {
      "op": "JUMPDEST"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6366": {
      "op": "DUP2"
    },
    "6367": {
      "op": "MSTORE"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6370": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6375": {
      "op": "DUP4"
    },
    "6376": {
      "op": "ADD"
    },
    "6377": {
      "op": "DUP5"
    },
    "6378": {
      "op": "PUSH2",
      "value": "0x17B0"
    },
    "6381": {
      "jump": "i",
      "op": "JUMP"
    },
    "6382": {
      "op": "JUMPDEST"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6385": {
      "op": "DUP2"
    },
    "6386": {
      "op": "MSTORE"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6389": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6394": {
      "op": "DUP4"
    },
    "6395": {
      "op": "ADD"
    },
    "6396": {
      "op": "DUP6"
    },
    "6397": {
      "op": "PUSH2",
      "value": "0x17B0"
    },
    "6400": {
      "jump": "i",
      "op": "JUMP"
    },
    "6401": {
      "op": "JUMPDEST"
    },
    "6402": {
      "op": "DUP3"
    },
    "6403": {
      "op": "DUP2"
    },
    "6404": {
      "op": "SUB"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6407": {
      "op": "DUP5"
    },
    "6408": {
      "op": "ADD"
    },
    "6409": {
      "op": "MSTORE"
    },
    "6410": {
      "op": "PUSH2",
      "value": "0x1913"
    },
    "6413": {
      "op": "DUP2"
    },
    "6414": {
      "op": "DUP6"
    },
    "6415": {
      "op": "PUSH2",
      "value": "0x17B0"
    },
    "6418": {
      "jump": "i",
      "op": "JUMP"
    },
    "6419": {
      "op": "JUMPDEST"
    },
    "6420": {
      "op": "SWAP6"
    },
    "6421": {
      "op": "SWAP5"
    },
    "6422": {
      "op": "POP"
    },
    "6423": {
      "op": "POP"
    },
    "6424": {
      "op": "POP"
    },
    "6425": {
      "op": "POP"
    },
    "6426": {
      "op": "POP"
    },
    "6427": {
      "jump": "o",
      "op": "JUMP"
    },
    "6428": {
      "op": "JUMPDEST"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6431": {
      "op": "DUP2"
    },
    "6432": {
      "op": "MSTORE"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6435": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6440": {
      "op": "DUP4"
    },
    "6441": {
      "op": "ADD"
    },
    "6442": {
      "op": "DUP5"
    },
    "6443": {
      "op": "PUSH2",
      "value": "0x17EB"
    },
    "6446": {
      "jump": "i",
      "op": "JUMP"
    },
    "6447": {
      "op": "JUMPDEST"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6450": {
      "op": "DUP1"
    },
    "6451": {
      "op": "DUP3"
    },
    "6452": {
      "op": "MSTORE"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6455": {
      "op": "SWAP1"
    },
    "6456": {
      "op": "DUP3"
    },
    "6457": {
      "op": "ADD"
    },
    "6458": {
      "op": "MSTORE"
    },
    "6459": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6494": {
      "op": "DUP3"
    },
    "6495": {
      "op": "ADD"
    },
    "6496": {
      "op": "MSTORE"
    },
    "6497": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6508": {
      "op": "SHL"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6511": {
      "op": "DUP3"
    },
    "6512": {
      "op": "ADD"
    },
    "6513": {
      "op": "MSTORE"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6516": {
      "op": "ADD"
    },
    "6517": {
      "op": "SWAP1"
    },
    "6518": {
      "jump": "o",
      "op": "JUMP"
    },
    "6519": {
      "op": "JUMPDEST"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6522": {
      "op": "DUP1"
    },
    "6523": {
      "op": "DUP3"
    },
    "6524": {
      "op": "MSTORE"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6527": {
      "op": "SWAP1"
    },
    "6528": {
      "op": "DUP3"
    },
    "6529": {
      "op": "ADD"
    },
    "6530": {
      "op": "MSTORE"
    },
    "6531": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6566": {
      "op": "DUP3"
    },
    "6567": {
      "op": "ADD"
    },
    "6568": {
      "op": "MSTORE"
    },
    "6569": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6583": {
      "op": "SHL"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6586": {
      "op": "DUP3"
    },
    "6587": {
      "op": "ADD"
    },
    "6588": {
      "op": "MSTORE"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6591": {
      "op": "ADD"
    },
    "6592": {
      "op": "SWAP1"
    },
    "6593": {
      "jump": "o",
      "op": "JUMP"
    },
    "6594": {
      "op": "JUMPDEST"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6597": {
      "op": "DUP1"
    },
    "6598": {
      "op": "DUP3"
    },
    "6599": {
      "op": "MSTORE"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6602": {
      "op": "SWAP1"
    },
    "6603": {
      "op": "DUP3"
    },
    "6604": {
      "op": "ADD"
    },
    "6605": {
      "op": "MSTORE"
    },
    "6606": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865204F7261636C65206F70657261746F72206D617920706572"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6641": {
      "op": "DUP3"
    },
    "6642": {
      "op": "ADD"
    },
    "6643": {
      "op": "MSTORE"
    },
    "6644": {
      "op": "PUSH16",
      "value": "0x3337B936903A3434B99030B1BA34B7B7"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "6663": {
      "op": "SHL"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6666": {
      "op": "DUP3"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "MSTORE"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6671": {
      "op": "ADD"
    },
    "6672": {
      "op": "SWAP1"
    },
    "6673": {
      "jump": "o",
      "op": "JUMP"
    },
    "6674": {
      "op": "JUMPDEST"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6677": {
      "op": "DUP1"
    },
    "6678": {
      "op": "DUP3"
    },
    "6679": {
      "op": "MSTORE"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6682": {
      "op": "SWAP1"
    },
    "6683": {
      "op": "DUP3"
    },
    "6684": {
      "op": "ADD"
    },
    "6685": {
      "op": "MSTORE"
    },
    "6686": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "6719": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6721": {
      "op": "DUP3"
    },
    "6722": {
      "op": "ADD"
    },
    "6723": {
      "op": "MSTORE"
    },
    "6724": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6732": {
      "op": "SHL"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6735": {
      "op": "DUP3"
    },
    "6736": {
      "op": "ADD"
    },
    "6737": {
      "op": "MSTORE"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6740": {
      "op": "ADD"
    },
    "6741": {
      "op": "SWAP1"
    },
    "6742": {
      "jump": "o",
      "op": "JUMP"
    },
    "6743": {
      "op": "JUMPDEST"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6746": {
      "op": "DUP1"
    },
    "6747": {
      "op": "DUP3"
    },
    "6748": {
      "op": "MSTORE"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6751": {
      "op": "SWAP1"
    },
    "6752": {
      "op": "DUP3"
    },
    "6753": {
      "op": "ADD"
    },
    "6754": {
      "op": "MSTORE"
    },
    "6755": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6790": {
      "op": "DUP3"
    },
    "6791": {
      "op": "ADD"
    },
    "6792": {
      "op": "MSTORE"
    },
    "6793": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "6806": {
      "op": "SHL"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6809": {
      "op": "DUP3"
    },
    "6810": {
      "op": "ADD"
    },
    "6811": {
      "op": "MSTORE"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6814": {
      "op": "ADD"
    },
    "6815": {
      "op": "SWAP1"
    },
    "6816": {
      "jump": "o",
      "op": "JUMP"
    },
    "6817": {
      "op": "JUMPDEST"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6820": {
      "op": "DUP1"
    },
    "6821": {
      "op": "DUP3"
    },
    "6822": {
      "op": "MSTORE"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6825": {
      "op": "SWAP1"
    },
    "6826": {
      "op": "DUP3"
    },
    "6827": {
      "op": "ADD"
    },
    "6828": {
      "op": "MSTORE"
    },
    "6829": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6864": {
      "op": "DUP3"
    },
    "6865": {
      "op": "ADD"
    },
    "6866": {
      "op": "MSTORE"
    },
    "6867": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "6878": {
      "op": "SHL"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6881": {
      "op": "DUP3"
    },
    "6882": {
      "op": "ADD"
    },
    "6883": {
      "op": "MSTORE"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6886": {
      "op": "ADD"
    },
    "6887": {
      "op": "SWAP1"
    },
    "6888": {
      "jump": "o",
      "op": "JUMP"
    },
    "6889": {
      "op": "JUMPDEST"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6892": {
      "op": "DUP1"
    },
    "6893": {
      "op": "DUP3"
    },
    "6894": {
      "op": "MSTORE"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6897": {
      "op": "SWAP1"
    },
    "6898": {
      "op": "DUP3"
    },
    "6899": {
      "op": "ADD"
    },
    "6900": {
      "op": "MSTORE"
    },
    "6901": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6936": {
      "op": "DUP3"
    },
    "6937": {
      "op": "ADD"
    },
    "6938": {
      "op": "MSTORE"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6943": {
      "op": "SHL"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6946": {
      "op": "DUP3"
    },
    "6947": {
      "op": "ADD"
    },
    "6948": {
      "op": "MSTORE"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6951": {
      "op": "ADD"
    },
    "6952": {
      "op": "SWAP1"
    },
    "6953": {
      "jump": "o",
      "op": "JUMP"
    },
    "6954": {
      "op": "JUMPDEST"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6957": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6966": {
      "op": "DUP3"
    },
    "6967": {
      "op": "GT"
    },
    "6968": {
      "op": "ISZERO"
    },
    "6969": {
      "op": "PUSH2",
      "value": "0x1B44"
    },
    "6972": {
      "op": "JUMPI"
    },
    "6973": {
      "op": "PUSH2",
      "value": "0x1B44"
    },
    "6976": {
      "op": "PUSH2",
      "value": "0x1C15"
    },
    "6979": {
      "jump": "i",
      "op": "JUMP"
    },
    "6980": {
      "op": "JUMPDEST"
    },
    "6981": {
      "op": "POP"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6984": {
      "op": "SHL"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6987": {
      "op": "ADD"
    },
    "6988": {
      "op": "SWAP1"
    },
    "6989": {
      "jump": "o",
      "op": "JUMP"
    },
    "6990": {
      "op": "JUMPDEST"
    },
    "6991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6993": {
      "op": "DUP3"
    },
    "6994": {
      "op": "NOT"
    },
    "6995": {
      "op": "DUP3"
    },
    "6996": {
      "op": "GT"
    },
    "6997": {
      "op": "ISZERO"
    },
    "6998": {
      "op": "PUSH2",
      "value": "0x1B61"
    },
    "7001": {
      "op": "JUMPI"
    },
    "7002": {
      "op": "PUSH2",
      "value": "0x1B61"
    },
    "7005": {
      "op": "PUSH2",
      "value": "0x1BE9"
    },
    "7008": {
      "jump": "i",
      "op": "JUMP"
    },
    "7009": {
      "op": "JUMPDEST"
    },
    "7010": {
      "op": "POP"
    },
    "7011": {
      "op": "ADD"
    },
    "7012": {
      "op": "SWAP1"
    },
    "7013": {
      "jump": "o",
      "op": "JUMP"
    },
    "7014": {
      "op": "JUMPDEST"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7017": {
      "op": "DUP2"
    },
    "7018": {
      "op": "DUP2"
    },
    "7019": {
      "op": "SHR"
    },
    "7020": {
      "op": "SWAP1"
    },
    "7021": {
      "op": "DUP3"
    },
    "7022": {
      "op": "AND"
    },
    "7023": {
      "op": "DUP1"
    },
    "7024": {
      "op": "PUSH2",
      "value": "0x1B7A"
    },
    "7027": {
      "op": "JUMPI"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7030": {
      "op": "DUP3"
    },
    "7031": {
      "op": "AND"
    },
    "7032": {
      "op": "SWAP2"
    },
    "7033": {
      "op": "POP"
    },
    "7034": {
      "op": "JUMPDEST"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7037": {
      "op": "DUP3"
    },
    "7038": {
      "op": "LT"
    },
    "7039": {
      "op": "DUP2"
    },
    "7040": {
      "op": "EQ"
    },
    "7041": {
      "op": "ISZERO"
    },
    "7042": {
      "op": "PUSH2",
      "value": "0x1B9B"
    },
    "7045": {
      "op": "JUMPI"
    },
    "7046": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7053": {
      "op": "SHL"
    },
    "7054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7056": {
      "op": "MSTORE"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7061": {
      "op": "MSTORE"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7066": {
      "op": "REVERT"
    },
    "7067": {
      "op": "JUMPDEST"
    },
    "7068": {
      "op": "POP"
    },
    "7069": {
      "op": "SWAP2"
    },
    "7070": {
      "op": "SWAP1"
    },
    "7071": {
      "op": "POP"
    },
    "7072": {
      "jump": "o",
      "op": "JUMP"
    },
    "7073": {
      "op": "JUMPDEST"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7076": {
      "op": "DUP3"
    },
    "7077": {
      "op": "ADD"
    },
    "7078": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7080": {
      "op": "NOT"
    },
    "7081": {
      "op": "AND"
    },
    "7082": {
      "op": "DUP2"
    },
    "7083": {
      "op": "ADD"
    },
    "7084": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7093": {
      "op": "DUP2"
    },
    "7094": {
      "op": "GT"
    },
    "7095": {
      "op": "DUP3"
    },
    "7096": {
      "op": "DUP3"
    },
    "7097": {
      "op": "LT"
    },
    "7098": {
      "op": "OR"
    },
    "7099": {
      "op": "ISZERO"
    },
    "7100": {
      "op": "PUSH2",
      "value": "0x1BC7"
    },
    "7103": {
      "op": "JUMPI"
    },
    "7104": {
      "op": "PUSH2",
      "value": "0x1BC7"
    },
    "7107": {
      "op": "PUSH2",
      "value": "0x1C15"
    },
    "7110": {
      "jump": "i",
      "op": "JUMP"
    },
    "7111": {
      "op": "JUMPDEST"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7114": {
      "op": "MSTORE"
    },
    "7115": {
      "op": "POP"
    },
    "7116": {
      "op": "POP"
    },
    "7117": {
      "jump": "o",
      "op": "JUMP"
    },
    "7118": {
      "op": "JUMPDEST"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7123": {
      "op": "NOT"
    },
    "7124": {
      "op": "DUP3"
    },
    "7125": {
      "op": "EQ"
    },
    "7126": {
      "op": "ISZERO"
    },
    "7127": {
      "op": "PUSH2",
      "value": "0x1BE2"
    },
    "7130": {
      "op": "JUMPI"
    },
    "7131": {
      "op": "PUSH2",
      "value": "0x1BE2"
    },
    "7134": {
      "op": "PUSH2",
      "value": "0x1BE9"
    },
    "7137": {
      "jump": "i",
      "op": "JUMP"
    },
    "7138": {
      "op": "JUMPDEST"
    },
    "7139": {
      "op": "POP"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7142": {
      "op": "ADD"
    },
    "7143": {
      "op": "SWAP1"
    },
    "7144": {
      "jump": "o",
      "op": "JUMP"
    },
    "7145": {
      "op": "JUMPDEST"
    },
    "7146": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7153": {
      "op": "SHL"
    },
    "7154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7159": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7161": {
      "op": "MSTORE"
    },
    "7162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7166": {
      "op": "REVERT"
    },
    "7167": {
      "op": "JUMPDEST"
    },
    "7168": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7175": {
      "op": "SHL"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7178": {
      "op": "MSTORE"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7181": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7183": {
      "op": "MSTORE"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7188": {
      "op": "REVERT"
    },
    "7189": {
      "op": "JUMPDEST"
    },
    "7190": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7197": {
      "op": "SHL"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7200": {
      "op": "MSTORE"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7205": {
      "op": "MSTORE"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7210": {
      "op": "REVERT"
    },
    "7211": {
      "op": "JUMPDEST"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7216": {
      "op": "RETURNDATASIZE"
    },
    "7217": {
      "op": "GT"
    },
    "7218": {
      "op": "ISZERO"
    },
    "7219": {
      "op": "PUSH2",
      "value": "0x1C44"
    },
    "7222": {
      "op": "JUMPI"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7227": {
      "op": "DUP1"
    },
    "7228": {
      "op": "RETURNDATACOPY"
    },
    "7229": {
      "op": "POP"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7232": {
      "op": "MLOAD"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7235": {
      "op": "SHR"
    },
    "7236": {
      "op": "JUMPDEST"
    },
    "7237": {
      "op": "SWAP1"
    },
    "7238": {
      "jump": "o",
      "op": "JUMP"
    },
    "7239": {
      "op": "JUMPDEST"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7244": {
      "op": "RETURNDATASIZE"
    },
    "7245": {
      "op": "LT"
    },
    "7246": {
      "op": "ISZERO"
    },
    "7247": {
      "op": "PUSH2",
      "value": "0x1C55"
    },
    "7250": {
      "op": "JUMPI"
    },
    "7251": {
      "op": "SWAP1"
    },
    "7252": {
      "jump": "o",
      "op": "JUMP"
    },
    "7253": {
      "op": "JUMPDEST"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7256": {
      "op": "MLOAD"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7259": {
      "op": "NOT"
    },
    "7260": {
      "op": "RETURNDATASIZE"
    },
    "7261": {
      "op": "DUP2"
    },
    "7262": {
      "op": "ADD"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7265": {
      "op": "DUP4"
    },
    "7266": {
      "op": "RETURNDATACOPY"
    },
    "7267": {
      "op": "DUP2"
    },
    "7268": {
      "op": "MLOAD"
    },
    "7269": {
      "op": "RETURNDATASIZE"
    },
    "7270": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7279": {
      "op": "DUP2"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7282": {
      "op": "DUP5"
    },
    "7283": {
      "op": "ADD"
    },
    "7284": {
      "op": "GT"
    },
    "7285": {
      "op": "DUP2"
    },
    "7286": {
      "op": "DUP5"
    },
    "7287": {
      "op": "GT"
    },
    "7288": {
      "op": "OR"
    },
    "7289": {
      "op": "ISZERO"
    },
    "7290": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "7293": {
      "op": "JUMPI"
    },
    "7294": {
      "op": "POP"
    },
    "7295": {
      "op": "POP"
    },
    "7296": {
      "op": "POP"
    },
    "7297": {
      "op": "POP"
    },
    "7298": {
      "op": "POP"
    },
    "7299": {
      "op": "SWAP1"
    },
    "7300": {
      "jump": "o",
      "op": "JUMP"
    },
    "7301": {
      "op": "JUMPDEST"
    },
    "7302": {
      "op": "DUP3"
    },
    "7303": {
      "op": "DUP6"
    },
    "7304": {
      "op": "ADD"
    },
    "7305": {
      "op": "SWAP2"
    },
    "7306": {
      "op": "POP"
    },
    "7307": {
      "op": "DUP2"
    },
    "7308": {
      "op": "MLOAD"
    },
    "7309": {
      "op": "DUP2"
    },
    "7310": {
      "op": "DUP2"
    },
    "7311": {
      "op": "GT"
    },
    "7312": {
      "op": "ISZERO"
    },
    "7313": {
      "op": "PUSH2",
      "value": "0x1C9D"
    },
    "7316": {
      "op": "JUMPI"
    },
    "7317": {
      "op": "POP"
    },
    "7318": {
      "op": "POP"
    },
    "7319": {
      "op": "POP"
    },
    "7320": {
      "op": "POP"
    },
    "7321": {
      "op": "POP"
    },
    "7322": {
      "op": "POP"
    },
    "7323": {
      "op": "SWAP1"
    },
    "7324": {
      "jump": "o",
      "op": "JUMP"
    },
    "7325": {
      "op": "JUMPDEST"
    },
    "7326": {
      "op": "DUP5"
    },
    "7327": {
      "op": "RETURNDATASIZE"
    },
    "7328": {
      "op": "DUP8"
    },
    "7329": {
      "op": "ADD"
    },
    "7330": {
      "op": "ADD"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7333": {
      "op": "DUP3"
    },
    "7334": {
      "op": "DUP6"
    },
    "7335": {
      "op": "ADD"
    },
    "7336": {
      "op": "ADD"
    },
    "7337": {
      "op": "GT"
    },
    "7338": {
      "op": "ISZERO"
    },
    "7339": {
      "op": "PUSH2",
      "value": "0x1CB7"
    },
    "7342": {
      "op": "JUMPI"
    },
    "7343": {
      "op": "POP"
    },
    "7344": {
      "op": "POP"
    },
    "7345": {
      "op": "POP"
    },
    "7346": {
      "op": "POP"
    },
    "7347": {
      "op": "POP"
    },
    "7348": {
      "op": "POP"
    },
    "7349": {
      "op": "SWAP1"
    },
    "7350": {
      "jump": "o",
      "op": "JUMP"
    },
    "7351": {
      "op": "JUMPDEST"
    },
    "7352": {
      "op": "PUSH2",
      "value": "0x1CC6"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7357": {
      "op": "DUP3"
    },
    "7358": {
      "op": "DUP7"
    },
    "7359": {
      "op": "ADD"
    },
    "7360": {
      "op": "ADD"
    },
    "7361": {
      "op": "DUP8"
    },
    "7362": {
      "op": "PUSH2",
      "value": "0x1BA1"
    },
    "7365": {
      "jump": "i",
      "op": "JUMP"
    },
    "7366": {
      "op": "JUMPDEST"
    },
    "7367": {
      "op": "POP"
    },
    "7368": {
      "op": "SWAP1"
    },
    "7369": {
      "op": "SWAP6"
    },
    "7370": {
      "op": "SWAP5"
    },
    "7371": {
      "op": "POP"
    },
    "7372": {
      "op": "POP"
    },
    "7373": {
      "op": "POP"
    },
    "7374": {
      "op": "POP"
    },
    "7375": {
      "op": "POP"
    },
    "7376": {
      "jump": "o",
      "op": "JUMP"
    },
    "7377": {
      "op": "JUMPDEST"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7384": {
      "op": "SHL"
    },
    "7385": {
      "op": "SUB"
    },
    "7386": {
      "op": "DUP2"
    },
    "7387": {
      "op": "AND"
    },
    "7388": {
      "op": "DUP2"
    },
    "7389": {
      "op": "EQ"
    },
    "7390": {
      "op": "PUSH2",
      "value": "0x1CE6"
    },
    "7393": {
      "op": "JUMPI"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7396": {
      "op": "DUP1"
    },
    "7397": {
      "op": "REVERT"
    },
    "7398": {
      "op": "JUMPDEST"
    },
    "7399": {
      "op": "POP"
    },
    "7400": {
      "jump": "o",
      "op": "JUMP"
    },
    "7401": {
      "op": "JUMPDEST"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7408": {
      "op": "SHL"
    },
    "7409": {
      "op": "SUB"
    },
    "7410": {
      "op": "NOT"
    },
    "7411": {
      "op": "DUP2"
    },
    "7412": {
      "op": "AND"
    },
    "7413": {
      "op": "DUP2"
    },
    "7414": {
      "op": "EQ"
    },
    "7415": {
      "op": "PUSH2",
      "value": "0x1CE6"
    },
    "7418": {
      "op": "JUMPI"
    },
    "7419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7421": {
      "op": "DUP1"
    },
    "7422": {
      "op": "REVERT"
    }
  },
  "sha1": "6fa5fd512e9c2570f6263f151d3951b7140e164a",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IOracle.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * Modified version of OpenZeppelin's ERC1155 implementation\n * https://eips.ethereum.org/EIPS/eip-1155\n * https://docs.openzeppelin.com/contracts/4.x/api/token/erc1155\n */\ncontract Loot is ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Total balance of user\n    mapping(address => uint256) private _balance;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    // Contract name (used for marketplaces)\n    string public name;\n\n    // Contract symbol (used for marketplaces)\n    string public symbol;\n\n    // The Oracle contract\n    IOracle public oracle;\n\n    // Items\n    enum Item {\n        // Ear\n        EARRING,\n        // Eyes\n        BIG_SHADES,\n        BLUE_EYE_SHADOW,\n        CLASSIC_SHADES,\n        CLOWN_EYES_BLUE,\n        CLOWN_EYES_GREEN,\n        EYE_MASK,\n        EYE_PATCH,\n        GREEN_EYE_SHADOW,\n        HORNED_RIM_GLASSES,\n        NERD_GLASSES,\n        PURPLE_EYE_SHADOW,\n        REGULAR_SHADES,\n        SMALL_SHADES,\n        THREE_D_GLASSES,\n        VR,\n        WELDING_GOGGLES,\n        // Face\n        MOLE,\n        ROSY_CHEEKS,\n        SPOTS,\n        VAMPIRE_HAIR,\n        // Facial_hair\n        BIG_BEARD,\n        CHINSTRAP,\n        FRONT_BEARD,\n        FRONT_BEARD_DARK,\n        GOAT,\n        HANDLEBARS,\n        LUXURIOUS_BEARD,\n        MUSTACHE,\n        MUTTONCHOPS,\n        NORMAL_BEARD,\n        NORMAL_BEARD_BLACK,\n        SHADOW_BEARD,\n        // Head\n        BANDANA,\n        BEANIE,\n        BLONDE_BOB,\n        BLONDE_SHORT,\n        CAP,\n        CAP_FORWARD,\n        CLOWN_HAIR_GREEN,\n        COWBOY_HAT,\n        CRAZY_HAIR,\n        DARK_HAIR,\n        DO_RAG,\n        FEDORA,\n        FRUMPY_HAIR,\n        HALF_SHAVED,\n        HEADBAND,\n        HOODIE,\n        KNITTED_CAP,\n        MESSY_HAIR,\n        MOHAWK,\n        MOHAWK_DARK,\n        MOHAWK_THIN,\n        ORANGE_SIDE,\n        PEAK_SPIKE,\n        PIGTAILS,\n        PILOT_HELMET,\n        PINK_WITH_HAT,\n        POLICE_CAP,\n        PURPLE_HAIR,\n        RED_MOHAWK,\n        SHAVED_HEAD,\n        STRAIGHT_HAIR,\n        STRAIGHT_HAIR_BLONDE,\n        STRAIGHT_HAIR_DARK,\n        STRINGY_HAIR,\n        TASSLE_HAT,\n        TIARA,\n        TOP_HAT,\n        WILD_BLONDE,\n        WILD_HAIR,\n        WILD_WHITE_HAIR,\n        // Mouth\n        BLACK_LIPSTICK,\n        BUCK_TEETH,\n        FROWN,\n        HOT_LIPSTICK,\n        MEDICAL_MASK,\n        PURPLE_LIPSTICK,\n        SMILE,\n        // Neck\n        CHOKER,\n        GOLD_CHAIN,\n        SILVER_CHAIN,\n        // Nose\n        CLOWN_NOSE,\n        // Smoke\n        CIGARETTE,\n        PIPE,\n        VAPE,\n        // Species\n        ALIEN,\n        APE,\n        HUMAN,\n        ZOMBIE\n    }\n\n    /**\n     * @param name_         The name of the token\n     * @param symbol_       The symbol of the token\n     * @param uri_          The URI for token metadata\n     * @param oracleAddress The address where the Oracle resides\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        string memory uri_,\n        address oracleAddress\n    ) {\n        name = name_;\n        symbol = symbol_;\n        _uri = uri_;\n        oracle = IOracle(oracleAddress);\n    }\n\n    /**\n     * @dev Modifier that only Oracle operators may call\n     */\n    modifier onlyOracleOperator() {\n        require(\n            msg.sender == oracle.getOperator(),\n            \"Only the Oracle operator may perform this action\"\n        );\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns the URI for token type `id`.\n     */\n    function uri(uint256) public view override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev Returns the total balance of `account`\n     * @notice May not query the zero address\n     */\n    function balanceOf(address account)\n        public\n        view\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        return _balance[account];\n    }\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     * @notice May not query the zero address\n     */\n    function balanceOf(address account, uint256 id)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev Batched version of balanceOf.\n     * @notice May not query the zero address\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        override\n        returns (uint256[] memory)\n    {\n        require(\n            accounts.length == ids.length,\n            \"ERC1155: accounts and ids length mismatch\"\n        );\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller\u2019s tokens, according to `approved`.\n     * @notice `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        override\n    {\n        require(\n            msg.sender != operator,\n            \"ERC1155: setting approval status for self\"\n        );\n\n        _operatorApprovals[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer `account`'s tokens.\n     */\n    function isApprovedForAll(address account, address operator)\n        public\n        view\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev Transfers amount tokens of token type `id` from `from` to `to`.\n     * @notice May not query the zero address\n     * @notice If the caller is not `from`, it must be have been approved to spend `from`'s tokens via setApprovalForAll.\n     * @notice `from` must have a balance of tokens of type `id` of at least `amount`.\n     * @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155Received and return the acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public override {\n        require(\n            from == msg.sender || isApprovedForAll(from, msg.sender),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = msg.sender;\n\n        uint256 fromBalance = _balances[id][from];\n        require(\n            fromBalance >= amount,\n            \"ERC1155: insufficient balance for transfer\"\n        );\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n            _balance[from] -= amount;\n        }\n        _balances[id][to] += amount;\n        _balance[to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev Batched version of safeTransferFrom.\n     * @notice `ids` and `amounts` must have the same length.\n     * @notice If `to` refers to a smart contract, it must implement IERC1155Receiver.onERC1155BatchReceived and return the acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public override {\n        require(\n            from == msg.sender || isApprovedForAll(from, msg.sender),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = msg.sender;\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(\n                fromBalance >= amount,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n                _balance[from] -= amount;\n            }\n            _balances[id][to] += amount;\n            _balance[from] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            from,\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     * @notice `account` cannot be the zero address.\n     * @notice If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public onlyOracleOperator {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = msg.sender;\n\n        _balances[id][account] += amount;\n        _balance[account] += amount;\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(\n            operator,\n            address(0),\n            account,\n            id,\n            amount,\n            data\n        );\n    }\n\n    /**\n     * @dev Batched version of _mint.\n     * @notice `ids` and `amounts` must have the same length.\n     * @notice - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public onlyOracleOperator {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n\n        address operator = msg.sender;\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n            _balance[to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            address(0),\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155Received(\n                    operator,\n                    from,\n                    id,\n                    amount,\n                    data\n                )\n            returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155BatchReceived(\n                    operator,\n                    from,\n                    ids,\n                    amounts,\n                    data\n                )\n            returns (bytes4 response) {\n                if (\n                    response != IERC1155Receiver.onERC1155BatchReceived.selector\n                ) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    /**\n     * @dev Allows the URI to be changed by the Oracle operator\n     */\n    function setURI(string memory uri_) public onlyOracleOperator {\n        _uri = uri_;\n    }\n}\n",
  "sourceMap": "660:13509:7:-:0;;;3711:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3858:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;3880:16:7;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;3906:11:7;;;;:4;;:11;;;;;:::i;:::-;-1:-1:-1;3927:6:7;:31;;-1:-1:-1;;;;;;3927:31:7;-1:-1:-1;;;;;3927:31:7;;;;;;;;;;-1:-1:-1;660:13509:7;;-1:-1:-1;;660:13509:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:13509:7;;;-1:-1:-1;660:13509:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:10;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:10;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:10;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:10:o;904:934::-;1031:6;1039;1047;1055;1108:3;1096:9;1087:7;1083:23;1079:33;1076:2;;;1125:1;1122;1115:12;1076:2;1152:16;;-1:-1:-1;;;;;1217:14:10;;;1214:2;;;1244:1;1241;1234:12;1214:2;1267:61;1320:7;1311:6;1300:9;1296:22;1267:61;:::i;:::-;1257:71;;1374:2;1363:9;1359:18;1353:25;1337:41;;1403:2;1393:8;1390:16;1387:2;;;1419:1;1416;1409:12;1387:2;1442:63;1497:7;1486:8;1475:9;1471:24;1442:63;:::i;:::-;1432:73;;1551:2;1540:9;1536:18;1530:25;1514:41;;1580:2;1570:8;1567:16;1564:2;;;1596:1;1593;1586:12;1564:2;;1619:63;1674:7;1663:8;1652:9;1648:24;1619:63;:::i;:::-;1725:2;1710:18;;1704:25;1609:73;;-1:-1:-1;1704:25:10;-1:-1:-1;;;;;;1758:31:10;;1748:42;;1738:2;;1804:1;1801;1794:12;1738:2;1066:772;;;;-1:-1:-1;1066:772:10;;-1:-1:-1;;1066:772:10:o;1843:380::-;1922:1;1918:12;;;;1965;;;1986:2;;2040:4;2032:6;2028:17;2018:27;;1986:2;2093;2085:6;2082:14;2062:18;2059:38;2056:2;;;2139:10;2134:3;2130:20;2127:1;2120:31;2174:4;2171:1;2164:15;2202:4;2199:1;2192:15;2056:2;;1898:325;;;:::o;2228:127::-;2289:10;2284:3;2280:20;2277:1;2270:31;2320:4;2317:1;2310:15;2344:4;2341:1;2334:15;2260:95;660:13509:7;;;;;;",
  "sourcePath": "contracts/Loot.sol",
  "type": "contract"
}