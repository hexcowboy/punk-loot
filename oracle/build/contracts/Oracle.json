{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wrappedPunksContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_oraclePriceInWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "CryptoPunkReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountInWei",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "OracleFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "OraclePriceChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundOracle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oraclePriceInWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedPunksContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/IERC721Receiver.sol",
    "8": "contracts/Oracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/Oracle.sol",
    "exportedSymbols": {
      "IERC721Receiver": [
        1651
      ],
      "Oracle": [
        1126
      ]
    },
    "id": 1127,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 950,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:8"
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 951,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1127,
        "sourceUnit": 1652,
        "src": "56:66:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 952,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1651,
              "src": "144:15:8"
            },
            "id": 953,
            "nodeType": "InheritanceSpecifier",
            "src": "144:15:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1126,
        "linearizedBaseContracts": [
          1126,
          1651
        ],
        "name": "Oracle",
        "nameLocation": "134:6:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 955,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "209:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "193:24:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 954,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "193:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "321f28f8",
            "id": 957,
            "mutability": "mutable",
            "name": "wrappedPunksContract",
            "nameLocation": "359:20:8",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "344:35:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 956,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27f16f99",
            "id": 959,
            "mutability": "mutable",
            "name": "oraclePriceInWei",
            "nameLocation": "451:16:8",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "436:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 958,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "436:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 963,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "559:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "524:44:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 962,
              "keyType": {
                "id": 960,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "532:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "524:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 961,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "543:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 969,
            "name": "CryptoPunkReceived",
            "nameLocation": "641:18:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "676:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "660:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 967,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "696:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "680:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "659:42:8"
            },
            "src": "635:67:8"
          },
          {
            "anonymous": false,
            "id": 973,
            "name": "OraclePriceChanged",
            "nameLocation": "763:18:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "798:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "782:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:28:8"
            },
            "src": "757:53:8"
          },
          {
            "anonymous": false,
            "id": 979,
            "name": "OracleFunded",
            "nameLocation": "868:12:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amountInWei",
                  "nameLocation": "897:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "881:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "926:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "910:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:51:8"
            },
            "src": "862:70:8"
          },
          {
            "body": {
              "id": 999,
              "nodeType": "Block",
              "src": "1008:138:8",
              "statements": [
                {
                  "expression": {
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 986,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "1018:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 987,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1029:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1029:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1018:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "1018:21:8"
                },
                {
                  "expression": {
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 991,
                      "name": "wrappedPunksContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 957,
                      "src": "1049:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 992,
                      "name": "_wrappedPunksContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "1072:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1049:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:44:8"
                },
                {
                  "expression": {
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 995,
                      "name": "oraclePriceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "1103:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 996,
                      "name": "_oraclePriceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "1122:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1103:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:36:8"
                }
              ]
            },
            "id": 1000,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "_wrappedPunksContract",
                  "nameLocation": "958:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "950:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "_oraclePriceInWei",
                  "nameLocation": "989:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "981:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "949:58:8"
            },
            "returnParameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:0:8"
            },
            "scope": 1126,
            "src": "938:208:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1012,
              "nodeType": "Block",
              "src": "1255:145:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1004,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1286:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1286:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1006,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "1300:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1286:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f7261636c65206f70657261746f72206d617920706572666f726d207468697320616374696f6e",
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1322:50:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f838567f5ff9ac50cd236f5e25efd25d30be7f5f73dcf970ebe8f73d5744142",
                          "typeString": "literal_string \"Only the oracle operator may perform this action\""
                        },
                        "value": "Only the oracle operator may perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f838567f5ff9ac50cd236f5e25efd25d30be7f5f73dcf970ebe8f73d5744142",
                          "typeString": "literal_string \"Only the oracle operator may perform this action\""
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1265:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:117:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "1265:117:8"
                },
                {
                  "id": 1011,
                  "nodeType": "PlaceholderStatement",
                  "src": "1392:1:8"
                }
              ]
            },
            "documentation": {
              "id": 1001,
              "nodeType": "StructuredDocumentation",
              "src": "1152:68:8",
              "text": " @dev Modifier that only oracle operators may call"
            },
            "id": 1013,
            "name": "onlyOracleOperator",
            "nameLocation": "1234:18:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:2:8"
            },
            "src": "1225:175:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "1595:91:8",
              "statements": [
                {
                  "expression": {
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1021,
                      "name": "oraclePriceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "1605:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1022,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "1624:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1605:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:29:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1026,
                        "name": "priceInWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "1668:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1025,
                      "name": "OraclePriceChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "1649:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1028,
                  "nodeType": "EmitStatement",
                  "src": "1644:35:8"
                }
              ]
            },
            "documentation": {
              "id": 1014,
              "nodeType": "StructuredDocumentation",
              "src": "1406:120:8",
              "text": " @dev Sets the price to fulfill the oracle\n @notice Only oracle operators may call this function"
            },
            "functionSelector": "91b7f5ed",
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1019,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1018,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1013,
                  "src": "1576:18:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1576:18:8"
              }
            ],
            "name": "setPrice",
            "nameLocation": "1540:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "1557:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1549:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1548:20:8"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1595:0:8"
            },
            "scope": 1126,
            "src": "1531:155:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1064,
              "nodeType": "Block",
              "src": "1879:232:8",
              "statements": [
                {
                  "assignments": [
                    1035,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1035,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "1895:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1064,
                      "src": "1890:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1034,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1890:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1043,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1937:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1036,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "1905:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1905:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1038,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1926:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1926:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1905:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1889:51:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1045,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "1958:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e6420457468657220746f20746865206f7261636c65206f70657261746f72",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1964:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f640982424951f62df86745e502b956ed7f94a44d713453fdf4f001a69cd5bb4",
                          "typeString": "literal_string \"Failed to send Ether to the oracle operator\""
                        },
                        "value": "Failed to send Ether to the oracle operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f640982424951f62df86745e502b956ed7f94a44d713453fdf4f001a69cd5bb4",
                          "typeString": "literal_string \"Failed to send Ether to the oracle operator\""
                        }
                      ],
                      "id": 1044,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1950:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:60:8"
                },
                {
                  "expression": {
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1049,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "2020:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1052,
                      "indexExpression": {
                        "expression": {
                          "id": 1050,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2030:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2030:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2020:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1053,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2045:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2045:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2020:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:34:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1058,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2082:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2082:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1060,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2093:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2093:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1057,
                      "name": "OracleFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "2069:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1063,
                  "nodeType": "EmitStatement",
                  "src": "2064:40:8"
                }
              ]
            },
            "documentation": {
              "id": 1031,
              "nodeType": "StructuredDocumentation",
              "src": "1692:145:8",
              "text": " @dev Fund the Oracle to cover gas fees and other costs\n @notice Check the current price by retrieving `oraclePriceInWei`"
            },
            "functionSelector": "1e12f727",
            "id": 1065,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundOracle",
            "nameLocation": "1851:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:2:8"
            },
            "returnParameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:8"
            },
            "scope": 1126,
            "src": "1842:269:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1650
            ],
            "body": {
              "id": 1115,
              "nodeType": "Block",
              "src": "2517:450:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1081,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2548:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2548:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1085,
                              "name": "wrappedPunksContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 957,
                              "src": "2570:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2562:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1083,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2562:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2562:29:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2548:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865204f7261636c65206f6e6c79206163636570747320577261707065642043727970746f50756e6b73",
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2605:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bb31ba7b92e9232d95910825e417b6caf652b8753c16909f8e39252dac2b6da",
                          "typeString": "literal_string \"The Oracle only accepts Wrapped CryptoPunks\""
                        },
                        "value": "The Oracle only accepts Wrapped CryptoPunks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bb31ba7b92e9232d95910825e417b6caf652b8753c16909f8e39252dac2b6da",
                          "typeString": "literal_string \"The Oracle only accepts Wrapped CryptoPunks\""
                        }
                      ],
                      "id": 1080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2527:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2527:133:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:133:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1092,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "2692:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1094,
                          "indexExpression": {
                            "id": 1093,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "2702:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2692:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1095,
                          "name": "oraclePriceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 959,
                          "src": "2711:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2692:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742066756e6420746865206f7261636c652077697468207468652070726963652073657420696e20606f7261636c655072696365496e57656960",
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2741:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b69f50ff6b413a705d45368e42aa50946f851842b35e1c68e349ad0d2263485",
                          "typeString": "literal_string \"You must fund the oracle with the price set in `oraclePriceInWei`\""
                        },
                        "value": "You must fund the oracle with the price set in `oraclePriceInWei`"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b69f50ff6b413a705d45368e42aa50946f851842b35e1c68e349ad0d2263485",
                          "typeString": "literal_string \"You must fund the oracle with the price set in `oraclePriceInWei`\""
                        }
                      ],
                      "id": 1091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2671:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "2671:147:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1101,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "2853:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1102,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "2862:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1100,
                      "name": "CryptoPunkReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "2834:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2834:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "EmitStatement",
                  "src": "2829:38:8"
                },
                {
                  "expression": {
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1105,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "2877:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1107,
                      "indexExpression": {
                        "id": 1106,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "2887:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2877:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1108,
                      "name": "oraclePriceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "2896:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2877:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:35:8"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 1111,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2930:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Oracle_$1126",
                          "typeString": "contract Oracle"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1116,
                      "src": "2930:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "2930:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1079,
                  "id": 1114,
                  "nodeType": "Return",
                  "src": "2923:37:8"
                }
              ]
            },
            "documentation": {
              "id": 1066,
              "nodeType": "StructuredDocumentation",
              "src": "2117:221:8",
              "text": " @dev Implementation of IERC721Receiver\n @notice Only accepts ERC721 tokens from the `wrappedPunksContract`\n @notice The sender must have already funded the oracle with the `oraclePriceInWei`"
            },
            "functionSelector": "150b7a02",
            "id": 1116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "2352:16:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2482:8:8"
            },
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2386:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "2378:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2410:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "2402:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2402:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2432:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "2424:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2424:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2464:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "2449:19:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2368:106:8"
            },
            "returnParameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "2507:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "2500:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2499:17:8"
            },
            "scope": 1126,
            "src": "2343:624:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "3091:32:8",
              "statements": [
                {
                  "expression": {
                    "id": 1122,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 955,
                    "src": "3108:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1121,
                  "id": 1123,
                  "nodeType": "Return",
                  "src": "3101:15:8"
                }
              ]
            },
            "documentation": {
              "id": 1117,
              "nodeType": "StructuredDocumentation",
              "src": "2973:59:8",
              "text": " @dev Returns the current oracle operator"
            },
            "functionSelector": "e7f43c68",
            "id": 1125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperator",
            "nameLocation": "3046:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3057:2:8"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "3082:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3081:9:8"
            },
            "scope": 1126,
            "src": "3037:86:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1127,
        "src": "125:3000:8",
        "usedErrors": []
      }
    ],
    "src": "31:3095:8"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516106d93803806106d983398101604081905261002f91610066565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0393909316929092179091556002556100a0565b6000806040838503121561007957600080fd5b82516001600160a01b038116811461009057600080fd5b6020939093015192949293505050565b61062a806100af6000396000f3fe6080604052600436106100705760003560e01c8063321f28f81161004e578063321f28f8146100e157806370a082311461011957806391b7f5ed14610146578063e7f43c681461016657600080fd5b8063150b7a02146100755780631e12f727146100b357806327f16f99146100bd575b600080fd5b34801561008157600080fd5b506100956100903660046104fb565b610184565b6040516001600160e01b031990911681526020015b60405180910390f35b6100bb61030c565b005b3480156100c957600080fd5b506100d360025481565b6040519081526020016100aa565b3480156100ed57600080fd5b50600154610101906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561012557600080fd5b506100d36101343660046104d9565b60036020526000908152604090205481565b34801561015257600080fd5b506100bb610161366004610596565b610417565b34801561017257600080fd5b506000546001600160a01b0316610101565b6001546000906001600160a01b031633146101fa5760405162461bcd60e51b815260206004820152602b60248201527f546865204f7261636c65206f6e6c79206163636570747320577261707065642060448201526a43727970746f50756e6b7360a81b60648201526084015b60405180910390fd5b6002546001600160a01b03861660009081526003602052604090205410156102945760405162461bcd60e51b815260206004820152604160248201527f596f75206d7573742066756e6420746865206f7261636c65207769746820746860448201527f652070726963652073657420696e20606f7261636c655072696365496e5765696064820152600360fd1b608482015260a4016101f1565b6040516001600160a01b0386169085907fc38c7fe124533978f8e6e32c0f6a1a051b08f1f519973acef1beaa3c6107e16a90600090a36002546001600160a01b038616600090815260036020526040812080549091906102f59084906105c7565b90915550630a85bd0160e11b979650505050505050565b600080546040516001600160a01b039091169034908381818185875af1925050503d8060008114610359576040519150601f19603f3d011682016040523d82523d6000602084013e61035e565b606091505b50509050806103c35760405162461bcd60e51b815260206004820152602b60248201527f4661696c656420746f2073656e6420457468657220746f20746865206f72616360448201526a36329037b832b930ba37b960a91b60648201526084016101f1565b33600090815260036020526040812080543492906103e29084906105af565b9091555050604051339034907f0f8d8f9c95aaf6177671bcc9db84b0de639a5cc30c6b673a9c82d31e6392341e90600090a350565b6000546001600160a01b0316331461048a5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7920746865206f7261636c65206f70657261746f72206d61792070657260448201526f3337b936903a3434b99030b1ba34b7b760811b60648201526084016101f1565b600281905560405181907f51c6eaaaa11f3a57f136cd3fbce664dfa4da3c42210ab46757f048532068e0ce90600090a250565b80356001600160a01b03811681146104d457600080fd5b919050565b6000602082840312156104eb57600080fd5b6104f4826104bd565b9392505050565b60008060008060006080868803121561051357600080fd5b61051c866104bd565b945061052a602087016104bd565b935060408601359250606086013567ffffffffffffffff8082111561054e57600080fd5b818801915088601f83011261056257600080fd5b81358181111561057157600080fd5b89602082850101111561058357600080fd5b9699959850939650602001949392505050565b6000602082840312156105a857600080fd5b5035919050565b600082198211156105c2576105c26105de565b500190565b6000828210156105d9576105d96105de565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203829839cead7b6a04f048aac15d5934526ccdeed22838912dc4c499acd21aba564736f6c63430008060033",
  "bytecodeSha1": "56b66c59cf22993448886904fd1b2652245433d7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "Oracle",
  "coverageMap": {
    "branches": {
      "3": {},
      "8": {
        "Oracle.fundOracle": {
          "13": [
            1958,
            1962,
            true
          ]
        },
        "Oracle.onERC721Received": {
          "11": [
            2548,
            2591,
            true
          ],
          "12": [
            2692,
            2727,
            true
          ]
        }
      }
    },
    "statements": {
      "3": {},
      "8": {
        "Oracle.fundOracle": {
          "6": [
            1950,
            2010
          ],
          "7": [
            2020,
            2054
          ],
          "8": [
            2064,
            2104
          ]
        },
        "Oracle.getOperator": {
          "0": [
            3101,
            3116
          ]
        },
        "Oracle.onERC721Received": {
          "1": [
            2527,
            2660
          ],
          "2": [
            2671,
            2818
          ],
          "3": [
            2829,
            2867
          ],
          "4": [
            2877,
            2912
          ],
          "5": [
            2923,
            2960
          ]
        },
        "Oracle.setPrice": {
          "9": [
            1605,
            1634
          ],
          "10": [
            1644,
            1679
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC721Receiver"
  ],
  "deployedBytecode": "6080604052600436106100705760003560e01c8063321f28f81161004e578063321f28f8146100e157806370a082311461011957806391b7f5ed14610146578063e7f43c681461016657600080fd5b8063150b7a02146100755780631e12f727146100b357806327f16f99146100bd575b600080fd5b34801561008157600080fd5b506100956100903660046104fb565b610184565b6040516001600160e01b031990911681526020015b60405180910390f35b6100bb61030c565b005b3480156100c957600080fd5b506100d360025481565b6040519081526020016100aa565b3480156100ed57600080fd5b50600154610101906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561012557600080fd5b506100d36101343660046104d9565b60036020526000908152604090205481565b34801561015257600080fd5b506100bb610161366004610596565b610417565b34801561017257600080fd5b506000546001600160a01b0316610101565b6001546000906001600160a01b031633146101fa5760405162461bcd60e51b815260206004820152602b60248201527f546865204f7261636c65206f6e6c79206163636570747320577261707065642060448201526a43727970746f50756e6b7360a81b60648201526084015b60405180910390fd5b6002546001600160a01b03861660009081526003602052604090205410156102945760405162461bcd60e51b815260206004820152604160248201527f596f75206d7573742066756e6420746865206f7261636c65207769746820746860448201527f652070726963652073657420696e20606f7261636c655072696365496e5765696064820152600360fd1b608482015260a4016101f1565b6040516001600160a01b0386169085907fc38c7fe124533978f8e6e32c0f6a1a051b08f1f519973acef1beaa3c6107e16a90600090a36002546001600160a01b038616600090815260036020526040812080549091906102f59084906105c7565b90915550630a85bd0160e11b979650505050505050565b600080546040516001600160a01b039091169034908381818185875af1925050503d8060008114610359576040519150601f19603f3d011682016040523d82523d6000602084013e61035e565b606091505b50509050806103c35760405162461bcd60e51b815260206004820152602b60248201527f4661696c656420746f2073656e6420457468657220746f20746865206f72616360448201526a36329037b832b930ba37b960a91b60648201526084016101f1565b33600090815260036020526040812080543492906103e29084906105af565b9091555050604051339034907f0f8d8f9c95aaf6177671bcc9db84b0de639a5cc30c6b673a9c82d31e6392341e90600090a350565b6000546001600160a01b0316331461048a5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7920746865206f7261636c65206f70657261746f72206d61792070657260448201526f3337b936903a3434b99030b1ba34b7b760811b60648201526084016101f1565b600281905560405181907f51c6eaaaa11f3a57f136cd3fbce664dfa4da3c42210ab46757f048532068e0ce90600090a250565b80356001600160a01b03811681146104d457600080fd5b919050565b6000602082840312156104eb57600080fd5b6104f4826104bd565b9392505050565b60008060008060006080868803121561051357600080fd5b61051c866104bd565b945061052a602087016104bd565b935060408601359250606086013567ffffffffffffffff8082111561054e57600080fd5b818801915088601f83011261056257600080fd5b81358181111561057157600080fd5b89602082850101111561058357600080fd5b9699959850939650602001949392505050565b6000602082840312156105a857600080fd5b5035919050565b600082198211156105c2576105c26105de565b500190565b6000828210156105d9576105d96105de565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203829839cead7b6a04f048aac15d5934526ccdeed22838912dc4c499acd21aba564736f6c63430008060033",
  "deployedSourceMap": "125:3000:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:624;;;;;;;;;;-1:-1:-1;2343:624:8;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1961:33:10;;;1943:52;;1931:2;1916:18;2343:624:8;;;;;;;;1842:269;;;:::i;:::-;;436:31;;;;;;;;;;;;;;;;;;;3867:25:10;;;3855:2;3840:18;436:31:8;3822:76:10;344:35:8;;;;;;;;;;-1:-1:-1;344:35:8;;;;-1:-1:-1;;;;;344:35:8;;;;;;-1:-1:-1;;;;;1755:32:10;;;1737:51;;1725:2;1710:18;344:35:8;1692:102:10;524:44:8;;;;;;;;;;-1:-1:-1;524:44:8;;;;;:::i;:::-;;;;;;;;;;;;;;1531:155;;;;;;;;;;-1:-1:-1;1531:155:8;;;;;:::i;:::-;;:::i;3037:86::-;;;;;;;;;;-1:-1:-1;3082:7:8;3108:8;-1:-1:-1;;;;;3108:8:8;3037:86;;2343:624;2570:20;;2500:15;;-1:-1:-1;;;;;2570:20:8;2548:10;:43;2527:133;;;;-1:-1:-1;;;2527:133:8;;2682:2:10;2527:133:8;;;2664:21:10;2721:2;2701:18;;;2694:30;2760:34;2740:18;;;2733:62;-1:-1:-1;;;2811:18:10;;;2804:41;2862:19;;2527:133:8;;;;;;;;;2711:16;;-1:-1:-1;;;;;2692:15:8;;;;;;:9;:15;;;;;;:35;;2671:147;;;;-1:-1:-1;;;2671:147:8;;2208:2:10;2671:147:8;;;2190:21:10;2247:2;2227:18;;;2220:30;2286:34;2266:18;;;2259:62;2357:34;2337:18;;;2330:62;-1:-1:-1;;;2408:19:10;;;2401:32;2450:19;;2671:147:8;2180:295:10;2671:147:8;2834:33;;-1:-1:-1;;;;;2834:33:8;;;2853:7;;2834:33;;;;;2896:16;;-1:-1:-1;;;;;2877:15:8;;;;;;:9;:15;;;;;:35;;:15;;;:35;;2896:16;;2877:35;:::i;:::-;;;;-1:-1:-1;;;;2930:30:8;2343:624;-1:-1:-1;;;;;;;2343:624:8:o;1842:269::-;1890:9;1905:8;;:35;;-1:-1:-1;;;;;1905:8:8;;;;1926:9;;1890;1905:35;1890:9;1905:35;1926:9;1905:8;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1889:51;;;1958:4;1950:60;;;;-1:-1:-1;;;1950:60:8;;3511:2:10;1950:60:8;;;3493:21:10;3550:2;3530:18;;;3523:30;3589:34;3569:18;;;3562:62;-1:-1:-1;;;3640:18:10;;;3633:41;3691:19;;1950:60:8;3483:233:10;1950:60:8;2030:10;2020:21;;;;:9;:21;;;;;:34;;2045:9;;2020:21;:34;;2045:9;;2020:34;:::i;:::-;;;;-1:-1:-1;;2069:35:8;;2093:10;;2082:9;;2069:35;;;;;1879:232;1842:269::o;1531:155::-;1300:8;;-1:-1:-1;;;;;1300:8:8;1286:10;:22;1265:117;;;;-1:-1:-1;;;1265:117:8;;3094:2:10;1265:117:8;;;3076:21:10;3133:2;3113:18;;;3106:30;3172:34;3152:18;;;3145:62;-1:-1:-1;;;3223:18:10;;;3216:46;3279:19;;1265:117:8;3066:238:10;1265:117:8;1605:16:::1;:29:::0;;;1649:30:::1;::::0;1624:10;;1649:30:::1;::::0;;;::::1;1531:155:::0;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:10:o;383:808::-;480:6;488;496;504;512;565:3;553:9;544:7;540:23;536:33;533:2;;;582:1;579;572:12;533:2;605:29;624:9;605:29;:::i;:::-;595:39;;653:38;687:2;676:9;672:18;653:38;:::i;:::-;643:48;;738:2;727:9;723:18;710:32;700:42;;793:2;782:9;778:18;765:32;816:18;857:2;849:6;846:14;843:2;;;873:1;870;863:12;843:2;911:6;900:9;896:22;886:32;;956:7;949:4;945:2;941:13;937:27;927:2;;978:1;975;968:12;927:2;1018;1005:16;1044:2;1036:6;1033:14;1030:2;;;1060:1;1057;1050:12;1030:2;1105:7;1100:2;1091:6;1087:2;1083:15;1079:24;1076:37;1073:2;;;1126:1;1123;1116:12;1073:2;523:668;;;;-1:-1:-1;523:668:10;;-1:-1:-1;1157:2:10;1149:11;;1179:6;523:668;-1:-1:-1;;;523:668:10:o;1196:180::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:2;;;1324:1;1321;1314:12;1276:2;-1:-1:-1;1347:23:10;;1266:110;-1:-1:-1;1266:110:10:o;3903:128::-;3943:3;3974:1;3970:6;3967:1;3964:13;3961:2;;;3980:18;;:::i;:::-;-1:-1:-1;4016:9:10;;3951:80::o;4036:125::-;4076:4;4104:1;4101;4098:8;4095:2;;;4109:18;;:::i;:::-;-1:-1:-1;4146:9:10;;4085:76::o;4166:127::-;4227:10;4222:3;4218:20;4215:1;4208:31;4258:4;4255:1;4248:15;4282:4;4279:1;4272:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "fundOracle()": {
        "details": "Fund the Oracle to cover gas fees and other costs",
        "notice": "Check the current price by retrieving `oraclePriceInWei`"
      },
      "getOperator()": {
        "details": "Returns the current oracle operator"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Implementation of IERC721Receiver",
        "notice": "Only accepts ERC721 tokens from the `wrappedPunksContract`The sender must have already funded the oracle with the `oraclePriceInWei`"
      },
      "setPrice(uint256)": {
        "details": "Sets the price to fulfill the oracle",
        "notice": "Only oracle operators may call this function"
      }
    },
    "version": 1
  },
  "offset": [
    125,
    3125
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x321F28F8 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x321F28F8 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xE7F43C68 EQ PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x1E12F727 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x27F16F99 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x30C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x101 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x596 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x101 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204F7261636C65206F6E6C792061636365707473205772617070656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x43727970746F50756E6B73 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x294 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D7573742066756E6420746865206F7261636C652077697468207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x652070726963652073657420696E20606F7261636C655072696365496E576569 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFD SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP6 SWAP1 PUSH32 0xC38C7FE124533978F8E6E32C0F6A1A051B08F1F519973ACEF1BEAA3C6107E16A SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2F5 SWAP1 DUP5 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x35E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420457468657220746F20746865206F726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x36329037B832B930BA37B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x3E2 SWAP1 DUP5 SWAP1 PUSH2 0x5AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 CALLVALUE SWAP1 PUSH32 0xF8D8F9C95AAF6177671BCC9DB84B0DE639A5CC30C6B673A9C82D31E6392341E SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x48A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F7261636C65206F70657261746F72206D617920706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3337B936903A3434B99030B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x51C6EAAAA11F3A57F136CD3FBCE664DFA4DA3C42210AB46757F048532068E0CE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F4 DUP3 PUSH2 0x4BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51C DUP7 PUSH2 0x4BD JUMP JUMPDEST SWAP5 POP PUSH2 0x52A PUSH1 0x20 DUP8 ADD PUSH2 0x4BD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5C2 PUSH2 0x5DE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D9 PUSH2 0x5DE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x29 DUP4 SWAP13 0xEA 0xD7 0xB6 LOG0 0x4F DIV DUP11 0xAC ISZERO 0xD5 SWAP4 GASLIMIT 0x26 0xCC 0xDE 0xED 0x22 DUP4 DUP10 SLT 0xDC 0x4C 0x49 SWAP11 0xCD 0x21 0xAB 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        125,
        3125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "LT",
      "path": "8"
    },
    "9": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x70"
    },
    "12": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "13": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "SHR",
      "path": "8"
    },
    "19": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "20": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x321F28F8"
    },
    "25": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "GT",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "30": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "31": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x321F28F8"
    },
    "36": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "EQ",
      "path": "8"
    },
    "37": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE1"
    },
    "40": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "41": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "42": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "47": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "EQ",
      "path": "8"
    },
    "48": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x119"
    },
    "51": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "52": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "53": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x91B7F5ED"
    },
    "58": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "EQ",
      "path": "8"
    },
    "59": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x146"
    },
    "62": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "63": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "64": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xE7F43C68"
    },
    "69": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "EQ",
      "path": "8"
    },
    "70": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x166"
    },
    "73": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "74": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "REVERT",
      "path": "8"
    },
    "78": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "79": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "80": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x150B7A02"
    },
    "85": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "EQ",
      "path": "8"
    },
    "86": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x75"
    },
    "89": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "90": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "91": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1E12F727"
    },
    "96": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "EQ",
      "path": "8"
    },
    "97": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB3"
    },
    "100": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "101": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "102": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x27F16F99"
    },
    "107": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "EQ",
      "path": "8"
    },
    "108": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD"
    },
    "111": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "112": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "113": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "115": {
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "DUP1",
      "path": "8"
    },
    "116": {
      "first_revert": true,
      "fn": null,
      "offset": [
        125,
        3125
      ],
      "op": "REVERT",
      "path": "8"
    },
    "117": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "118": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "119": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "DUP1",
      "path": "8"
    },
    "120": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "121": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x81"
    },
    "124": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "127": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "DUP1",
      "path": "8"
    },
    "128": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "REVERT",
      "path": "8"
    },
    "129": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "130": {
      "op": "POP"
    },
    "131": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x95"
    },
    "134": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x90"
    },
    "137": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "138": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "140": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4FB"
    },
    "143": {
      "fn": "Oracle.onERC721Received",
      "jump": "i",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMP",
      "path": "8"
    },
    "144": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "145": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x184"
    },
    "148": {
      "fn": "Oracle.onERC721Received",
      "jump": "i",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMP",
      "path": "8"
    },
    "149": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "150": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "152": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "op": "SUB"
    },
    "161": {
      "op": "NOT"
    },
    "162": {
      "op": "SWAP1"
    },
    "163": {
      "op": "SWAP2"
    },
    "164": {
      "op": "AND"
    },
    "165": {
      "op": "DUP2"
    },
    "166": {
      "op": "MSTORE"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "169": {
      "op": "ADD"
    },
    "170": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "171": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "173": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "174": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "DUP1",
      "path": "8"
    },
    "175": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "176": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "SUB",
      "path": "8"
    },
    "177": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "178": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "RETURN",
      "path": "8"
    },
    "179": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1842,
        2111
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "180": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1842,
        2111
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBB"
    },
    "183": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1842,
        2111
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x30C"
    },
    "186": {
      "fn": "Oracle.fundOracle",
      "jump": "i",
      "offset": [
        1842,
        2111
      ],
      "op": "JUMP",
      "path": "8"
    },
    "187": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1842,
        2111
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "188": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1842,
        2111
      ],
      "op": "STOP",
      "path": "8"
    },
    "189": {
      "offset": [
        436,
        467
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "190": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "191": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "DUP1",
      "path": "8"
    },
    "192": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "193": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC9"
    },
    "196": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "197": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "199": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "DUP1",
      "path": "8"
    },
    "200": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "REVERT",
      "path": "8"
    },
    "201": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "202": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "POP",
      "path": "8"
    },
    "203": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD3"
    },
    "206": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "208": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "209": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "DUP2",
      "path": "8"
    },
    "210": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "JUMP",
      "path": "8"
    },
    "211": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "212": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "214": {
      "fn": "Oracle.fundOracle",
      "offset": [
        436,
        467
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "215": {
      "op": "SWAP1"
    },
    "216": {
      "op": "DUP2"
    },
    "217": {
      "op": "MSTORE"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "220": {
      "op": "ADD"
    },
    "221": {
      "offset": [
        436,
        467
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAA"
    },
    "224": {
      "op": "JUMP"
    },
    "225": {
      "offset": [
        344,
        379
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "226": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "227": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "DUP1",
      "path": "8"
    },
    "228": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "229": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xED"
    },
    "232": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "233": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "235": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "DUP1",
      "path": "8"
    },
    "236": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "REVERT",
      "path": "8"
    },
    "237": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "238": {
      "op": "POP"
    },
    "239": {
      "offset": [
        344,
        379
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "241": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "242": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x101"
    },
    "245": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "252": {
      "op": "SHL"
    },
    "253": {
      "op": "SUB"
    },
    "254": {
      "offset": [
        344,
        379
      ],
      "op": "AND",
      "path": "8"
    },
    "255": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "DUP2",
      "path": "8"
    },
    "256": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "JUMP",
      "path": "8"
    },
    "257": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "258": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "260": {
      "fn": "Oracle.fundOracle",
      "offset": [
        344,
        379
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "267": {
      "op": "SHL"
    },
    "268": {
      "op": "SUB"
    },
    "269": {
      "op": "SWAP1"
    },
    "270": {
      "op": "SWAP2"
    },
    "271": {
      "op": "AND"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "MSTORE"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "276": {
      "op": "ADD"
    },
    "277": {
      "offset": [
        344,
        379
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAA"
    },
    "280": {
      "op": "JUMP"
    },
    "281": {
      "offset": [
        524,
        568
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "282": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "283": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "DUP1",
      "path": "8"
    },
    "284": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "285": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x125"
    },
    "288": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "289": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "291": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "DUP1",
      "path": "8"
    },
    "292": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "REVERT",
      "path": "8"
    },
    "293": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "offset": [
        524,
        568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD3"
    },
    "298": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x134"
    },
    "301": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "302": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "304": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D9"
    },
    "307": {
      "fn": "Oracle.fundOracle",
      "jump": "i",
      "offset": [
        524,
        568
      ],
      "op": "JUMP",
      "path": "8"
    },
    "308": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "309": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "311": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "313": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "314": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "316": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "317": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "DUP2",
      "path": "8"
    },
    "318": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "319": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "321": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "322": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "323": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "324": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "DUP2",
      "path": "8"
    },
    "325": {
      "fn": "Oracle.fundOracle",
      "offset": [
        524,
        568
      ],
      "op": "JUMP",
      "path": "8"
    },
    "326": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "327": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "328": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "329": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "330": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x152"
    },
    "333": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "334": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "336": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "DUP1",
      "path": "8"
    },
    "337": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "REVERT",
      "path": "8"
    },
    "338": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "339": {
      "op": "POP"
    },
    "340": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBB"
    },
    "343": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x161"
    },
    "346": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "347": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "349": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x596"
    },
    "352": {
      "fn": "Oracle.setPrice",
      "jump": "i",
      "offset": [
        1531,
        1686
      ],
      "op": "JUMP",
      "path": "8"
    },
    "353": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "354": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x417"
    },
    "357": {
      "fn": "Oracle.setPrice",
      "jump": "i",
      "offset": [
        1531,
        1686
      ],
      "op": "JUMP",
      "path": "8"
    },
    "358": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "359": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "360": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "DUP1",
      "path": "8"
    },
    "361": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "362": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x172"
    },
    "365": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "366": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "368": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "DUP1",
      "path": "8"
    },
    "369": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "REVERT",
      "path": "8"
    },
    "370": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "371": {
      "op": "POP"
    },
    "372": {
      "fn": "Oracle.getOperator",
      "offset": [
        3082,
        3089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "374": {
      "fn": "Oracle.getOperator",
      "offset": [
        3108,
        3116
      ],
      "op": "SLOAD",
      "path": "8",
      "statement": 0
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "op": "SUB"
    },
    "383": {
      "fn": "Oracle.getOperator",
      "offset": [
        3108,
        3116
      ],
      "op": "AND",
      "path": "8"
    },
    "384": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x101"
    },
    "387": {
      "fn": "Oracle.getOperator",
      "offset": [
        3037,
        3123
      ],
      "op": "JUMP",
      "path": "8"
    },
    "388": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "389": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2570,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 1,
      "value": "0x1"
    },
    "391": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2570,
        2590
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "392": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2500,
        2515
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "394": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2500,
        2515
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "401": {
      "op": "SHL"
    },
    "402": {
      "op": "SUB"
    },
    "403": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2570,
        2590
      ],
      "op": "AND",
      "path": "8"
    },
    "404": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2548,
        2558
      ],
      "op": "CALLER",
      "path": "8"
    },
    "405": {
      "branch": 11,
      "fn": "Oracle.onERC721Received",
      "offset": [
        2548,
        2591
      ],
      "op": "EQ",
      "path": "8"
    },
    "406": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1FA"
    },
    "409": {
      "branch": 11,
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "410": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "412": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "DUP2",
      "path": "8"
    },
    "421": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "424": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "426": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "DUP3",
      "path": "8"
    },
    "427": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "ADD",
      "path": "8"
    },
    "428": {
      "op": "MSTORE"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "433": {
      "op": "DUP3"
    },
    "434": {
      "op": "ADD"
    },
    "435": {
      "op": "MSTORE"
    },
    "436": {
      "op": "PUSH32",
      "value": "0x546865204F7261636C65206F6E6C792061636365707473205772617070656420"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "471": {
      "op": "DUP3"
    },
    "472": {
      "op": "ADD"
    },
    "473": {
      "op": "MSTORE"
    },
    "474": {
      "op": "PUSH11",
      "value": "0x43727970746F50756E6B73"
    },
    "486": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "488": {
      "op": "SHL"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "491": {
      "op": "DUP3"
    },
    "492": {
      "op": "ADD"
    },
    "493": {
      "op": "MSTORE"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "496": {
      "op": "ADD"
    },
    "497": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "498": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "500": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "501": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "DUP1",
      "path": "8"
    },
    "502": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "503": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "SUB",
      "path": "8"
    },
    "504": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "505": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "506": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2527,
        2660
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "507": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2711,
        2727
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x2"
    },
    "509": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2711,
        2727
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "op": "SUB"
    },
    "518": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "DUP7",
      "path": "8"
    },
    "519": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "AND",
      "path": "8"
    },
    "520": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "522": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "523": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "DUP2",
      "path": "8"
    },
    "524": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "525": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2701
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "527": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "529": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "530": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "532": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "533": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "534": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2707
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "535": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2727
      ],
      "op": "LT",
      "path": "8"
    },
    "536": {
      "branch": 12,
      "fn": "Oracle.onERC721Received",
      "offset": [
        2692,
        2727
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "537": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x294"
    },
    "540": {
      "branch": 12,
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "541": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "543": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "DUP2",
      "path": "8"
    },
    "552": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "555": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "557": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "DUP3",
      "path": "8"
    },
    "558": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "ADD",
      "path": "8"
    },
    "559": {
      "op": "MSTORE"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "564": {
      "op": "DUP3"
    },
    "565": {
      "op": "ADD"
    },
    "566": {
      "op": "MSTORE"
    },
    "567": {
      "op": "PUSH32",
      "value": "0x596F75206D7573742066756E6420746865206F7261636C652077697468207468"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "602": {
      "op": "DUP3"
    },
    "603": {
      "op": "ADD"
    },
    "604": {
      "op": "MSTORE"
    },
    "605": {
      "op": "PUSH32",
      "value": "0x652070726963652073657420696E20606F7261636C655072696365496E576569"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "640": {
      "op": "DUP3"
    },
    "641": {
      "op": "ADD"
    },
    "642": {
      "op": "MSTORE"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xFD"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "650": {
      "op": "DUP3"
    },
    "651": {
      "op": "ADD"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F1"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2671,
        2818
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "661": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 3,
      "value": "0x40"
    },
    "663": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "670": {
      "op": "SHL"
    },
    "671": {
      "op": "SUB"
    },
    "672": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "DUP7",
      "path": "8"
    },
    "673": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "AND",
      "path": "8"
    },
    "674": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "675": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2853,
        2860
      ],
      "op": "DUP6",
      "path": "8"
    },
    "676": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2853,
        2860
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "677": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xC38C7FE124533978F8E6E32C0F6A1A051B08F1F519973ACEF1BEAA3C6107E16A"
    },
    "710": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "711": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "713": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "714": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2834,
        2867
      ],
      "op": "LOG3",
      "path": "8"
    },
    "715": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2896,
        2912
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 4,
      "value": "0x2"
    },
    "717": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2896,
        2912
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "724": {
      "op": "SHL"
    },
    "725": {
      "op": "SUB"
    },
    "726": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "DUP7",
      "path": "8"
    },
    "727": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "AND",
      "path": "8"
    },
    "728": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "730": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "731": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "DUP2",
      "path": "8"
    },
    "732": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "733": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2886
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "735": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "737": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "738": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "740": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "DUP2",
      "path": "8"
    },
    "741": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "742": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "DUP1",
      "path": "8"
    },
    "743": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "744": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "745": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "746": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2892
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "747": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F5"
    },
    "750": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "751": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2896,
        2912
      ],
      "op": "DUP5",
      "path": "8"
    },
    "752": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2896,
        2912
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "753": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5C7"
    },
    "756": {
      "fn": "Oracle.onERC721Received",
      "jump": "i",
      "offset": [
        2877,
        2912
      ],
      "op": "JUMP",
      "path": "8"
    },
    "757": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "758": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "759": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "760": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2877,
        2912
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "761": {
      "op": "POP"
    },
    "762": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2930,
        2960
      ],
      "op": "SWAP8",
      "path": "8",
      "statement": 5
    },
    "771": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2343,
        2967
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "772": {
      "op": "POP"
    },
    "773": {
      "op": "POP"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "fn": "Oracle.onERC721Received",
      "jump": "o",
      "offset": [
        2343,
        2967
      ],
      "op": "JUMP",
      "path": "8"
    },
    "780": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1842,
        2111
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "781": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1890,
        1899
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "783": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1913
      ],
      "op": "DUP1",
      "path": "8"
    },
    "784": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1913
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "785": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "787": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1913
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "797": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1913
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "798": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1913
      ],
      "op": "AND",
      "path": "8"
    },
    "799": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1913
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "800": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1926,
        1935
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "801": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1926,
        1935
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "802": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1890,
        1899
      ],
      "op": "DUP4",
      "path": "8"
    },
    "803": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "DUP2",
      "path": "8"
    },
    "804": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1890,
        1899
      ],
      "op": "DUP2",
      "path": "8"
    },
    "805": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "DUP2",
      "path": "8"
    },
    "806": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1926,
        1935
      ],
      "op": "DUP6",
      "path": "8"
    },
    "807": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1913
      ],
      "op": "DUP8",
      "path": "8"
    },
    "808": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "GAS",
      "path": "8"
    },
    "809": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "CALL",
      "path": "8"
    },
    "810": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "811": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "POP",
      "path": "8"
    },
    "812": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "POP",
      "path": "8"
    },
    "813": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "POP",
      "path": "8"
    },
    "814": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "815": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "DUP1",
      "path": "8"
    },
    "816": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "818": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "DUP2",
      "path": "8"
    },
    "819": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "EQ",
      "path": "8"
    },
    "820": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x359"
    },
    "823": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "824": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "826": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "827": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "828": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "POP",
      "path": "8"
    },
    "829": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "831": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "NOT",
      "path": "8"
    },
    "832": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "834": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "835": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "ADD",
      "path": "8"
    },
    "836": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "AND",
      "path": "8"
    },
    "837": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "DUP3",
      "path": "8"
    },
    "838": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "ADD",
      "path": "8"
    },
    "839": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "841": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "842": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "843": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "DUP3",
      "path": "8"
    },
    "844": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "845": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "846": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "848": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "850": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "DUP5",
      "path": "8"
    },
    "851": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "ADD",
      "path": "8"
    },
    "852": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "853": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35E"
    },
    "856": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "JUMP",
      "path": "8"
    },
    "857": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "858": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "860": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "861": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "POP",
      "path": "8"
    },
    "862": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "863": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1905,
        1940
      ],
      "op": "POP",
      "path": "8"
    },
    "864": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1889,
        1940
      ],
      "op": "POP",
      "path": "8"
    },
    "865": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1889,
        1940
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "866": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1889,
        1940
      ],
      "op": "POP",
      "path": "8"
    },
    "867": {
      "branch": 13,
      "fn": "Oracle.fundOracle",
      "offset": [
        1958,
        1962
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 6
    },
    "868": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C3"
    },
    "871": {
      "branch": 13,
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "872": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "874": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "875": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "879": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "881": {
      "op": "SHL"
    },
    "882": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "DUP2",
      "path": "8"
    },
    "883": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "886": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "888": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "DUP3",
      "path": "8"
    },
    "889": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "ADD",
      "path": "8"
    },
    "890": {
      "op": "MSTORE"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "895": {
      "op": "DUP3"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "op": "MSTORE"
    },
    "898": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2073656E6420457468657220746F20746865206F726163"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "933": {
      "op": "DUP3"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "op": "PUSH11",
      "value": "0x36329037B832B930BA37B9"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "950": {
      "op": "SHL"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "953": {
      "op": "DUP3"
    },
    "954": {
      "op": "ADD"
    },
    "955": {
      "op": "MSTORE"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "958": {
      "op": "ADD"
    },
    "959": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F1"
    },
    "962": {
      "op": "JUMP"
    },
    "963": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1950,
        2010
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "964": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2030,
        2040
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 7
    },
    "965": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "967": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "968": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "DUP2",
      "path": "8"
    },
    "969": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "970": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2029
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "972": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "974": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "975": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "977": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "DUP2",
      "path": "8"
    },
    "978": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "979": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "DUP1",
      "path": "8"
    },
    "980": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "981": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2045,
        2054
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "982": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2045,
        2054
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "983": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "984": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3E2"
    },
    "987": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "988": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2045,
        2054
      ],
      "op": "DUP5",
      "path": "8"
    },
    "989": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2045,
        2054
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "990": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5AF"
    },
    "993": {
      "fn": "Oracle.fundOracle",
      "jump": "i",
      "offset": [
        2020,
        2054
      ],
      "op": "JUMP",
      "path": "8"
    },
    "994": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "995": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "996": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "997": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2020,
        2054
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "998": {
      "op": "POP"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2069,
        2104
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 8,
      "value": "0x40"
    },
    "1002": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2069,
        2104
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1003": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2093,
        2103
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1004": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2093,
        2103
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1005": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2082,
        2091
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1006": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2082,
        2091
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1007": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2069,
        2104
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xF8D8F9C95AAF6177671BCC9DB84B0DE639A5CC30C6B673A9C82D31E6392341E"
    },
    "1040": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2069,
        2104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1041": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2069,
        2104
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1043": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2069,
        2104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1044": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2069,
        2104
      ],
      "op": "LOG3",
      "path": "8"
    },
    "1045": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1879,
        2111
      ],
      "op": "POP",
      "path": "8"
    },
    "1046": {
      "fn": "Oracle.fundOracle",
      "jump": "o",
      "offset": [
        1842,
        2111
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1047": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1048": {
      "offset": [
        1300,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1050": {
      "fn": "Oracle.setPrice",
      "offset": [
        1300,
        1308
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "op": "SUB"
    },
    "1059": {
      "offset": [
        1300,
        1308
      ],
      "op": "AND",
      "path": "8"
    },
    "1060": {
      "offset": [
        1286,
        1296
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1061": {
      "offset": [
        1286,
        1308
      ],
      "op": "EQ",
      "path": "8"
    },
    "1062": {
      "offset": [
        1265,
        1382
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x48A"
    },
    "1065": {
      "offset": [
        1265,
        1382
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1066": {
      "fn": "Oracle.setPrice",
      "offset": [
        1265,
        1382
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1068": {
      "fn": "Oracle.setPrice",
      "offset": [
        1265,
        1382
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1069": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "offset": [
        1265,
        1382
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1077": {
      "fn": "Oracle.setPrice",
      "offset": [
        1265,
        1382
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1080": {
      "offset": [
        1265,
        1382
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1082": {
      "fn": "Oracle.setPrice",
      "offset": [
        1265,
        1382
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1083": {
      "fn": "Oracle.setPrice",
      "offset": [
        1265,
        1382
      ],
      "op": "ADD",
      "path": "8"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1089": {
      "op": "DUP3"
    },
    "1090": {
      "op": "ADD"
    },
    "1091": {
      "op": "MSTORE"
    },
    "1092": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206F7261636C65206F70657261746F72206D617920706572"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1127": {
      "op": "DUP3"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "op": "PUSH16",
      "value": "0x3337B936903A3434B99030B1BA34B7B7"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1152": {
      "op": "DUP3"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1157": {
      "op": "ADD"
    },
    "1158": {
      "offset": [
        1265,
        1382
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F1"
    },
    "1161": {
      "op": "JUMP"
    },
    "1162": {
      "offset": [
        1265,
        1382
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1163": {
      "fn": "Oracle.setPrice",
      "offset": [
        1605,
        1621
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 9,
      "value": "0x2"
    },
    "1165": {
      "fn": "Oracle.setPrice",
      "offset": [
        1605,
        1634
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1166": {
      "fn": "Oracle.setPrice",
      "offset": [
        1605,
        1634
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1167": {
      "fn": "Oracle.setPrice",
      "offset": [
        1605,
        1634
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1168": {
      "fn": "Oracle.setPrice",
      "offset": [
        1649,
        1679
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x40"
    },
    "1170": {
      "fn": "Oracle.setPrice",
      "offset": [
        1649,
        1679
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1171": {
      "fn": "Oracle.setPrice",
      "offset": [
        1624,
        1634
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1172": {
      "fn": "Oracle.setPrice",
      "offset": [
        1624,
        1634
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1173": {
      "fn": "Oracle.setPrice",
      "offset": [
        1649,
        1679
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x51C6EAAAA11F3A57F136CD3FBCE664DFA4DA3C42210AB46757F048532068E0CE"
    },
    "1206": {
      "fn": "Oracle.setPrice",
      "offset": [
        1649,
        1679
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1207": {
      "fn": "Oracle.setPrice",
      "offset": [
        1649,
        1679
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1209": {
      "fn": "Oracle.setPrice",
      "offset": [
        1649,
        1679
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1210": {
      "fn": "Oracle.setPrice",
      "offset": [
        1649,
        1679
      ],
      "op": "LOG2",
      "path": "8"
    },
    "1211": {
      "fn": "Oracle.setPrice",
      "offset": [
        1531,
        1686
      ],
      "op": "POP",
      "path": "8"
    },
    "1212": {
      "fn": "Oracle.setPrice",
      "jump": "o",
      "offset": [
        1531,
        1686
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1213": {
      "op": "JUMPDEST"
    },
    "1214": {
      "op": "DUP1"
    },
    "1215": {
      "op": "CALLDATALOAD"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1222": {
      "op": "SHL"
    },
    "1223": {
      "op": "SUB"
    },
    "1224": {
      "op": "DUP2"
    },
    "1225": {
      "op": "AND"
    },
    "1226": {
      "op": "DUP2"
    },
    "1227": {
      "op": "EQ"
    },
    "1228": {
      "op": "PUSH2",
      "value": "0x4D4"
    },
    "1231": {
      "op": "JUMPI"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1234": {
      "op": "DUP1"
    },
    "1235": {
      "op": "REVERT"
    },
    "1236": {
      "op": "JUMPDEST"
    },
    "1237": {
      "op": "SWAP2"
    },
    "1238": {
      "op": "SWAP1"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "jump": "o",
      "op": "JUMP"
    },
    "1241": {
      "op": "JUMPDEST"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1246": {
      "op": "DUP3"
    },
    "1247": {
      "op": "DUP5"
    },
    "1248": {
      "op": "SUB"
    },
    "1249": {
      "op": "SLT"
    },
    "1250": {
      "op": "ISZERO"
    },
    "1251": {
      "op": "PUSH2",
      "value": "0x4EB"
    },
    "1254": {
      "op": "JUMPI"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1257": {
      "op": "DUP1"
    },
    "1258": {
      "op": "REVERT"
    },
    "1259": {
      "op": "JUMPDEST"
    },
    "1260": {
      "op": "PUSH2",
      "value": "0x4F4"
    },
    "1263": {
      "op": "DUP3"
    },
    "1264": {
      "op": "PUSH2",
      "value": "0x4BD"
    },
    "1267": {
      "jump": "i",
      "op": "JUMP"
    },
    "1268": {
      "op": "JUMPDEST"
    },
    "1269": {
      "op": "SWAP4"
    },
    "1270": {
      "op": "SWAP3"
    },
    "1271": {
      "op": "POP"
    },
    "1272": {
      "op": "POP"
    },
    "1273": {
      "op": "POP"
    },
    "1274": {
      "jump": "o",
      "op": "JUMP"
    },
    "1275": {
      "op": "JUMPDEST"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1278": {
      "op": "DUP1"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1281": {
      "op": "DUP1"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1286": {
      "op": "DUP7"
    },
    "1287": {
      "op": "DUP9"
    },
    "1288": {
      "op": "SUB"
    },
    "1289": {
      "op": "SLT"
    },
    "1290": {
      "op": "ISZERO"
    },
    "1291": {
      "op": "PUSH2",
      "value": "0x513"
    },
    "1294": {
      "op": "JUMPI"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1297": {
      "op": "DUP1"
    },
    "1298": {
      "op": "REVERT"
    },
    "1299": {
      "op": "JUMPDEST"
    },
    "1300": {
      "op": "PUSH2",
      "value": "0x51C"
    },
    "1303": {
      "op": "DUP7"
    },
    "1304": {
      "op": "PUSH2",
      "value": "0x4BD"
    },
    "1307": {
      "jump": "i",
      "op": "JUMP"
    },
    "1308": {
      "op": "JUMPDEST"
    },
    "1309": {
      "op": "SWAP5"
    },
    "1310": {
      "op": "POP"
    },
    "1311": {
      "op": "PUSH2",
      "value": "0x52A"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1316": {
      "op": "DUP8"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "PUSH2",
      "value": "0x4BD"
    },
    "1321": {
      "jump": "i",
      "op": "JUMP"
    },
    "1322": {
      "op": "JUMPDEST"
    },
    "1323": {
      "op": "SWAP4"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1327": {
      "op": "DUP7"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "op": "CALLDATALOAD"
    },
    "1330": {
      "op": "SWAP3"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1334": {
      "op": "DUP7"
    },
    "1335": {
      "op": "ADD"
    },
    "1336": {
      "op": "CALLDATALOAD"
    },
    "1337": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1346": {
      "op": "DUP1"
    },
    "1347": {
      "op": "DUP3"
    },
    "1348": {
      "op": "GT"
    },
    "1349": {
      "op": "ISZERO"
    },
    "1350": {
      "op": "PUSH2",
      "value": "0x54E"
    },
    "1353": {
      "op": "JUMPI"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1356": {
      "op": "DUP1"
    },
    "1357": {
      "op": "REVERT"
    },
    "1358": {
      "op": "JUMPDEST"
    },
    "1359": {
      "op": "DUP2"
    },
    "1360": {
      "op": "DUP9"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "SWAP2"
    },
    "1363": {
      "op": "POP"
    },
    "1364": {
      "op": "DUP9"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1367": {
      "op": "DUP4"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "SLT"
    },
    "1370": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1373": {
      "op": "JUMPI"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1376": {
      "op": "DUP1"
    },
    "1377": {
      "op": "REVERT"
    },
    "1378": {
      "op": "JUMPDEST"
    },
    "1379": {
      "op": "DUP2"
    },
    "1380": {
      "op": "CALLDATALOAD"
    },
    "1381": {
      "op": "DUP2"
    },
    "1382": {
      "op": "DUP2"
    },
    "1383": {
      "op": "GT"
    },
    "1384": {
      "op": "ISZERO"
    },
    "1385": {
      "op": "PUSH2",
      "value": "0x571"
    },
    "1388": {
      "op": "JUMPI"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1391": {
      "op": "DUP1"
    },
    "1392": {
      "op": "REVERT"
    },
    "1393": {
      "op": "JUMPDEST"
    },
    "1394": {
      "op": "DUP10"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "DUP6"
    },
    "1399": {
      "op": "ADD"
    },
    "1400": {
      "op": "ADD"
    },
    "1401": {
      "op": "GT"
    },
    "1402": {
      "op": "ISZERO"
    },
    "1403": {
      "op": "PUSH2",
      "value": "0x583"
    },
    "1406": {
      "op": "JUMPI"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1409": {
      "op": "DUP1"
    },
    "1410": {
      "op": "REVERT"
    },
    "1411": {
      "op": "JUMPDEST"
    },
    "1412": {
      "op": "SWAP7"
    },
    "1413": {
      "op": "SWAP10"
    },
    "1414": {
      "op": "SWAP6"
    },
    "1415": {
      "op": "SWAP9"
    },
    "1416": {
      "op": "POP"
    },
    "1417": {
      "op": "SWAP4"
    },
    "1418": {
      "op": "SWAP7"
    },
    "1419": {
      "op": "POP"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "SWAP5"
    },
    "1424": {
      "op": "SWAP4"
    },
    "1425": {
      "op": "SWAP3"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "jump": "o",
      "op": "JUMP"
    },
    "1430": {
      "op": "JUMPDEST"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1435": {
      "op": "DUP3"
    },
    "1436": {
      "op": "DUP5"
    },
    "1437": {
      "op": "SUB"
    },
    "1438": {
      "op": "SLT"
    },
    "1439": {
      "op": "ISZERO"
    },
    "1440": {
      "op": "PUSH2",
      "value": "0x5A8"
    },
    "1443": {
      "op": "JUMPI"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "DUP1"
    },
    "1447": {
      "op": "REVERT"
    },
    "1448": {
      "op": "JUMPDEST"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "CALLDATALOAD"
    },
    "1451": {
      "op": "SWAP2"
    },
    "1452": {
      "op": "SWAP1"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "jump": "o",
      "op": "JUMP"
    },
    "1455": {
      "op": "JUMPDEST"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "NOT"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "GT"
    },
    "1462": {
      "op": "ISZERO"
    },
    "1463": {
      "op": "PUSH2",
      "value": "0x5C2"
    },
    "1466": {
      "op": "JUMPI"
    },
    "1467": {
      "op": "PUSH2",
      "value": "0x5C2"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1473": {
      "jump": "i",
      "op": "JUMP"
    },
    "1474": {
      "op": "JUMPDEST"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "SWAP1"
    },
    "1478": {
      "jump": "o",
      "op": "JUMP"
    },
    "1479": {
      "op": "JUMPDEST"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1482": {
      "op": "DUP3"
    },
    "1483": {
      "op": "DUP3"
    },
    "1484": {
      "op": "LT"
    },
    "1485": {
      "op": "ISZERO"
    },
    "1486": {
      "op": "PUSH2",
      "value": "0x5D9"
    },
    "1489": {
      "op": "JUMPI"
    },
    "1490": {
      "op": "PUSH2",
      "value": "0x5D9"
    },
    "1493": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1496": {
      "jump": "i",
      "op": "JUMP"
    },
    "1497": {
      "op": "JUMPDEST"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "op": "SWAP1"
    },
    "1501": {
      "jump": "o",
      "op": "JUMP"
    },
    "1502": {
      "op": "JUMPDEST"
    },
    "1503": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1513": {
      "op": "MSTORE"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1518": {
      "op": "MSTORE"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "op": "REVERT"
    }
  },
  "sha1": "6a0c58abb83c8ac675c417c05118513f456674b0",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n\ncontract Oracle is IERC721Receiver {\n    // The oracle operator\n    address private operator;\n\n    // The contract address of the Wrapped CryptoPunk ERC721\n    // Mainnet: 0xb7f7f6c52f2e2fdb1963eab30438024864c313f6\n    address public wrappedPunksContract;\n\n    // The cost to complete an Oracle transaction\n    uint256 public oraclePriceInWei;\n\n    // Retrieves the balance of the given address\n    mapping(address => uint256) public balanceOf;\n\n    // Emitted when a Wrapped CryptoPunk ERC721 is received\n    event CryptoPunkReceived(uint256 indexed id, address indexed from);\n\n    // Emitted when the Oracle price has changed\n    event OraclePriceChanged(uint256 indexed priceInWei);\n\n    // Emitted when somebody funds the oracle\n    event OracleFunded(uint256 indexed amountInWei, address indexed from);\n\n    constructor(address _wrappedPunksContract, uint256 _oraclePriceInWei) {\n        operator = msg.sender;\n        wrappedPunksContract = _wrappedPunksContract;\n        oraclePriceInWei = _oraclePriceInWei;\n    }\n\n    /**\n     * @dev Modifier that only oracle operators may call\n     */\n    modifier onlyOracleOperator() {\n        require(\n            msg.sender == operator,\n            \"Only the oracle operator may perform this action\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Sets the price to fulfill the oracle\n     * @notice Only oracle operators may call this function\n     */\n    function setPrice(uint256 priceInWei) public onlyOracleOperator {\n        oraclePriceInWei = priceInWei;\n        emit OraclePriceChanged(priceInWei);\n    }\n\n    /**\n     * @dev Fund the Oracle to cover gas fees and other costs\n     * @notice Check the current price by retrieving `oraclePriceInWei`\n     */\n    function fundOracle() public payable {\n        (bool sent, ) = operator.call{value: msg.value}(\"\");\n        require(sent, \"Failed to send Ether to the oracle operator\");\n        balanceOf[msg.sender] += msg.value;\n        emit OracleFunded(msg.value, msg.sender);\n    }\n\n    /**\n     * @dev Implementation of IERC721Receiver\n     * @notice Only accepts ERC721 tokens from the `wrappedPunksContract`\n     * @notice The sender must have already funded the oracle with the `oraclePriceInWei`\n     */\n    function onERC721Received(\n        address sender,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) public override returns (bytes4 selector) {\n        require(\n            msg.sender == address(wrappedPunksContract),\n            \"The Oracle only accepts Wrapped CryptoPunks\"\n        );\n\n        require(\n            balanceOf[from] >= oraclePriceInWei,\n            \"You must fund the oracle with the price set in `oraclePriceInWei`\"\n        );\n\n        emit CryptoPunkReceived(tokenId, from);\n        balanceOf[from] -= oraclePriceInWei;\n\n        return this.onERC721Received.selector;\n    }\n\n    /**\n     * @dev Returns the current oracle operator\n     */\n    function getOperator() external view returns(address) {\n        return operator;\n    }\n}\n",
  "sourceMap": "125:3000:8:-:0;;;938:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1018:8;:21;;1029:10;-1:-1:-1;;;;;;1018:21:8;;;;;;;-1:-1:-1;1049:44:8;;;;;-1:-1:-1;;;;;1049:44:8;;;;;;;;;;;1103:16;:36;125:3000;;14:351:10;93:6;101;154:2;142:9;133:7;129:23;125:32;122:2;;;170:1;167;160:12;122:2;196:16;;-1:-1:-1;;;;;241:31:10;;231:42;;221:2;;287:1;284;277:12;221:2;355;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;112:253:10:o;:::-;125:3000:8;;;;;;",
  "sourcePath": "contracts/Oracle.sol",
  "type": "contract"
}