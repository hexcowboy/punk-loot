{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wrappedPunksContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_oraclePriceInWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "CryptoPunkReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountInWei",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "OracleFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "OraclePriceChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundOracle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oraclePriceInWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedPunksContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/IERC721Receiver.sol",
    "1": "contracts/Oracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/Oracle.sol",
    "exportedSymbols": {
      "IERC721Receiver": [
        454
      ],
      "Oracle": [
        436
      ]
    },
    "id": 437,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 269,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "absolutePath": "/Users/jack/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 270,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 455,
        "src": "56:66:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 271,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 454,
              "src": "143:15:1"
            },
            "id": 272,
            "nodeType": "InheritanceSpecifier",
            "src": "143:15:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          454
        ],
        "name": "Oracle",
        "nameLocation": "133:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "570ca735",
            "id": 274,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "207:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "192:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 273,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "321f28f8",
            "id": 276,
            "mutability": "mutable",
            "name": "wrappedPunksContract",
            "nameLocation": "357:20:1",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "342:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 275,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "342:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27f16f99",
            "id": 278,
            "mutability": "mutable",
            "name": "oraclePriceInWei",
            "nameLocation": "449:16:1",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "434:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 277,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 282,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "557:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "522:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 281,
              "keyType": {
                "id": 279,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "530:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "522:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 280,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "541:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 288,
            "name": "CryptoPunkReceived",
            "nameLocation": "639:18:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "674:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "658:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "694:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "678:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:42:1"
            },
            "src": "633:67:1"
          },
          {
            "anonymous": false,
            "id": 292,
            "name": "OraclePriceChanged",
            "nameLocation": "761:18:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "796:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "780:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "779:28:1"
            },
            "src": "755:53:1"
          },
          {
            "anonymous": false,
            "id": 298,
            "name": "OracleFunded",
            "nameLocation": "866:12:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amountInWei",
                  "nameLocation": "895:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "879:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "924:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "908:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "878:51:1"
            },
            "src": "860:70:1"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "1006:138:1",
              "statements": [
                {
                  "expression": {
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 305,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 274,
                      "src": "1016:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 306,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1027:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1027:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1016:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:21:1"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 310,
                      "name": "wrappedPunksContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 276,
                      "src": "1047:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 311,
                      "name": "_wrappedPunksContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "1070:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1047:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:44:1"
                },
                {
                  "expression": {
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 314,
                      "name": "oraclePriceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "1101:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 315,
                      "name": "_oraclePriceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "1120:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1101:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:36:1"
                }
              ]
            },
            "id": 319,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "_wrappedPunksContract",
                  "nameLocation": "956:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "948:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "_oraclePriceInWei",
                  "nameLocation": "987:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "979:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "947:58:1"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:0:1"
            },
            "scope": 436,
            "src": "936:208:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "1253:145:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1284:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1284:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 325,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "1298:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1284:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f7261636c65206f70657261746f72206d617920706572666f726d207468697320616374696f6e",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1320:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f838567f5ff9ac50cd236f5e25efd25d30be7f5f73dcf970ebe8f73d5744142",
                          "typeString": "literal_string \"Only the oracle operator may perform this action\""
                        },
                        "value": "Only the oracle operator may perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f838567f5ff9ac50cd236f5e25efd25d30be7f5f73dcf970ebe8f73d5744142",
                          "typeString": "literal_string \"Only the oracle operator may perform this action\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1263:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:117:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:117:1"
                },
                {
                  "id": 330,
                  "nodeType": "PlaceholderStatement",
                  "src": "1390:1:1"
                }
              ]
            },
            "documentation": {
              "id": 320,
              "nodeType": "StructuredDocumentation",
              "src": "1150:68:1",
              "text": " @dev Modifier that only oracle operators may call"
            },
            "id": 332,
            "name": "onlyOracleOperator",
            "nameLocation": "1232:18:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1250:2:1"
            },
            "src": "1223:175:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "1593:91:1",
              "statements": [
                {
                  "expression": {
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 340,
                      "name": "oraclePriceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "1603:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 341,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "1622:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1603:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 345,
                        "name": "priceInWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "1666:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 344,
                      "name": "OraclePriceChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "1647:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "EmitStatement",
                  "src": "1642:35:1"
                }
              ]
            },
            "documentation": {
              "id": 333,
              "nodeType": "StructuredDocumentation",
              "src": "1404:120:1",
              "text": " @dev Sets the price to fulfill the oracle\n @notice Only oracle operators may call this function"
            },
            "functionSelector": "91b7f5ed",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 338,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 337,
                  "name": "onlyOracleOperator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1574:18:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1574:18:1"
              }
            ],
            "name": "setPrice",
            "nameLocation": "1538:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "1555:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "1547:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1546:20:1"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:1"
            },
            "scope": 436,
            "src": "1529:155:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "1877:232:1",
              "statements": [
                {
                  "assignments": [
                    354,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 354,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "1893:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 383,
                      "src": "1888:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 353,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1888:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 362,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1935:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 355,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "1903:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1903:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 357,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1924:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1924:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1903:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1903:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1887:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 364,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "1956:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e6420457468657220746f20746865206f7261636c65206f70657261746f72",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1962:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f640982424951f62df86745e502b956ed7f94a44d713453fdf4f001a69cd5bb4",
                          "typeString": "literal_string \"Failed to send Ether to the oracle operator\""
                        },
                        "value": "Failed to send Ether to the oracle operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f640982424951f62df86745e502b956ed7f94a44d713453fdf4f001a69cd5bb4",
                          "typeString": "literal_string \"Failed to send Ether to the oracle operator\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1948:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:60:1"
                },
                {
                  "expression": {
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 368,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2018:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 371,
                      "indexExpression": {
                        "expression": {
                          "id": 369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2028:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2028:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2018:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 372,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2043:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2043:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2018:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:34:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 377,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2080:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2080:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 379,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2091:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2091:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 376,
                      "name": "OracleFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "2067:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2067:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "EmitStatement",
                  "src": "2062:40:1"
                }
              ]
            },
            "documentation": {
              "id": 350,
              "nodeType": "StructuredDocumentation",
              "src": "1690:145:1",
              "text": " @dev Fund the Oracle to cover gas fees and other costs\n @notice Check the current price by retrieving `oraclePriceInWei`"
            },
            "functionSelector": "1e12f727",
            "id": 384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundOracle",
            "nameLocation": "1849:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:2:1"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:1"
            },
            "scope": 436,
            "src": "1840:269:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              453
            ],
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "2515:450:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 400,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2546:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2546:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 404,
                              "name": "wrappedPunksContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "2568:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2560:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 402,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2560:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2560:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2546:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865204f7261636c65206f6e6c79206163636570747320577261707065642043727970746f50756e6b73",
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2603:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bb31ba7b92e9232d95910825e417b6caf652b8753c16909f8e39252dac2b6da",
                          "typeString": "literal_string \"The Oracle only accepts Wrapped CryptoPunks\""
                        },
                        "value": "The Oracle only accepts Wrapped CryptoPunks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bb31ba7b92e9232d95910825e417b6caf652b8753c16909f8e39252dac2b6da",
                          "typeString": "literal_string \"The Oracle only accepts Wrapped CryptoPunks\""
                        }
                      ],
                      "id": 399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2525:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:133:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:133:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 411,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "2690:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 413,
                          "indexExpression": {
                            "id": 412,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "2700:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2690:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 414,
                          "name": "oraclePriceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "2709:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2690:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742066756e6420746865206f7261636c652077697468207468652070726963652073657420696e20606f7261636c655072696365496e57656960",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2739:67:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b69f50ff6b413a705d45368e42aa50946f851842b35e1c68e349ad0d2263485",
                          "typeString": "literal_string \"You must fund the oracle with the price set in `oraclePriceInWei`\""
                        },
                        "value": "You must fund the oracle with the price set in `oraclePriceInWei`"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b69f50ff6b413a705d45368e42aa50946f851842b35e1c68e349ad0d2263485",
                          "typeString": "literal_string \"You must fund the oracle with the price set in `oraclePriceInWei`\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2669:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:147:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:147:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 420,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "2851:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 421,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "2860:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 419,
                      "name": "CryptoPunkReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2832:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2832:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "EmitStatement",
                  "src": "2827:38:1"
                },
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 424,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2875:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 426,
                      "indexExpression": {
                        "id": 425,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "2885:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2875:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 427,
                      "name": "oraclePriceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2894:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2875:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:35:1"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 430,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2928:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Oracle_$436",
                          "typeString": "contract Oracle"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 435,
                      "src": "2928:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "2928:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 398,
                  "id": 433,
                  "nodeType": "Return",
                  "src": "2921:37:1"
                }
              ]
            },
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "2115:221:1",
              "text": " @dev Implementation of IERC721Receiver\n @notice Only accepts ERC721 tokens from the `wrappedPunksContract`\n @notice The sender must have already funded the oracle with the `oraclePriceInWei`"
            },
            "functionSelector": "150b7a02",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "2350:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 395,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2480:8:1"
            },
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2384:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "2376:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2408:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "2400:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2400:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2430:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "2422:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2422:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2462:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "2447:19:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2447:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2366:106:1"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "2505:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "2498:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2497:17:1"
            },
            "scope": 436,
            "src": "2341:624:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 437,
        "src": "124:2843:1",
        "usedErrors": []
      }
    ],
    "src": "31:2937:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516106db3803806106db83398101604081905261002f91610066565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0393909316929092179091556002556100a0565b6000806040838503121561007957600080fd5b82516001600160a01b038116811461009057600080fd5b6020939093015192949293505050565b61062c806100af6000396000f3fe6080604052600436106100705760003560e01c8063321f28f81161004e578063321f28f8146100e1578063570ca7351461011957806370a082311461013957806391b7f5ed1461016657600080fd5b8063150b7a02146100755780631e12f727146100b357806327f16f99146100bd575b600080fd5b34801561008157600080fd5b506100956100903660046104fd565b610186565b6040516001600160e01b031990911681526020015b60405180910390f35b6100bb61030e565b005b3480156100c957600080fd5b506100d360025481565b6040519081526020016100aa565b3480156100ed57600080fd5b50600154610101906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561012557600080fd5b50600054610101906001600160a01b031681565b34801561014557600080fd5b506100d36101543660046104db565b60036020526000908152604090205481565b34801561017257600080fd5b506100bb610181366004610598565b610419565b6001546000906001600160a01b031633146101fc5760405162461bcd60e51b815260206004820152602b60248201527f546865204f7261636c65206f6e6c79206163636570747320577261707065642060448201526a43727970746f50756e6b7360a81b60648201526084015b60405180910390fd5b6002546001600160a01b03861660009081526003602052604090205410156102965760405162461bcd60e51b815260206004820152604160248201527f596f75206d7573742066756e6420746865206f7261636c65207769746820746860448201527f652070726963652073657420696e20606f7261636c655072696365496e5765696064820152600360fd1b608482015260a4016101f3565b6040516001600160a01b0386169085907fc38c7fe124533978f8e6e32c0f6a1a051b08f1f519973acef1beaa3c6107e16a90600090a36002546001600160a01b038616600090815260036020526040812080549091906102f79084906105c9565b90915550630a85bd0160e11b979650505050505050565b600080546040516001600160a01b039091169034908381818185875af1925050503d806000811461035b576040519150601f19603f3d011682016040523d82523d6000602084013e610360565b606091505b50509050806103c55760405162461bcd60e51b815260206004820152602b60248201527f4661696c656420746f2073656e6420457468657220746f20746865206f72616360448201526a36329037b832b930ba37b960a91b60648201526084016101f3565b33600090815260036020526040812080543492906103e49084906105b1565b9091555050604051339034907f0f8d8f9c95aaf6177671bcc9db84b0de639a5cc30c6b673a9c82d31e6392341e90600090a350565b6000546001600160a01b0316331461048c5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7920746865206f7261636c65206f70657261746f72206d61792070657260448201526f3337b936903a3434b99030b1ba34b7b760811b60648201526084016101f3565b600281905560405181907f51c6eaaaa11f3a57f136cd3fbce664dfa4da3c42210ab46757f048532068e0ce90600090a250565b80356001600160a01b03811681146104d657600080fd5b919050565b6000602082840312156104ed57600080fd5b6104f6826104bf565b9392505050565b60008060008060006080868803121561051557600080fd5b61051e866104bf565b945061052c602087016104bf565b935060408601359250606086013567ffffffffffffffff8082111561055057600080fd5b818801915088601f83011261056457600080fd5b81358181111561057357600080fd5b89602082850101111561058557600080fd5b9699959850939650602001949392505050565b6000602082840312156105aa57600080fd5b5035919050565b600082198211156105c4576105c46105e0565b500190565b6000828210156105db576105db6105e0565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cc84196b1f8d04bab86dbed15e3696ba51b284f5a9008154bfe1b1367a7df30f64736f6c63430008060033",
  "bytecodeSha1": "d210c1b89a9542507dae065af0875fce3ab95344",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.6+commit.11564f7e"
  },
  "contractName": "Oracle",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Oracle.fundOracle": {
          "12": [
            1956,
            1960,
            true
          ]
        },
        "Oracle.onERC721Received": {
          "10": [
            2546,
            2589,
            true
          ],
          "11": [
            2690,
            2725,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "Oracle.fundOracle": {
          "5": [
            1948,
            2008
          ],
          "6": [
            2018,
            2052
          ],
          "7": [
            2062,
            2102
          ]
        },
        "Oracle.onERC721Received": {
          "0": [
            2525,
            2658
          ],
          "1": [
            2669,
            2816
          ],
          "2": [
            2827,
            2865
          ],
          "3": [
            2875,
            2910
          ],
          "4": [
            2921,
            2958
          ]
        },
        "Oracle.setPrice": {
          "8": [
            1603,
            1632
          ],
          "9": [
            1642,
            1677
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC721Receiver"
  ],
  "deployedBytecode": "6080604052600436106100705760003560e01c8063321f28f81161004e578063321f28f8146100e1578063570ca7351461011957806370a082311461013957806391b7f5ed1461016657600080fd5b8063150b7a02146100755780631e12f727146100b357806327f16f99146100bd575b600080fd5b34801561008157600080fd5b506100956100903660046104fd565b610186565b6040516001600160e01b031990911681526020015b60405180910390f35b6100bb61030e565b005b3480156100c957600080fd5b506100d360025481565b6040519081526020016100aa565b3480156100ed57600080fd5b50600154610101906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b34801561012557600080fd5b50600054610101906001600160a01b031681565b34801561014557600080fd5b506100d36101543660046104db565b60036020526000908152604090205481565b34801561017257600080fd5b506100bb610181366004610598565b610419565b6001546000906001600160a01b031633146101fc5760405162461bcd60e51b815260206004820152602b60248201527f546865204f7261636c65206f6e6c79206163636570747320577261707065642060448201526a43727970746f50756e6b7360a81b60648201526084015b60405180910390fd5b6002546001600160a01b03861660009081526003602052604090205410156102965760405162461bcd60e51b815260206004820152604160248201527f596f75206d7573742066756e6420746865206f7261636c65207769746820746860448201527f652070726963652073657420696e20606f7261636c655072696365496e5765696064820152600360fd1b608482015260a4016101f3565b6040516001600160a01b0386169085907fc38c7fe124533978f8e6e32c0f6a1a051b08f1f519973acef1beaa3c6107e16a90600090a36002546001600160a01b038616600090815260036020526040812080549091906102f79084906105c9565b90915550630a85bd0160e11b979650505050505050565b600080546040516001600160a01b039091169034908381818185875af1925050503d806000811461035b576040519150601f19603f3d011682016040523d82523d6000602084013e610360565b606091505b50509050806103c55760405162461bcd60e51b815260206004820152602b60248201527f4661696c656420746f2073656e6420457468657220746f20746865206f72616360448201526a36329037b832b930ba37b960a91b60648201526084016101f3565b33600090815260036020526040812080543492906103e49084906105b1565b9091555050604051339034907f0f8d8f9c95aaf6177671bcc9db84b0de639a5cc30c6b673a9c82d31e6392341e90600090a350565b6000546001600160a01b0316331461048c5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7920746865206f7261636c65206f70657261746f72206d61792070657260448201526f3337b936903a3434b99030b1ba34b7b760811b60648201526084016101f3565b600281905560405181907f51c6eaaaa11f3a57f136cd3fbce664dfa4da3c42210ab46757f048532068e0ce90600090a250565b80356001600160a01b03811681146104d657600080fd5b919050565b6000602082840312156104ed57600080fd5b6104f6826104bf565b9392505050565b60008060008060006080868803121561051557600080fd5b61051e866104bf565b945061052c602087016104bf565b935060408601359250606086013567ffffffffffffffff8082111561055057600080fd5b818801915088601f83011261056457600080fd5b81358181111561057357600080fd5b89602082850101111561058557600080fd5b9699959850939650602001949392505050565b6000602082840312156105aa57600080fd5b5035919050565b600082198211156105c4576105c46105e0565b500190565b6000828210156105db576105db6105e0565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cc84196b1f8d04bab86dbed15e3696ba51b284f5a9008154bfe1b1367a7df30f64736f6c63430008060033",
  "deployedSourceMap": "124:2843:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2341:624;;;;;;;;;;-1:-1:-1;2341:624:1;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1961:33:3;;;1943:52;;1931:2;1916:18;2341:624:1;;;;;;;;1840:269;;;:::i;:::-;;434:31;;;;;;;;;;;;;;;;;;;3867:25:3;;;3855:2;3840:18;434:31:1;3822:76:3;342:35:1;;;;;;;;;;-1:-1:-1;342:35:1;;;;-1:-1:-1;;;;;342:35:1;;;;;;-1:-1:-1;;;;;1755:32:3;;;1737:51;;1725:2;1710:18;342:35:1;1692:102:3;192:23:1;;;;;;;;;;-1:-1:-1;192:23:1;;;;-1:-1:-1;;;;;192:23:1;;;522:44;;;;;;;;;;-1:-1:-1;522:44:1;;;;;:::i;:::-;;;;;;;;;;;;;;1529:155;;;;;;;;;;-1:-1:-1;1529:155:1;;;;;:::i;:::-;;:::i;2341:624::-;2568:20;;2498:15;;-1:-1:-1;;;;;2568:20:1;2546:10;:43;2525:133;;;;-1:-1:-1;;;2525:133:1;;2682:2:3;2525:133:1;;;2664:21:3;2721:2;2701:18;;;2694:30;2760:34;2740:18;;;2733:62;-1:-1:-1;;;2811:18:3;;;2804:41;2862:19;;2525:133:1;;;;;;;;;2709:16;;-1:-1:-1;;;;;2690:15:1;;;;;;:9;:15;;;;;;:35;;2669:147;;;;-1:-1:-1;;;2669:147:1;;2208:2:3;2669:147:1;;;2190:21:3;2247:2;2227:18;;;2220:30;2286:34;2266:18;;;2259:62;2357:34;2337:18;;;2330:62;-1:-1:-1;;;2408:19:3;;;2401:32;2450:19;;2669:147:1;2180:295:3;2669:147:1;2832:33;;-1:-1:-1;;;;;2832:33:1;;;2851:7;;2832:33;;;;;2894:16;;-1:-1:-1;;;;;2875:15:1;;;;;;:9;:15;;;;;:35;;:15;;;:35;;2894:16;;2875:35;:::i;:::-;;;;-1:-1:-1;;;;2928:30:1;2341:624;-1:-1:-1;;;;;;;2341:624:1:o;1840:269::-;1888:9;1903:8;;:35;;-1:-1:-1;;;;;1903:8:1;;;;1924:9;;1888;1903:35;1888:9;1903:35;1924:9;1903:8;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1887:51;;;1956:4;1948:60;;;;-1:-1:-1;;;1948:60:1;;3511:2:3;1948:60:1;;;3493:21:3;3550:2;3530:18;;;3523:30;3589:34;3569:18;;;3562:62;-1:-1:-1;;;3640:18:3;;;3633:41;3691:19;;1948:60:1;3483:233:3;1948:60:1;2028:10;2018:21;;;;:9;:21;;;;;:34;;2043:9;;2018:21;:34;;2043:9;;2018:34;:::i;:::-;;;;-1:-1:-1;;2067:35:1;;2091:10;;2080:9;;2067:35;;;;;1877:232;1840:269::o;1529:155::-;1298:8;;-1:-1:-1;;;;;1298:8:1;1284:10;:22;1263:117;;;;-1:-1:-1;;;1263:117:1;;3094:2:3;1263:117:1;;;3076:21:3;3133:2;3113:18;;;3106:30;3172:34;3152:18;;;3145:62;-1:-1:-1;;;3223:18:3;;;3216:46;3279:19;;1263:117:1;3066:238:3;1263:117:1;1603:16:::1;:29:::0;;;1647:30:::1;::::0;1622:10;;1647:30:::1;::::0;;;::::1;1529:155:::0;:::o;14:173:3:-;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:3:o;383:808::-;480:6;488;496;504;512;565:3;553:9;544:7;540:23;536:33;533:2;;;582:1;579;572:12;533:2;605:29;624:9;605:29;:::i;:::-;595:39;;653:38;687:2;676:9;672:18;653:38;:::i;:::-;643:48;;738:2;727:9;723:18;710:32;700:42;;793:2;782:9;778:18;765:32;816:18;857:2;849:6;846:14;843:2;;;873:1;870;863:12;843:2;911:6;900:9;896:22;886:32;;956:7;949:4;945:2;941:13;937:27;927:2;;978:1;975;968:12;927:2;1018;1005:16;1044:2;1036:6;1033:14;1030:2;;;1060:1;1057;1050:12;1030:2;1105:7;1100:2;1091:6;1087:2;1083:15;1079:24;1076:37;1073:2;;;1126:1;1123;1116:12;1073:2;523:668;;;;-1:-1:-1;523:668:3;;-1:-1:-1;1157:2:3;1149:11;;1179:6;523:668;-1:-1:-1;;;523:668:3:o;1196:180::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:2;;;1324:1;1321;1314:12;1276:2;-1:-1:-1;1347:23:3;;1266:110;-1:-1:-1;1266:110:3:o;3903:128::-;3943:3;3974:1;3970:6;3967:1;3964:13;3961:2;;;3980:18;;:::i;:::-;-1:-1:-1;4016:9:3;;3951:80::o;4036:125::-;4076:4;4104:1;4101;4098:8;4095:2;;;4109:18;;:::i;:::-;-1:-1:-1;4146:9:3;;4085:76::o;4166:127::-;4227:10;4222:3;4218:20;4215:1;4208:31;4258:4;4255:1;4248:15;4282:4;4279:1;4272:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "fundOracle()": {
        "details": "Fund the Oracle to cover gas fees and other costs",
        "notice": "Check the current price by retrieving `oraclePriceInWei`"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Implementation of IERC721Receiver",
        "notice": "Only accepts ERC721 tokens from the `wrappedPunksContract`The sender must have already funded the oracle with the `oraclePriceInWei`"
      },
      "setPrice(uint256)": {
        "details": "Sets the price to fulfill the oracle",
        "notice": "Only oracle operators may call this function"
      }
    },
    "version": 1
  },
  "offset": [
    124,
    2967
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x321F28F8 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x321F28F8 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x1E12F727 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x27F16F99 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x30E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x101 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x101 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204F7261636C65206F6E6C792061636365707473205772617070656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x43727970746F50756E6B73 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D7573742066756E6420746865206F7261636C652077697468207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x652070726963652073657420696E20606F7261636C655072696365496E576569 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFD SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP6 SWAP1 PUSH32 0xC38C7FE124533978F8E6E32C0F6A1A051B08F1F519973ACEF1BEAA3C6107E16A SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2F7 SWAP1 DUP5 SWAP1 PUSH2 0x5C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x360 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E6420457468657220746F20746865206F726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x36329037B832B930BA37B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x3E4 SWAP1 DUP5 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 CALLVALUE SWAP1 PUSH32 0xF8D8F9C95AAF6177671BCC9DB84B0DE639A5CC30C6B673A9C82D31E6392341E SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F7261636C65206F70657261746F72206D617920706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3337B936903A3434B99030B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x51C6EAAAA11F3A57F136CD3FBCE664DFA4DA3C42210AB46757F048532068E0CE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F6 DUP3 PUSH2 0x4BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51E DUP7 PUSH2 0x4BF JUMP JUMPDEST SWAP5 POP PUSH2 0x52C PUSH1 0x20 DUP8 ADD PUSH2 0x4BF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5C4 JUMPI PUSH2 0x5C4 PUSH2 0x5E0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5DB JUMPI PUSH2 0x5DB PUSH2 0x5E0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC DUP5 NOT PUSH12 0x1F8D04BAB86DBED15E3696BA MLOAD 0xB2 DUP5 CREATE2 0xA9 STOP DUP2 SLOAD 0xBF 0xE1 0xB1 CALLDATASIZE PUSH27 0x7DF30F64736F6C6343000806003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        124,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70"
    },
    "12": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x321F28F8"
    },
    "25": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "GT",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x321F28F8"
    },
    "36": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1"
    },
    "40": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x570CA735"
    },
    "47": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x119"
    },
    "51": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "58": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x139"
    },
    "62": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x91B7F5ED"
    },
    "69": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166"
    },
    "73": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "REVERT",
      "path": "1"
    },
    "78": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "79": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "80": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x150B7A02"
    },
    "85": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "EQ",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x75"
    },
    "89": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1E12F727"
    },
    "96": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "EQ",
      "path": "1"
    },
    "97": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB3"
    },
    "100": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x27F16F99"
    },
    "107": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "EQ",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD"
    },
    "111": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "115": {
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "116": {
      "first_revert": true,
      "fn": null,
      "offset": [
        124,
        2967
      ],
      "op": "REVERT",
      "path": "1"
    },
    "117": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "118": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "119": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "DUP1",
      "path": "1"
    },
    "120": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "121": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x81"
    },
    "124": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "127": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "DUP1",
      "path": "1"
    },
    "128": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "REVERT",
      "path": "1"
    },
    "129": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "130": {
      "op": "POP"
    },
    "131": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95"
    },
    "134": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90"
    },
    "137": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "138": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "140": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FD"
    },
    "143": {
      "fn": "Oracle.onERC721Received",
      "jump": "i",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMP",
      "path": "1"
    },
    "144": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "145": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x186"
    },
    "148": {
      "fn": "Oracle.onERC721Received",
      "jump": "i",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMP",
      "path": "1"
    },
    "149": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "150": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "152": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "op": "SUB"
    },
    "161": {
      "op": "NOT"
    },
    "162": {
      "op": "SWAP1"
    },
    "163": {
      "op": "SWAP2"
    },
    "164": {
      "op": "AND"
    },
    "165": {
      "op": "DUP2"
    },
    "166": {
      "op": "MSTORE"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "169": {
      "op": "ADD"
    },
    "170": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "171": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "173": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "174": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "176": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "SUB",
      "path": "1"
    },
    "177": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "178": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "RETURN",
      "path": "1"
    },
    "179": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1840,
        2109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "180": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1840,
        2109
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "183": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1840,
        2109
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30E"
    },
    "186": {
      "fn": "Oracle.fundOracle",
      "jump": "i",
      "offset": [
        1840,
        2109
      ],
      "op": "JUMP",
      "path": "1"
    },
    "187": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1840,
        2109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "188": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1840,
        2109
      ],
      "op": "STOP",
      "path": "1"
    },
    "189": {
      "offset": [
        434,
        465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "190": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "191": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "DUP1",
      "path": "1"
    },
    "192": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "193": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9"
    },
    "196": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "197": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "199": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "DUP1",
      "path": "1"
    },
    "200": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "REVERT",
      "path": "1"
    },
    "201": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "202": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "POP",
      "path": "1"
    },
    "203": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD3"
    },
    "206": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "208": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "209": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "DUP2",
      "path": "1"
    },
    "210": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "211": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "212": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "214": {
      "fn": "Oracle.fundOracle",
      "offset": [
        434,
        465
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "215": {
      "op": "SWAP1"
    },
    "216": {
      "op": "DUP2"
    },
    "217": {
      "op": "MSTORE"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "220": {
      "op": "ADD"
    },
    "221": {
      "offset": [
        434,
        465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA"
    },
    "224": {
      "op": "JUMP"
    },
    "225": {
      "offset": [
        342,
        377
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "226": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "227": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "DUP1",
      "path": "1"
    },
    "228": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "229": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED"
    },
    "232": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "233": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "235": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "DUP1",
      "path": "1"
    },
    "236": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "REVERT",
      "path": "1"
    },
    "237": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "238": {
      "op": "POP"
    },
    "239": {
      "offset": [
        342,
        377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "241": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "242": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "245": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "252": {
      "op": "SHL"
    },
    "253": {
      "op": "SUB"
    },
    "254": {
      "offset": [
        342,
        377
      ],
      "op": "AND",
      "path": "1"
    },
    "255": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "DUP2",
      "path": "1"
    },
    "256": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "JUMP",
      "path": "1"
    },
    "257": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "258": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "260": {
      "fn": "Oracle.fundOracle",
      "offset": [
        342,
        377
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "267": {
      "op": "SHL"
    },
    "268": {
      "op": "SUB"
    },
    "269": {
      "op": "SWAP1"
    },
    "270": {
      "op": "SWAP2"
    },
    "271": {
      "op": "AND"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "MSTORE"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "276": {
      "op": "ADD"
    },
    "277": {
      "offset": [
        342,
        377
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA"
    },
    "280": {
      "op": "JUMP"
    },
    "281": {
      "offset": [
        192,
        215
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "282": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "283": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "DUP1",
      "path": "1"
    },
    "284": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "285": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125"
    },
    "288": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "289": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "291": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "DUP1",
      "path": "1"
    },
    "292": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "REVERT",
      "path": "1"
    },
    "293": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "offset": [
        192,
        215
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "297": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "298": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "301": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "308": {
      "op": "SHL"
    },
    "309": {
      "op": "SUB"
    },
    "310": {
      "offset": [
        192,
        215
      ],
      "op": "AND",
      "path": "1"
    },
    "311": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "DUP2",
      "path": "1"
    },
    "312": {
      "fn": "Oracle.fundOracle",
      "offset": [
        192,
        215
      ],
      "op": "JUMP",
      "path": "1"
    },
    "313": {
      "offset": [
        522,
        566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "314": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "315": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "316": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "317": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x145"
    },
    "320": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "321": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "323": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "324": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "REVERT",
      "path": "1"
    },
    "325": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "326": {
      "op": "POP"
    },
    "327": {
      "offset": [
        522,
        566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD3"
    },
    "330": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x154"
    },
    "333": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "334": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "336": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DB"
    },
    "339": {
      "fn": "Oracle.fundOracle",
      "jump": "i",
      "offset": [
        522,
        566
      ],
      "op": "JUMP",
      "path": "1"
    },
    "340": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "341": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "343": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "345": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "346": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "348": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "349": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "350": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "351": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "353": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "354": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "355": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "356": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "357": {
      "fn": "Oracle.fundOracle",
      "offset": [
        522,
        566
      ],
      "op": "JUMP",
      "path": "1"
    },
    "358": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "359": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "360": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "DUP1",
      "path": "1"
    },
    "361": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "362": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172"
    },
    "365": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "366": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "368": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "DUP1",
      "path": "1"
    },
    "369": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "REVERT",
      "path": "1"
    },
    "370": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "371": {
      "op": "POP"
    },
    "372": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "375": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x181"
    },
    "378": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "379": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "381": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x598"
    },
    "384": {
      "fn": "Oracle.setPrice",
      "jump": "i",
      "offset": [
        1529,
        1684
      ],
      "op": "JUMP",
      "path": "1"
    },
    "385": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "386": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x419"
    },
    "389": {
      "fn": "Oracle.setPrice",
      "jump": "i",
      "offset": [
        1529,
        1684
      ],
      "op": "JUMP",
      "path": "1"
    },
    "390": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "391": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2568,
        2588
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x1"
    },
    "393": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2568,
        2588
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "394": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2498,
        2513
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "396": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2498,
        2513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "403": {
      "op": "SHL"
    },
    "404": {
      "op": "SUB"
    },
    "405": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2568,
        2588
      ],
      "op": "AND",
      "path": "1"
    },
    "406": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2546,
        2556
      ],
      "op": "CALLER",
      "path": "1"
    },
    "407": {
      "branch": 10,
      "fn": "Oracle.onERC721Received",
      "offset": [
        2546,
        2589
      ],
      "op": "EQ",
      "path": "1"
    },
    "408": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC"
    },
    "411": {
      "branch": 10,
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "412": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "414": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "421": {
      "op": "SHL"
    },
    "422": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "DUP2",
      "path": "1"
    },
    "423": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "426": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "428": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "DUP3",
      "path": "1"
    },
    "429": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "ADD",
      "path": "1"
    },
    "430": {
      "op": "MSTORE"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "435": {
      "op": "DUP3"
    },
    "436": {
      "op": "ADD"
    },
    "437": {
      "op": "MSTORE"
    },
    "438": {
      "op": "PUSH32",
      "value": "0x546865204F7261636C65206F6E6C792061636365707473205772617070656420"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "473": {
      "op": "DUP3"
    },
    "474": {
      "op": "ADD"
    },
    "475": {
      "op": "MSTORE"
    },
    "476": {
      "op": "PUSH11",
      "value": "0x43727970746F50756E6B73"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "493": {
      "op": "DUP3"
    },
    "494": {
      "op": "ADD"
    },
    "495": {
      "op": "MSTORE"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "498": {
      "op": "ADD"
    },
    "499": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "500": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "502": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "503": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "DUP1",
      "path": "1"
    },
    "504": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "505": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "SUB",
      "path": "1"
    },
    "506": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "507": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "508": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2525,
        2658
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "509": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2709,
        2725
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x2"
    },
    "511": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2709,
        2725
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "518": {
      "op": "SHL"
    },
    "519": {
      "op": "SUB"
    },
    "520": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "DUP7",
      "path": "1"
    },
    "521": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "AND",
      "path": "1"
    },
    "522": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "524": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "525": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "DUP2",
      "path": "1"
    },
    "526": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "527": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "529": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "531": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "532": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "534": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "535": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "536": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2705
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "537": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2725
      ],
      "op": "LT",
      "path": "1"
    },
    "538": {
      "branch": 11,
      "fn": "Oracle.onERC721Received",
      "offset": [
        2690,
        2725
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "539": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x296"
    },
    "542": {
      "branch": 11,
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "543": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "545": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "552": {
      "op": "SHL"
    },
    "553": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "554": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "557": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "559": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "560": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "ADD",
      "path": "1"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "566": {
      "op": "DUP3"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "op": "PUSH32",
      "value": "0x596F75206D7573742066756E6420746865206F7261636C652077697468207468"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "604": {
      "op": "DUP3"
    },
    "605": {
      "op": "ADD"
    },
    "606": {
      "op": "MSTORE"
    },
    "607": {
      "op": "PUSH32",
      "value": "0x652070726963652073657420696E20606F7261636C655072696365496E576569"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "642": {
      "op": "DUP3"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xFD"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "652": {
      "op": "DUP3"
    },
    "653": {
      "op": "ADD"
    },
    "654": {
      "op": "MSTORE"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "657": {
      "op": "ADD"
    },
    "658": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F3"
    },
    "661": {
      "op": "JUMP"
    },
    "662": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2669,
        2816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "663": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x40"
    },
    "665": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "SUB"
    },
    "674": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "DUP7",
      "path": "1"
    },
    "675": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "AND",
      "path": "1"
    },
    "676": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "677": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2851,
        2858
      ],
      "op": "DUP6",
      "path": "1"
    },
    "678": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2851,
        2858
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "679": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC38C7FE124533978F8E6E32C0F6A1A051B08F1F519973ACEF1BEAA3C6107E16A"
    },
    "712": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "713": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "715": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "716": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2832,
        2865
      ],
      "op": "LOG3",
      "path": "1"
    },
    "717": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2894,
        2910
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x2"
    },
    "719": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2894,
        2910
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "SUB"
    },
    "728": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "DUP7",
      "path": "1"
    },
    "729": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "AND",
      "path": "1"
    },
    "730": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "732": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "733": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "DUP2",
      "path": "1"
    },
    "734": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "735": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2884
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "737": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "739": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "740": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "742": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "DUP2",
      "path": "1"
    },
    "743": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "744": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "DUP1",
      "path": "1"
    },
    "745": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "746": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "747": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "748": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2890
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "749": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F7"
    },
    "752": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "753": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2894,
        2910
      ],
      "op": "DUP5",
      "path": "1"
    },
    "754": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2894,
        2910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "755": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C9"
    },
    "758": {
      "fn": "Oracle.onERC721Received",
      "jump": "i",
      "offset": [
        2875,
        2910
      ],
      "op": "JUMP",
      "path": "1"
    },
    "759": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "760": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "761": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "762": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2875,
        2910
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "763": {
      "op": "POP"
    },
    "764": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "771": {
      "op": "SHL"
    },
    "772": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2928,
        2958
      ],
      "op": "SWAP8",
      "path": "1",
      "statement": 4
    },
    "773": {
      "fn": "Oracle.onERC721Received",
      "offset": [
        2341,
        2965
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "op": "POP"
    },
    "781": {
      "fn": "Oracle.onERC721Received",
      "jump": "o",
      "offset": [
        2341,
        2965
      ],
      "op": "JUMP",
      "path": "1"
    },
    "782": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1840,
        2109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "783": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1888,
        1897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "785": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1911
      ],
      "op": "DUP1",
      "path": "1"
    },
    "786": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1911
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "787": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "789": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "op": "SUB"
    },
    "798": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1911
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "799": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1911
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "800": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1911
      ],
      "op": "AND",
      "path": "1"
    },
    "801": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1911
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "802": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1924,
        1933
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "803": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1924,
        1933
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "804": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1888,
        1897
      ],
      "op": "DUP4",
      "path": "1"
    },
    "805": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "1"
    },
    "806": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1888,
        1897
      ],
      "op": "DUP2",
      "path": "1"
    },
    "807": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "1"
    },
    "808": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1924,
        1933
      ],
      "op": "DUP6",
      "path": "1"
    },
    "809": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1911
      ],
      "op": "DUP8",
      "path": "1"
    },
    "810": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "GAS",
      "path": "1"
    },
    "811": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "CALL",
      "path": "1"
    },
    "812": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "813": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "POP",
      "path": "1"
    },
    "814": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "POP",
      "path": "1"
    },
    "815": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "POP",
      "path": "1"
    },
    "816": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "817": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP1",
      "path": "1"
    },
    "818": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "820": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "1"
    },
    "821": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "EQ",
      "path": "1"
    },
    "822": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35B"
    },
    "825": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "826": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "828": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "829": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "830": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "POP",
      "path": "1"
    },
    "831": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "833": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "NOT",
      "path": "1"
    },
    "834": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "836": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "837": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "ADD",
      "path": "1"
    },
    "838": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "AND",
      "path": "1"
    },
    "839": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP3",
      "path": "1"
    },
    "840": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "ADD",
      "path": "1"
    },
    "841": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "843": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "844": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "845": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP3",
      "path": "1"
    },
    "846": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "847": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "848": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "850": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "852": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP5",
      "path": "1"
    },
    "853": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "ADD",
      "path": "1"
    },
    "854": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "855": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x360"
    },
    "858": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "JUMP",
      "path": "1"
    },
    "859": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "860": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "862": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "863": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "POP",
      "path": "1"
    },
    "864": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "865": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1903,
        1938
      ],
      "op": "POP",
      "path": "1"
    },
    "866": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1887,
        1938
      ],
      "op": "POP",
      "path": "1"
    },
    "867": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1887,
        1938
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "868": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1887,
        1938
      ],
      "op": "POP",
      "path": "1"
    },
    "869": {
      "branch": 12,
      "fn": "Oracle.fundOracle",
      "offset": [
        1956,
        1960
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 5
    },
    "870": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C5"
    },
    "873": {
      "branch": 12,
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "874": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "876": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "877": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "881": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "883": {
      "op": "SHL"
    },
    "884": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "DUP2",
      "path": "1"
    },
    "885": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "888": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "890": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "DUP3",
      "path": "1"
    },
    "891": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "ADD",
      "path": "1"
    },
    "892": {
      "op": "MSTORE"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "897": {
      "op": "DUP3"
    },
    "898": {
      "op": "ADD"
    },
    "899": {
      "op": "MSTORE"
    },
    "900": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2073656E6420457468657220746F20746865206F726163"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "935": {
      "op": "DUP3"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "op": "MSTORE"
    },
    "938": {
      "op": "PUSH11",
      "value": "0x36329037B832B930BA37B9"
    },
    "950": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "952": {
      "op": "SHL"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F3"
    },
    "964": {
      "op": "JUMP"
    },
    "965": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1948,
        2008
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "966": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2028,
        2038
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 6
    },
    "967": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "969": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "970": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "971": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "972": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "974": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "976": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "977": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "979": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "980": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "981": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "DUP1",
      "path": "1"
    },
    "982": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "983": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2043,
        2052
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "984": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2043,
        2052
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "985": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "986": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E4"
    },
    "989": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "990": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2043,
        2052
      ],
      "op": "DUP5",
      "path": "1"
    },
    "991": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2043,
        2052
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "992": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B1"
    },
    "995": {
      "fn": "Oracle.fundOracle",
      "jump": "i",
      "offset": [
        2018,
        2052
      ],
      "op": "JUMP",
      "path": "1"
    },
    "996": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "997": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "998": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "999": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2018,
        2052
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2067,
        2102
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x40"
    },
    "1004": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2067,
        2102
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1005": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2091,
        2101
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1006": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2091,
        2101
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1007": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2080,
        2089
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1008": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2080,
        2089
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1009": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2067,
        2102
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xF8D8F9C95AAF6177671BCC9DB84B0DE639A5CC30C6B673A9C82D31E6392341E"
    },
    "1042": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2067,
        2102
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1043": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2067,
        2102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1045": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2067,
        2102
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1046": {
      "fn": "Oracle.fundOracle",
      "offset": [
        2067,
        2102
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1047": {
      "fn": "Oracle.fundOracle",
      "offset": [
        1877,
        2109
      ],
      "op": "POP",
      "path": "1"
    },
    "1048": {
      "fn": "Oracle.fundOracle",
      "jump": "o",
      "offset": [
        1840,
        2109
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1049": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1050": {
      "offset": [
        1298,
        1306
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1052": {
      "fn": "Oracle.setPrice",
      "offset": [
        1298,
        1306
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1059": {
      "op": "SHL"
    },
    "1060": {
      "op": "SUB"
    },
    "1061": {
      "offset": [
        1298,
        1306
      ],
      "op": "AND",
      "path": "1"
    },
    "1062": {
      "offset": [
        1284,
        1294
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1063": {
      "offset": [
        1284,
        1306
      ],
      "op": "EQ",
      "path": "1"
    },
    "1064": {
      "offset": [
        1263,
        1380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48C"
    },
    "1067": {
      "offset": [
        1263,
        1380
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1068": {
      "fn": "Oracle.setPrice",
      "offset": [
        1263,
        1380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1070": {
      "fn": "Oracle.setPrice",
      "offset": [
        1263,
        1380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1071": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "offset": [
        1263,
        1380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1079": {
      "fn": "Oracle.setPrice",
      "offset": [
        1263,
        1380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1082": {
      "offset": [
        1263,
        1380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1084": {
      "fn": "Oracle.setPrice",
      "offset": [
        1263,
        1380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1085": {
      "fn": "Oracle.setPrice",
      "offset": [
        1263,
        1380
      ],
      "op": "ADD",
      "path": "1"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1091": {
      "op": "DUP3"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "MSTORE"
    },
    "1094": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206F7261636C65206F70657261746F72206D617920706572"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1129": {
      "op": "DUP3"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "op": "PUSH16",
      "value": "0x3337B936903A3434B99030B1BA34B7B7"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1154": {
      "op": "DUP3"
    },
    "1155": {
      "op": "ADD"
    },
    "1156": {
      "op": "MSTORE"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1159": {
      "op": "ADD"
    },
    "1160": {
      "offset": [
        1263,
        1380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F3"
    },
    "1163": {
      "op": "JUMP"
    },
    "1164": {
      "offset": [
        1263,
        1380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1165": {
      "fn": "Oracle.setPrice",
      "offset": [
        1603,
        1619
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x2"
    },
    "1167": {
      "fn": "Oracle.setPrice",
      "offset": [
        1603,
        1632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1168": {
      "fn": "Oracle.setPrice",
      "offset": [
        1603,
        1632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1169": {
      "fn": "Oracle.setPrice",
      "offset": [
        1603,
        1632
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1170": {
      "fn": "Oracle.setPrice",
      "offset": [
        1647,
        1677
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x40"
    },
    "1172": {
      "fn": "Oracle.setPrice",
      "offset": [
        1647,
        1677
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1173": {
      "fn": "Oracle.setPrice",
      "offset": [
        1622,
        1632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1174": {
      "fn": "Oracle.setPrice",
      "offset": [
        1622,
        1632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1175": {
      "fn": "Oracle.setPrice",
      "offset": [
        1647,
        1677
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x51C6EAAAA11F3A57F136CD3FBCE664DFA4DA3C42210AB46757F048532068E0CE"
    },
    "1208": {
      "fn": "Oracle.setPrice",
      "offset": [
        1647,
        1677
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1209": {
      "fn": "Oracle.setPrice",
      "offset": [
        1647,
        1677
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1211": {
      "fn": "Oracle.setPrice",
      "offset": [
        1647,
        1677
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1212": {
      "fn": "Oracle.setPrice",
      "offset": [
        1647,
        1677
      ],
      "op": "LOG2",
      "path": "1"
    },
    "1213": {
      "fn": "Oracle.setPrice",
      "offset": [
        1529,
        1684
      ],
      "op": "POP",
      "path": "1"
    },
    "1214": {
      "fn": "Oracle.setPrice",
      "jump": "o",
      "offset": [
        1529,
        1684
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1215": {
      "op": "JUMPDEST"
    },
    "1216": {
      "op": "DUP1"
    },
    "1217": {
      "op": "CALLDATALOAD"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "op": "DUP2"
    },
    "1227": {
      "op": "AND"
    },
    "1228": {
      "op": "DUP2"
    },
    "1229": {
      "op": "EQ"
    },
    "1230": {
      "op": "PUSH2",
      "value": "0x4D6"
    },
    "1233": {
      "op": "JUMPI"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1236": {
      "op": "DUP1"
    },
    "1237": {
      "op": "REVERT"
    },
    "1238": {
      "op": "JUMPDEST"
    },
    "1239": {
      "op": "SWAP2"
    },
    "1240": {
      "op": "SWAP1"
    },
    "1241": {
      "op": "POP"
    },
    "1242": {
      "jump": "o",
      "op": "JUMP"
    },
    "1243": {
      "op": "JUMPDEST"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1248": {
      "op": "DUP3"
    },
    "1249": {
      "op": "DUP5"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "op": "SLT"
    },
    "1252": {
      "op": "ISZERO"
    },
    "1253": {
      "op": "PUSH2",
      "value": "0x4ED"
    },
    "1256": {
      "op": "JUMPI"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1259": {
      "op": "DUP1"
    },
    "1260": {
      "op": "REVERT"
    },
    "1261": {
      "op": "JUMPDEST"
    },
    "1262": {
      "op": "PUSH2",
      "value": "0x4F6"
    },
    "1265": {
      "op": "DUP3"
    },
    "1266": {
      "op": "PUSH2",
      "value": "0x4BF"
    },
    "1269": {
      "jump": "i",
      "op": "JUMP"
    },
    "1270": {
      "op": "JUMPDEST"
    },
    "1271": {
      "op": "SWAP4"
    },
    "1272": {
      "op": "SWAP3"
    },
    "1273": {
      "op": "POP"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "op": "POP"
    },
    "1276": {
      "jump": "o",
      "op": "JUMP"
    },
    "1277": {
      "op": "JUMPDEST"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1280": {
      "op": "DUP1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1283": {
      "op": "DUP1"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1288": {
      "op": "DUP7"
    },
    "1289": {
      "op": "DUP9"
    },
    "1290": {
      "op": "SUB"
    },
    "1291": {
      "op": "SLT"
    },
    "1292": {
      "op": "ISZERO"
    },
    "1293": {
      "op": "PUSH2",
      "value": "0x515"
    },
    "1296": {
      "op": "JUMPI"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1299": {
      "op": "DUP1"
    },
    "1300": {
      "op": "REVERT"
    },
    "1301": {
      "op": "JUMPDEST"
    },
    "1302": {
      "op": "PUSH2",
      "value": "0x51E"
    },
    "1305": {
      "op": "DUP7"
    },
    "1306": {
      "op": "PUSH2",
      "value": "0x4BF"
    },
    "1309": {
      "jump": "i",
      "op": "JUMP"
    },
    "1310": {
      "op": "JUMPDEST"
    },
    "1311": {
      "op": "SWAP5"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "op": "PUSH2",
      "value": "0x52C"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1318": {
      "op": "DUP8"
    },
    "1319": {
      "op": "ADD"
    },
    "1320": {
      "op": "PUSH2",
      "value": "0x4BF"
    },
    "1323": {
      "jump": "i",
      "op": "JUMP"
    },
    "1324": {
      "op": "JUMPDEST"
    },
    "1325": {
      "op": "SWAP4"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1329": {
      "op": "DUP7"
    },
    "1330": {
      "op": "ADD"
    },
    "1331": {
      "op": "CALLDATALOAD"
    },
    "1332": {
      "op": "SWAP3"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1336": {
      "op": "DUP7"
    },
    "1337": {
      "op": "ADD"
    },
    "1338": {
      "op": "CALLDATALOAD"
    },
    "1339": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1348": {
      "op": "DUP1"
    },
    "1349": {
      "op": "DUP3"
    },
    "1350": {
      "op": "GT"
    },
    "1351": {
      "op": "ISZERO"
    },
    "1352": {
      "op": "PUSH2",
      "value": "0x550"
    },
    "1355": {
      "op": "JUMPI"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1358": {
      "op": "DUP1"
    },
    "1359": {
      "op": "REVERT"
    },
    "1360": {
      "op": "JUMPDEST"
    },
    "1361": {
      "op": "DUP2"
    },
    "1362": {
      "op": "DUP9"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "SWAP2"
    },
    "1365": {
      "op": "POP"
    },
    "1366": {
      "op": "DUP9"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1369": {
      "op": "DUP4"
    },
    "1370": {
      "op": "ADD"
    },
    "1371": {
      "op": "SLT"
    },
    "1372": {
      "op": "PUSH2",
      "value": "0x564"
    },
    "1375": {
      "op": "JUMPI"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1378": {
      "op": "DUP1"
    },
    "1379": {
      "op": "REVERT"
    },
    "1380": {
      "op": "JUMPDEST"
    },
    "1381": {
      "op": "DUP2"
    },
    "1382": {
      "op": "CALLDATALOAD"
    },
    "1383": {
      "op": "DUP2"
    },
    "1384": {
      "op": "DUP2"
    },
    "1385": {
      "op": "GT"
    },
    "1386": {
      "op": "ISZERO"
    },
    "1387": {
      "op": "PUSH2",
      "value": "0x573"
    },
    "1390": {
      "op": "JUMPI"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1393": {
      "op": "DUP1"
    },
    "1394": {
      "op": "REVERT"
    },
    "1395": {
      "op": "JUMPDEST"
    },
    "1396": {
      "op": "DUP10"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "op": "DUP3"
    },
    "1400": {
      "op": "DUP6"
    },
    "1401": {
      "op": "ADD"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "op": "GT"
    },
    "1404": {
      "op": "ISZERO"
    },
    "1405": {
      "op": "PUSH2",
      "value": "0x585"
    },
    "1408": {
      "op": "JUMPI"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1411": {
      "op": "DUP1"
    },
    "1412": {
      "op": "REVERT"
    },
    "1413": {
      "op": "JUMPDEST"
    },
    "1414": {
      "op": "SWAP7"
    },
    "1415": {
      "op": "SWAP10"
    },
    "1416": {
      "op": "SWAP6"
    },
    "1417": {
      "op": "SWAP9"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "op": "SWAP4"
    },
    "1420": {
      "op": "SWAP7"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "SWAP5"
    },
    "1426": {
      "op": "SWAP4"
    },
    "1427": {
      "op": "SWAP3"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "op": "POP"
    },
    "1430": {
      "op": "POP"
    },
    "1431": {
      "jump": "o",
      "op": "JUMP"
    },
    "1432": {
      "op": "JUMPDEST"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1437": {
      "op": "DUP3"
    },
    "1438": {
      "op": "DUP5"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "op": "SLT"
    },
    "1441": {
      "op": "ISZERO"
    },
    "1442": {
      "op": "PUSH2",
      "value": "0x5AA"
    },
    "1445": {
      "op": "JUMPI"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1448": {
      "op": "DUP1"
    },
    "1449": {
      "op": "REVERT"
    },
    "1450": {
      "op": "JUMPDEST"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "CALLDATALOAD"
    },
    "1453": {
      "op": "SWAP2"
    },
    "1454": {
      "op": "SWAP1"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "jump": "o",
      "op": "JUMP"
    },
    "1457": {
      "op": "JUMPDEST"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "NOT"
    },
    "1462": {
      "op": "DUP3"
    },
    "1463": {
      "op": "GT"
    },
    "1464": {
      "op": "ISZERO"
    },
    "1465": {
      "op": "PUSH2",
      "value": "0x5C4"
    },
    "1468": {
      "op": "JUMPI"
    },
    "1469": {
      "op": "PUSH2",
      "value": "0x5C4"
    },
    "1472": {
      "op": "PUSH2",
      "value": "0x5E0"
    },
    "1475": {
      "jump": "i",
      "op": "JUMP"
    },
    "1476": {
      "op": "JUMPDEST"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "op": "ADD"
    },
    "1479": {
      "op": "SWAP1"
    },
    "1480": {
      "jump": "o",
      "op": "JUMP"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1484": {
      "op": "DUP3"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "LT"
    },
    "1487": {
      "op": "ISZERO"
    },
    "1488": {
      "op": "PUSH2",
      "value": "0x5DB"
    },
    "1491": {
      "op": "JUMPI"
    },
    "1492": {
      "op": "PUSH2",
      "value": "0x5DB"
    },
    "1495": {
      "op": "PUSH2",
      "value": "0x5E0"
    },
    "1498": {
      "jump": "i",
      "op": "JUMP"
    },
    "1499": {
      "op": "JUMPDEST"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "op": "SUB"
    },
    "1502": {
      "op": "SWAP1"
    },
    "1503": {
      "jump": "o",
      "op": "JUMP"
    },
    "1504": {
      "op": "JUMPDEST"
    },
    "1505": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1525": {
      "op": "REVERT"
    }
  },
  "sha1": "2a1ecf564dcdee6b416f89446353afac0e3de5ae",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\ncontract Oracle is IERC721Receiver {\n    // The oracle operator\n    address public operator;\n\n    // The contract address of the Wrapped CryptoPunk ERC721\n    // Mainnet: 0xb7f7f6c52f2e2fdb1963eab30438024864c313f6\n    address public wrappedPunksContract;\n\n    // The cost to complete an Oracle transaction\n    uint256 public oraclePriceInWei;\n\n    // Retrieves the balance of the given address\n    mapping(address => uint256) public balanceOf;\n\n    // Emitted when a Wrapped CryptoPunk ERC721 is received\n    event CryptoPunkReceived(uint256 indexed id, address indexed from);\n\n    // Emitted when the Oracle price has changed\n    event OraclePriceChanged(uint256 indexed priceInWei);\n\n    // Emitted when somebody funds the oracle\n    event OracleFunded(uint256 indexed amountInWei, address indexed from);\n\n    constructor(address _wrappedPunksContract, uint256 _oraclePriceInWei) {\n        operator = msg.sender;\n        wrappedPunksContract = _wrappedPunksContract;\n        oraclePriceInWei = _oraclePriceInWei;\n    }\n\n    /**\n     * @dev Modifier that only oracle operators may call\n     */\n    modifier onlyOracleOperator() {\n        require(\n            msg.sender == operator,\n            \"Only the oracle operator may perform this action\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Sets the price to fulfill the oracle\n     * @notice Only oracle operators may call this function\n     */\n    function setPrice(uint256 priceInWei) public onlyOracleOperator {\n        oraclePriceInWei = priceInWei;\n        emit OraclePriceChanged(priceInWei);\n    }\n\n    /**\n     * @dev Fund the Oracle to cover gas fees and other costs\n     * @notice Check the current price by retrieving `oraclePriceInWei`\n     */\n    function fundOracle() public payable {\n        (bool sent, ) = operator.call{value: msg.value}(\"\");\n        require(sent, \"Failed to send Ether to the oracle operator\");\n        balanceOf[msg.sender] += msg.value;\n        emit OracleFunded(msg.value, msg.sender);\n    }\n\n    /**\n     * @dev Implementation of IERC721Receiver\n     * @notice Only accepts ERC721 tokens from the `wrappedPunksContract`\n     * @notice The sender must have already funded the oracle with the `oraclePriceInWei`\n     */\n    function onERC721Received(\n        address sender,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) public override returns (bytes4 selector) {\n        require(\n            msg.sender == address(wrappedPunksContract),\n            \"The Oracle only accepts Wrapped CryptoPunks\"\n        );\n\n        require(\n            balanceOf[from] >= oraclePriceInWei,\n            \"You must fund the oracle with the price set in `oraclePriceInWei`\"\n        );\n\n        emit CryptoPunkReceived(tokenId, from);\n        balanceOf[from] -= oraclePriceInWei;\n\n        return this.onERC721Received.selector;\n    }\n}\n",
  "sourceMap": "124:2843:1:-:0;;;936:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1016:8;:21;;1027:10;-1:-1:-1;;;;;;1016:21:1;;;;;;;-1:-1:-1;1047:44:1;;;;;-1:-1:-1;;;;;1047:44:1;;;;;;;;;;;1101:16;:36;124:2843;;14:351:3;93:6;101;154:2;142:9;133:7;129:23;125:32;122:2;;;170:1;167;160:12;122:2;196:16;;-1:-1:-1;;;;;241:31:3;;231:42;;221:2;;287:1;284;277:12;221:2;355;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;112:253:3:o;:::-;124:2843:1;;;;;;",
  "sourcePath": "contracts/Oracle.sol",
  "type": "contract"
}